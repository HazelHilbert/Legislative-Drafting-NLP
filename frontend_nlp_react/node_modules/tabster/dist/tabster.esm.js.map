{"version":3,"file":"tabster.esm.js","sources":["../src/Types.ts","../src/Instance.ts","../src/EventTarget.ts","../src/DOMAPI.ts","../src/Utils.ts","../src/AttributeHelpers.ts","../src/Root.ts","../src/Deloser.ts","../src/State/Subscribable.ts","../src/CrossOrigin.ts","../src/Focusable.ts","../src/Keys.ts","../src/State/FocusedElement.ts","../src/Groupper.ts","../src/State/KeyboardNavigation.ts","../src/Modalizer.ts","../src/Mover.ts","../src/MutationEvent.ts","../src/State/ObservedElement.ts","../src/Outline.ts","../src/Uncontrolled.ts","../src/Restorer.ts","../src/Shadowdomize/DOMFunctions.ts","../src/Shadowdomize/ShadowTreeWalker.ts","../src/Shadowdomize/ShadowMutationObserver.ts","../src/Shadowdomize/querySelector.ts","../src/Shadowdomize/index.ts","../src/Tabster.ts"],"sourcesContent":["/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const TabsterAttributeName = \"data-tabster\";\nexport const TabsterDummyInputAttributeName = \"data-tabster-dummy\";\nexport const DeloserEventName = \"tabster:deloser\";\nexport const ModalizerActiveEventName = \"tabster:modalizer:active\";\nexport const ModalizerInactiveEventName = \"tabster:modalizer:inactive\";\nexport const ModalizerFocusInEventName = \"tabster:modalizer:focusin\";\nexport const ModalizerFocusOutEventName = \"tabster:modalizer:focusout\";\nexport const ModalizerBeforeFocusOutEventName =\n    \"tabster:modalizer:beforefocusout\";\nexport const MoverEventName = \"tabster:mover\";\nexport const FocusInEventName = \"tabster:focusin\";\nexport const FocusOutEventName = \"tabster:focusout\";\n\n// Event to be triggered when Tabster wants to move focus as the result of\n// keyboard event. This allows to preventDefault() if you want to have\n// some custom logic.\nexport const MoveFocusEventName = \"tabster:movefocus\";\n\n// Event that can be triggered by the application to programmatically move\n// focus inside Mover.\nexport const MoverMoveFocusEventName = \"tabster:mover:movefocus\";\n// Event that can be triggered by the application to programmatically enter\n// or escape Groupper.\nexport const GroupperMoveFocusEventName = \"tabster:groupper:movefocus\";\n\nexport const FocusableSelector = [\n    \"a[href]\",\n    \"button:not([disabled])\",\n    \"input:not([disabled])\",\n    \"select:not([disabled])\",\n    \"textarea:not([disabled])\",\n    \"*[tabindex]\",\n    \"*[contenteditable]\",\n].join(\", \");\n\n// Trigger move focus event on a Mover element.\nexport type MoverMoveFocusEvent = CustomEvent<{ key: MoverKey } | undefined>;\n\nexport interface GroupperMoveFocusActions {\n    Enter: 1;\n    Escape: 2;\n}\nexport type GroupperMoveFocusAction =\n    GroupperMoveFocusActions[keyof GroupperMoveFocusActions];\nexport const GroupperMoveFocusActions: GroupperMoveFocusActions = {\n    Enter: 1,\n    Escape: 2,\n};\n\n// Enter or escape Groupper. Enter when `enter` is true, escape when `enter` is false.\nexport type GroupperMoveFocusEvent = CustomEvent<\n    { action: GroupperMoveFocusAction } | undefined\n>;\n\nexport type TabsterEventWithDetails<D> = CustomEvent<D | undefined>;\n\nexport interface TabsterMoveFocusEventDetails {\n    by: \"mover\" | \"groupper\" | \"modalizer\" | \"root\";\n    owner: HTMLElement; // Mover, Groupper, Modalizer or Root, the initiator.\n    next: HTMLElement | null; // Next element to focus or null if Tabster wants to go outside of Root (i.e. to the address bar of the browser).\n    relatedEvent?: KeyboardEvent; // The original keyboard event that triggered the move.\n}\n\nexport type TabsterMoveFocusEvent =\n    TabsterEventWithDetails<TabsterMoveFocusEventDetails>;\n\nexport interface TabsterDOMAttribute {\n    [TabsterAttributeName]: string | undefined;\n}\n\nexport interface TabsterCoreProps {\n    autoRoot?: RootProps;\n    /**\n     * Allows all tab key presses under the tabster root to be controlled by tabster\n     * @default true\n     */\n    controlTab?: boolean;\n    /**\n     * When controlTab is false, Root doesn't have dummy inputs by default.\n     * This option allows to enable dummy inputs on Root.\n     */\n    rootDummyInputs?: boolean;\n    /**\n     * A callback that will be called for the uncontrolled areas when Tabster wants\n     * to know is the uncontrolled element wants complete control (for example it\n     * is trapping focus) and Tabster should not interfere with handling Tab.\n     * If the callback returns undefined, then the default behaviour is to return\n     * the uncontrolled.completely value from the element. If the callback returns\n     * non-undefined value, the callback's value will dominate the element's\n     * uncontrolled.completely value.\n     */\n    checkUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean // A uncontrolled.completely value from the element.\n    ) => boolean | undefined;\n    /**\n     * @deprecated use checkUncontrolledCompletely.\n     */\n    checkUncontrolledTrappingFocus?: (element: HTMLElement) => boolean;\n    /**\n     * Custom getter for parent elements. Defaults to the default .parentElement call\n     * Currently only used to detect tabster contexts\n     */\n    getParent?(el: Node): Node | null;\n    /**\n     * Ability to redefine all DOM API calls used by Tabster. For example, for\n     * ShadowDOM support.\n     */\n    DOMAPI?: Partial<DOMAPI>;\n}\n\nexport interface DOMAPI {\n    createMutationObserver: (callback: MutationCallback) => MutationObserver;\n    createTreeWalker(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ): TreeWalker;\n    getParentNode(node: Node | null | undefined): ParentNode | null;\n    getParentElement(\n        element: HTMLElement | null | undefined\n    ): HTMLElement | null;\n    nodeContains(\n        parent: Node | null | undefined,\n        child: Node | null | undefined\n    ): boolean;\n    getActiveElement(doc: Document): Element | null;\n    querySelector(element: ParentNode, selector: string): Element | null;\n    querySelectorAll(element: ParentNode, selector: string): Element[];\n    getElementById(doc: Document, id: string): HTMLElement | null;\n    getFirstChild(node: Node | null | undefined): ChildNode | null;\n    getLastChild(node: Node | null | undefined): ChildNode | null;\n    getNextSibling(node: Node | null | undefined): ChildNode | null;\n    getPreviousSibling(node: Node | null | undefined): ChildNode | null;\n    getFirstElementChild(element: Element | null | undefined): Element | null;\n    getLastElementChild(element: Element | null | undefined): Element | null;\n    getNextElementSibling(element: Element | null | undefined): Element | null;\n    getPreviousElementSibling(\n        element: Element | null | undefined\n    ): Element | null;\n    appendChild(parent: Node, child: Node): Node;\n    insertBefore(parent: Node, child: Node, referenceChild: Node | null): Node;\n    getSelection(ref: Node): Selection | null;\n}\n\nexport type GetTabster = () => TabsterCore;\nexport type GetWindow = () => Window;\n\nexport type SubscribableCallback<A, B = undefined> = (\n    val: A,\n    details: B\n) => void;\n\nexport interface Disposable {\n    /** @internal */\n    dispose(): void;\n}\n\nexport interface Subscribable<A, B = undefined> {\n    subscribe(callback: SubscribableCallback<A, B>): void;\n    /** @internal */\n    subscribeFirst(callback: SubscribableCallback<A, B>): void;\n    unsubscribe(callback: SubscribableCallback<A, B>): void;\n}\n\nexport interface KeyboardNavigationState\n    extends Subscribable<boolean>,\n        Disposable {\n    isNavigatingWithKeyboard(): boolean;\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void;\n}\n\nexport interface FocusedElementDetails {\n    relatedTarget?: HTMLElement;\n    isFocusedProgrammatically?: boolean;\n    modalizerId?: string;\n}\n\nexport interface FocusedElementState\n    extends Subscribable<HTMLElement | undefined, FocusedElementDetails>,\n        Disposable {\n    getFocusedElement(): HTMLElement | undefined;\n    getLastFocusedElement(): HTMLElement | undefined;\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    focusDefault(container: HTMLElement): boolean;\n    /** @internal */\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<FindFocusableProps, \"container\" | \"ignoreAccessibility\">\n    ): HTMLElement | undefined;\n    focusFirst(props: FindFirstProps): boolean;\n    focusLast(props: FindFirstProps): boolean;\n    resetFocus(container: HTMLElement): boolean;\n}\n\nexport interface WeakHTMLElement<D = undefined> {\n    get(): HTMLElement | undefined;\n    getData(): D | undefined;\n}\n\nexport interface TabsterPart<P> {\n    readonly id: string;\n    getElement(): HTMLElement | undefined;\n    getProps(): P;\n    setProps(props: P): void;\n}\n\nexport interface TabsterPartWithFindNextTabbable {\n    findNextTabbable(\n        current?: HTMLElement,\n        reference?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): NextTabbable | null;\n}\n\nexport interface TabsterPartWithAcceptElement {\n    acceptElement(\n        element: HTMLElement,\n        state: FocusableAcceptElementState\n    ): number | undefined;\n}\n\nexport interface ObservedElementProps {\n    names: string[];\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    details?: any;\n}\n\nexport interface ObservedElementDetails extends ObservedElementProps {\n    accessibility?: ObservedElementAccesibility;\n}\n\nexport interface ObservedElementAccesibilities {\n    Any: 0;\n    Accessible: 1;\n    Focusable: 2;\n}\nexport type ObservedElementAccesibility =\n    ObservedElementAccesibilities[keyof ObservedElementAccesibilities];\nexport const ObservedElementAccesibilities: ObservedElementAccesibilities = {\n    Any: 0,\n    Accessible: 1,\n    Focusable: 2,\n};\n\nexport interface ObservedElementAsyncRequest<T> {\n    result: Promise<T>;\n    cancel(): void;\n}\n\ninterface ObservedElementAPIInternal {\n    /** @internal */\n    onObservedElementUpdate(element: HTMLElement): void;\n}\n\nexport interface ObservedElementAPI\n    extends Subscribable<HTMLElement, ObservedElementDetails>,\n        Disposable,\n        ObservedElementAPIInternal {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): HTMLElement | null;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): ObservedElementAsyncRequest<HTMLElement | null>;\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): ObservedElementAsyncRequest<boolean>;\n}\n\nexport interface CrossOriginElement {\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginSentTo {\n    [id: string]: true;\n}\n\nexport interface CrossOriginTransactionTypes {\n    Bootstrap: 1;\n    FocusElement: 2;\n    State: 3;\n    GetElement: 4;\n    RestoreFocusInDeloser: 5;\n    Ping: 6;\n}\nexport type CrossOriginTransactionType =\n    CrossOriginTransactionTypes[keyof CrossOriginTransactionTypes];\n\nexport interface CrossOriginTransactionData<I, O> {\n    transaction: string;\n    type: CrossOriginTransactionType;\n    isResponse: boolean;\n    timestamp: number;\n    owner: string;\n    sentto: CrossOriginSentTo;\n    timeout?: number;\n    target?: string;\n    beginData?: I;\n    endData?: O;\n}\n\nexport type CrossOriginTransactionSend = (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>\n) => void;\n\nexport interface CrossOriginMessage {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data: CrossOriginTransactionData<any, any>;\n    send: CrossOriginTransactionSend;\n}\n\nexport interface CrossOriginFocusedElementState\n    extends Subscribable<CrossOriginElement | undefined, FocusedElementDetails>,\n        Disposable {\n    focus(\n        element: CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n    focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean>;\n}\n\nexport interface CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, ObservedElementProps>,\n        Disposable {\n    getElement(\n        observedName: string,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null>;\n    requestFocus(observedName: string, timeout: number): Promise<boolean>;\n}\n\nexport interface CrossOriginAPI {\n    focusedElement: CrossOriginFocusedElementState;\n    observedElement: CrossOriginObservedElementState;\n\n    setup(\n        sendUp?: CrossOriginTransactionSend | null\n    ): (msg: CrossOriginMessage) => void;\n    isSetUp(): boolean;\n    dispose(): void;\n}\n\nexport interface OutlineProps {\n    areaClass: string;\n    outlineClass: string;\n    outlineColor: string;\n    outlineWidth: number;\n    zIndex: number;\n}\n\nexport interface OutlinedElementProps {\n    isIgnored?: boolean;\n}\n\nexport interface OutlineAPI extends Disposable {\n    setup(props?: Partial<OutlineProps>): void;\n}\n\nexport interface DeloserElementActions {\n    focusDefault: () => boolean;\n    focusFirst: () => boolean;\n    resetFocus: () => boolean;\n    clearHistory: (preserveExisting?: boolean) => void;\n    setSnapshot: (index: number) => void;\n    isActive: () => boolean;\n}\n\nexport interface RestoreFocusOrders {\n    History: 0;\n    DeloserDefault: 1;\n    RootDefault: 2;\n    DeloserFirst: 3;\n    RootFirst: 4;\n}\nexport type RestoreFocusOrder = RestoreFocusOrders[keyof RestoreFocusOrders];\nexport const RestoreFocusOrders: RestoreFocusOrders = {\n    History: 0,\n    DeloserDefault: 1,\n    RootDefault: 2,\n    DeloserFirst: 3,\n    RootFirst: 4,\n};\n\nexport interface DeloserProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n    noSelectorCheck?: boolean;\n}\n\nexport interface Deloser extends TabsterPart<DeloserProps> {\n    readonly uid: string;\n    dispose(): void;\n    isActive(): boolean;\n    setActive(active: boolean): void;\n    getActions(): DeloserElementActions;\n    setSnapshot(index: number): void;\n    focusFirst(): boolean;\n    unshift(element: HTMLElement): void;\n    focusDefault(): boolean;\n    resetFocus(): boolean;\n    findAvailable(): HTMLElement | null;\n    clearHistory(preserveExisting?: boolean): void;\n    customFocusLostHandler(element: HTMLElement): boolean;\n}\n\nexport type DeloserConstructor = (\n    element: HTMLElement,\n    props: DeloserProps\n) => Deloser;\n\ninterface DeloserInterfaceInternal {\n    /** @internal */\n    createDeloser(element: HTMLElement, props: DeloserProps): Deloser;\n}\n\nexport interface DeloserAPI extends DeloserInterfaceInternal, Disposable {\n    getActions(element: HTMLElement): DeloserElementActions | undefined;\n    pause(): void;\n    resume(restore?: boolean): void;\n}\n\nexport interface FocusableProps {\n    isDefault?: boolean;\n    isIgnored?: boolean;\n    /**\n     * Do not determine an element's focusability based on aria-disabled.\n     */\n    ignoreAriaDisabled?: boolean;\n    /**\n     * Exclude element (and all subelements) from Mover navigation.\n     */\n    excludeFromMover?: boolean;\n    /**\n     * Prevents tabster from handling the keydown event\n     */\n    ignoreKeydown?: {\n        Tab?: boolean;\n        Escape?: boolean;\n        Enter?: boolean;\n        ArrowUp?: boolean;\n        ArrowDown?: boolean;\n        ArrowLeft?: boolean;\n        ArrowRight?: boolean;\n        PageUp?: boolean;\n        PageDown?: boolean;\n        Home?: boolean;\n        End?: boolean;\n    };\n}\n\nexport interface FocusableAcceptElementState {\n    container: HTMLElement;\n    modalizerUserId?: string;\n    currentCtx?: TabsterContext;\n    from: HTMLElement;\n    fromCtx?: TabsterContext;\n    isBackward?: boolean;\n    found?: boolean;\n    foundElement?: HTMLElement;\n    foundBackward?: HTMLElement;\n    rejectElementsFrom?: HTMLElement;\n    uncontrolled?: HTMLElement;\n    acceptCondition: (el: HTMLElement) => boolean;\n    hasCustomCondition?: boolean;\n    includeProgrammaticallyFocusable?: boolean;\n    ignoreAccessibility?: boolean;\n    cachedGrouppers: {\n        [id: string]: {\n            isActive: boolean | undefined;\n            first?: HTMLElement | null;\n        };\n    };\n    isFindAll?: boolean;\n    /**\n     * A flag that indicates that some focusable elements were skipped\n     * during the search and the found element is not the one the browser\n     * would normally focus if the user pressed Tab.\n     */\n    skippedFocusable?: boolean;\n}\n\nexport interface FindFocusableProps {\n    /**\n     * The container used for the search.\n     */\n    container: HTMLElement;\n    /**\n     * The elemet to start from.\n     */\n    currentElement?: HTMLElement;\n    /**\n     * See `referenceElement` of GetTabsterContextOptions for description.\n     */\n    referenceElement?: HTMLElement;\n    /**\n     * Includes elements that can be focused programmatically.\n     */\n    includeProgrammaticallyFocusable?: boolean;\n    /**\n     * Ignore accessibility check.\n     */\n    ignoreAccessibility?: boolean;\n    /**\n     * Take active modalizer into account when searching for elements\n     * (the elements out of active modalizer will not be returned).\n     */\n    useActiveModalizer?: boolean;\n    /**\n     * Search withing the specified modality, null for everything outside of modalizers, string within\n     * a specific id, undefined for search within the current application state.\n     */\n    modalizerId?: string | null;\n    /**\n     * If true, find previous element instead of the next one.\n     */\n    isBackward?: boolean;\n    /**\n     * @param el element visited.\n     * @returns if an element should be accepted.\n     */\n    acceptCondition?(el: HTMLElement): boolean;\n    /**\n     * A callback that will be called for every focusable element found during findAll().\n     * If false is returned from this callback, the search will stop.\n     */\n    onElement?: FindElementCallback;\n}\n\nexport interface FindFocusableOutputProps {\n    /**\n     * An output parameter. Will be true after the findNext/findPrev() call if some focusable\n     * elements were skipped during the search and the result element not immediately next\n     * focusable after the currentElement.\n     */\n    outOfDOMOrder?: boolean;\n    /**\n     * An output parameter. Will be true if the found element is uncontrolled.\n     */\n    uncontrolled?: HTMLElement | null;\n}\n\nexport type FindFirstProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindNextProps = Pick<\n    FindFocusableProps,\n    | \"currentElement\"\n    | \"referenceElement\"\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindDefaultProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"ignoreAccessibility\"\n>;\n\nexport type FindAllProps = Pick<\n    FindFocusableProps,\n    | \"container\"\n    | \"modalizerId\"\n    | \"currentElement\"\n    | \"isBackward\"\n    | \"includeProgrammaticallyFocusable\"\n    | \"useActiveModalizer\"\n    | \"acceptCondition\"\n    | \"ignoreAccessibility\"\n    | \"onElement\"\n>;\n\n/**\n * A callback that is called for every found element during search. Returning false stops search.\n */\nexport type FindElementCallback = (element: HTMLElement) => boolean;\n\nexport interface FocusableAPI extends Disposable {\n    getProps(element: HTMLElement): FocusableProps;\n\n    isFocusable(\n        element: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean;\n    isVisible(element: HTMLElement): boolean;\n    isAccessible(element: HTMLElement): boolean;\n    // find* return null when there is no element and undefined when there is an uncontrolled area.\n    findFirst(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findLast(\n        options: FindFirstProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findNext(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findPrev(\n        options: FindNextProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n    findDefault(\n        options: FindDefaultProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null;\n    /**\n     * @returns All focusables in a given context that satisfy an given condition\n     */\n    findAll(options: FindAllProps): HTMLElement[];\n    findElement(\n        options: FindFocusableProps,\n        out?: FindFocusableOutputProps\n    ): HTMLElement | null | undefined;\n}\n\nexport interface DummyInputManager {\n    moveOut: (backwards: boolean) => void;\n    moveOutWithDefaultAction: (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ) => void;\n}\n\nexport interface Visibilities {\n    Invisible: 0;\n    PartiallyVisible: 1;\n    Visible: 2;\n}\nexport const Visibilities: Visibilities = {\n    Invisible: 0,\n    PartiallyVisible: 1,\n    Visible: 2,\n};\nexport type Visibility = Visibilities[keyof Visibilities];\n\nexport interface MoverElementState {\n    isCurrent: boolean | undefined; // Tri-state bool. Undefined when there is no current in the container.\n    visibility: Visibility;\n}\n\nexport interface MoverDirections {\n    Both: 0; // Default, both left/up keys move to the previous, right/down move to the next.\n    Vertical: 1; // Only up/down arrows move to the next/previous.\n    Horizontal: 2; // Only left/right arrows move to the next/previous.\n    Grid: 3; // Two-dimentional movement depending on the visual placement.\n    GridLinear: 4; // Two-dimentional movement depending on the visual placement. Allows linear movement.\n}\n\nexport const RestorerTypes = {\n    Source: 0,\n    Target: 1,\n} as const;\n\nexport type RestorerType = typeof RestorerTypes[keyof typeof RestorerTypes];\n\nexport const MoverDirections: MoverDirections = {\n    Both: 0,\n    Vertical: 1,\n    Horizontal: 2,\n    Grid: 3,\n    GridLinear: 4,\n};\nexport type MoverDirection = MoverDirections[keyof MoverDirections];\n\nexport type NextTabbable = {\n    element: HTMLElement | null | undefined;\n    uncontrolled?: HTMLElement | null;\n    outOfDOMOrder?: boolean;\n};\n\nexport interface MoverProps {\n    direction?: MoverDirection;\n    memorizeCurrent?: boolean;\n    tabbable?: boolean;\n    /**\n     * Whether to allow cyclic navigation in the mover\n     * Can only be applied if navigationType is MoverKeys.Arrows\n     *\n     * @defaultValue false\n     */\n    cyclic?: boolean;\n    /**\n     * In case we need a rich state of the elements inside a Mover,\n     * we can track it. It takes extra resourses and might affect\n     * performance when a Mover has many elements inside, so make sure\n     * you use this prop when it is really needed.\n     */\n    trackState?: boolean;\n    /**\n     * When set to Visibility.Visible or Visibility.PartiallyVisible,\n     * uses the visibility part of the trackState prop to be able to\n     * go to first/last visible element (instead of first/last focusable\n     * element in DOM) when tabbing from outside of the mover.\n     */\n    visibilityAware?: Visibility;\n    /**\n     * When true, Mover will try to locate a focusable with Focusable.isDefault\n     * property as a prioritized element to focus. True by default.\n     */\n    hasDefault?: boolean;\n    /**\n     * A value between 0 and 1 that specifies the tolerance allowed\n     * when testing for visibility.\n     *\n     * @example\n     * an element of height 100px has 10px that are above the viewport\n     * hidden by scroll. This element is a valid visible element to focus.\n     *\n     * @default 0.8\n     */\n    visibilityTolerance?: number;\n}\n\nexport type MoverEvent = TabsterEventWithDetails<MoverElementState>;\n\nexport interface Mover\n    extends TabsterPart<MoverProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    readonly visibilityTolerance: NonNullable<\n        MoverProps[\"visibilityTolerance\"]\n    >;\n    dispose(): void;\n    setCurrent(element: HTMLElement | undefined): void;\n    getCurrent(): HTMLElement | null;\n    getState(element: HTMLElement): MoverElementState | undefined;\n}\n\nexport type MoverConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: MoverProps\n) => Mover;\n\ninterface MoverAPIInternal {\n    /** @internal */\n    createMover(\n        element: HTMLElement,\n        props: MoverProps,\n        sys: SysProps | undefined\n    ): Mover;\n}\n\nexport interface MoverKeys {\n    ArrowUp: 1;\n    ArrowDown: 2;\n    ArrowLeft: 3;\n    ArrowRight: 4;\n    PageUp: 5;\n    PageDown: 6;\n    Home: 7;\n    End: 8;\n}\nexport type MoverKey = MoverKeys[keyof MoverKeys];\nexport const MoverKeys: MoverKeys = {\n    ArrowUp: 1,\n    ArrowDown: 2,\n    ArrowLeft: 3,\n    ArrowRight: 4,\n    PageUp: 5,\n    PageDown: 6,\n    Home: 7,\n    End: 8,\n};\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface MoverAPI extends MoverAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(fromElement: HTMLElement, key: MoverKey): HTMLElement | null;\n}\n\nexport interface GroupperTabbabilities {\n    Unlimited: 0;\n    Limited: 1; // The tabbability is limited to the container and explicit Enter is needed to go inside.\n    LimitedTrapFocus: 2; // The focus is limited as above, plus trapped when inside.\n}\nexport const GroupperTabbabilities: GroupperTabbabilities = {\n    Unlimited: 0,\n    Limited: 1,\n    LimitedTrapFocus: 2,\n};\nexport type GroupperTabbability =\n    GroupperTabbabilities[keyof GroupperTabbabilities];\n\nexport interface GroupperProps {\n    tabbability?: GroupperTabbability;\n    delegated?: boolean; // This allows to tweak the groupper behaviour for the cases when\n    // the groupper container is not focusable and groupper has Limited or LimitedTrapFocus\n    // tabbability. By default, the groupper will automatically become active once the focus\n    // goes to first focusable element inside the groupper during tabbing. When true, the\n    // groupper will become active only after Enter is pressed on first focusable element\n    // inside the groupper.\n}\n\nexport interface Groupper\n    extends TabsterPart<GroupperProps>,\n        TabsterPartWithFindNextTabbable,\n        TabsterPartWithAcceptElement {\n    readonly id: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    dispose(): void;\n    makeTabbable(isUnlimited: boolean): void;\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined; // Tri-state boolean, undefined when parent is not active, false when parent is active.\n    setFirst(element: HTMLElement | undefined): void;\n    getFirst(orContainer: boolean): HTMLElement | undefined;\n}\n\nexport type GroupperConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: GroupperProps\n) => Groupper;\n\nexport interface GroupperAPIInternal {\n    /** @internal */\n    createGroupper(\n        element: HTMLElement,\n        props: GroupperProps,\n        sys: SysProps | undefined\n    ): Groupper;\n    /** @internal */\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface GroupperAPI extends GroupperAPIInternal, Disposable {\n    /** @internal (will likely be exposed once the API is fully stable) */\n    moveFocus(\n        element: HTMLElement,\n        action: GroupperMoveFocusAction\n    ): HTMLElement | null;\n}\n\nexport interface GroupperAPIInternal {\n    forgetCurrentGrouppers(): void;\n}\n\nexport interface ModalizerProps {\n    id: string;\n    isOthersAccessible?: boolean;\n    isAlwaysAccessible?: boolean;\n    isNoFocusFirst?: boolean;\n    isNoFocusDefault?: boolean;\n    /** A focus trap variant, keeps focus inside the modal when tabbing */\n    isTrapped?: boolean;\n}\n\nexport type ModalizerEventName =\n    | typeof ModalizerActiveEventName\n    | typeof ModalizerInactiveEventName\n    | typeof ModalizerBeforeFocusOutEventName\n    | typeof ModalizerFocusInEventName\n    | typeof ModalizerFocusOutEventName;\n\nexport type ModalizerEventDetails = {\n    id: string;\n    element: HTMLElement;\n    eventName: ModalizerEventName;\n};\n\nexport type ModalizerEvent = TabsterEventWithDetails<ModalizerEventDetails>;\n\nexport interface Modalizer\n    extends TabsterPart<ModalizerProps>,\n        TabsterPartWithFindNextTabbable {\n    readonly userId: string;\n    readonly dummyManager: DummyInputManager | undefined;\n    /**\n     * @returns - Whether the element is inside the modalizer\n     */\n    contains(element: HTMLElement): boolean;\n    dispose(): void;\n    isActive(): boolean;\n    makeActive(isActive: boolean): void;\n    focused(noIncrement?: boolean): number;\n    triggerFocusEvent(\n        eventName: ModalizerEventName,\n        allElements: boolean\n    ): boolean;\n}\n\nexport type ModalizerConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: ModalizerProps\n) => Modalizer;\n\nexport interface RootProps {\n    restoreFocusOrder?: RestoreFocusOrder;\n}\n\nexport interface Root extends TabsterPart<RootProps> {\n    /**@internal*/\n    addDummyInputs(): void;\n\n    readonly uid: string;\n    dispose(): void;\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void;\n}\n\nexport type RootConstructor = (\n    tabster: TabsterCore,\n    element: HTMLElement,\n    props: RootProps\n) => Root;\n\nexport interface SysDummyInputsPositions {\n    Auto: 0; // Tabster will place dummy inputs depending on the container tag name and on the default behaviour.\n    Inside: 1; // Tabster will always place dummy inputs inside the container.\n    Outside: 2; // Tabster will always place dummy inputs outside of the container.\n}\nexport const SysDummyInputsPositions: SysDummyInputsPositions = {\n    Auto: 0,\n    Inside: 1,\n    Outside: 2,\n};\nexport type SysDummyInputsPosition =\n    SysDummyInputsPositions[keyof SysDummyInputsPositions];\n/**\n * Ability to fine-tune Tabster internal behaviour in rare cases of need.\n * Normally, should not be used. A deep understanding of the intention and the effect\n * is required.\n */\nexport interface SysProps {\n    /**\n     * Force dummy input position outside or inside of the element.\n     * By default (when undefined), the position is determined dynamically\n     * (for example inside for <li> elements and outside for <table> elements,\n     * plus a default Groupper/Mover/Modalizer implementation position).\n     * Setting to true will force the dummy inputs to be always outside of the element,\n     * setting to false will force the dummy inputs to be always inside.\n     */\n    dummyInputsPosition?: SysDummyInputsPosition;\n}\n\nexport interface GetTabsterContextOptions {\n    /**\n     * Should visit **all** element ancestors to verify if `dir='rtl'` is set\n     */\n    checkRtl?: boolean;\n    /**\n     * The element to start computing the context from. Useful when dealing\n     * with nested structures. For example, if we have an element inside a groupper\n     * inside another groupper, the `groupper` prop in this element's contexts will\n     * be the inner groupper, but when we pass the inner groupper's parent element\n     * as `referenceElement`, the context groupper will be the outer one. Having\n     * this option simplifies searching for the next tabbable element in the\n     * environment of nested movers and grouppers.\n     */\n    referenceElement?: HTMLElement;\n}\n\nexport type TabsterContextMoverGroupper =\n    | { isMover: true; mover: Mover }\n    | { isMover: false; groupper: Groupper };\n\nexport interface TabsterContext {\n    root: Root;\n    modalizer?: Modalizer;\n    groupper?: Groupper;\n    mover?: Mover;\n    groupperBeforeMover?: boolean;\n    modalizerInGroupper?: Groupper;\n    /**\n     * Whether `dir='rtl'` is set on an ancestor\n     */\n    rtl?: boolean;\n    excludedFromMover?: boolean;\n    uncontrolled?: HTMLElement | null;\n    ignoreKeydown: (e: KeyboardEvent) => boolean;\n}\n\nexport interface RootFocusEventDetails {\n    element: HTMLElement;\n}\n\ninterface RootAPIInternal {\n    /**@internal*/\n    createRoot(\n        element: HTMLElement,\n        props: RootProps,\n        sys: SysProps | undefined\n    ): Root;\n    /**@internal*/\n    onRoot(root: Root, removed?: boolean): void;\n    /**@internal*/\n    addDummyInputs(): void;\n}\n\nexport interface RootAPI extends Disposable, RootAPIInternal {\n    eventTarget: EventTarget;\n}\n\nexport interface UncontrolledAPI {\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean;\n}\n\ninterface ModalizerAPIInternal extends TabsterPartWithAcceptElement {\n    /** @internal */\n    activeId: string | undefined; // currently active Modalizer user id.\n    /** @internal */\n    currentIsOthersAccessible: boolean | undefined; // isOthersAccessible value of the currently active Modalizer.\n    /** @internal */\n    activeElements: WeakHTMLElement<HTMLElement>[];\n    /** @internal */\n    createModalizer(\n        element: HTMLElement,\n        props: ModalizerProps,\n        sys: SysProps | undefined\n    ): Modalizer;\n    /**\n     * Sets active modalizers.\n     * When active, everything outside of the modalizers with the specific user\n     * defined id gets `aria-hidden`.\n     *\n     * @param userId user defined identifier or undefined (if nothing is modal).\n     */\n    /** @internal */\n    setActive(modalizer: Modalizer | undefined): void;\n    /** @internal */\n    hiddenUpdate(): void;\n    /** @internal */\n    isAugmented(element: HTMLElement): boolean;\n}\n\nexport interface ModalizerAPI extends ModalizerAPIInternal, Disposable {\n    /**\n     * Activates a Modalizer and focuses the first or default element within\n     *\n     * @param elementFromModalizer An element that belongs to a Modalizer\n     * @param noFocusFirst Do not focus on the first element in the Modalizer\n     * @param noFocusDefault Do not focus the default element in the Modalizre\n     */\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean;\n}\n\ninterface RestorerAPIInternal {\n    /** @internal */\n    createRestorer(element: HTMLElement, props: RestorerProps): Restorer;\n}\n\nexport interface RestorerAPI extends RestorerAPIInternal, Disposable {}\n\nexport interface Restorer extends Disposable, TabsterPart<RestorerProps> {}\n/**\n * A signature for the accessibleCheck callback from getModalizer().\n * It is called when active Modalizer sets aria-hidden on elements outsidef of it.\n *\n * @param element The element that is about to receive aria-hidden.\n * @param activeModalizerElements The container elements of the active modalizer.\n * @returns true if the element should remain accessible and should not receive\n * aria-hidden.\n */\nexport type ModalizerElementAccessibleCheck = (\n    element: HTMLElement,\n    activeModalizerElements?: HTMLElement[]\n) => boolean;\n\nexport interface UncontrolledProps {\n    // Normally, even uncontrolled areas should not be completely uncontrolled\n    // to be able to interact with the rest of the application properly.\n    // For example, if an uncontrolled area implements something like\n    // roving tabindex, it should be uncontrolled inside the area, but it\n    // still should be able to be an organic part of the application.\n    // However, in some cases, third party component might want to be able\n    // to gain full control of the area, for example, if it implements\n    // some custom trap focus logic.\n    // `completely` indicates that uncontrolled area must gain full control over\n    // Tab handling. If not set, Tabster might still handle Tab in the\n    // uncontrolled area, when, for example, there is an inactive Modalizer\n    // (that needs to be skipped) after the last focusable element of the\n    // uncontrolled area.\n    // WARNING: Use with caution, as it might break the normal keyboard navigation\n    // between the uncontrolled area and the rest of the application.\n    completely?: boolean;\n}\n\nexport interface DeloserOnElement {\n    deloser: Deloser;\n}\n\nexport interface RootOnElement {\n    root: Root;\n}\n\nexport interface ModalizerOnElement {\n    modalizer: Modalizer;\n}\n\nexport interface RestorerOnElement {\n    restorer: Restorer;\n}\n\nexport interface FocusableOnElement {\n    focusable: FocusableProps;\n}\n\nexport interface MoverOnElement {\n    mover: Mover;\n}\n\nexport interface GroupperOnElement {\n    groupper: Groupper;\n}\n\nexport interface UncontrolledOnElement {\n    uncontrolled: UncontrolledProps;\n}\n\nexport interface ObservedOnElement {\n    observed: ObservedElementProps;\n}\n\nexport interface OutlineOnElement {\n    outline: OutlinedElementProps;\n}\n\nexport interface SysOnElement {\n    sys: SysProps;\n}\n\nexport interface RestorerProps {\n    type: RestorerType;\n}\n\nexport type TabsterAttributeProps = Partial<{\n    deloser: DeloserProps;\n    root: RootProps;\n    uncontrolled: UncontrolledProps;\n    modalizer: ModalizerProps;\n    focusable: FocusableProps;\n    groupper: GroupperProps;\n    mover: MoverProps;\n    observed: ObservedElementProps;\n    outline: OutlinedElementProps;\n    sys: SysProps;\n    restorer: RestorerProps;\n}>;\n\nexport interface TabsterAttributeOnElement {\n    string: string;\n    object: TabsterAttributeProps;\n}\n\nexport interface TabsterAugmentedAttributes {\n    [name: string]: string | null;\n}\n\nexport type TabsterOnElement = Partial<\n    RootOnElement &\n        DeloserOnElement &\n        ModalizerOnElement &\n        FocusableOnElement &\n        MoverOnElement &\n        GroupperOnElement &\n        ObservedOnElement &\n        OutlineOnElement &\n        UncontrolledOnElement &\n        SysOnElement &\n        RestorerOnElement\n>;\n\nexport interface OutlineElements {\n    container: HTMLDivElement;\n    left: HTMLDivElement;\n    top: HTMLDivElement;\n    right: HTMLDivElement;\n    bottom: HTMLDivElement;\n}\n\nexport interface TabsterElementStorageEntry {\n    tabster?: TabsterOnElement;\n    attr?: TabsterAttributeOnElement;\n    aug?: TabsterAugmentedAttributes;\n}\n\nexport interface TabsterElementStorage {\n    [uid: string]: TabsterElementStorageEntry;\n}\n\nexport type DisposeFunc = () => void;\n\nexport interface InternalAPI {\n    stopObserver(): void;\n    resumeObserver(syncState: boolean): void;\n}\n\nexport interface DummyInputObserver {\n    add(dummy: HTMLElement, callback: () => void): void;\n    remove(dummy: HTMLElement): void;\n    dispose(): void;\n    domChanged?(parent: HTMLElement): void;\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void;\n}\n\ninterface TabsterCoreInternal {\n    /** @internal */\n    groupper?: GroupperAPI;\n    /** @internal */\n    mover?: MoverAPI;\n    /** @internal */\n    outline?: OutlineAPI;\n    /** @internal */\n    deloser?: DeloserAPI;\n    /** @internal */\n    modalizer?: ModalizerAPI;\n    /** @internal */\n    observedElement?: ObservedElementAPI;\n    /** @internal */\n    crossOrigin?: CrossOriginAPI;\n    /** @internal */\n    internal: InternalAPI;\n    /** @internal */\n    restorer?: RestorerAPI;\n\n    /** @internal */\n    _dummyObserver: DummyInputObserver;\n\n    // The version of the tabster package this instance is on\n    /** @internal */\n    _version: string;\n\n    // No operation flag for the debugging purposes\n    /** @internal */\n    _noop: boolean;\n\n    /** @internal */\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): TabsterElementStorageEntry | undefined;\n    /** @internal */\n    getWindow: GetWindow;\n\n    /** @internal */\n    createTabster(noRefCount?: boolean, props?: TabsterCoreProps): Tabster;\n    /** @internal */\n    disposeTabster(wrapper: Tabster, allInstances?: boolean): void;\n    /** @internal */\n    forceCleanup(): void;\n\n    /** @internal */\n    queueInit(callback: () => void): void;\n    /** @internal */\n    drainInitQueue(): void;\n    /** @internal */\n    getParent: (el: Node) => Node | null;\n}\n\nexport interface Tabster {\n    keyboardNavigation: KeyboardNavigationState;\n    focusedElement: FocusedElementState;\n    focusable: FocusableAPI;\n    root: RootAPI;\n    uncontrolled: UncontrolledAPI;\n\n    /** @internal */\n    core: TabsterCore;\n}\n\nexport interface TabsterCore\n    extends Pick<TabsterCoreProps, \"controlTab\" | \"rootDummyInputs\">,\n        Disposable,\n        TabsterCoreInternal,\n        Omit<Tabster, \"core\"> {}\n\nexport interface TabsterCompat {\n    attributeTransform?: <P>(old: P) => TabsterAttributeProps;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterOnElement(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): Types.TabsterOnElement | undefined {\n    return tabster.storageEntry(element)?.tabster;\n}\n\nexport function updateTabsterByAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    dispose?: boolean\n): void {\n    const newAttrValue =\n        dispose || tabster._noop\n            ? undefined\n            : element.getAttribute(Types.TabsterAttributeName);\n\n    let entry = tabster.storageEntry(element);\n    let newAttr: Types.TabsterAttributeOnElement | undefined;\n\n    if (newAttrValue) {\n        if (newAttrValue !== entry?.attr?.string) {\n            try {\n                const newValue = JSON.parse(\n                    newAttrValue\n                ) as Types.TabsterAttributeProps;\n\n                if (typeof newValue !== \"object\") {\n                    throw new Error(\n                        `Value is not a JSON object, got '${newAttrValue}'.`\n                    );\n                }\n\n                newAttr = {\n                    string: newAttrValue,\n                    object: newValue,\n                };\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        } else {\n            return;\n        }\n    } else if (!entry) {\n        return;\n    }\n\n    if (!entry) {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        entry = tabster.storageEntry(element, true)!;\n    }\n\n    if (!entry.tabster) {\n        entry.tabster = {};\n    }\n\n    const tabsterOnElement = entry.tabster || {};\n    const oldTabsterProps = entry.attr?.object || {};\n    const newTabsterProps = newAttr?.object || {};\n\n    for (const key of Object.keys(\n        oldTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        if (!newTabsterProps[key]) {\n            if (key === \"root\") {\n                const root = tabsterOnElement[key];\n\n                if (root) {\n                    tabster.root.onRoot(root, true);\n                }\n            }\n\n            switch (key) {\n                case \"deloser\":\n                case \"root\":\n                case \"groupper\":\n                case \"modalizer\":\n                case \"restorer\":\n                case \"mover\":\n                    // eslint-disable-next-line no-case-declarations\n                    const part = tabsterOnElement[key];\n                    if (part) {\n                        part.dispose();\n                        delete tabsterOnElement[key];\n                    }\n                    break;\n\n                case \"observed\":\n                    delete tabsterOnElement[key];\n                    if (tabster.observedElement) {\n                        tabster.observedElement.onObservedElementUpdate(\n                            element\n                        );\n                    }\n                    break;\n\n                case \"focusable\":\n                case \"outline\":\n                case \"uncontrolled\":\n                case \"sys\":\n                    delete tabsterOnElement[key];\n                    break;\n            }\n        }\n    }\n\n    for (const key of Object.keys(\n        newTabsterProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const sys = newTabsterProps.sys;\n\n        switch (key) {\n            case \"deloser\":\n                if (tabsterOnElement.deloser) {\n                    tabsterOnElement.deloser.setProps(\n                        newTabsterProps.deloser as Types.DeloserProps\n                    );\n                } else {\n                    if (tabster.deloser) {\n                        tabsterOnElement.deloser =\n                            tabster.deloser.createDeloser(\n                                element,\n                                newTabsterProps.deloser as Types.DeloserProps\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Deloser API used before initialization, please call `getDeloser()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"root\":\n                if (tabsterOnElement.root) {\n                    tabsterOnElement.root.setProps(\n                        newTabsterProps.root as Types.RootProps\n                    );\n                } else {\n                    tabsterOnElement.root = tabster.root.createRoot(\n                        element,\n                        newTabsterProps.root as Types.RootProps,\n                        sys\n                    );\n                }\n                tabster.root.onRoot(tabsterOnElement.root);\n                break;\n\n            case \"modalizer\":\n                if (tabsterOnElement.modalizer) {\n                    tabsterOnElement.modalizer.setProps(\n                        newTabsterProps.modalizer as Types.ModalizerProps\n                    );\n                } else {\n                    if (tabster.modalizer) {\n                        tabsterOnElement.modalizer =\n                            tabster.modalizer.createModalizer(\n                                element,\n                                newTabsterProps.modalizer as Types.ModalizerProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Modalizer API used before initialization, please call `getModalizer()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"restorer\":\n                if (tabsterOnElement.restorer) {\n                    tabsterOnElement.restorer.setProps(\n                        newTabsterProps.restorer as Types.RestorerProps\n                    );\n                } else {\n                    if (tabster.restorer) {\n                        if (newTabsterProps.restorer) {\n                            tabsterOnElement.restorer =\n                                tabster.restorer.createRestorer(\n                                    element,\n                                    newTabsterProps.restorer\n                                );\n                        }\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Restorer API used before initialization, please call `getRestorer()`\"\n                        );\n                    }\n                }\n\n                break;\n\n            case \"focusable\":\n                tabsterOnElement.focusable = newTabsterProps.focusable;\n                break;\n\n            case \"groupper\":\n                if (tabsterOnElement.groupper) {\n                    tabsterOnElement.groupper.setProps(\n                        newTabsterProps.groupper as Types.GroupperProps\n                    );\n                } else {\n                    if (tabster.groupper) {\n                        tabsterOnElement.groupper =\n                            tabster.groupper.createGroupper(\n                                element,\n                                newTabsterProps.groupper as Types.GroupperProps,\n                                sys\n                            );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Groupper API used before initialization, please call `getGroupper()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"mover\":\n                if (tabsterOnElement.mover) {\n                    tabsterOnElement.mover.setProps(\n                        newTabsterProps.mover as Types.MoverProps\n                    );\n                } else {\n                    if (tabster.mover) {\n                        tabsterOnElement.mover = tabster.mover.createMover(\n                            element,\n                            newTabsterProps.mover as Types.MoverProps,\n                            sys\n                        );\n                    } else if (__DEV__) {\n                        console.error(\n                            \"Mover API used before initialization, please call `getMover()`\"\n                        );\n                    }\n                }\n                break;\n\n            case \"observed\":\n                if (tabster.observedElement) {\n                    tabsterOnElement.observed = newTabsterProps.observed;\n                    tabster.observedElement.onObservedElementUpdate(element);\n                } else if (__DEV__) {\n                    console.error(\n                        \"ObservedElement API used before initialization, please call `getObservedElement()`\"\n                    );\n                }\n                break;\n\n            case \"uncontrolled\":\n                tabsterOnElement.uncontrolled = newTabsterProps.uncontrolled;\n                break;\n\n            case \"outline\":\n                if (tabster.outline) {\n                    tabsterOnElement.outline = newTabsterProps.outline;\n                } else if (__DEV__) {\n                    console.error(\n                        \"Outline API used before initialization, please call `getOutline()`\"\n                    );\n                }\n                break;\n\n            case \"sys\":\n                tabsterOnElement.sys = newTabsterProps.sys;\n                break;\n\n            default:\n                console.error(\n                    `Unknown key '${key}' in data-tabster attribute value.`\n                );\n        }\n    }\n\n    if (newAttr) {\n        entry.attr = newAttr;\n    } else {\n        if (Object.keys(tabsterOnElement).length === 0) {\n            delete entry.tabster;\n            delete entry.attr;\n        }\n        tabster.storageEntry(element, false);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport type { GetWindow } from \"./Types\";\n\nexport function createEventTarget(getWindow: GetWindow): EventTarget {\n    const global = getWindow() as unknown as typeof globalThis;\n\n    try {\n        if (global.EventTarget) {\n            return new global.EventTarget();\n        }\n    } catch (error) {\n        // thrown if EventTarget is not constructable or doesn't exit\n        if (!(error instanceof TypeError)) {\n            throw error;\n        }\n    }\n\n    return global.document.createElement(\"div\");\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { DOMAPI } from \"./Types\";\n\nconst _createMutationObserver = (callback: MutationCallback) =>\n    new MutationObserver(callback);\nconst _createTreeWalker = (\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) => doc.createTreeWalker(root, whatToShow, filter);\nconst _getParentNode = (node: Node | null | undefined) =>\n    node ? node.parentNode : null;\nconst _getParentElement = (element: HTMLElement) =>\n    element ? element.parentElement : null;\nconst _nodeContains = (\n    parent: Node | null | undefined,\n    child: Node | null | undefined\n) => !!(child && parent?.contains(child));\nconst _getActiveElement = (doc: Document) => doc.activeElement;\nconst _querySelector = (element: Element, selector: string) =>\n    element.querySelector(selector);\nconst _querySelectorAll = (element: ParentNode, selector: string) =>\n    Array.prototype.slice.call(element.querySelectorAll(selector), 0);\nconst _getElementById = (doc: Document, id: string): HTMLElement | null =>\n    doc.getElementById(id);\nconst _getFirstChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.firstChild || null;\nconst _getLastChild = (node: Node | null | undefined): ChildNode | null =>\n    node?.lastChild || null;\nconst _getNextSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.nextSibling || null;\nconst _getPreviousSibling = (node: Node | null | undefined): ChildNode | null =>\n    node?.previousSibling || null;\nconst _getFirstElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.firstElementChild || null;\nconst _getLastElementChild = (\n    element: Element | null | undefined\n): Element | null => element?.lastElementChild || null;\nconst _getNextElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.nextElementSibling || null;\nconst _getPreviousElementSibling = (\n    element: Element | null | undefined\n): Element | null => element?.previousElementSibling || null;\nconst _appendChild = (parent: Node, child: Node): Node =>\n    parent.appendChild(child);\nconst _insertBefore = (\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node => parent.insertBefore(child, referenceChild);\nconst _getSelection = (ref: Node): Selection | null =>\n    ref.ownerDocument?.getSelection() || null;\n\nexport const dom: DOMAPI = {\n    createMutationObserver: _createMutationObserver,\n    createTreeWalker: _createTreeWalker,\n    getParentNode: _getParentNode,\n    getParentElement: _getParentElement,\n    nodeContains: _nodeContains,\n    getActiveElement: _getActiveElement,\n    querySelector: _querySelector,\n    querySelectorAll: _querySelectorAll,\n    getElementById: _getElementById,\n    getFirstChild: _getFirstChild,\n    getLastChild: _getLastChild,\n    getNextSibling: _getNextSibling,\n    getPreviousSibling: _getPreviousSibling,\n    getFirstElementChild: _getFirstElementChild,\n    getLastElementChild: _getLastElementChild,\n    getNextElementSibling: _getNextElementSibling,\n    getPreviousElementSibling: _getPreviousElementSibling,\n    appendChild: _appendChild,\n    insertBefore: _insertBefore,\n    getSelection: _getSelection,\n};\n\nexport function setDOMAPI(domapi: Partial<DOMAPI>) {\n    for (const key of Object.keys(domapi) as (keyof DOMAPI)[]) {\n        (dom[key] as typeof domapi[typeof key]) = domapi[key];\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport * as Types from \"./Types\";\nimport { GetWindow, Visibilities, Visibility } from \"./Types\";\nimport { dom } from \"./DOMAPI\";\n\ninterface HTMLElementWithBoundingRectCacheId extends HTMLElement {\n    __tabsterCacheId?: string;\n}\n\ninterface FocusedElementWithIgnoreFlag extends HTMLElement {\n    __shouldIgnoreFocus: boolean;\n}\n\nexport interface WindowWithUID extends Window {\n    __tabsterCrossOriginWindowUID?: string;\n}\n\nexport interface HTMLElementWithUID extends HTMLElement {\n    __tabsterElementUID?: string;\n}\n\nexport interface HTMLElementWithDummyContainer extends HTMLElement {\n    __tabsterDummyContainer?: WeakHTMLElement;\n}\n\nexport interface TabsterDOMRect {\n    bottom: number;\n    left: number;\n    right: number;\n    top: number;\n}\n\nexport interface InstanceContext {\n    elementByUId: { [uid: string]: WeakHTMLElement<HTMLElementWithUID> };\n    basics: InternalBasics;\n    WeakRef?: WeakRefConstructor;\n    containerBoundingRectCache: {\n        [id: string]: {\n            rect: TabsterDOMRect;\n            element: HTMLElementWithBoundingRectCacheId;\n        };\n    };\n    lastContainerBoundingRectCacheId: number;\n    containerBoundingRectCacheTimer?: number;\n    fakeWeakRefs: TabsterWeakRef<unknown>[];\n    fakeWeakRefsTimer?: number;\n    fakeWeakRefsStarted: boolean;\n}\n\nlet _isBrokenIE11: boolean;\n\nconst _DOMRect =\n    typeof DOMRect !== \"undefined\"\n        ? DOMRect\n        : class {\n              readonly bottom: number;\n              readonly left: number;\n              readonly right: number;\n              readonly top: number;\n\n              constructor(\n                  x?: number,\n                  y?: number,\n                  width?: number,\n                  height?: number\n              ) {\n                  this.left = x || 0;\n                  this.top = y || 0;\n                  this.right = (x || 0) + (width || 0);\n                  this.bottom = (y || 0) + (height || 0);\n              }\n          };\n\nlet _uidCounter = 0;\n\ntry {\n    // IE11 only accepts `filter` argument as a function (not object with the `acceptNode`\n    // property as the docs define). Also `entityReferenceExpansion` argument is not\n    // optional. And it throws exception when the above arguments aren't there.\n    document.createTreeWalker(document, NodeFilter.SHOW_ELEMENT);\n    _isBrokenIE11 = false;\n} catch (e) {\n    _isBrokenIE11 = true;\n}\n\nconst _updateDummyInputsTimeout = 100;\n\ninterface WindowWithUtilsConext extends Window {\n    __tabsterInstanceContext?: InstanceContext;\n    Promise: PromiseConstructor;\n    WeakRef: WeakRefConstructor;\n}\n\nexport function getInstanceContext(getWindow: GetWindow): InstanceContext {\n    const win = getWindow() as WindowWithUtilsConext;\n\n    let ctx = win.__tabsterInstanceContext;\n\n    if (!ctx) {\n        ctx = {\n            elementByUId: {},\n            basics: {\n                Promise: win.Promise || undefined,\n                WeakRef: win.WeakRef || undefined,\n            },\n            containerBoundingRectCache: {},\n            lastContainerBoundingRectCacheId: 0,\n            fakeWeakRefs: [],\n            fakeWeakRefsStarted: false,\n        };\n\n        win.__tabsterInstanceContext = ctx;\n    }\n\n    return ctx;\n}\n\nexport function disposeInstanceContext(win: Window): void {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n\n    if (ctx) {\n        ctx.elementByUId = {};\n\n        delete ctx.WeakRef;\n\n        ctx.containerBoundingRectCache = {};\n\n        if (ctx.containerBoundingRectCacheTimer) {\n            win.clearTimeout(ctx.containerBoundingRectCacheTimer);\n        }\n\n        if (ctx.fakeWeakRefsTimer) {\n            win.clearTimeout(ctx.fakeWeakRefsTimer);\n        }\n\n        ctx.fakeWeakRefs = [];\n\n        delete (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    }\n}\n\nexport function createWeakMap<K extends object, V>(win: Window): WeakMap<K, V> {\n    const ctx = (win as WindowWithUtilsConext).__tabsterInstanceContext;\n    return new (ctx?.basics.WeakMap || WeakMap)();\n}\n\nexport function hasSubFocusable(element: HTMLElement): boolean {\n    return !!element.querySelector(Types.FocusableSelector);\n}\n\ninterface TabsterWeakRef<T> {\n    deref(): T | undefined;\n}\n\nclass FakeWeakRef<T extends HTMLElement = HTMLElement>\n    implements TabsterWeakRef<T>\n{\n    private _target: T | undefined;\n\n    constructor(target: T) {\n        this._target = target;\n    }\n\n    deref(): T | undefined {\n        return this._target;\n    }\n\n    static cleanup(fwr: FakeWeakRef, forceRemove?: boolean): boolean {\n        if (!fwr._target) {\n            return true;\n        }\n\n        if (\n            forceRemove ||\n            !documentContains(fwr._target.ownerDocument, fwr._target)\n        ) {\n            delete fwr._target;\n            return true;\n        }\n\n        return false;\n    }\n}\n\nexport class WeakHTMLElement<T extends HTMLElement = HTMLElement, D = undefined>\n    implements Types.WeakHTMLElement<D>\n{\n    private _ref: TabsterWeakRef<T> | undefined;\n    private _data: D | undefined;\n\n    constructor(getWindow: GetWindow, element: T, data?: D) {\n        const context = getInstanceContext(getWindow);\n\n        let ref: TabsterWeakRef<T>;\n        if (context.WeakRef) {\n            ref = new context.WeakRef(element);\n        } else {\n            ref = new FakeWeakRef(element);\n            context.fakeWeakRefs.push(ref);\n        }\n\n        this._ref = ref;\n        this._data = data;\n    }\n\n    get(): T | undefined {\n        const ref = this._ref;\n        let element: T | undefined;\n\n        if (ref) {\n            element = ref.deref();\n\n            if (!element) {\n                delete this._ref;\n            }\n        }\n\n        return element;\n    }\n\n    getData(): D | undefined {\n        return this._data;\n    }\n}\n\nexport function cleanupFakeWeakRefs(\n    getWindow: GetWindow,\n    forceRemove?: boolean\n): void {\n    const context = getInstanceContext(getWindow);\n    context.fakeWeakRefs = context.fakeWeakRefs.filter(\n        (e) => !FakeWeakRef.cleanup(e as FakeWeakRef, forceRemove)\n    );\n}\n\nexport function startFakeWeakRefsCleanup(getWindow: GetWindow): void {\n    const context = getInstanceContext(getWindow);\n\n    if (!context.fakeWeakRefsStarted) {\n        context.fakeWeakRefsStarted = true;\n        context.WeakRef = getWeakRef(context);\n    }\n\n    if (!context.fakeWeakRefsTimer) {\n        context.fakeWeakRefsTimer = getWindow().setTimeout(() => {\n            context.fakeWeakRefsTimer = undefined;\n            cleanupFakeWeakRefs(getWindow);\n            startFakeWeakRefsCleanup(getWindow);\n        }, 2 * 60 * 1000); // 2 minutes.\n    }\n}\n\nexport function stopFakeWeakRefsCleanupAndClearStorage(\n    getWindow: GetWindow\n): void {\n    const context = getInstanceContext(getWindow);\n\n    context.fakeWeakRefsStarted = false;\n\n    if (context.fakeWeakRefsTimer) {\n        getWindow().clearTimeout(context.fakeWeakRefsTimer);\n        context.fakeWeakRefsTimer = undefined;\n        context.fakeWeakRefs = [];\n    }\n}\n\nexport function createElementTreeWalker(\n    doc: Document,\n    root: Node,\n    acceptNode: (node: Node) => number\n): TreeWalker | undefined {\n    // IE11 will throw an exception when the TreeWalker root is not an Element.\n    if (root.nodeType !== Node.ELEMENT_NODE) {\n        return undefined;\n    }\n\n    // TypeScript isn't aware of IE11 behaving badly.\n    const filter = (_isBrokenIE11\n        ? acceptNode\n        : ({ acceptNode } as NodeFilter)) as unknown as NodeFilter;\n\n    return dom.createTreeWalker(\n        doc,\n        root,\n        NodeFilter.SHOW_ELEMENT,\n        filter,\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore: We still don't want to completely break IE11, so, entityReferenceExpansion argument is not optional.\n        false /* Last argument is not optional for IE11! */\n    );\n}\n\nexport function getBoundingRect(\n    getWindow: GetWindow,\n    element: HTMLElementWithBoundingRectCacheId\n): TabsterDOMRect {\n    let cacheId = element.__tabsterCacheId;\n    const context = getInstanceContext(getWindow);\n    const cached = cacheId\n        ? context.containerBoundingRectCache[cacheId]\n        : undefined;\n\n    if (cached) {\n        return cached.rect;\n    }\n\n    const scrollingElement =\n        element.ownerDocument && element.ownerDocument.documentElement;\n\n    if (!scrollingElement) {\n        return new _DOMRect();\n    }\n\n    // A bounding rect of the top-level element contains the whole page regardless of the\n    // scrollbar. So, we improvise a little and limiting the final result...\n    let left = 0;\n    let top = 0;\n    let right = scrollingElement.clientWidth;\n    let bottom = scrollingElement.clientHeight;\n\n    if (element !== scrollingElement) {\n        const r = element.getBoundingClientRect();\n        left = Math.max(left, r.left);\n        top = Math.max(top, r.top);\n        right = Math.min(right, r.right);\n        bottom = Math.min(bottom, r.bottom);\n    }\n\n    const rect = new _DOMRect(\n        left < right ? left : -1,\n        top < bottom ? top : -1,\n        left < right ? right - left : 0,\n        top < bottom ? bottom - top : 0\n    );\n\n    if (!cacheId) {\n        cacheId = \"r-\" + ++context.lastContainerBoundingRectCacheId;\n        element.__tabsterCacheId = cacheId;\n    }\n\n    context.containerBoundingRectCache[cacheId] = {\n        rect,\n        element,\n    };\n\n    if (!context.containerBoundingRectCacheTimer) {\n        context.containerBoundingRectCacheTimer = window.setTimeout(() => {\n            context.containerBoundingRectCacheTimer = undefined;\n\n            for (const cId of Object.keys(context.containerBoundingRectCache)) {\n                delete context.containerBoundingRectCache[cId].element\n                    .__tabsterCacheId;\n            }\n\n            context.containerBoundingRectCache = {};\n        }, 50);\n    }\n\n    return rect;\n}\n\nexport function isElementVerticallyVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    tolerance: number\n): boolean {\n    const container = getScrollableContainer(element);\n    if (!container) {\n        return false;\n    }\n\n    const containerRect = getBoundingRect(getWindow, container);\n    const elementRect = element.getBoundingClientRect();\n    const intersectionTolerance = elementRect.height * (1 - tolerance);\n    const topIntersection = Math.max(0, containerRect.top - elementRect.top);\n    const bottomIntersection = Math.max(\n        0,\n        elementRect.bottom - containerRect.bottom\n    );\n    const totalIntersection = topIntersection + bottomIntersection;\n\n    return (\n        totalIntersection === 0 || totalIntersection <= intersectionTolerance\n    );\n}\n\nexport function isElementVisibleInContainer(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    gap = 0\n): Visibility {\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (\n            elementRect.left > containerRect.right ||\n            elementRect.top > containerRect.bottom ||\n            elementRect.bottom < containerRect.top ||\n            elementRect.right < containerRect.left\n        ) {\n            return Visibilities.Invisible;\n        }\n\n        if (\n            elementRect.top + gap >= containerRect.top &&\n            elementRect.top <= containerRect.bottom &&\n            elementRect.bottom >= containerRect.top &&\n            elementRect.bottom - gap <= containerRect.bottom &&\n            elementRect.left + gap >= containerRect.left &&\n            elementRect.left <= containerRect.right &&\n            elementRect.right >= containerRect.left &&\n            elementRect.right - gap <= containerRect.right\n        ) {\n            return Visibilities.Visible;\n        }\n\n        return Visibilities.PartiallyVisible;\n    }\n\n    return Visibilities.Invisible;\n}\n\nexport function scrollIntoView(\n    getWindow: GetWindow,\n    element: HTMLElement,\n    alignToTop: boolean\n): void {\n    // Built-in DOM's scrollIntoView() is cool, but when we have nested containers,\n    // it scrolls all of them, not just the deepest one. So, trying to work it around.\n    const container = getScrollableContainer(element);\n\n    if (container) {\n        const containerRect = getBoundingRect(getWindow, container);\n        const elementRect = element.getBoundingClientRect();\n\n        if (alignToTop) {\n            container.scrollTop += elementRect.top - containerRect.top;\n        } else {\n            container.scrollTop += elementRect.bottom - containerRect.bottom;\n        }\n    }\n}\n\nexport function getScrollableContainer(\n    element: HTMLElement\n): HTMLElement | null {\n    const doc = element.ownerDocument;\n\n    if (doc) {\n        for (\n            let el: HTMLElement | null = dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            if (\n                el.scrollWidth > el.clientWidth ||\n                el.scrollHeight > el.clientHeight\n            ) {\n                return el;\n            }\n        }\n\n        return doc.documentElement;\n    }\n\n    return null;\n}\n\nexport function makeFocusIgnored(element: HTMLElement): void {\n    (element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus = true;\n}\n\nexport function shouldIgnoreFocus(element: HTMLElement): boolean {\n    return !!(element as FocusedElementWithIgnoreFlag).__shouldIgnoreFocus;\n}\n\nexport function getUId(wnd: Window & { msCrypto?: Crypto }): string {\n    const rnd = new Uint32Array(4);\n\n    if (wnd.crypto && wnd.crypto.getRandomValues) {\n        wnd.crypto.getRandomValues(rnd);\n    } else if (wnd.msCrypto && wnd.msCrypto.getRandomValues) {\n        wnd.msCrypto.getRandomValues(rnd);\n    } else {\n        for (let i = 0; i < rnd.length; i++) {\n            rnd[i] = 0xffffffff * Math.random();\n        }\n    }\n\n    const srnd: string[] = [];\n\n    for (let i = 0; i < rnd.length; i++) {\n        srnd.push(rnd[i].toString(36));\n    }\n\n    srnd.push(\"|\");\n    srnd.push((++_uidCounter).toString(36));\n    srnd.push(\"|\");\n    srnd.push(Date.now().toString(36));\n\n    return srnd.join(\"\");\n}\n\nexport function getElementUId(\n    getWindow: GetWindow,\n    element: HTMLElementWithUID\n): string {\n    const context = getInstanceContext(getWindow);\n    let uid = element.__tabsterElementUID;\n\n    if (!uid) {\n        uid = element.__tabsterElementUID = getUId(getWindow());\n    }\n\n    if (\n        !context.elementByUId[uid] &&\n        documentContains(element.ownerDocument, element)\n    ) {\n        context.elementByUId[uid] = new WeakHTMLElement(getWindow, element);\n    }\n\n    return uid;\n}\n\nexport function getElementByUId(\n    context: InstanceContext,\n    uid: string\n): WeakHTMLElement<HTMLElementWithUID, undefined> | undefined {\n    return context.elementByUId[uid];\n}\n\nexport function getWindowUId(win: WindowWithUID): string {\n    let uid = win.__tabsterCrossOriginWindowUID;\n\n    if (!uid) {\n        uid = win.__tabsterCrossOriginWindowUID = getUId(win);\n    }\n\n    return uid;\n}\n\nexport function clearElementCache(\n    getWindow: GetWindow,\n    parent?: HTMLElement\n): void {\n    const context = getInstanceContext(getWindow);\n\n    for (const key of Object.keys(context.elementByUId)) {\n        const wel = context.elementByUId[key];\n        const el = wel && wel.get();\n\n        if (el && parent) {\n            if (!dom.nodeContains(parent, el)) {\n                continue;\n            }\n        }\n\n        delete context.elementByUId[key];\n    }\n}\n\n// IE11 doesn't have document.contains()...\nexport function documentContains(\n    doc: HTMLDocument | null | undefined,\n    element: HTMLElement\n): boolean {\n    return dom.nodeContains(doc?.body, element);\n}\n\nexport function matchesSelector(\n    element: HTMLElement,\n    selector: string\n): boolean {\n    interface HTMLElementWithMatches extends HTMLElement {\n        matchesSelector?: typeof HTMLElement.prototype.matches;\n        msMatchesSelector?: typeof HTMLElement.prototype.matches;\n    }\n\n    const matches =\n        element.matches ||\n        (element as HTMLElementWithMatches).matchesSelector ||\n        (element as HTMLElementWithMatches).msMatchesSelector ||\n        element.webkitMatchesSelector;\n\n    return matches && matches.call(element, selector);\n}\n\nexport function getPromise(getWindow: GetWindow): PromiseConstructor {\n    const context = getInstanceContext(getWindow);\n    if (context.basics.Promise) {\n        return context.basics.Promise;\n    }\n\n    throw new Error(\"No Promise defined.\");\n}\n\nexport function getWeakRef(\n    context: InstanceContext\n): WeakRefConstructor | undefined {\n    return context.basics.WeakRef;\n}\n\ninterface InternalBasics {\n    Promise?: PromiseConstructor;\n    WeakRef?: WeakRefConstructor;\n    WeakMap?: WeakMapConstructor;\n}\n\nexport function setBasics(win: Window, basics: InternalBasics): void {\n    const context = getInstanceContext(() => win);\n\n    let key: keyof InternalBasics;\n\n    key = \"Promise\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakRef\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n\n    key = \"WeakMap\";\n    if (key in basics) {\n        context.basics[key] = basics[key];\n    }\n}\n\nlet _lastTabsterPartId = 0;\n\nexport abstract class TabsterPart<P, D = undefined>\n    implements Types.TabsterPart<P>\n{\n    protected _tabster: Types.TabsterCore;\n    protected _element: WeakHTMLElement<HTMLElement, D>;\n    protected _props: P;\n\n    readonly id: string;\n\n    constructor(tabster: Types.TabsterCore, element: HTMLElement, props: P) {\n        const getWindow = tabster.getWindow;\n        this._tabster = tabster;\n        this._element = new WeakHTMLElement(getWindow, element);\n        this._props = { ...props };\n        this.id = \"i\" + ++_lastTabsterPartId;\n    }\n\n    getElement(): HTMLElement | undefined {\n        return this._element.get();\n    }\n\n    getProps(): P {\n        return this._props;\n    }\n\n    setProps(props: P): void {\n        this._props = { ...props };\n    }\n}\n\nexport interface DummyInputProps {\n    /** The input is created to be used only once and autoremoved when focused. */\n    isPhantom?: boolean;\n    /** Whether the input is before or after the content it is guarding.  */\n    isFirst: boolean;\n}\n\nexport type DummyInputFocusCallback = (\n    dummyInput: DummyInput,\n    isBackward: boolean,\n    relatedTarget: HTMLElement | null\n) => void;\n\n/**\n * Dummy HTML elements that are used as focus sentinels for the DOM enclosed within them\n */\nexport class DummyInput {\n    private _isPhantom: DummyInputProps[\"isPhantom\"];\n    private _fixedTarget?: WeakHTMLElement;\n    private _disposeTimer: number | undefined;\n    private _clearDisposeTimeout: (() => void) | undefined;\n\n    input: HTMLElement | undefined;\n    useDefaultAction?: boolean;\n    isFirst: DummyInputProps[\"isFirst\"];\n    isOutside: boolean;\n    /** Called when the input is focused */\n    onFocusIn?: DummyInputFocusCallback;\n    /** Called when the input is blurred */\n    onFocusOut?: DummyInputFocusCallback;\n\n    constructor(\n        getWindow: Types.GetWindow,\n        isOutside: boolean,\n        props: DummyInputProps,\n        element?: WeakHTMLElement,\n        fixedTarget?: WeakHTMLElement\n    ) {\n        const win = getWindow();\n        const input = win.document.createElement(\"i\");\n\n        input.tabIndex = 0;\n        input.setAttribute(\"role\", \"none\");\n\n        input.setAttribute(Types.TabsterDummyInputAttributeName, \"\");\n        input.setAttribute(\"aria-hidden\", \"true\");\n\n        const style = input.style;\n        style.position = \"fixed\";\n        style.width = style.height = \"1px\";\n        style.opacity = \"0.001\";\n        style.zIndex = \"-1\";\n        style.setProperty(\"content-visibility\", \"hidden\");\n\n        makeFocusIgnored(input);\n\n        this.input = input;\n        this.isFirst = props.isFirst;\n        this.isOutside = isOutside;\n        this._isPhantom = props.isPhantom ?? false;\n        this._fixedTarget = fixedTarget;\n\n        input.addEventListener(\"focusin\", this._focusIn);\n        input.addEventListener(\"focusout\", this._focusOut);\n\n        (input as HTMLElementWithDummyContainer).__tabsterDummyContainer =\n            element;\n\n        if (this._isPhantom) {\n            this._disposeTimer = win.setTimeout(() => {\n                delete this._disposeTimer;\n                this.dispose();\n            }, 0);\n\n            this._clearDisposeTimeout = () => {\n                if (this._disposeTimer) {\n                    win.clearTimeout(this._disposeTimer);\n                    delete this._disposeTimer;\n                }\n\n                delete this._clearDisposeTimeout;\n            };\n        }\n    }\n\n    dispose(): void {\n        if (this._clearDisposeTimeout) {\n            this._clearDisposeTimeout();\n        }\n\n        const input = this.input;\n\n        if (!input) {\n            return;\n        }\n\n        delete this._fixedTarget;\n        delete this.onFocusIn;\n        delete this.onFocusOut;\n        delete this.input;\n\n        input.removeEventListener(\"focusin\", this._focusIn);\n        input.removeEventListener(\"focusout\", this._focusOut);\n\n        delete (input as HTMLElementWithDummyContainer).__tabsterDummyContainer;\n\n        dom.getParentNode(input)?.removeChild(input);\n    }\n\n    setTopLeft(top: number, left: number): void {\n        const style = this.input?.style;\n\n        if (style) {\n            style.top = `${top}px`;\n            style.left = `${left}px`;\n        }\n    }\n\n    private _isBackward(\n        isIn: boolean,\n        current: HTMLElement,\n        previous: HTMLElement | null\n    ): boolean {\n        return isIn && !previous\n            ? !this.isFirst\n            : !!(\n                  previous &&\n                  current.compareDocumentPosition(previous) &\n                      Node.DOCUMENT_POSITION_FOLLOWING\n              );\n    }\n\n    private _focusIn = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            const target = this._fixedTarget.get();\n\n            if (target) {\n                nativeFocus(target);\n            }\n\n            return;\n        }\n\n        const input = this.input;\n\n        if (this.onFocusIn && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusIn(\n                this,\n                this._isBackward(true, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n\n    private _focusOut = (e: FocusEvent): void => {\n        if (this._fixedTarget) {\n            return;\n        }\n\n        this.useDefaultAction = false;\n\n        const input = this.input;\n\n        if (this.onFocusOut && input) {\n            const relatedTarget = e.relatedTarget as HTMLElement | null;\n\n            this.onFocusOut(\n                this,\n                this._isBackward(false, input, relatedTarget),\n                relatedTarget\n            );\n        }\n    };\n}\n\ninterface HTMLElementWithDummyInputs extends HTMLElement {\n    __tabsterDummy?: DummyInputManagerCore;\n}\n\nexport const DummyInputManagerPriorities = {\n    Root: 1,\n    Modalizer: 2,\n    Mover: 3,\n    Groupper: 4,\n};\n\nexport class DummyInputManager {\n    private _instance?: DummyInputManagerCore;\n    private _onFocusIn?: DummyInputFocusCallback;\n    private _onFocusOut?: DummyInputFocusCallback;\n    protected _element: WeakHTMLElement;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        this._element = element;\n\n        this._instance = new DummyInputManagerCore(\n            tabster,\n            element,\n            this,\n            priority,\n            sys,\n            outsideByDefault,\n            callForDefaultAction\n        );\n    }\n\n    protected _setHandlers(\n        onFocusIn?: DummyInputFocusCallback,\n        onFocusOut?: DummyInputFocusCallback\n    ): void {\n        this._onFocusIn = onFocusIn;\n        this._onFocusOut = onFocusOut;\n    }\n\n    moveOut(backwards: boolean): void {\n        this._instance?.moveOut(backwards);\n    }\n\n    moveOutWithDefaultAction(\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void {\n        this._instance?.moveOutWithDefaultAction(backwards, relatedEvent);\n    }\n\n    getHandler(isIn: boolean): DummyInputFocusCallback | undefined {\n        return isIn ? this._onFocusIn : this._onFocusOut;\n    }\n\n    setTabbable(tabbable: boolean) {\n        this._instance?.setTabbable(this, tabbable);\n    }\n\n    dispose(): void {\n        if (this._instance) {\n            this._instance.dispose(this);\n            delete this._instance;\n        }\n\n        delete this._onFocusIn;\n        delete this._onFocusOut;\n    }\n\n    static moveWithPhantomDummy(\n        tabster: Types.TabsterCore,\n        element: HTMLElement, // The target element to move to or out of.\n        moveOutOfElement: boolean, // Whether to move out of the element or into it.\n        isBackward: boolean, // Are we tabbing of shift-tabbing?\n        relatedEvent: KeyboardEvent // The event that triggered the move.\n    ): void {\n        // Phantom dummy is a hack to use browser's default action to move\n        // focus from a specific point in the application to the next/previous\n        // element. Default action is needed because next focusable element\n        // is not always available to focus directly (for example, next focusable\n        // is inside isolated iframe) or for uncontrolled areas we want to make\n        // sure that something that controls it takes care of the focusing.\n        // It works in a way that during the Tab key handling, we create a dummy\n        // input element, place it to the specific place in the DOM and focus it,\n        // then the default action of the Tab press will move focus from our dummy\n        // input. And we remove it from the DOM right after that.\n        const dummy: DummyInput = new DummyInput(tabster.getWindow, true, {\n            isPhantom: true,\n            isFirst: true,\n        });\n\n        const input = dummy.input;\n\n        if (input) {\n            let parent: HTMLElement | null;\n            let insertBefore: HTMLElementWithDummyContainer | null;\n\n            // Let's say we have a following DOM structure:\n            // <div>\n            //   <button>Button1</button>\n            //   <div id=\"uncontrolled\" data-tabster={uncontrolled: {}}>\n            //     <button>Button2</button>\n            //     <button>Button3</button>\n            //   </div>\n            //   <button>Button4</button>\n            // </div>\n            //\n            // We pass the \"uncontrolled\" div as the element to move to or out of.\n            //\n            // When we pass moveOutOfElement=true and isBackward=false,\n            // the phantom dummy input will be inserted before Button4.\n            //\n            // When we pass moveOutOfElement=true and isBackward=true, there are\n            // two cases. If the uncontrolled element is focusable (has tabindex=0),\n            // the phantom dummy input will be inserted after Button1. If the\n            // uncontrolled element is not focusable, the phantom dummy input will be\n            // inserted before Button2.\n            //\n            // When we pass moveOutOfElement=false and isBackward=false, the\n            // phantom dummy input will be inserted after Button1.\n            //\n            // When we pass moveOutOfElement=false and isBackward=true, the phantom\n            // dummy input will be inserted before Button4.\n            //\n            // And we have a corner case for <body> and we make sure that the inserted\n            // dummy is inserted properly when there are existing permanent dummies.\n\n            if (element.tagName === \"BODY\") {\n                // We cannot insert elements outside of BODY.\n                parent = element;\n                insertBefore =\n                    (moveOutOfElement && isBackward) ||\n                    (!moveOutOfElement && !isBackward)\n                        ? (dom.getFirstElementChild(\n                              element\n                          ) as HTMLElement | null)\n                        : null;\n            } else {\n                if (\n                    moveOutOfElement &&\n                    (!isBackward ||\n                        (isBackward &&\n                            !tabster.focusable.isFocusable(\n                                element,\n                                false,\n                                true,\n                                true\n                            )))\n                ) {\n                    parent = element;\n                    insertBefore = isBackward\n                        ? (element.firstElementChild as HTMLElementWithDummyContainer | null)\n                        : null;\n                } else {\n                    parent = dom.getParentElement(element);\n                    insertBefore =\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? element\n                            : (dom.getNextElementSibling(\n                                  element\n                              ) as HTMLElement | null);\n                }\n\n                let potentialDummy: HTMLElementWithDummyContainer | null;\n                let dummyFor: HTMLElement | undefined;\n\n                do {\n                    // This is a safety pillow for the cases when someone, combines\n                    // groupper with uncontrolled on the same node. Which is technically\n                    // not correct, but moving into the container element via its dummy\n                    // input would produce a correct behaviour in uncontrolled mode.\n                    potentialDummy = (\n                        (moveOutOfElement && isBackward) ||\n                        (!moveOutOfElement && !isBackward)\n                            ? dom.getPreviousElementSibling(insertBefore)\n                            : insertBefore\n                    ) as HTMLElementWithDummyContainer | null;\n\n                    dummyFor = potentialDummy?.__tabsterDummyContainer?.get();\n\n                    if (dummyFor === element) {\n                        insertBefore =\n                            (moveOutOfElement && isBackward) ||\n                            (!moveOutOfElement && !isBackward)\n                                ? potentialDummy\n                                : (dom.getNextElementSibling(\n                                      potentialDummy\n                                  ) as HTMLElement | null);\n                    } else {\n                        dummyFor = undefined;\n                    }\n                } while (dummyFor);\n            }\n\n            if (\n                parent &&\n                dispatchMoveFocusEvent({\n                    by: \"root\",\n                    owner: parent,\n                    next: null,\n                    relatedEvent,\n                })\n            ) {\n                dom.insertBefore(parent, input, insertBefore);\n                nativeFocus(input);\n            }\n        }\n    }\n\n    static addPhantomDummyWithTarget(\n        tabster: Types.TabsterCore,\n        sourceElement: HTMLElement,\n        isBackward: boolean,\n        targetElement: HTMLElement\n    ): void {\n        const dummy: DummyInput = new DummyInput(\n            tabster.getWindow,\n            true,\n            {\n                isPhantom: true,\n                isFirst: true,\n            },\n            undefined,\n            new WeakHTMLElement(tabster.getWindow, targetElement)\n        );\n\n        const input = dummy.input;\n\n        if (input) {\n            let dummyParent: HTMLElement | null;\n            let insertBefore: HTMLElement | null;\n\n            if (hasSubFocusable(sourceElement) && !isBackward) {\n                dummyParent = sourceElement;\n                insertBefore = dom.getFirstElementChild(\n                    sourceElement\n                ) as HTMLElement | null;\n            } else {\n                dummyParent = dom.getParentElement(sourceElement);\n                insertBefore = isBackward\n                    ? sourceElement\n                    : (dom.getNextElementSibling(\n                          sourceElement\n                      ) as HTMLElement | null);\n            }\n\n            if (dummyParent) {\n                dom.insertBefore(dummyParent, input, insertBefore);\n            }\n        }\n    }\n}\n\ninterface DummyInputWrapper {\n    manager: DummyInputManager;\n    priority: number;\n    tabbable: boolean;\n}\n\nfunction setDummyInputDebugValue(\n    dummy: DummyInput,\n    wrappers: DummyInputWrapper[]\n): void {\n    const what: Record<number, string> = {\n        1: \"Root\",\n        2: \"Modalizer\",\n        3: \"Mover\",\n        4: \"Groupper\",\n    };\n\n    dummy.input?.setAttribute(\n        Types.TabsterDummyInputAttributeName,\n        [\n            `isFirst=${dummy.isFirst}`,\n            `isOutside=${dummy.isOutside}`,\n            ...wrappers.map(\n                (w) => `(${what[w.priority]}, tabbable=${w.tabbable})`\n            ),\n        ].join(\", \")\n    );\n}\n\nexport class DummyInputObserver implements Types.DummyInputObserver {\n    private _win?: GetWindow;\n    private _updateQueue: Set<\n        (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    > = new Set();\n    private _updateTimer?: number;\n    private _lastUpdateQueueTime = 0;\n    private _changedParents: WeakSet<Node> = new WeakSet();\n    private _updateDummyInputsTimer?: number;\n    private _dummyElements: WeakHTMLElement<HTMLElement>[] = [];\n    private _dummyCallbacks: WeakMap<HTMLElement, () => void> = new WeakMap();\n    domChanged?(parent: HTMLElement): void;\n\n    constructor(win: GetWindow) {\n        this._win = win;\n    }\n\n    add(dummy: HTMLElement, callback: () => void): void {\n        if (!this._dummyCallbacks.has(dummy) && this._win) {\n            this._dummyElements.push(new WeakHTMLElement(this._win, dummy));\n            this._dummyCallbacks.set(dummy, callback);\n            this.domChanged = this._domChanged;\n        }\n    }\n\n    remove(dummy: HTMLElement): void {\n        this._dummyElements = this._dummyElements.filter((ref) => {\n            const element = ref.get();\n            return element && element !== dummy;\n        });\n\n        this._dummyCallbacks.delete(dummy);\n\n        if (this._dummyElements.length === 0) {\n            delete this.domChanged;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win?.();\n\n        if (this._updateTimer) {\n            win?.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        if (this._updateDummyInputsTimer) {\n            win?.clearTimeout(this._updateDummyInputsTimer);\n            delete this._updateDummyInputsTimer;\n        }\n\n        this._changedParents = new WeakSet();\n        this._dummyCallbacks = new WeakMap();\n        this._dummyElements = [];\n        this._updateQueue.clear();\n\n        delete this.domChanged;\n        delete this._win;\n    }\n\n    private _domChanged = (parent: HTMLElement): void => {\n        if (this._changedParents.has(parent)) {\n            return;\n        }\n\n        this._changedParents.add(parent);\n\n        if (this._updateDummyInputsTimer) {\n            return;\n        }\n\n        this._updateDummyInputsTimer = this._win?.().setTimeout(() => {\n            delete this._updateDummyInputsTimer;\n\n            for (const ref of this._dummyElements) {\n                const dummyElement = ref.get();\n\n                if (dummyElement) {\n                    const callback = this._dummyCallbacks.get(dummyElement);\n\n                    if (callback) {\n                        const dummyParent = dom.getParentNode(dummyElement);\n\n                        if (\n                            !dummyParent ||\n                            this._changedParents.has(dummyParent)\n                        ) {\n                            callback();\n                        }\n                    }\n                }\n            }\n\n            this._changedParents = new WeakSet();\n        }, _updateDummyInputsTimeout);\n    };\n\n    updatePositions(\n        compute: (\n            scrollTopLeftCache: Map<\n                HTMLElement,\n                { scrollTop: number; scrollLeft: number } | null\n            >\n        ) => () => void\n    ): void {\n        if (!this._win) {\n            // As this is a public method, we make sure that it has no effect when\n            // called after dispose().\n            return;\n        }\n\n        this._updateQueue.add(compute);\n\n        this._lastUpdateQueueTime = Date.now();\n\n        this._scheduledUpdatePositions();\n    }\n\n    private _scheduledUpdatePositions(): void {\n        if (this._updateTimer) {\n            return;\n        }\n\n        this._updateTimer = this._win?.().setTimeout(() => {\n            delete this._updateTimer;\n\n            // updatePositions() might be called quite a lot during the scrolling.\n            // So, instead of clearing the timeout and scheduling a new one, we\n            // check if enough time has passed since the last updatePositions() call\n            // and only schedule a new one if not.\n            // At maximum, we will update dummy inputs positions\n            // _updateDummyInputsTimeout * 2 after the last updatePositions() call.\n            if (\n                this._lastUpdateQueueTime + _updateDummyInputsTimeout <=\n                Date.now()\n            ) {\n                // A cache for current bulk of updates to reduce getComputedStyle() calls.\n                const scrollTopLeftCache = new Map<\n                    HTMLElement,\n                    { scrollTop: number; scrollLeft: number } | null\n                >();\n\n                const setTopLeftCallbacks: (() => void)[] = [];\n\n                for (const compute of this._updateQueue) {\n                    setTopLeftCallbacks.push(compute(scrollTopLeftCache));\n                }\n\n                this._updateQueue.clear();\n\n                // We're splitting the computation of offsets and setting them to avoid extra\n                // reflows.\n                for (const setTopLeft of setTopLeftCallbacks) {\n                    setTopLeft();\n                }\n\n                // Explicitly clear to not hold references till the next garbage collection.\n                scrollTopLeftCache.clear();\n            } else {\n                this._scheduledUpdatePositions();\n            }\n        }, _updateDummyInputsTimeout);\n    }\n}\n\n/**\n * Parent class that encapsulates the behaviour of dummy inputs (focus sentinels)\n */\nclass DummyInputManagerCore {\n    private _tabster: Types.TabsterCore;\n    private _addTimer: number | undefined;\n    private _getWindow: Types.GetWindow;\n    private _wrappers: DummyInputWrapper[] = [];\n    private _element: WeakHTMLElement | undefined;\n    private _isOutside = false;\n    private _firstDummy: DummyInput | undefined;\n    private _lastDummy: DummyInput | undefined;\n    private _transformElements: Set<HTMLElement> = new Set();\n    private _callForDefaultAction: boolean | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        manager: DummyInputManager,\n        priority: number,\n        sys: Types.SysProps | undefined,\n        outsideByDefault?: boolean,\n        callForDefaultAction?: boolean\n    ) {\n        const el = element.get() as HTMLElementWithDummyInputs;\n\n        if (!el) {\n            throw new Error(\"No element\");\n        }\n\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._callForDefaultAction = callForDefaultAction;\n\n        const instance = el.__tabsterDummy;\n\n        (instance || this)._wrappers.push({\n            manager,\n            priority,\n            tabbable: true,\n        });\n\n        if (instance) {\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(\n                        this._firstDummy,\n                        instance._wrappers\n                    );\n                this._lastDummy &&\n                    setDummyInputDebugValue(\n                        this._lastDummy,\n                        instance._wrappers\n                    );\n            }\n\n            return instance;\n        }\n\n        el.__tabsterDummy = this;\n\n        // Some elements allow only specific types of direct descendants and we need to\n        // put our dummy inputs inside or outside of the element accordingly.\n        const forcedDummyPosition = sys?.dummyInputsPosition;\n        const tagName = el.tagName;\n        this._isOutside = !forcedDummyPosition\n            ? (outsideByDefault ||\n                  tagName === \"UL\" ||\n                  tagName === \"OL\" ||\n                  tagName === \"TABLE\") &&\n              !(tagName === \"LI\" || tagName === \"TD\" || tagName === \"TH\")\n            : forcedDummyPosition === Types.SysDummyInputsPositions.Outside;\n\n        this._firstDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: true,\n            },\n            element\n        );\n\n        this._lastDummy = new DummyInput(\n            this._getWindow,\n            this._isOutside,\n            {\n                isFirst: false,\n            },\n            element\n        );\n\n        // We will be checking dummy input parents to see if their child list have changed.\n        // So, it is enough to have just one of the inputs observed, because\n        // both dummy inputs always have the same parent.\n        const dummyElement = this._firstDummy.input;\n        dummyElement &&\n            tabster._dummyObserver.add(dummyElement, this._addDummyInputs);\n\n        this._firstDummy.onFocusIn = this._onFocusIn;\n        this._firstDummy.onFocusOut = this._onFocusOut;\n        this._lastDummy.onFocusIn = this._onFocusIn;\n        this._lastDummy.onFocusOut = this._onFocusOut;\n\n        this._element = element;\n        this._addDummyInputs();\n    }\n\n    dispose(manager: DummyInputManager, force?: boolean): void {\n        const wrappers = (this._wrappers = this._wrappers.filter(\n            (w) => w.manager !== manager && !force\n        ));\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, wrappers);\n        }\n\n        if (wrappers.length === 0) {\n            delete (this._element?.get() as HTMLElementWithDummyInputs)\n                .__tabsterDummy;\n\n            for (const el of this._transformElements) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n            this._transformElements.clear();\n\n            const win = this._getWindow();\n\n            if (this._addTimer) {\n                win.clearTimeout(this._addTimer);\n                delete this._addTimer;\n            }\n\n            const dummyElement = this._firstDummy?.input;\n            dummyElement && this._tabster._dummyObserver.remove(dummyElement);\n\n            this._firstDummy?.dispose();\n            this._lastDummy?.dispose();\n        }\n    }\n\n    private _onFocus(\n        isIn: boolean,\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void {\n        const wrapper = this._getCurrent();\n\n        if (\n            wrapper &&\n            (!dummyInput.useDefaultAction || this._callForDefaultAction)\n        ) {\n            wrapper.manager.getHandler(isIn)?.(\n                dummyInput,\n                isBackward,\n                relatedTarget\n            );\n        }\n    }\n\n    private _onFocusIn = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(true, dummyInput, isBackward, relatedTarget);\n    };\n\n    private _onFocusOut = (\n        dummyInput: DummyInput,\n        isBackward: boolean,\n        relatedTarget: HTMLElement | null\n    ): void => {\n        this._onFocus(false, dummyInput, isBackward, relatedTarget);\n    };\n\n    moveOut = (backwards: boolean): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    firstInput.tabIndex = 0;\n                    toFocus = firstInput;\n                } else {\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    /**\n     * Prepares to move focus out of the given element by focusing\n     * one of the dummy inputs and setting the `useDefaultAction` flag\n     * @param backwards focus moving to an element behind the given element\n     */\n    moveOutWithDefaultAction = (\n        backwards: boolean,\n        relatedEvent: KeyboardEvent\n    ): void => {\n        const first = this._firstDummy;\n        const last = this._lastDummy;\n\n        if (first && last) {\n            // For the sake of performance optimization, the dummy input\n            // position in the DOM updates asynchronously from the DOM change.\n            // Calling _ensurePosition() to make sure the position is correct.\n            this._ensurePosition();\n\n            const firstInput = first.input;\n            const lastInput = last.input;\n            const element = this._element?.get();\n\n            if (firstInput && lastInput && element) {\n                let toFocus: HTMLElement | undefined;\n\n                if (backwards) {\n                    if (\n                        !first.isOutside &&\n                        this._tabster.focusable.isFocusable(\n                            element,\n                            true,\n                            true,\n                            true\n                        )\n                    ) {\n                        toFocus = element;\n                    } else {\n                        first.useDefaultAction = true;\n                        firstInput.tabIndex = 0;\n                        toFocus = firstInput;\n                    }\n                } else {\n                    last.useDefaultAction = true;\n                    lastInput.tabIndex = 0;\n                    toFocus = lastInput;\n                }\n\n                if (\n                    toFocus &&\n                    dispatchMoveFocusEvent({\n                        by: \"root\",\n                        owner: element,\n                        next: null,\n                        relatedEvent,\n                    })\n                ) {\n                    nativeFocus(toFocus);\n                }\n            }\n        }\n    };\n\n    setTabbable = (manager: DummyInputManager, tabbable: boolean) => {\n        for (const w of this._wrappers) {\n            if (w.manager === manager) {\n                w.tabbable = tabbable;\n                break;\n            }\n        }\n\n        const wrapper = this._getCurrent();\n\n        if (wrapper) {\n            const tabIndex = wrapper.tabbable ? 0 : -1;\n\n            let input = this._firstDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n\n            input = this._lastDummy?.input;\n\n            if (input) {\n                input.tabIndex = tabIndex;\n            }\n        }\n\n        if (__DEV__) {\n            this._firstDummy &&\n                setDummyInputDebugValue(this._firstDummy, this._wrappers);\n            this._lastDummy &&\n                setDummyInputDebugValue(this._lastDummy, this._wrappers);\n        }\n    };\n\n    private _getCurrent(): DummyInputWrapper | undefined {\n        this._wrappers.sort((a, b) => {\n            if (a.tabbable !== b.tabbable) {\n                return a.tabbable ? -1 : 1;\n            }\n\n            return a.priority - b.priority;\n        });\n\n        return this._wrappers[0];\n    }\n\n    /**\n     * Adds dummy inputs as the first and last child of the given element\n     * Called each time the children under the element is mutated\n     */\n    private _addDummyInputs = () => {\n        if (this._addTimer) {\n            return;\n        }\n\n        this._addTimer = this._getWindow().setTimeout(() => {\n            delete this._addTimer;\n\n            this._ensurePosition();\n\n            if (__DEV__) {\n                this._firstDummy &&\n                    setDummyInputDebugValue(this._firstDummy, this._wrappers);\n                this._lastDummy &&\n                    setDummyInputDebugValue(this._lastDummy, this._wrappers);\n            }\n\n            this._addTransformOffsets();\n        }, 0);\n    };\n\n    private _ensurePosition(): void {\n        const element = this._element?.get();\n        const firstDummyInput = this._firstDummy?.input;\n        const lastDummyInput = this._lastDummy?.input;\n\n        if (!element || !firstDummyInput || !lastDummyInput) {\n            return;\n        }\n\n        if (this._isOutside) {\n            const elementParent = dom.getParentNode(element);\n\n            if (elementParent) {\n                const nextSibling = dom.getNextSibling(element);\n\n                if (nextSibling !== lastDummyInput) {\n                    dom.insertBefore(\n                        elementParent,\n                        lastDummyInput,\n                        nextSibling\n                    );\n                }\n\n                if (\n                    dom.getPreviousElementSibling(element) !== firstDummyInput\n                ) {\n                    dom.insertBefore(elementParent, firstDummyInput, element);\n                }\n            }\n        } else {\n            if (dom.getLastElementChild(element) !== lastDummyInput) {\n                dom.appendChild(element, lastDummyInput);\n            }\n\n            const firstElementChild = dom.getFirstElementChild(element);\n\n            if (\n                firstElementChild &&\n                firstElementChild !== firstDummyInput &&\n                firstElementChild.parentNode\n            ) {\n                dom.insertBefore(\n                    firstElementChild.parentNode,\n                    firstDummyInput,\n                    firstElementChild\n                );\n            }\n        }\n    }\n\n    private _addTransformOffsets = (): void => {\n        this._tabster._dummyObserver.updatePositions(\n            this._computeTransformOffsets\n        );\n    };\n\n    private _computeTransformOffsets = (\n        scrollTopLeftCache: Map<\n            HTMLElement,\n            { scrollTop: number; scrollLeft: number } | null\n        >\n    ): (() => void) => {\n        const from = this._firstDummy?.input || this._lastDummy?.input;\n        const transformElements = this._transformElements;\n        const newTransformElements: typeof transformElements = new Set();\n        let scrollTop = 0;\n        let scrollLeft = 0;\n\n        const win = this._getWindow();\n\n        for (\n            let element: HTMLElement | undefined | null = from;\n            element && element.nodeType === Node.ELEMENT_NODE;\n            element = dom.getParentElement(element)\n        ) {\n            let scrollTopLeft = scrollTopLeftCache.get(element);\n\n            // getComputedStyle() and element.scrollLeft/Top() cause style recalculation,\n            // so we cache the result across all elements in the current bulk.\n            if (scrollTopLeft === undefined) {\n                const transform = win.getComputedStyle(element).transform;\n\n                if (transform && transform !== \"none\") {\n                    scrollTopLeft = {\n                        scrollTop: element.scrollTop,\n                        scrollLeft: element.scrollLeft,\n                    };\n                }\n\n                scrollTopLeftCache.set(element, scrollTopLeft || null);\n            }\n\n            if (scrollTopLeft) {\n                newTransformElements.add(element);\n\n                if (!transformElements.has(element)) {\n                    element.addEventListener(\n                        \"scroll\",\n                        this._addTransformOffsets\n                    );\n                }\n\n                scrollTop += scrollTopLeft.scrollTop;\n                scrollLeft += scrollTopLeft.scrollLeft;\n            }\n        }\n\n        for (const el of transformElements) {\n            if (!newTransformElements.has(el)) {\n                el.removeEventListener(\"scroll\", this._addTransformOffsets);\n            }\n        }\n\n        this._transformElements = newTransformElements;\n\n        return () => {\n            this._firstDummy?.setTopLeft(scrollTop, scrollLeft);\n            this._lastDummy?.setTopLeft(scrollTop, scrollLeft);\n        };\n    };\n}\n\nexport function getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = dom.getLastElementChild(container);\n        i;\n        i = dom.getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport function getAdjacentElement(\n    from: HTMLElement,\n    prev?: boolean\n): HTMLElement | undefined {\n    let cur: HTMLElement | null = from;\n    let adjacent: HTMLElement | null = null;\n\n    while (cur && !adjacent) {\n        adjacent = (\n            prev\n                ? dom.getPreviousElementSibling(cur)\n                : dom.getNextElementSibling(cur)\n        ) as HTMLElement | null;\n        cur = dom.getParentElement(cur);\n    }\n\n    return adjacent || undefined;\n}\n\nexport function triggerEvent<D>(\n    target: HTMLElement | EventTarget,\n    name: string,\n    detail?: D\n): boolean {\n    const event = new CustomEvent(name, {\n        bubbles: true,\n        cancelable: true,\n        composed: true,\n        detail,\n    });\n\n    // For the sake of backward compatibility, we're adding `details` property.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    (event as any).details = detail;\n\n    target.dispatchEvent(event);\n\n    return !event.defaultPrevented;\n}\n\nexport function dispatchMoveFocusEvent(\n    details: Types.TabsterMoveFocusEventDetails\n): boolean {\n    return triggerEvent(details.owner, Types.MoveFocusEventName, details);\n}\n\nexport function dispatchMoverMoveFocusEvent(\n    target: HTMLElement,\n    key: Types.MoverKey\n) {\n    return triggerEvent(target, Types.MoverMoveFocusEventName, { key });\n}\n\nexport function dispatchGroupperMoveFocusEvent(\n    target: HTMLElement,\n    action: Types.GroupperMoveFocusAction\n) {\n    return triggerEvent(target, Types.GroupperMoveFocusEventName, { action });\n}\n\nexport function augmentAttribute(\n    tabster: Types.TabsterCore,\n    element: HTMLElement,\n    name: string,\n    value?: string | null // Restore original value when undefined.\n): boolean {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const entry = tabster.storageEntry(element, true)!;\n    let ret = false;\n\n    if (!entry.aug) {\n        if (value === undefined) {\n            return ret;\n        }\n\n        entry.aug = {};\n    }\n\n    if (value === undefined) {\n        if (name in entry.aug) {\n            const origVal = entry.aug[name];\n\n            delete entry.aug[name];\n\n            if (origVal === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, origVal);\n            }\n\n            ret = true;\n        }\n    } else {\n        let origValue: string | null | undefined;\n\n        if (!(name in entry.aug)) {\n            origValue = element.getAttribute(name);\n        }\n\n        if (origValue !== undefined && origValue !== value) {\n            entry.aug[name] = origValue;\n\n            if (value === null) {\n                element.removeAttribute(name);\n            } else {\n                element.setAttribute(name, value);\n            }\n\n            ret = true;\n        }\n    }\n\n    if (value === undefined && Object.keys(entry.aug).length === 0) {\n        delete entry.aug;\n        tabster.storageEntry(element, false);\n    }\n\n    return ret;\n}\n\nexport function getTabsterAttributeOnElement(\n    element: HTMLElement\n): Types.TabsterAttributeProps | null {\n    if (!element.hasAttribute(Types.TabsterAttributeName)) {\n        return null;\n    }\n\n    // We already checked the presence with `hasAttribute`\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const rawAttribute = element.getAttribute(Types.TabsterAttributeName)!;\n    let tabsterAttribute: Types.TabsterAttributeProps;\n    try {\n        tabsterAttribute = JSON.parse(rawAttribute);\n    } catch {\n        console.error(\"Tabster: failed to parse attribute\", rawAttribute);\n        tabsterAttribute = {};\n    }\n\n    return tabsterAttribute;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps\n): Types.TabsterDOMAttribute;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain: true\n): string;\nexport function getTabsterAttribute(\n    props: Types.TabsterAttributeProps,\n    plain?: true\n): Types.TabsterDOMAttribute | string {\n    const attr = JSON.stringify(props);\n\n    if (plain === true) {\n        return attr;\n    }\n\n    return {\n        [Types.TabsterAttributeName]: attr,\n    };\n}\n\n/**\n * Updates Tabster props object with new props.\n * @param element an element to set data-tabster attribute on.\n * @param props current Tabster props to update.\n * @param newProps new Tabster props to add.\n *  When the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function mergeTabsterProps(\n    props: Types.TabsterAttributeProps,\n    newProps: Types.TabsterAttributeProps\n): void {\n    for (const key of Object.keys(\n        newProps\n    ) as (keyof Types.TabsterAttributeProps)[]) {\n        const value = newProps[key];\n\n        if (value) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            props[key] = value as any;\n        } else {\n            delete props[key];\n        }\n    }\n}\n\n/**\n * Sets or updates Tabster attribute of the element.\n * @param element an element to set data-tabster attribute on.\n * @param newProps new Tabster props to set.\n * @param update if true, newProps will be merged with the existing props.\n *  When true and the value of a property in newProps is undefined, the property\n *  will be removed from the attribute.\n */\nexport function setTabsterAttribute(\n    element: HTMLElement,\n    newProps: Types.TabsterAttributeProps,\n    update?: boolean\n): void {\n    let props: Types.TabsterAttributeProps | undefined;\n\n    if (update) {\n        const attr = element.getAttribute(Types.TabsterAttributeName);\n\n        if (attr) {\n            try {\n                props = JSON.parse(attr);\n            } catch (e) {\n                if (__DEV__) {\n                    console.error(\n                        `data-tabster attribute error: ${e}`,\n                        element\n                    );\n                }\n            }\n        }\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    mergeTabsterProps(props, newProps);\n\n    if (Object.keys(props).length > 0) {\n        element.setAttribute(\n            Types.TabsterAttributeName,\n            getTabsterAttribute(props, true)\n        );\n    } else {\n        element.removeAttribute(Types.TabsterAttributeName);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { KEYBORG_FOCUSIN, KEYBORG_FOCUSOUT, nativeFocus } from \"keyborg\";\nimport { createEventTarget } from \"./EventTarget\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { setTabsterAttribute } from \"./AttributeHelpers\";\n\nexport interface WindowWithTabsterInstance extends Window {\n    __tabsterInstance?: Types.TabsterCore;\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    id?: string\n) {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-root\");\n            } else {\n                element.style.setProperty(\"--tabster-root\", id + \",\");\n            }\n        }\n    }\n}\n\nclass RootDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _setFocused: (focused: boolean) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: WeakHTMLElement,\n        setFocused: (focused: boolean) => void,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Root,\n            sys,\n            undefined,\n            true\n        );\n\n        this._setHandlers(this._onDummyInputFocus);\n\n        this._tabster = tabster;\n        this._setFocused = setFocused;\n    }\n\n    private _onDummyInputFocus = (dummyInput: DummyInput): void => {\n        if (dummyInput.useDefaultAction) {\n            // When we've reached the last focusable element, we want to let the browser\n            // to move the focus outside of the page. In order to do that we're synchronously\n            // calling focus() of the dummy input from the Tab key handler and allowing\n            // the default action to move the focus out.\n            this._setFocused(false);\n        } else {\n            // The only way a dummy input gets focused is during the keyboard navigation.\n            this._tabster.keyboardNavigation.setNavigatingWithKeyboard(true);\n\n            const element = this._element.get();\n\n            if (element) {\n                this._setFocused(true);\n\n                const toFocus =\n                    this._tabster.focusedElement.getFirstOrLastTabbable(\n                        dummyInput.isFirst,\n                        { container: element, ignoreAccessibility: true }\n                    );\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                    return;\n                }\n            }\n\n            dummyInput.input?.blur();\n        }\n    };\n}\n\nexport class Root\n    extends TabsterPart<Types.RootProps, undefined>\n    implements Types.Root\n{\n    readonly uid: string;\n\n    private _dummyManager?: RootDummyManager;\n    private _sys?: Types.SysProps;\n    private _isFocused = false;\n    private _setFocusedTimer: number | undefined;\n    private _onDispose: (root: Root) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (root: Root) => void,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._onDispose = onDispose;\n\n        const win = tabster.getWindow;\n        this.uid = getElementUId(win, element);\n\n        this._sys = sys;\n\n        if (tabster.controlTab || tabster.rootDummyInputs) {\n            this.addDummyInputs();\n        }\n\n        const w = win();\n        const doc = w.document;\n\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        this._add();\n    }\n\n    addDummyInputs(): void {\n        if (!this._dummyManager) {\n            this._dummyManager = new RootDummyManager(\n                this._tabster,\n                this._element,\n                this._setFocused,\n                this._sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const win = this._tabster.getWindow();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut);\n\n        if (this._setFocusedTimer) {\n            win.clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        this._dummyManager?.dispose();\n        this._remove();\n    }\n\n    moveOutWithDefaultAction(isBackward: boolean, relatedEvent: KeyboardEvent) {\n        const dummyManager = this._dummyManager;\n\n        if (dummyManager) {\n            dummyManager.moveOutWithDefaultAction(isBackward, relatedEvent);\n        } else {\n            const el = this.getElement();\n\n            if (el) {\n                RootDummyManager.moveWithPhantomDummy(\n                    this._tabster,\n                    el,\n                    true,\n                    isBackward,\n                    relatedEvent\n                );\n            }\n        }\n    }\n\n    private _setFocused = (hasFocused: boolean): void => {\n        if (this._setFocusedTimer) {\n            this._tabster.getWindow().clearTimeout(this._setFocusedTimer);\n            delete this._setFocusedTimer;\n        }\n\n        if (this._isFocused === hasFocused) {\n            return;\n        }\n\n        const element = this._element.get();\n\n        if (element) {\n            if (hasFocused) {\n                this._isFocused = true;\n                this._dummyManager?.setTabbable(false);\n\n                triggerEvent<Types.RootFocusEventDetails>(\n                    this._tabster.root.eventTarget,\n                    \"focus\",\n                    { element }\n                );\n            } else {\n                this._setFocusedTimer = this._tabster\n                    .getWindow()\n                    .setTimeout(() => {\n                        delete this._setFocusedTimer;\n\n                        this._isFocused = false;\n                        this._dummyManager?.setTabbable(true);\n\n                        triggerEvent<Types.RootFocusEventDetails>(\n                            this._tabster.root.eventTarget,\n                            \"blur\",\n                            { element }\n                        );\n                    }, 0);\n            }\n        }\n    };\n\n    private _onFocusIn = (event: FocusEvent) => {\n        const getParent = this._tabster.getParent;\n        const rootElement = this._element.get();\n        let curElement = event.composedPath()[0] as HTMLElement | null;\n\n        do {\n            if (curElement === rootElement) {\n                this._setFocused(true);\n                return;\n            }\n\n            curElement =\n                curElement && (getParent(curElement) as HTMLElement | null);\n        } while (curElement);\n    };\n\n    private _onFocusOut = () => {\n        this._setFocused(false);\n    };\n\n    private _add(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, false, this.uid);\n        }\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateRootProps(props: Types.RootProps): void {\n    // TODO: Implement validation.\n}\n\nexport class RootAPI implements Types.RootAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _autoRoot: Types.RootProps | undefined;\n    private _autoRootWaiting = false;\n    private _roots: Record<string, Types.Root> = {};\n    private _forceDummy = false;\n    rootById: { [id: string]: Types.Root } = {};\n    eventTarget: EventTarget;\n\n    constructor(tabster: Types.TabsterCore, autoRoot?: Types.RootProps) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._autoRoot = autoRoot;\n        this.eventTarget = createEventTarget(this._win);\n\n        tabster.queueInit(() => {\n            if (this._autoRoot) {\n                this._autoRootCreate();\n            }\n        });\n    }\n\n    private _autoRootCreate = (): Types.Root | undefined => {\n        const doc = this._win().document;\n        const body = doc.body;\n\n        if (body) {\n            this._autoRootUnwait(doc);\n\n            const props = this._autoRoot;\n\n            if (props) {\n                setTabsterAttribute(body, { root: props }, true);\n                updateTabsterByAttribute(this._tabster, body);\n                return getTabsterOnElement(this._tabster, body)?.root;\n            }\n        } else if (!this._autoRootWaiting) {\n            this._autoRootWaiting = true;\n            doc.addEventListener(\"readystatechange\", this._autoRootCreate);\n        }\n\n        return undefined;\n    };\n\n    private _autoRootUnwait(doc: Document): void {\n        doc.removeEventListener(\"readystatechange\", this._autoRootCreate);\n        this._autoRootWaiting = false;\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        this._autoRootUnwait(win.document);\n        delete this._autoRoot;\n\n        Object.keys(this._roots).forEach((rootId) => {\n            if (this._roots[rootId]) {\n                this._roots[rootId].dispose();\n                delete this._roots[rootId];\n            }\n        });\n\n        this.rootById = {};\n    }\n\n    createRoot(\n        element: HTMLElement,\n        props: Types.RootProps,\n        sys: Types.SysProps | undefined\n    ): Types.Root {\n        if (__DEV__) {\n            validateRootProps(props);\n        }\n\n        const newRoot = new Root(\n            this._tabster,\n            element,\n            this._onRootDispose,\n            props,\n            sys\n        ) as Types.Root;\n\n        this._roots[newRoot.id] = newRoot;\n\n        if (this._forceDummy) {\n            newRoot.addDummyInputs();\n        }\n\n        return newRoot;\n    }\n\n    addDummyInputs(): void {\n        this._forceDummy = true;\n\n        const roots = this._roots;\n\n        for (const id of Object.keys(roots)) {\n            roots[id].addDummyInputs();\n        }\n    }\n\n    static getRootByUId(\n        getWindow: Types.GetWindow,\n        id: string\n    ): Types.Root | undefined {\n        const tabster = (getWindow() as WindowWithTabsterInstance)\n            .__tabsterInstance;\n        return tabster && (tabster.root as RootAPI).rootById[id];\n    }\n\n    /**\n     * Fetches the tabster context for an element walking up its ancestors\n     *\n     * @param tabster Tabster instance\n     * @param element The element the tabster context should represent\n     * @param options Additional options\n     * @returns undefined if the element is not a child of a tabster root, otherwise all applicable tabster behaviours and configurations\n     */\n    static getTabsterContext(\n        tabster: Types.TabsterCore,\n        element: Node,\n        options: Types.GetTabsterContextOptions = {}\n    ): Types.TabsterContext | undefined {\n        if (!element.ownerDocument) {\n            return undefined;\n        }\n\n        const { checkRtl, referenceElement } = options;\n\n        const getParent = tabster.getParent;\n\n        // Normally, the initialization starts on the next tick after the tabster\n        // instance creation. However, if the application starts using it before\n        // the next tick, we need to make sure the initialization is done.\n        tabster.drainInitQueue();\n\n        let root: Types.Root | undefined;\n        let modalizer: Types.Modalizer | undefined;\n        let groupper: Types.Groupper | undefined;\n        let mover: Types.Mover | undefined;\n        let excludedFromMover = false;\n        let groupperBeforeMover: boolean | undefined;\n        let modalizerInGroupper: Types.Groupper | undefined;\n        let dirRightToLeft: boolean | undefined;\n        let uncontrolled: HTMLElement | null | undefined;\n        let curElement: Node | null = referenceElement || element;\n        const ignoreKeydown: Types.FocusableProps[\"ignoreKeydown\"] = {};\n\n        while (curElement && (!root || checkRtl)) {\n            const tabsterOnElement = getTabsterOnElement(\n                tabster,\n                curElement as HTMLElement\n            );\n\n            if (checkRtl && dirRightToLeft === undefined) {\n                const dir = (curElement as HTMLElement).dir;\n\n                if (dir) {\n                    dirRightToLeft = dir.toLowerCase() === \"rtl\";\n                }\n            }\n\n            if (!tabsterOnElement) {\n                curElement = getParent(curElement);\n                continue;\n            }\n\n            const tagName = (curElement as HTMLElement).tagName;\n\n            if (\n                tabsterOnElement.uncontrolled ||\n                tagName === \"IFRAME\" ||\n                tagName === \"WEBVIEW\"\n            ) {\n                uncontrolled = curElement as HTMLElement;\n            }\n\n            if (\n                !mover &&\n                tabsterOnElement.focusable?.excludeFromMover &&\n                !groupper\n            ) {\n                excludedFromMover = true;\n            }\n\n            const curModalizer = tabsterOnElement.modalizer;\n            const curGroupper = tabsterOnElement.groupper;\n            const curMover = tabsterOnElement.mover;\n\n            if (!modalizer && curModalizer) {\n                modalizer = curModalizer;\n            }\n\n            if (!groupper && curGroupper && (!modalizer || curModalizer)) {\n                if (modalizer) {\n                    // Modalizer dominates the groupper when they are on the same node and the groupper is active.\n                    if (\n                        !curGroupper.isActive() &&\n                        curGroupper.getProps().tabbability &&\n                        modalizer.userId !== tabster.modalizer?.activeId\n                    ) {\n                        modalizer = undefined;\n                        groupper = curGroupper;\n                    }\n\n                    modalizerInGroupper = curGroupper;\n                } else {\n                    groupper = curGroupper;\n                }\n            }\n\n            if (\n                !mover &&\n                curMover &&\n                (!modalizer || curModalizer) &&\n                (!curGroupper || curElement !== element)\n            ) {\n                mover = curMover;\n                groupperBeforeMover = !!groupper && groupper !== curGroupper;\n            }\n\n            if (tabsterOnElement.root) {\n                root = tabsterOnElement.root;\n            }\n\n            if (tabsterOnElement.focusable?.ignoreKeydown) {\n                Object.assign(\n                    ignoreKeydown,\n                    tabsterOnElement.focusable.ignoreKeydown\n                );\n            }\n\n            curElement = getParent(curElement);\n        }\n\n        // No root element could be found, try to get an auto root\n        if (!root) {\n            const rootAPI = tabster.root as RootAPI;\n            const autoRoot = rootAPI._autoRoot;\n\n            if (autoRoot) {\n                if (element.ownerDocument?.body) {\n                    root = rootAPI._autoRootCreate();\n                }\n            }\n        }\n\n        if (groupper && !mover) {\n            groupperBeforeMover = true;\n        }\n\n        if (__DEV__ && !root) {\n            if (modalizer || groupper || mover) {\n                console.error(\n                    \"Tabster Root is required for Mover, Groupper and Modalizer to work.\"\n                );\n            }\n        }\n\n        const shouldIgnoreKeydown = (event: KeyboardEvent) =>\n            !!ignoreKeydown[\n                event.key as keyof Types.FocusableProps[\"ignoreKeydown\"]\n            ];\n\n        return root\n            ? {\n                  root,\n                  modalizer,\n                  groupper,\n                  mover,\n                  groupperBeforeMover,\n                  modalizerInGroupper,\n                  rtl: checkRtl ? !!dirRightToLeft : undefined,\n                  uncontrolled,\n                  excludedFromMover,\n                  ignoreKeydown: shouldIgnoreKeydown,\n              }\n            : undefined;\n    }\n\n    static getRoot(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Root | undefined {\n        const getParent = tabster.getParent;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = getParent(el) as HTMLElement | null\n        ) {\n            const root = getTabsterOnElement(tabster, el)?.root;\n\n            if (root) {\n                return root;\n            }\n        }\n\n        return undefined;\n    }\n\n    onRoot(root: Types.Root, removed?: boolean): void {\n        if (removed) {\n            delete this.rootById[root.uid];\n        } else {\n            this.rootById[root.uid] = root;\n        }\n    }\n\n    private _onRootDispose = (root: Root) => {\n        delete this._roots[root.id];\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    TabsterPart,\n    triggerEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _containerHistoryLength = 10;\n\nexport abstract class DeloserItemBase<C> {\n    abstract resetFocus(): Promise<boolean>;\n    abstract belongsTo(deloser: C): boolean;\n}\n\nexport class DeloserItem extends DeloserItemBase<Types.Deloser> {\n    readonly uid: string;\n    private _tabster: Types.TabsterCore;\n    private _deloser: Types.Deloser;\n\n    constructor(tabster: Types.TabsterCore, deloser: Types.Deloser) {\n        super();\n        this.uid = deloser.uid;\n        this._tabster = tabster;\n        this._deloser = deloser;\n    }\n\n    belongsTo(deloser: Types.Deloser): boolean {\n        return deloser === this._deloser;\n    }\n\n    unshift(element: HTMLElement): void {\n        this._deloser.unshift(element);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const available = this._deloser.findAvailable();\n        return available\n            ? this._tabster.focusedElement.focus(available)\n            : false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const getWindow = this._tabster.getWindow;\n        return getPromise(getWindow).resolve(this._deloser.resetFocus());\n    }\n}\n\nexport abstract class DeloserHistoryByRootBase<\n    I,\n    D extends DeloserItemBase<I>\n> {\n    protected _tabster: Types.TabsterCore;\n    protected _history: D[] = [];\n    readonly rootUId: string;\n\n    constructor(tabster: Types.TabsterCore, rootUId: string) {\n        this._tabster = tabster;\n        this.rootUId = rootUId;\n    }\n\n    getLength(): number {\n        return this._history.length;\n    }\n\n    removeDeloser(deloser: I): void {\n        this._history = this._history.filter((c) => !c.belongsTo(deloser));\n    }\n\n    hasDeloser(deloser: I): boolean {\n        return this._history.some((d) => d.belongsTo(deloser));\n    }\n\n    abstract focusAvailable(from: I | null): Promise<boolean>;\n    abstract resetFocus(from: I | null): Promise<boolean>;\n}\n\nclass DeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    Types.Deloser,\n    DeloserItem\n> {\n    unshiftToDeloser(deloser: Types.Deloser, element: HTMLElement): void {\n        let item: DeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new DeloserItem(this._tabster, deloser);\n        }\n\n        item.unshift(element);\n\n        this._history.unshift(item);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await i.focusAvailable())) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n        const resetQueue: { [id: string]: DeloserItem } = {};\n\n        for (const i of this._history) {\n            if (from && i.belongsTo(from)) {\n                skip = false;\n            }\n\n            if (!skip && !resetQueue[i.uid]) {\n                resetQueue[i.uid] = i;\n            }\n        }\n\n        // Nothing is found, at least try to reset.\n        for (const id of Object.keys(resetQueue)) {\n            if (await resetQueue[id].resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nexport class DeloserHistory {\n    private _tabster: Types.TabsterCore;\n    // eslint-disable-next-line @typescript-eslint/ban-types\n    private _history: DeloserHistoryByRootBase<\n        unknown,\n        DeloserItemBase<unknown>\n    >[] = [];\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        this._history = [];\n    }\n\n    process(element: HTMLElement): Types.Deloser | undefined {\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n        const rootUId = ctx && ctx.root.uid;\n        const deloser = DeloserAPI.getDeloser(this._tabster, element);\n\n        if (!rootUId || !deloser) {\n            return undefined;\n        }\n\n        const historyByRoot = this.make(\n            rootUId,\n            () => new DeloserHistoryByRoot(this._tabster, rootUId)\n        );\n\n        if (!ctx || !ctx.modalizer || ctx.modalizer?.isActive()) {\n            historyByRoot.unshiftToDeloser(deloser, element);\n        }\n\n        return deloser;\n    }\n\n    make<\n        I,\n        D extends DeloserItemBase<I>,\n        C extends DeloserHistoryByRootBase<I, D>\n    >(rootUId: string, createInstance: () => C): C {\n        let historyByRoot: C | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            const hbr = this._history[i] as C;\n\n            if (hbr.rootUId === rootUId) {\n                historyByRoot = hbr;\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!historyByRoot) {\n            historyByRoot = createInstance();\n        }\n\n        this._history.unshift(historyByRoot);\n\n        this._history.splice(\n            _containerHistoryLength,\n            this._history.length - _containerHistoryLength\n        );\n\n        return historyByRoot;\n    }\n\n    removeDeloser(deloser: Types.Deloser): void {\n        this._history.forEach((i) => {\n            i.removeDeloser(deloser);\n        });\n\n        this._history = this._history.filter((i) => i.getLength() > 0);\n    }\n\n    async focusAvailable(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.focusAvailable(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(from: Types.Deloser | null): Promise<boolean> {\n        let skip = !!from;\n\n        for (const h of this._history) {\n            if (from && h.hasDeloser(from)) {\n                skip = false;\n            }\n\n            if (!skip && (await h.resetFocus(from))) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    isActive?: boolean,\n    snapshotIndex?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-deloser\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-deloser\",\n                    (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        (\"snapshot-\" + snapshotIndex)\n                );\n            }\n        }\n    }\n}\n\nfunction buildElementSelector(\n    element: HTMLElement,\n    withClass?: boolean,\n    withIndex?: boolean\n): string {\n    const selector: string[] = [];\n    const escapeRegExp = /(:|\\.|\\[|\\]|,|=|@)/g;\n    const escapeReplaceValue = \"\\\\$1\";\n\n    const elementId = element.getAttribute(\"id\");\n\n    if (elementId) {\n        selector.push(\n            \"#\" + elementId.replace(escapeRegExp, escapeReplaceValue)\n        );\n    }\n\n    if (withClass !== false && element.className) {\n        element.className.split(\" \").forEach((cls) => {\n            cls = cls.trim();\n\n            if (cls) {\n                selector.push(\n                    \".\" + cls.replace(escapeRegExp, escapeReplaceValue)\n                );\n            }\n        });\n    }\n\n    let index = 0;\n    let el: Element | null;\n\n    if (withIndex !== false && selector.length === 0) {\n        el = element;\n        while (el) {\n            index++;\n            el = el.previousElementSibling;\n        }\n        selector.unshift(\":nth-child(\" + index + \")\");\n    }\n\n    selector.unshift(element.tagName.toLowerCase());\n\n    return selector.join(\"\");\n}\n\nfunction buildSelector(element: HTMLElement): string | undefined {\n    if (!documentContains(element.ownerDocument, element)) {\n        return undefined;\n    }\n\n    const selector: string[] = [buildElementSelector(element)];\n\n    let node = dom.getParentNode(element);\n\n    while (node && node.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {\n        // Stop at the shadow root as cross shadow selectors won't work.\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const isBody = (node as HTMLElement).tagName === \"BODY\";\n\n            selector.unshift(\n                buildElementSelector(node as HTMLElement, false, !isBody)\n            );\n\n            if (isBody) {\n                break;\n            }\n        }\n\n        node = dom.getParentNode(node);\n    }\n\n    return selector.join(\" \");\n}\n\nexport class Deloser\n    extends TabsterPart<Types.DeloserProps>\n    implements Types.Deloser\n{\n    readonly uid: string;\n    private _isActive = false;\n    private _history: WeakHTMLElement<HTMLElement, string>[][] = [[]];\n    private _snapshotIndex = 0;\n    private _onDispose: (deloser: Deloser) => void;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (deloser: Deloser) => void,\n        props: Types.DeloserProps\n    ) {\n        super(tabster, element, props);\n\n        this.uid = getElementUId(tabster.getWindow, element);\n        this._onDispose = onDispose;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    dispose(): void {\n        this._remove();\n\n        this._onDispose(this);\n\n        this._isActive = false;\n        this._snapshotIndex = 0;\n\n        this._props = {};\n        this._history = [];\n    }\n\n    isActive = (): boolean => {\n        return this._isActive;\n    };\n\n    setActive(active: boolean): void {\n        this._isActive = active;\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    }\n\n    getActions(): Types.DeloserElementActions {\n        return {\n            focusDefault: this.focusDefault,\n            focusFirst: this.focusFirst,\n            resetFocus: this.resetFocus,\n            clearHistory: this.clearHistory,\n            setSnapshot: this.setSnapshot,\n            isActive: this.isActive,\n        };\n    }\n\n    setSnapshot = (index: number): void => {\n        this._snapshotIndex = index;\n\n        if (this._history.length > index + 1) {\n            this._history.splice(index + 1, this._history.length - index - 1);\n        }\n\n        if (!this._history[index]) {\n            this._history[index] = [];\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this._isActive,\n                this._snapshotIndex\n            );\n        }\n    };\n\n    focusFirst = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusFirst({ container: e });\n    };\n\n    unshift(element: HTMLElement): void {\n        let cur = this._history[this._snapshotIndex];\n\n        cur = this._history[this._snapshotIndex] = cur.filter((we) => {\n            const e = we.get();\n            return e && e !== element;\n        });\n\n        cur.unshift(\n            new WeakHTMLElement(\n                this._tabster.getWindow,\n                element,\n                buildSelector(element)\n            )\n        );\n\n        while (cur.length > _containerHistoryLength) {\n            cur.pop();\n        }\n    }\n\n    focusDefault = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.focusDefault(e);\n    };\n\n    resetFocus = (): boolean => {\n        const e = this._element.get();\n        return !!e && this._tabster.focusedElement.resetFocus(e);\n    };\n\n    findAvailable(): HTMLElement | null {\n        const element = this._element.get();\n\n        if (!element || !this._tabster.focusable.isVisible(element)) {\n            return null;\n        }\n\n        let restoreFocusOrder = this._props.restoreFocusOrder;\n        let available: HTMLElement | null = null;\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n        if (!ctx) {\n            return null;\n        }\n\n        const root = ctx.root;\n        const rootElement = root.getElement();\n\n        if (!rootElement) {\n            return null;\n        }\n\n        if (restoreFocusOrder === undefined) {\n            restoreFocusOrder = root.getProps().restoreFocusOrder;\n        }\n\n        if (restoreFocusOrder === Types.RestoreFocusOrders.RootDefault) {\n            available = this._tabster.focusable.findDefault({\n                container: rootElement,\n            });\n        }\n\n        if (\n            !available &&\n            restoreFocusOrder === Types.RestoreFocusOrders.RootFirst\n        ) {\n            available = this._findFirst(rootElement);\n        }\n\n        if (available) {\n            return available;\n        }\n\n        const availableInHistory = this._findInHistory();\n        const availableDefault = this._tabster.focusable.findDefault({\n            container: element,\n        });\n        const availableFirst = this._findFirst(element);\n\n        if (\n            availableInHistory &&\n            restoreFocusOrder === Types.RestoreFocusOrders.History\n        ) {\n            return availableInHistory;\n        }\n\n        if (\n            availableDefault &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserDefault\n        ) {\n            return availableDefault;\n        }\n\n        if (\n            availableFirst &&\n            restoreFocusOrder === Types.RestoreFocusOrders.DeloserFirst\n        ) {\n            return availableFirst;\n        }\n\n        return availableDefault || availableInHistory || availableFirst || null;\n    }\n\n    clearHistory = (preserveExisting?: boolean): void => {\n        const element = this._element.get();\n\n        if (!element) {\n            this._history[this._snapshotIndex] = [];\n\n            return;\n        }\n\n        this._history[this._snapshotIndex] = this._history[\n            this._snapshotIndex\n        ].filter((we) => {\n            const e = we.get();\n            return e && preserveExisting ? dom.nodeContains(element, e) : false;\n        });\n    };\n\n    customFocusLostHandler(element: HTMLElement): boolean {\n        return triggerEvent(element, Types.DeloserEventName, this.getActions());\n    }\n\n    private _findInHistory(): HTMLElement | null {\n        const cur = this._history[this._snapshotIndex].slice(0);\n\n        this.clearHistory(true);\n\n        for (let i = 0; i < cur.length; i++) {\n            const we = cur[i];\n            const e = we.get();\n            const element = this._element.get();\n\n            if (e && element && dom.nodeContains(element, e)) {\n                if (this._tabster.focusable.isFocusable(e)) {\n                    return e;\n                }\n            } else if (!this._props.noSelectorCheck) {\n                // Element is not in the DOM, try to locate the node by it's\n                // selector. This might return not exactly the right node,\n                // but it would be easily fixable by having more detailed selectors.\n                const selector = we.getData();\n\n                if (selector && element) {\n                    let els: Element[];\n\n                    try {\n                        els = dom.querySelectorAll(\n                            element.ownerDocument,\n                            selector\n                        );\n                    } catch (e) {\n                        if (__DEV__) {\n                            // This should never happen, unless there is some bug in buildElementSelector().\n                            console.error(\n                                `Failed to querySelectorAll('${selector}')`\n                            );\n                        }\n                        continue;\n                    }\n\n                    for (let i = 0; i < els.length; i++) {\n                        const el = els[i] as HTMLElement;\n\n                        if (el && this._tabster.focusable.isFocusable(el)) {\n                            return el;\n                        }\n                    }\n                }\n            }\n        }\n\n        return null;\n    }\n\n    private _findFirst(element: HTMLElement): HTMLElement | null {\n        if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            const first = this._tabster.focusable.findFirst({\n                container: element,\n                useActiveModalizer: true,\n            });\n\n            if (first) {\n                return first;\n            }\n        }\n\n        return null;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateDeloserProps(props: Types.DeloserProps): void {\n    // TODO: Implement validation.\n}\n\nexport class DeloserAPI implements Types.DeloserAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    /**\n     * Tracks if focus is inside a deloser\n     */\n    private _inDeloser = false;\n    private _curDeloser: Types.Deloser | undefined;\n    private _history: DeloserHistory;\n    private _restoreFocusTimer: number | undefined;\n    private _isRestoringFocus = false;\n    private _isPaused = false;\n    private _autoDeloser: Types.DeloserProps | undefined;\n    private _autoDeloserInstance: Deloser | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        props?: { autoDeloser: Types.DeloserProps }\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._history = new DeloserHistory(tabster);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n            const doc = this._win().document;\n\n            const activeElement = dom.getActiveElement(doc);\n\n            if (activeElement && activeElement !== doc.body) {\n                // Adding currently focused element to the deloser history.\n                this._onFocus(activeElement as HTMLElement);\n            }\n        });\n\n        const autoDeloser = props?.autoDeloser;\n        if (autoDeloser) {\n            this._autoDeloser = autoDeloser;\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._restoreFocusTimer) {\n            win.clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (this._autoDeloserInstance) {\n            this._autoDeloserInstance.dispose();\n            delete this._autoDeloserInstance;\n            delete this._autoDeloser;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._history.dispose();\n\n        delete this._curDeloser;\n    }\n\n    createDeloser(\n        element: HTMLElement,\n        props: Types.DeloserProps\n    ): Types.Deloser {\n        if (__DEV__) {\n            validateDeloserProps(props);\n        }\n\n        const deloser = new Deloser(\n            this._tabster,\n            element,\n            this._onDeloserDispose,\n            props\n        );\n\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            this._activate(deloser);\n        }\n\n        return deloser;\n    }\n\n    getActions(element: HTMLElement): Types.DeloserElementActions | undefined {\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (tabsterOnElement && tabsterOnElement.deloser) {\n                return tabsterOnElement.deloser.getActions();\n            }\n        }\n\n        return undefined;\n    }\n\n    pause(): void {\n        this._isPaused = true;\n\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n    }\n\n    resume(restore?: boolean): void {\n        this._isPaused = false;\n\n        if (restore) {\n            this._scheduleRestoreFocus();\n        }\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (this._restoreFocusTimer) {\n            this._win().clearTimeout(this._restoreFocusTimer);\n            this._restoreFocusTimer = undefined;\n        }\n\n        if (!e) {\n            this._scheduleRestoreFocus();\n\n            return;\n        }\n\n        const deloser = this._history.process(e);\n\n        if (deloser) {\n            this._activate(deloser);\n        } else {\n            this._deactivate();\n        }\n    };\n\n    /**\n     * Activates and sets the current deloser\n     */\n    private _activate(deloser: Types.Deloser) {\n        const curDeloser = this._curDeloser;\n        if (curDeloser !== deloser) {\n            this._inDeloser = true;\n            curDeloser?.setActive(false);\n            deloser.setActive(true);\n            this._curDeloser = deloser;\n        }\n    }\n\n    /**\n     * Called when focus should no longer be in a deloser\n     */\n    private _deactivate() {\n        this._inDeloser = false;\n        this._curDeloser?.setActive(false);\n        this._curDeloser = undefined;\n    }\n\n    private _scheduleRestoreFocus(force?: boolean): void {\n        if (this._isPaused || this._isRestoringFocus) {\n            return;\n        }\n\n        const restoreFocus = async () => {\n            this._restoreFocusTimer = undefined;\n            const lastFocused =\n                this._tabster.focusedElement.getLastFocusedElement();\n\n            if (\n                !force &&\n                (this._isRestoringFocus ||\n                    !this._inDeloser ||\n                    !!lastFocused?.offsetParent)\n            ) {\n                return;\n            }\n\n            const curDeloser = this._curDeloser;\n            if (curDeloser) {\n                if (\n                    lastFocused &&\n                    curDeloser.customFocusLostHandler(lastFocused)\n                ) {\n                    return;\n                }\n\n                const el = curDeloser.findAvailable();\n\n                if (el && this._tabster.focusedElement.focus(el)) {\n                    return;\n                }\n            }\n\n            this._deactivate();\n\n            this._isRestoringFocus = true;\n\n            if (!(await this._history.focusAvailable(null))) {\n                await this._history.resetFocus(null);\n            }\n\n            this._isRestoringFocus = false;\n        };\n\n        if (force) {\n            restoreFocus();\n        } else {\n            this._restoreFocusTimer = this._win().setTimeout(restoreFocus, 100);\n        }\n    }\n\n    static getDeloser(\n        tabster: Types.TabsterCore,\n        element: HTMLElement\n    ): Types.Deloser | undefined {\n        let root: Types.Root | undefined;\n\n        for (\n            let e: HTMLElement | null = element;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const tabsterOnElement = getTabsterOnElement(tabster, e);\n\n            if (tabsterOnElement) {\n                if (!root) {\n                    root = tabsterOnElement.root;\n                }\n\n                const deloser = tabsterOnElement.deloser;\n\n                if (deloser) {\n                    return deloser;\n                }\n            }\n        }\n\n        const deloserAPI = tabster.deloser && (tabster.deloser as DeloserAPI);\n\n        if (deloserAPI) {\n            if (deloserAPI._autoDeloserInstance) {\n                return deloserAPI._autoDeloserInstance;\n            }\n\n            const autoDeloserProps = deloserAPI._autoDeloser;\n\n            if (root && !deloserAPI._autoDeloserInstance && autoDeloserProps) {\n                const body = element.ownerDocument?.body;\n\n                if (body) {\n                    deloserAPI._autoDeloserInstance = new Deloser(\n                        tabster,\n                        body,\n                        (tabster.deloser as DeloserAPI)._onDeloserDispose,\n                        autoDeloserProps\n                    );\n                }\n            }\n\n            return deloserAPI._autoDeloserInstance;\n        }\n\n        return undefined;\n    }\n\n    private _onDeloserDispose = (deloser: Deloser) => {\n        this._history.removeDeloser(deloser);\n\n        if (deloser.isActive()) {\n            this._scheduleRestoreFocus();\n        }\n    };\n\n    static getHistory(instance: Types.DeloserAPI): DeloserHistory {\n        return (instance as DeloserAPI)._history;\n    }\n\n    static forceRestoreFocus(instance: Types.DeloserAPI): void {\n        (instance as DeloserAPI)._scheduleRestoreFocus(true);\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"../Types\";\n\nexport abstract class Subscribable<A, B = undefined>\n    implements Types.Subscribable<A, B>\n{\n    protected _val: A | undefined;\n    private _callbacks: Types.SubscribableCallback<A, B>[] = [];\n\n    dispose(): void {\n        this._callbacks = [];\n        delete this._val;\n    }\n\n    subscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index < 0) {\n            callbacks.push(callback);\n        }\n    }\n\n    subscribeFirst(callback: Types.SubscribableCallback<A, B>): void {\n        const callbacks = this._callbacks;\n        const index = callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            callbacks.splice(index, 1);\n        }\n\n        callbacks.unshift(callback);\n    }\n\n    unsubscribe(callback: Types.SubscribableCallback<A, B>): void {\n        const index = this._callbacks.indexOf(callback);\n\n        if (index >= 0) {\n            this._callbacks.splice(index, 1);\n        }\n    }\n\n    protected setVal(val: A, details: B): void {\n        if (this._val === val) {\n            return;\n        }\n\n        this._val = val;\n\n        this._callCallbacks(val, details);\n    }\n\n    protected getVal(): A | undefined {\n        return this._val;\n    }\n\n    protected trigger(val: A, details: B): void {\n        this._callCallbacks(val, details);\n    }\n\n    private _callCallbacks(val: A, details: B): void {\n        this._callbacks.forEach((callback) => callback(val, details));\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    DeloserAPI,\n    DeloserHistoryByRootBase,\n    DeloserItemBase,\n} from \"./Deloser\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { Subscribable } from \"./State/Subscribable\";\nimport * as Types from \"./Types\";\nimport {\n    getElementUId,\n    getInstanceContext,\n    getPromise,\n    getUId,\n    getWindowUId,\n    HTMLElementWithUID,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _transactionTimeout = 1500;\nconst _pingTimeout = 3000;\n\nconst _targetIdUp = \"up\";\n\nconst CrossOriginTransactionTypes: Types.CrossOriginTransactionTypes = {\n    Bootstrap: 1,\n    FocusElement: 2,\n    State: 3,\n    GetElement: 4,\n    RestoreFocusInDeloser: 5,\n    Ping: 6,\n};\n\ninterface CrossOriginInstanceContext {\n    ignoreKeyboardNavigationStateUpdate: boolean;\n    focusOwner?: string;\n    focusOwnerTimestamp?: number;\n    deloserByUId: { [uid: string]: Types.Deloser };\n    origOutlineSetup?: (props?: Partial<Types.OutlineProps>) => void;\n}\n\ninterface KnownTargets {\n    [id: string]: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        send: (payload: Types.CrossOriginTransactionData<any, any>) => void;\n        last?: number;\n    };\n}\n\nclass CrossOriginDeloserItem extends DeloserItemBase<CrossOriginDeloser> {\n    private _deloser: CrossOriginDeloser;\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        deloser: CrossOriginDeloser,\n        trasactions: CrossOriginTransactions\n    ) {\n        super();\n        this._deloser = deloser;\n        this._transactions = trasactions;\n    }\n\n    belongsTo(deloser: CrossOriginDeloser): boolean {\n        return deloser.deloserUId === this._deloser.deloserUId;\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: false,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n\n    async resetFocus(): Promise<boolean> {\n        const data: RestoreFocusInDeloserTransactionData = {\n            ...this._deloser,\n            reset: true,\n        };\n\n        return this._transactions\n            .beginTransaction(RestoreFocusInDeloserTransaction, data)\n            .then((value) => !!value);\n    }\n}\n\nclass CrossOriginDeloserHistoryByRoot extends DeloserHistoryByRootBase<\n    CrossOriginDeloser,\n    CrossOriginDeloserItem\n> {\n    private _transactions: CrossOriginTransactions;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        rootUId: string,\n        transactions: CrossOriginTransactions\n    ) {\n        super(tabster, rootUId);\n        this._transactions = transactions;\n    }\n\n    unshift(deloser: CrossOriginDeloser): void {\n        let item: CrossOriginDeloserItem | undefined;\n\n        for (let i = 0; i < this._history.length; i++) {\n            if (this._history[i].belongsTo(deloser)) {\n                item = this._history[i];\n                this._history.splice(i, 1);\n                break;\n            }\n        }\n\n        if (!item) {\n            item = new CrossOriginDeloserItem(\n                this._tabster,\n                deloser,\n                this._transactions\n            );\n        }\n\n        this._history.unshift(item);\n\n        this._history.splice(10, this._history.length - 10);\n    }\n\n    async focusAvailable(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.focusAvailable()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    async resetFocus(): Promise<boolean> {\n        for (const i of this._history) {\n            if (await i.resetFocus()) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n\nabstract class CrossOriginTransaction<I, O> {\n    abstract type: Types.CrossOriginTransactionType;\n    readonly id: string;\n    readonly beginData: I;\n    readonly timeout?: number;\n    protected tabster: Types.TabsterCore;\n    protected endData: O | undefined;\n    protected owner: Types.GetWindow;\n    protected ownerId: string;\n    protected sendUp: Types.CrossOriginTransactionSend | undefined;\n    private _promise: Promise<O>;\n    protected _resolve: ((endData?: O | PromiseLike<O>) => void) | undefined;\n    private _reject: ((reason: string) => void) | undefined;\n    private _knownTargets: KnownTargets;\n    private _sentTo: Types.CrossOriginSentTo;\n    protected targetId: string | undefined;\n    private _inProgress: { [id: string]: boolean } = {};\n    private _isDone = false;\n    private _isSelfResponding = false;\n    private _sentCount = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ) {\n        this.tabster = tabster;\n        this.owner = getOwner;\n        this.ownerId = getWindowUId(getOwner());\n        this.id = getUId(getOwner());\n        this.beginData = value;\n        this._knownTargets = knownTargets;\n        this._sentTo = sentTo || { [this.ownerId]: true };\n        this.targetId = targetId;\n        this.sendUp = sendUp;\n        this.timeout = timeout;\n        this._promise = new (getPromise(getOwner))<O>((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n    }\n\n    protected getTargets(knownTargets: KnownTargets): KnownTargets | null {\n        return this.targetId === _targetIdUp\n            ? this.sendUp\n                ? { [_targetIdUp]: { send: this.sendUp } }\n                : null\n            : this.targetId\n            ? knownTargets[this.targetId]\n                ? {\n                      [this.targetId]: {\n                          send: knownTargets[this.targetId].send,\n                      },\n                  }\n                : null\n            : Object.keys(knownTargets).length === 0 && this.sendUp\n            ? { [_targetIdUp]: { send: this.sendUp } }\n            : Object.keys(knownTargets).length > 0\n            ? knownTargets\n            : null;\n    }\n\n    begin(\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>\n    ): Promise<O | undefined> {\n        const targets = this.getTargets(this._knownTargets);\n        const sentTo: Types.CrossOriginSentTo = { ...this._sentTo };\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                sentTo[id] = true;\n            }\n        }\n\n        const data: Types.CrossOriginTransactionData<I, O> = {\n            transaction: this.id,\n            type: this.type,\n            isResponse: false,\n            timestamp: Date.now(),\n            owner: this.ownerId,\n            sentto: sentTo,\n            timeout: this.timeout,\n            beginData: this.beginData,\n        };\n\n        if (this.targetId) {\n            data.target = this.targetId;\n        }\n\n        if (selfResponse) {\n            this._isSelfResponding = true;\n\n            selfResponse(data).then((value) => {\n                this._isSelfResponding = false;\n\n                if (value !== undefined) {\n                    if (!this.endData) {\n                        this.endData = value;\n                    }\n                }\n\n                if (this.endData || this._sentCount === 0) {\n                    this.end();\n                }\n            });\n        }\n\n        if (targets) {\n            for (const id of Object.keys(targets)) {\n                if (!(id in this._sentTo)) {\n                    this._send(targets[id].send, id, data);\n                }\n            }\n        }\n\n        if (this._sentCount === 0 && !this._isSelfResponding) {\n            this.end();\n        }\n\n        return this._promise;\n    }\n\n    private _send(\n        send: (data: Types.CrossOriginTransactionData<I, O>) => void,\n        targetId: string,\n        data: Types.CrossOriginTransactionData<I, O>\n    ) {\n        if (this._inProgress[targetId] === undefined) {\n            this._inProgress[targetId] = true;\n            this._sentCount++;\n            send(data);\n        }\n    }\n\n    end(error?: string): void {\n        if (this._isDone) {\n            return;\n        }\n\n        this._isDone = true;\n\n        if (this.endData === undefined && error) {\n            if (this._reject) {\n                this._reject(error);\n            }\n        } else if (this._resolve) {\n            this._resolve(this.endData);\n        }\n    }\n\n    onResponse(data: Types.CrossOriginTransactionData<I, O>): void {\n        const endData = data.endData;\n\n        if (endData !== undefined && !this.endData) {\n            this.endData = endData;\n        }\n\n        const inProgressId =\n            data.target === _targetIdUp ? _targetIdUp : data.owner;\n\n        if (this._inProgress[inProgressId]) {\n            this._inProgress[inProgressId] = false;\n            this._sentCount--;\n\n            if (\n                this.endData ||\n                (this._sentCount === 0 && !this._isSelfResponding)\n            ) {\n                this.end();\n            }\n        }\n    }\n}\n\ninterface CrossOriginTransactionClass<I, O> {\n    new (\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        knownTargets: KnownTargets,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        sendUp?: Types.CrossOriginTransactionSend\n    ): CrossOriginTransaction<I, O>;\n    shouldForward?(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n    makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<I, O>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<O | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<O>;\n    shouldSelfRespond?(\n        tabster: Types.TabsterCore,\n        data: I,\n        getOwner: Types.GetWindow,\n        ownerId: string\n    ): boolean;\n}\n\ninterface BootstrapTransactionContents {\n    isNavigatingWithKeyboard: boolean;\n}\n\nclass BootstrapTransaction extends CrossOriginTransaction<\n    undefined,\n    BootstrapTransactionContents\n> {\n    type = CrossOriginTransactionTypes.Bootstrap;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore\n    ): Promise<BootstrapTransactionContents> {\n        return {\n            isNavigatingWithKeyboard:\n                tabster.keyboardNavigation.isNavigatingWithKeyboard(),\n        };\n    }\n}\n\ninterface CrossOriginElementDataIn {\n    uid?: string;\n    id?: string;\n    rootId?: string;\n    ownerId?: string;\n    observedName?: string;\n    /**\n     * Optionally wait if the element is accessible or focusable before returning it\n     */\n    accessibility?: Types.ObservedElementAccesibility;\n}\n\ninterface FocusElementData extends CrossOriginElementDataIn {\n    noFocusedProgrammaticallyFlag?: boolean;\n    noAccessibleCheck?: boolean;\n}\n\nclass FocusElementTransaction extends CrossOriginTransaction<\n    FocusElementData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.FocusElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static shouldForward(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow\n    ): boolean {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return !el || !tabster.focusable.isFocusable(el);\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<FocusElementData, boolean>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const el = GetElementTransaction.findElement(\n            tabster,\n            getOwner,\n            data.beginData\n        );\n        return (\n            (!!el && tabster.focusedElement.focus(el, true)) ||\n            !!(await forwardResult)\n        );\n    }\n}\n\nconst CrossOriginStates: {\n    Focused: 1;\n    Blurred: 2;\n    Observed: 3;\n    DeadWindow: 4;\n    KeyboardNavigation: 5;\n    Outline: 6;\n} = {\n    Focused: 1,\n    Blurred: 2,\n    Observed: 3,\n    DeadWindow: 4,\n    KeyboardNavigation: 5,\n    Outline: 6,\n};\ntype CrossOriginState =\n    typeof CrossOriginStates[keyof typeof CrossOriginStates];\n\ninterface CrossOriginElementDataOut {\n    ownerUId: string;\n    uid?: string;\n    id?: string;\n    rootUId?: string;\n    deloserUId?: string;\n    observedName?: string;\n    observedDetails?: string;\n}\n\ninterface CrossOriginStateData extends CrossOriginElementDataOut {\n    state: CrossOriginState;\n    isFocusedProgrammatically?: boolean;\n    force?: boolean;\n    isNavigatingWithKeyboard?: boolean;\n    outline?: Partial<Types.OutlineProps>;\n}\n\nclass StateTransaction extends CrossOriginTransaction<\n    CrossOriginStateData,\n    true\n> {\n    type = CrossOriginTransactionTypes.State;\n\n    static shouldSelfRespond(\n        tabster: Types.TabsterCore,\n        data: CrossOriginStateData\n    ): boolean {\n        return (\n            data.state !== CrossOriginStates.DeadWindow &&\n            data.state !== CrossOriginStates.KeyboardNavigation\n        );\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<CrossOriginStateData, true>,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const timestamp = data.timestamp;\n        const beginData = data.beginData;\n\n        if (timestamp && beginData) {\n            switch (beginData.state) {\n                case CrossOriginStates.Focused:\n                    return StateTransaction._makeFocusedResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions,\n                        isSelfResponse\n                    );\n                case CrossOriginStates.Blurred:\n                    return StateTransaction._makeBlurredResponse(\n                        tabster,\n                        timestamp,\n                        beginData,\n                        transactions.ctx\n                    );\n                case CrossOriginStates.Observed:\n                    return StateTransaction._makeObservedResponse(\n                        tabster,\n                        beginData\n                    );\n                case CrossOriginStates.DeadWindow:\n                    return StateTransaction._makeDeadWindowResponse(\n                        tabster,\n                        beginData,\n                        transactions,\n                        forwardResult\n                    );\n                case CrossOriginStates.KeyboardNavigation:\n                    return StateTransaction._makeKeyboardNavigationResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.isNavigatingWithKeyboard\n                    );\n                case CrossOriginStates.Outline:\n                    return StateTransaction._makeOutlineResponse(\n                        tabster,\n                        transactions.ctx,\n                        beginData.outline\n                    );\n            }\n        }\n\n        return true;\n    }\n\n    static createElement(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginElementDataOut\n    ): CrossOriginElement | null {\n        return beginData.uid\n            ? new CrossOriginElement(\n                  tabster,\n                  beginData.uid,\n                  beginData.ownerUId,\n                  beginData.id,\n                  beginData.rootUId,\n                  beginData.observedName,\n                  beginData.observedDetails\n              )\n            : null;\n    }\n\n    private static async _makeFocusedResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        isSelfResponse?: boolean\n    ): Promise<true> {\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (beginData && beginData.ownerUId && element) {\n            transactions.ctx.focusOwner = beginData.ownerUId;\n            transactions.ctx.focusOwnerTimestamp = timestamp;\n\n            if (!isSelfResponse && beginData.rootUId && beginData.deloserUId) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    const history = DeloserAPI.getHistory(deloserAPI);\n\n                    const deloser: CrossOriginDeloser = {\n                        ownerUId: beginData.ownerUId,\n                        deloserUId: beginData.deloserUId,\n                        rootUId: beginData.rootUId,\n                    };\n\n                    const historyItem = history.make(\n                        beginData.rootUId,\n                        () =>\n                            new CrossOriginDeloserHistoryByRoot(\n                                tabster,\n                                deloser.rootUId,\n                                transactions\n                            )\n                    );\n\n                    historyItem.unshift(deloser);\n                }\n            }\n\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                element,\n                {\n                    isFocusedProgrammatically:\n                        beginData.isFocusedProgrammatically,\n                }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeBlurredResponse(\n        tabster: Types.TabsterCore,\n        timestamp: number,\n        beginData: CrossOriginStateData,\n        context: CrossOriginInstanceContext\n    ): Promise<true> {\n        if (\n            beginData &&\n            (beginData.ownerUId === context.focusOwner || beginData.force) &&\n            (!context.focusOwnerTimestamp ||\n                context.focusOwnerTimestamp < timestamp)\n        ) {\n            CrossOriginFocusedElementState.setVal(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.focusedElement,\n                undefined,\n                {}\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeObservedResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData\n    ): Promise<true> {\n        const name = beginData.observedName;\n        const element = StateTransaction.createElement(tabster, beginData);\n\n        if (name && element) {\n            CrossOriginObservedElementState.trigger(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.crossOrigin!.observedElement,\n                element,\n                { names: [name], details: beginData.observedDetails }\n            );\n        }\n\n        return true;\n    }\n\n    private static async _makeDeadWindowResponse(\n        tabster: Types.TabsterCore,\n        beginData: CrossOriginStateData,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<true | undefined>\n    ): Promise<true> {\n        const deadUId = beginData && beginData.ownerUId;\n\n        if (deadUId) {\n            transactions.removeTarget(deadUId);\n        }\n\n        return forwardResult.then(() => {\n            if (deadUId === transactions.ctx.focusOwner) {\n                const deloserAPI = tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n            return true;\n        });\n    }\n\n    private static async _makeKeyboardNavigationResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        isNavigatingWithKeyboard?: boolean\n    ): Promise<true> {\n        if (\n            isNavigatingWithKeyboard !== undefined &&\n            tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                isNavigatingWithKeyboard\n        ) {\n            context.ignoreKeyboardNavigationStateUpdate = true;\n            tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                isNavigatingWithKeyboard\n            );\n            context.ignoreKeyboardNavigationStateUpdate = false;\n        }\n        return true;\n    }\n\n    private static async _makeOutlineResponse(\n        tabster: Types.TabsterCore,\n        context: CrossOriginInstanceContext,\n        props?: Partial<Types.OutlineProps>\n    ): Promise<true> {\n        if (context.origOutlineSetup) {\n            context.origOutlineSetup.call(\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                tabster.outline!,\n                props\n            );\n        }\n        return true;\n    }\n}\n\nclass GetElementTransaction extends CrossOriginTransaction<\n    CrossOriginElementDataIn | undefined,\n    CrossOriginElementDataOut\n> {\n    type = CrossOriginTransactionTypes.GetElement;\n\n    static shouldSelfRespond() {\n        return true;\n    }\n\n    static findElement(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        data?: CrossOriginElementDataIn\n    ): HTMLElement | null {\n        let element: HTMLElement | null | undefined;\n\n        if (\n            data &&\n            (!data.ownerId || data.ownerId === getWindowUId(getOwner()))\n        ) {\n            if (data.id) {\n                element = dom.getElementById(getOwner().document, data.id);\n\n                if (element && data.rootId) {\n                    const ctx = RootAPI.getTabsterContext(tabster, element);\n\n                    if (!ctx || ctx.root.uid !== data.rootId) {\n                        return null;\n                    }\n                }\n            } else if (data.uid) {\n                const ref = getInstanceContext(getOwner).elementByUId[data.uid];\n                element = ref && ref.get();\n            } else if (data.observedName) {\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                element = tabster.observedElement!.getElement(\n                    data.observedName,\n                    data.accessibility\n                );\n            }\n        }\n\n        return element || null;\n    }\n\n    static getElementData(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext,\n        ownerUId: string\n    ): CrossOriginElementDataOut {\n        const deloser = DeloserAPI.getDeloser(tabster, element);\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const tabsterOnElement = getTabsterOnElement(tabster, element);\n        const observed = tabsterOnElement && tabsterOnElement.observed;\n\n        return {\n            uid: getElementUId(getOwner, element),\n            ownerUId,\n            id: element.id || undefined,\n            rootUId: ctx ? ctx.root.uid : undefined,\n            deloserUId: deloser\n                ? getDeloserUID(getOwner, context, deloser)\n                : undefined,\n            observedName: observed && observed.names && observed.names[0],\n            observedDetails: observed && observed.details,\n        };\n    }\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            CrossOriginElementDataIn | undefined,\n            CrossOriginElementDataOut\n        >,\n        getOwner: Types.GetWindow,\n        ownerUId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<CrossOriginElementDataOut | undefined>\n    ): Promise<CrossOriginElementDataOut | undefined> {\n        const beginData = data.beginData;\n        let element: HTMLElement | undefined;\n        let dataOut: CrossOriginElementDataOut | undefined;\n\n        if (beginData === undefined) {\n            element = tabster.focusedElement.getFocusedElement();\n        } else if (beginData) {\n            element =\n                GetElementTransaction.findElement(\n                    tabster,\n                    getOwner,\n                    beginData\n                ) || undefined;\n        }\n\n        if (!element && beginData) {\n            const name = beginData.observedName;\n            const timeout = data.timeout;\n            const accessibility = beginData.accessibility;\n\n            if (name && timeout) {\n                const e: {\n                    element?: HTMLElement | null;\n                    crossOrigin?: CrossOriginElementDataOut;\n                } = await new (getPromise(getOwner))((resolve) => {\n                    let isWaitElementResolved = false;\n                    let isForwardResolved = false;\n                    let isResolved = false;\n\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    tabster\n                        .observedElement!.waitElement(\n                            name,\n                            timeout,\n                            accessibility\n                        )\n                        .result.then((value) => {\n                            isWaitElementResolved = true;\n\n                            if (!isResolved && (value || isForwardResolved)) {\n                                isResolved = true;\n                                resolve({ element: value });\n                            }\n                        });\n\n                    forwardResult.then((value) => {\n                        isForwardResolved = true;\n\n                        if (!isResolved && (value || isWaitElementResolved)) {\n                            isResolved = true;\n                            resolve({ crossOrigin: value });\n                        }\n                    });\n                });\n\n                if (e.element) {\n                    element = e.element;\n                } else if (e.crossOrigin) {\n                    dataOut = e.crossOrigin;\n                }\n            }\n        }\n\n        return element\n            ? GetElementTransaction.getElementData(\n                  tabster,\n                  element,\n                  getOwner,\n                  transactions.ctx,\n                  ownerUId\n              )\n            : dataOut;\n    }\n}\n\ninterface CrossOriginDeloser {\n    ownerUId: string;\n    deloserUId: string;\n    rootUId: string;\n}\n\ninterface RestoreFocusInDeloserTransactionData extends CrossOriginDeloser {\n    reset: boolean;\n}\n\nclass RestoreFocusInDeloserTransaction extends CrossOriginTransaction<\n    RestoreFocusInDeloserTransactionData,\n    boolean\n> {\n    type = CrossOriginTransactionTypes.RestoreFocusInDeloser;\n\n    static async makeResponse(\n        tabster: Types.TabsterCore,\n        data: Types.CrossOriginTransactionData<\n            RestoreFocusInDeloserTransactionData,\n            boolean\n        >,\n        getOwner: Types.GetWindow,\n        ownerId: string,\n        transactions: CrossOriginTransactions,\n        forwardResult: Promise<boolean | undefined>\n    ): Promise<boolean> {\n        const forwardRet = await forwardResult;\n        const begin = !forwardRet && data.beginData;\n        const uid = begin && begin.deloserUId;\n        const deloser = uid && transactions.ctx.deloserByUId[uid];\n        const deloserAPI = tabster.deloser;\n\n        if (begin && deloser && deloserAPI) {\n            const history = DeloserAPI.getHistory(deloserAPI);\n            return begin.reset\n                ? history.resetFocus(deloser)\n                : history.focusAvailable(deloser);\n        }\n\n        return !!forwardRet;\n    }\n}\n\nclass PingTransaction extends CrossOriginTransaction<undefined, true> {\n    type = CrossOriginTransactionTypes.Ping;\n\n    static shouldForward() {\n        return false;\n    }\n\n    static async makeResponse(): Promise<true> {\n        return true;\n    }\n}\n\ninterface CrossOriginTransactionWrapper<I, O> {\n    transaction: CrossOriginTransaction<I, O>;\n    timer?: number;\n}\n\nclass CrossOriginTransactions {\n    private _owner: Types.GetWindow;\n    private _ownerUId: string;\n    private _knownTargets: KnownTargets = {};\n    private _transactions: {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        [id: string]: CrossOriginTransactionWrapper<any, any>;\n    } = {};\n    private _tabster: Types.TabsterCore;\n    private _pingTimer: number | undefined;\n    private _isDefaultSendUp = false;\n    private _deadPromise: Promise<true | undefined> | undefined;\n    isSetUp = false;\n    sendUp: Types.CrossOriginTransactionSend | undefined;\n    ctx: CrossOriginInstanceContext;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        getOwner: Types.GetWindow,\n        context: CrossOriginInstanceContext\n    ) {\n        this._tabster = tabster;\n        this._owner = getOwner;\n        this._ownerUId = getWindowUId(getOwner());\n        this.ctx = context;\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp) {\n            if (__DEV__) {\n                console.error(\"CrossOrigin is already set up.\");\n            }\n        } else {\n            this.isSetUp = true;\n\n            this.setSendUp(sendUp);\n\n            this._owner().addEventListener(\"pagehide\", this._onPageHide);\n\n            this._ping();\n        }\n\n        return this._onMessage;\n    }\n\n    setSendUp(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (!this.isSetUp) {\n            throw new Error(\"CrossOrigin is not set up.\");\n        }\n\n        this.sendUp = sendUp || undefined;\n\n        const owner = this._owner();\n\n        if (sendUp === undefined) {\n            if (!this._isDefaultSendUp) {\n                if (owner.document) {\n                    this._isDefaultSendUp = true;\n\n                    if (\n                        owner.parent &&\n                        owner.parent !== owner &&\n                        owner.parent.postMessage\n                    ) {\n                        this.sendUp = (\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            data: Types.CrossOriginTransactionData<any, any>\n                        ) => {\n                            owner.parent.postMessage(JSON.stringify(data), \"*\");\n                        };\n                    }\n\n                    owner.addEventListener(\"message\", this._onBrowserMessage);\n                }\n            }\n        } else if (this._isDefaultSendUp) {\n            owner.removeEventListener(\"message\", this._onBrowserMessage);\n            this._isDefaultSendUp = false;\n        }\n\n        return this._onMessage;\n    }\n\n    async dispose(): Promise<void> {\n        const owner = this._owner();\n\n        if (this._pingTimer) {\n            owner.clearTimeout(this._pingTimer);\n            this._pingTimer = undefined;\n        }\n\n        owner.removeEventListener(\"message\", this._onBrowserMessage);\n        owner.removeEventListener(\"pagehide\", this._onPageHide);\n\n        await this._dead();\n\n        delete this._deadPromise;\n\n        for (const id of Object.keys(this._transactions)) {\n            const t = this._transactions[id];\n\n            if (t.timer) {\n                owner.clearTimeout(t.timer);\n                delete t.timer;\n            }\n\n            t.transaction.end();\n        }\n\n        this._knownTargets = {};\n\n        delete this.sendUp;\n    }\n\n    beginTransaction<I, O>(\n        Transaction: CrossOriginTransactionClass<I, O>,\n        value: I,\n        timeout?: number,\n        sentTo?: Types.CrossOriginSentTo,\n        targetId?: string,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        if (!this._owner) {\n            return getPromise(this._owner).reject();\n        }\n\n        const transaction = new Transaction(\n            this._tabster,\n            this._owner,\n            this._knownTargets,\n            value,\n            timeout,\n            sentTo,\n            targetId,\n            this.sendUp\n        );\n        let selfResponse:\n            | ((\n                  data: Types.CrossOriginTransactionData<I, O>\n              ) => Promise<O | undefined>)\n            | undefined;\n\n        if (\n            Transaction.shouldSelfRespond &&\n            Transaction.shouldSelfRespond(\n                this._tabster,\n                value,\n                this._owner,\n                this._ownerUId\n            )\n        ) {\n            selfResponse = (data: Types.CrossOriginTransactionData<I, O>) => {\n                return Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    getPromise(this._owner).resolve(undefined),\n                    true\n                );\n            };\n        }\n\n        return this._beginTransaction(\n            transaction,\n            timeout,\n            selfResponse,\n            withReject\n        );\n    }\n\n    removeTarget(uid: string): void {\n        delete this._knownTargets[uid];\n    }\n\n    private _beginTransaction<I, O>(\n        transaction: CrossOriginTransaction<I, O>,\n        timeout?: number,\n        selfResponse?: (\n            data: Types.CrossOriginTransactionData<I, O>\n        ) => Promise<O | undefined>,\n        withReject?: boolean\n    ): Promise<O | undefined> {\n        const owner = this._owner();\n\n        const wrapper: CrossOriginTransactionWrapper<I, O> = {\n            transaction,\n            timer: owner.setTimeout(() => {\n                delete wrapper.timer;\n                transaction.end(\"Cross origin transaction timed out.\");\n            }, _transactionTimeout + (timeout || 0)),\n        };\n\n        this._transactions[transaction.id] = wrapper;\n\n        const ret = transaction.begin(selfResponse);\n\n        ret.catch(() => {\n            /**/\n        }).finally(() => {\n            if (wrapper.timer) {\n                owner.clearTimeout(wrapper.timer);\n            }\n            delete this._transactions[transaction.id];\n        });\n\n        return ret.then(\n            (value) => value,\n            withReject ? undefined : () => undefined\n        );\n    }\n\n    forwardTransaction(\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        data: Types.CrossOriginTransactionData<any, any>\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): Promise<any> {\n        const owner = this._owner;\n        let targetId = data.target;\n\n        if (targetId === this._ownerUId) {\n            return getPromise(owner).resolve();\n        }\n\n        const Transaction = this._getTransactionClass(data.type);\n\n        if (Transaction) {\n            if (\n                Transaction.shouldForward === undefined ||\n                Transaction.shouldForward(\n                    this._tabster,\n                    data,\n                    owner,\n                    this._ownerUId\n                )\n            ) {\n                const sentTo = data.sentto;\n\n                if (targetId === _targetIdUp) {\n                    targetId = undefined;\n                    sentTo[this._ownerUId] = true;\n                }\n\n                delete sentTo[_targetIdUp];\n\n                return this._beginTransaction(\n                    new Transaction(\n                        this._tabster,\n                        owner,\n                        this._knownTargets,\n                        data.beginData,\n                        data.timeout,\n                        sentTo,\n                        targetId,\n                        this.sendUp\n                    ),\n                    data.timeout\n                );\n            } else {\n                return getPromise(owner).resolve();\n            }\n        }\n\n        return getPromise(owner).reject(\n            `Unknown transaction type ${data.type}`\n        );\n    }\n\n    private _getTransactionClass(\n        type: Types.CrossOriginTransactionType\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ): CrossOriginTransactionClass<any, any> | null {\n        switch (type) {\n            case CrossOriginTransactionTypes.Bootstrap:\n                return BootstrapTransaction;\n            case CrossOriginTransactionTypes.FocusElement:\n                return FocusElementTransaction;\n            case CrossOriginTransactionTypes.State:\n                return StateTransaction;\n            case CrossOriginTransactionTypes.GetElement:\n                return GetElementTransaction;\n            case CrossOriginTransactionTypes.RestoreFocusInDeloser:\n                return RestoreFocusInDeloserTransaction;\n            case CrossOriginTransactionTypes.Ping:\n                return PingTransaction;\n            default:\n                return null;\n        }\n    }\n\n    private _onMessage = (e: Types.CrossOriginMessage) => {\n        if (e.data.owner === this._ownerUId || !this._tabster) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const data: Types.CrossOriginTransactionData<any, any> = e.data;\n        let transactionId: string;\n\n        if (\n            !data ||\n            !(transactionId = data.transaction) ||\n            !data.type ||\n            !data.timestamp ||\n            !data.owner ||\n            !data.sentto\n        ) {\n            return;\n        }\n\n        let knownTarget = this._knownTargets[data.owner];\n\n        if (!knownTarget && e.send && data.owner !== this._ownerUId) {\n            knownTarget = this._knownTargets[data.owner] = { send: e.send };\n        }\n\n        if (knownTarget) {\n            knownTarget.last = Date.now();\n        }\n\n        if (data.isResponse) {\n            const t = this._transactions[transactionId];\n\n            if (t && t.transaction && t.transaction.type === data.type) {\n                t.transaction.onResponse(data);\n            }\n        } else {\n            const Transaction = this._getTransactionClass(data.type);\n\n            const forwardResult = this.forwardTransaction(data);\n\n            if (Transaction && e.send) {\n                Transaction.makeResponse(\n                    this._tabster,\n                    data,\n                    this._owner,\n                    this._ownerUId,\n                    this,\n                    forwardResult,\n                    false\n                ).then((r) => {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const response: Types.CrossOriginTransactionData<any, any> =\n                        {\n                            transaction: data.transaction,\n                            type: data.type,\n                            isResponse: true,\n                            timestamp: Date.now(),\n                            owner: this._ownerUId,\n                            timeout: data.timeout,\n                            sentto: {},\n                            target:\n                                data.target === _targetIdUp\n                                    ? _targetIdUp\n                                    : data.owner,\n                            endData: r,\n                        };\n\n                    e.send(response);\n                });\n            }\n        }\n    };\n\n    private _onPageHide = () => {\n        this._dead();\n    };\n\n    private async _dead(): Promise<void> {\n        if (!this._deadPromise && this.ctx.focusOwner === this._ownerUId) {\n            this._deadPromise = this.beginTransaction(StateTransaction, {\n                ownerUId: this._ownerUId,\n                state: CrossOriginStates.DeadWindow,\n            });\n        }\n\n        if (this._deadPromise) {\n            await this._deadPromise;\n        }\n    }\n\n    private async _ping(): Promise<void> {\n        if (this._pingTimer) {\n            return;\n        }\n\n        let deadWindows: { [key: string]: boolean } | undefined;\n        const now = Date.now();\n        const targets = Object.keys(this._knownTargets).filter(\n            (uid) => now - (this._knownTargets[uid].last || 0) > _pingTimeout\n        );\n\n        if (this.sendUp) {\n            targets.push(_targetIdUp);\n        }\n\n        if (targets.length) {\n            await getPromise(this._owner).all(\n                targets.map((uid) =>\n                    this.beginTransaction(\n                        PingTransaction,\n                        undefined,\n                        undefined,\n                        undefined,\n                        uid,\n                        true\n                    ).then(\n                        () => true,\n                        () => {\n                            if (uid !== _targetIdUp) {\n                                if (!deadWindows) {\n                                    deadWindows = {};\n                                }\n                                deadWindows[uid] = true;\n                                delete this._knownTargets[uid];\n                            }\n                            return false;\n                        }\n                    )\n                )\n            );\n        }\n\n        if (deadWindows) {\n            const focused = await this.beginTransaction(\n                GetElementTransaction,\n                undefined\n            );\n\n            if (\n                !focused &&\n                this.ctx.focusOwner &&\n                this.ctx.focusOwner in deadWindows\n            ) {\n                await this.beginTransaction(StateTransaction, {\n                    ownerUId: this._ownerUId,\n                    state: CrossOriginStates.Blurred,\n                    force: true,\n                });\n\n                const deloserAPI = this._tabster.deloser;\n\n                if (deloserAPI) {\n                    DeloserAPI.forceRestoreFocus(deloserAPI);\n                }\n            }\n        }\n\n        this._pingTimer = this._owner().setTimeout(() => {\n            this._pingTimer = undefined;\n            this._ping();\n        }, _pingTimeout);\n    }\n\n    private _onBrowserMessage = (e: MessageEvent) => {\n        if (e.source === this._owner()) {\n            return;\n        }\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const send = (data: Types.CrossOriginTransactionData<any, any>) => {\n            if (e.source && e.source.postMessage) {\n                // eslint-disable-next-line @typescript-eslint/ban-types\n                (e.source.postMessage as Function)(JSON.stringify(data), \"*\");\n            }\n        };\n\n        try {\n            this._onMessage({\n                data: JSON.parse(e.data),\n                send,\n            });\n        } catch (e) {\n            /* Ignore */\n        }\n    };\n}\n\nexport class CrossOriginElement implements Types.CrossOriginElement {\n    private _tabster: Types.TabsterCore;\n    readonly uid: string;\n    readonly ownerId: string;\n    readonly id?: string;\n    readonly rootId?: string;\n    readonly observedName?: string;\n    readonly observedDetails?: string;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        uid: string,\n        ownerId: string,\n        id?: string,\n        rootId?: string,\n        observedName?: string,\n        observedDetails?: string\n    ) {\n        this._tabster = tabster;\n        this.uid = uid;\n        this.ownerId = ownerId;\n        this.id = id;\n        this.rootId = rootId;\n        this.observedName = observedName;\n        this.observedDetails = observedDetails;\n    }\n\n    focus(\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        return this._tabster.crossOrigin!.focusedElement.focus(\n            this,\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n}\n\nexport class CrossOriginFocusedElementState\n    extends Subscribable<\n        CrossOriginElement | undefined,\n        Types.FocusedElementDetails\n    >\n    implements Types.CrossOriginFocusedElementState\n{\n    private _transactions: CrossOriginTransactions;\n\n    constructor(transactions: CrossOriginTransactions) {\n        super();\n        this._transactions = transactions;\n    }\n\n    async focus(\n        element: Types.CrossOriginElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            {\n                uid: element.uid,\n                id: element.id,\n                rootId: element.rootId,\n                ownerId: element.ownerId,\n                observedName: element.observedName,\n            },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusById(\n        elementId: string,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { id: elementId, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck\n        );\n    }\n\n    async focusByObservedName(\n        observedName: string,\n        timeout?: number,\n        rootId?: string,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): Promise<boolean> {\n        return this._focus(\n            { observedName, rootId },\n            noFocusedProgrammaticallyFlag,\n            noAccessibleCheck,\n            timeout\n        );\n    }\n\n    private async _focus(\n        elementData: CrossOriginElementDataIn,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean,\n        timeout?: number\n    ): Promise<boolean> {\n        return this._transactions\n            .beginTransaction(\n                FocusElementTransaction,\n                {\n                    ...elementData,\n                    noFocusedProgrammaticallyFlag,\n                    noAccessibleCheck,\n                },\n                timeout\n            )\n            .then((value) => !!value);\n    }\n\n    static setVal(\n        instance: Types.CrossOriginFocusedElementState,\n        val: CrossOriginElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        (instance as CrossOriginFocusedElementState).setVal(val, details);\n    }\n}\n\nexport class CrossOriginObservedElementState\n    extends Subscribable<CrossOriginElement, Types.ObservedElementProps>\n    implements Types.CrossOriginObservedElementState\n{\n    private _tabster: Types.TabsterCore;\n    private _transactions: CrossOriginTransactions;\n    private _lastRequestFocusId = 0;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        transactions: CrossOriginTransactions\n    ) {\n        super();\n        this._tabster = tabster;\n        this._transactions = transactions;\n    }\n\n    async getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this.waitElement(observedName, 0, accessibility);\n    }\n\n    async waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Promise<CrossOriginElement | null> {\n        return this._transactions\n            .beginTransaction(\n                GetElementTransaction,\n                {\n                    observedName,\n                    accessibility,\n                },\n                timeout\n            )\n            .then((value) =>\n                value\n                    ? StateTransaction.createElement(this._tabster, value)\n                    : null\n            );\n    }\n\n    async requestFocus(\n        observedName: string,\n        timeout: number\n    ): Promise<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        return this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        ).then((element) =>\n            this._lastRequestFocusId === requestId && element\n                ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                  this._tabster.crossOrigin!.focusedElement.focus(element, true)\n                : false\n        );\n    }\n\n    static trigger(\n        instance: Types.CrossOriginObservedElementState,\n        element: CrossOriginElement,\n        details: Types.ObservedElementProps\n    ): void {\n        (instance as CrossOriginObservedElementState).trigger(element, details);\n    }\n}\n\nexport class CrossOriginAPI implements Types.CrossOriginAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _transactions: CrossOriginTransactions;\n    private _blurTimer: number | undefined;\n    private _ctx: CrossOriginInstanceContext;\n\n    focusedElement: Types.CrossOriginFocusedElementState;\n    observedElement: Types.CrossOriginObservedElementState;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._ctx = {\n            ignoreKeyboardNavigationStateUpdate: false,\n            deloserByUId: {},\n        };\n\n        this._transactions = new CrossOriginTransactions(\n            tabster,\n            this._win,\n            this._ctx\n        );\n        this.focusedElement = new CrossOriginFocusedElementState(\n            this._transactions\n        );\n        this.observedElement = new CrossOriginObservedElementState(\n            tabster,\n            this._transactions\n        );\n    }\n\n    setup(\n        sendUp?: Types.CrossOriginTransactionSend | null\n    ): (msg: Types.CrossOriginMessage) => void {\n        if (this.isSetUp()) {\n            return this._transactions.setSendUp(sendUp);\n        } else {\n            this._tabster.queueInit(this._init);\n            return this._transactions.setup(sendUp);\n        }\n    }\n\n    isSetUp(): boolean {\n        return this._transactions.isSetUp;\n    }\n\n    private _init = (): void => {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.subscribe(this._onFocus);\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        tabster.observedElement!.subscribe(this._onObserved);\n\n        if (!this._ctx.origOutlineSetup) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this._ctx.origOutlineSetup = tabster.outline!.setup;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            tabster.outline!.setup = this._outlineSetup;\n        }\n\n        this._transactions\n            .beginTransaction(\n                BootstrapTransaction,\n                undefined,\n                undefined,\n                undefined,\n                _targetIdUp\n            )\n            .then((data) => {\n                if (\n                    data &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() !==\n                        data.isNavigatingWithKeyboard\n                ) {\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = true;\n                    this._tabster.keyboardNavigation.setNavigatingWithKeyboard(\n                        data.isNavigatingWithKeyboard\n                    );\n                    this._ctx.ignoreKeyboardNavigationStateUpdate = false;\n                }\n            });\n    };\n\n    dispose(): void {\n        const tabster = this._tabster;\n\n        tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        tabster.focusedElement.unsubscribe(this._onFocus);\n        tabster.observedElement?.unsubscribe(this._onObserved);\n\n        this._transactions.dispose();\n        this.focusedElement.dispose();\n        this.observedElement.dispose();\n\n        this._ctx.deloserByUId = {};\n    }\n\n    private _onKeyboardNavigationStateChanged = (value: boolean): void => {\n        if (!this._ctx.ignoreKeyboardNavigationStateUpdate) {\n            this._transactions.beginTransaction(StateTransaction, {\n                state: CrossOriginStates.KeyboardNavigation,\n                ownerUId: getWindowUId(this._win()),\n                isNavigatingWithKeyboard: value,\n            });\n        }\n    };\n\n    private _onFocus = (element: HTMLElementWithUID | undefined): void => {\n        const win = this._win();\n\n        const ownerUId = getWindowUId(win);\n\n        if (this._blurTimer) {\n            win.clearTimeout(this._blurTimer);\n            this._blurTimer = undefined;\n        }\n\n        if (element) {\n            this._transactions.beginTransaction(StateTransaction, {\n                ...GetElementTransaction.getElementData(\n                    this._tabster,\n                    element,\n                    this._win,\n                    this._ctx,\n                    ownerUId\n                ),\n                state: CrossOriginStates.Focused,\n            });\n        } else {\n            this._blurTimer = win.setTimeout(() => {\n                this._blurTimer = undefined;\n\n                if (this._ctx.focusOwner && this._ctx.focusOwner === ownerUId) {\n                    this._transactions\n                        .beginTransaction(GetElementTransaction, undefined)\n                        .then((value) => {\n                            if (!value && this._ctx.focusOwner === ownerUId) {\n                                this._transactions.beginTransaction(\n                                    StateTransaction,\n                                    {\n                                        ownerUId,\n                                        state: CrossOriginStates.Blurred,\n                                        force: false,\n                                    }\n                                );\n                            }\n                        });\n                }\n            }, 0);\n        }\n    };\n\n    private _onObserved = (\n        element: HTMLElement,\n        details: Types.ObservedElementProps\n    ): void => {\n        const d = GetElementTransaction.getElementData(\n            this._tabster,\n            element,\n            this._win,\n            this._ctx,\n            getWindowUId(this._win())\n        ) as CrossOriginStateData;\n\n        d.state = CrossOriginStates.Observed;\n        d.observedName = details.names?.[0];\n        d.observedDetails = details.details;\n\n        this._transactions.beginTransaction(StateTransaction, d);\n    };\n\n    private _outlineSetup = (props?: Partial<Types.OutlineProps>): void => {\n        this._transactions.beginTransaction(StateTransaction, {\n            state: CrossOriginStates.Outline,\n            ownerUId: getWindowUId(this._win()),\n            outline: props,\n        });\n    };\n}\n\nfunction getDeloserUID(\n    getWindow: Types.GetWindow,\n    context: CrossOriginInstanceContext,\n    deloser: Types.Deloser\n): string | undefined {\n    const deloserElement = deloser.getElement();\n\n    if (deloserElement) {\n        const uid = getElementUId(getWindow, deloserElement);\n\n        if (!context.deloserByUId[uid]) {\n            context.deloserByUId[uid] = deloser;\n        }\n\n        return uid;\n    }\n\n    return undefined;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getLastChild,\n    matchesSelector,\n    shouldIgnoreFocus,\n    HTMLElementWithDummyContainer,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport class FocusableAPI implements Types.FocusableAPI {\n    private _tabster: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n    }\n\n    dispose(): void {\n        /**/\n    }\n\n    getProps(element: HTMLElement): Types.FocusableProps {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n        return (tabsterOnElement && tabsterOnElement.focusable) || {};\n    }\n\n    isFocusable(\n        el: HTMLElement,\n        includeProgrammaticallyFocusable?: boolean,\n        noVisibleCheck?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            matchesSelector(el, Types.FocusableSelector) &&\n            (includeProgrammaticallyFocusable || el.tabIndex !== -1)\n        ) {\n            return (\n                (noVisibleCheck || this.isVisible(el)) &&\n                (noAccessibleCheck || this.isAccessible(el))\n            );\n        }\n\n        return false;\n    }\n\n    isVisible(el: HTMLElement): boolean {\n        if (!el.ownerDocument || el.nodeType !== Node.ELEMENT_NODE) {\n            return false;\n        }\n\n        if (el.offsetParent === null && el.ownerDocument.body !== el) {\n            return false;\n        }\n\n        const win = el.ownerDocument.defaultView;\n\n        if (!win) {\n            return false;\n        }\n\n        const rect = el.ownerDocument.body.getBoundingClientRect();\n\n        if (rect.width === 0 && rect.height === 0) {\n            // This might happen, for example, if our <body> is in hidden <iframe>.\n            return false;\n        }\n\n        const computedStyle = win.getComputedStyle(el);\n\n        if (computedStyle.visibility === \"hidden\") {\n            return false;\n        }\n\n        return true;\n    }\n\n    isAccessible(el: HTMLElement): boolean {\n        for (let e: HTMLElement | null = el; e; e = dom.getParentElement(e)) {\n            const tabsterOnElement = getTabsterOnElement(this._tabster, e);\n\n            if (this._isHidden(e)) {\n                return false;\n            }\n\n            const ignoreDisabled =\n                tabsterOnElement?.focusable?.ignoreAriaDisabled;\n\n            if (!ignoreDisabled && this._isDisabled(e)) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    private _isDisabled(el: HTMLElement): boolean {\n        return el.hasAttribute(\"disabled\");\n    }\n\n    private _isHidden(el: HTMLElement): boolean {\n        const attrVal = el.getAttribute(\"aria-hidden\");\n\n        if (attrVal && attrVal.toLowerCase() === \"true\") {\n            if (!this._tabster.modalizer?.isAugmented(el)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    findFirst(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                ...options,\n            },\n            out\n        );\n    }\n\n    findLast(\n        options: Types.FindFirstProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement(\n            {\n                isBackward: true,\n                ...options,\n            },\n            out\n        );\n    }\n\n    findNext(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options }, out);\n    }\n\n    findPrev(\n        options: Types.FindNextProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        return this.findElement({ ...options, isBackward: true }, out);\n    }\n\n    findDefault(\n        options: Types.FindDefaultProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null {\n        return (\n            this.findElement(\n                {\n                    ...options,\n                    acceptCondition: (el) =>\n                        this.isFocusable(\n                            el,\n                            options.includeProgrammaticallyFocusable\n                        ) && !!this.getProps(el).isDefault,\n                },\n                out\n            ) || null\n        );\n    }\n\n    findAll(options: Types.FindAllProps): HTMLElement[] {\n        return this._findElements(true, options) || [];\n    }\n\n    findElement(\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement | null | undefined {\n        const found = this._findElements(false, options, out);\n        return found ? found[0] : found;\n    }\n\n    private _findElements(\n        findAll: boolean,\n        options: Types.FindFocusableProps,\n        out?: Types.FindFocusableOutputProps\n    ): HTMLElement[] | null | undefined {\n        const {\n            container,\n            currentElement = null,\n            includeProgrammaticallyFocusable,\n            useActiveModalizer,\n            ignoreAccessibility,\n            modalizerId,\n            isBackward,\n            onElement,\n        } = options;\n\n        if (!out) {\n            out = {};\n        }\n\n        const elements: HTMLElement[] = [];\n\n        let { acceptCondition } = options;\n        const hasCustomCondition = !!acceptCondition;\n\n        if (!container) {\n            return null;\n        }\n\n        if (!acceptCondition) {\n            acceptCondition = (el) =>\n                this.isFocusable(\n                    el,\n                    includeProgrammaticallyFocusable,\n                    false,\n                    ignoreAccessibility\n                );\n        }\n\n        const acceptElementState: Types.FocusableAcceptElementState = {\n            container,\n            modalizerUserId:\n                modalizerId === undefined && useActiveModalizer\n                    ? this._tabster.modalizer?.activeId\n                    : modalizerId ||\n                      RootAPI.getTabsterContext(this._tabster, container)\n                          ?.modalizer?.userId,\n            from: currentElement || container,\n            isBackward,\n            acceptCondition,\n            hasCustomCondition,\n            includeProgrammaticallyFocusable,\n            ignoreAccessibility,\n            cachedGrouppers: {},\n        };\n\n        const walker = createElementTreeWalker(\n            container.ownerDocument,\n            container,\n            (node) =>\n                this._acceptElement(node as HTMLElement, acceptElementState)\n        );\n\n        if (!walker) {\n            return null;\n        }\n\n        const prepareForNextElement = (\n            shouldContinueIfNotFound?: boolean\n        ): boolean => {\n            const foundElement =\n                acceptElementState.foundElement ??\n                acceptElementState.foundBackward;\n\n            if (foundElement) {\n                elements.push(foundElement);\n            }\n\n            if (findAll) {\n                if (foundElement) {\n                    acceptElementState.found = false;\n                    delete acceptElementState.foundElement;\n                    delete acceptElementState.foundBackward;\n                    delete acceptElementState.fromCtx;\n                    acceptElementState.from = foundElement;\n\n                    if (onElement && !onElement(foundElement)) {\n                        return false;\n                    }\n                }\n\n                return !!(foundElement || shouldContinueIfNotFound);\n            } else {\n                if (foundElement && out) {\n                    out.uncontrolled = RootAPI.getTabsterContext(\n                        this._tabster,\n                        foundElement\n                    )?.uncontrolled;\n                }\n\n                return !!(shouldContinueIfNotFound && !foundElement);\n            }\n        };\n\n        if (!currentElement) {\n            out.outOfDOMOrder = true;\n        }\n\n        if (currentElement && dom.nodeContains(container, currentElement)) {\n            walker.currentNode = currentElement;\n        } else if (isBackward) {\n            const lastChild = getLastChild(container);\n\n            if (!lastChild) {\n                return null;\n            }\n\n            if (\n                this._acceptElement(lastChild, acceptElementState) ===\n                    NodeFilter.FILTER_ACCEPT &&\n                !prepareForNextElement(true)\n            ) {\n                if (acceptElementState.skippedFocusable) {\n                    out.outOfDOMOrder = true;\n                }\n\n                return elements;\n            }\n\n            walker.currentNode = lastChild;\n        }\n\n        do {\n            if (isBackward) {\n                walker.previousNode();\n            } else {\n                walker.nextNode();\n            }\n        } while (prepareForNextElement());\n\n        if (acceptElementState.skippedFocusable) {\n            out.outOfDOMOrder = true;\n        }\n\n        return elements.length ? elements : null;\n    }\n\n    private _acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number {\n        if (state.found) {\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const foundBackward = state.foundBackward;\n\n        if (\n            foundBackward &&\n            (element === foundBackward ||\n                !dom.nodeContains(foundBackward, element))\n        ) {\n            state.found = true;\n            state.foundElement = foundBackward;\n            return NodeFilter.FILTER_ACCEPT;\n        }\n\n        const container = state.container;\n\n        if (element === container) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (!dom.nodeContains(container, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (\n            (element as HTMLElementWithDummyContainer).__tabsterDummyContainer\n        ) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        if (dom.nodeContains(state.rejectElementsFrom, element)) {\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        const ctx = (state.currentCtx = RootAPI.getTabsterContext(\n            this._tabster,\n            element\n        ));\n\n        // Tabster is opt in, if it is not managed, don't try and get do anything special\n        if (!ctx) {\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        if (shouldIgnoreFocus(element)) {\n            if (this.isFocusable(element, undefined, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        // We assume iframes are focusable because native tab behaviour would tab inside.\n        // But we do it only during the standard search when there is no custom accept\n        // element condition.\n        if (\n            !state.hasCustomCondition &&\n            (element.tagName === \"IFRAME\" || element.tagName === \"WEBVIEW\")\n        ) {\n            if (ctx.modalizer?.userId === this._tabster.modalizer?.activeId) {\n                state.found = true;\n                state.rejectElementsFrom = state.foundElement = element;\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        if (!state.ignoreAccessibility && !this.isAccessible(element)) {\n            if (this.isFocusable(element, false, true, true)) {\n                state.skippedFocusable = true;\n            }\n\n            return NodeFilter.FILTER_REJECT;\n        }\n\n        let result: number | undefined;\n\n        let fromCtx = state.fromCtx;\n\n        if (!fromCtx) {\n            fromCtx = state.fromCtx = RootAPI.getTabsterContext(\n                this._tabster,\n                state.from\n            );\n        }\n\n        const fromMover = fromCtx?.mover;\n        let groupper = ctx.groupper;\n        let mover = ctx.mover;\n\n        result = this._tabster.modalizer?.acceptElement(element, state);\n\n        if (result !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        if (result === undefined && (groupper || mover || fromMover)) {\n            const groupperElement = groupper?.getElement();\n            const fromMoverElement = fromMover?.getElement();\n            let moverElement = mover?.getElement();\n\n            if (\n                moverElement &&\n                dom.nodeContains(fromMoverElement, moverElement) &&\n                dom.nodeContains(container, fromMoverElement) &&\n                (!groupperElement ||\n                    !mover ||\n                    dom.nodeContains(fromMoverElement, groupperElement))\n            ) {\n                mover = fromMover;\n                moverElement = fromMoverElement;\n            }\n\n            if (\n                groupperElement &&\n                (groupperElement === container ||\n                    !dom.nodeContains(container, groupperElement))\n            ) {\n                groupper = undefined;\n            }\n\n            if (moverElement && !dom.nodeContains(container, moverElement)) {\n                mover = undefined;\n            }\n\n            if (groupper && mover) {\n                if (\n                    moverElement &&\n                    groupperElement &&\n                    !dom.nodeContains(groupperElement, moverElement)\n                ) {\n                    mover = undefined;\n                } else {\n                    groupper = undefined;\n                }\n            }\n\n            if (groupper) {\n                result = groupper.acceptElement(element, state);\n            }\n\n            if (mover) {\n                result = mover.acceptElement(element, state);\n            }\n        }\n\n        if (result === undefined) {\n            result = state.acceptCondition(element)\n                ? NodeFilter.FILTER_ACCEPT\n                : NodeFilter.FILTER_SKIP;\n\n            if (\n                result === NodeFilter.FILTER_SKIP &&\n                this.isFocusable(element, false, true, true)\n            ) {\n                state.skippedFocusable = true;\n            }\n        }\n\n        if (result === NodeFilter.FILTER_ACCEPT && !state.found) {\n            if (state.isBackward) {\n                // When TreeWalker goes backwards, it visits the container first,\n                // then it goes inside. So, if the container is accepted, we remember it,\n                // but allowing the TreeWalker to check inside.\n                state.foundBackward = element;\n                result = NodeFilter.FILTER_SKIP;\n            } else {\n                state.found = true;\n                state.foundElement = element;\n            }\n        }\n\n        return result;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Keys: {\n    Tab: 9;\n    Enter: 13;\n    Esc: 27;\n    Space: 32;\n    PageUp: 33;\n    PageDown: 34;\n    End: 35;\n    Home: 36;\n    Left: 37;\n    Up: 38;\n    Right: 39;\n    Down: 40;\n} = {\n    Tab: 9,\n    Enter: 13,\n    Esc: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    Left: 37,\n    Up: 38,\n    Right: 39,\n    Down: 40,\n};\n\nexport type Key = typeof Keys[keyof typeof Keys];\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    KeyborgFocusInEvent,\n    KeyborgFocusOutEvent,\n    KEYBORG_FOCUSIN,\n    KEYBORG_FOCUSOUT,\n    nativeFocus,\n} from \"keyborg\";\n\nimport { Keys } from \"../Keys\";\nimport { RootAPI } from \"../Root\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    DummyInputManager,\n    getLastChild,\n    shouldIgnoreFocus,\n    WeakHTMLElement,\n    triggerEvent,\n    dispatchMoveFocusEvent,\n} from \"../Utils\";\nimport { getTabsterOnElement } from \"../Instance\";\nimport { dom } from \"../DOMAPI\";\nimport { Subscribable } from \"./Subscribable\";\n\nfunction getUncontrolledCompletelyContainer(\n    tabster: Types.TabsterCore,\n    element: HTMLElement\n): HTMLElement | undefined {\n    const getParent = tabster.getParent;\n    let el: HTMLElement | null = element;\n\n    do {\n        const uncontrolledOnElement = getTabsterOnElement(\n            tabster,\n            el\n        )?.uncontrolled;\n\n        if (\n            uncontrolledOnElement &&\n            tabster.uncontrolled.isUncontrolledCompletely(\n                el,\n                !!uncontrolledOnElement.completely\n            )\n        ) {\n            return el;\n        }\n\n        el = getParent(el) as HTMLElement | null;\n    } while (el);\n\n    return undefined;\n}\n\nexport class FocusedElementState\n    extends Subscribable<HTMLElement | undefined, Types.FocusedElementDetails>\n    implements Types.FocusedElementState\n{\n    private static _lastResetElement: WeakHTMLElement | undefined;\n    private static _isTabbingTimer: number | undefined;\n    static isTabbing = false;\n\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _nextVal:\n        | {\n              element: WeakHTMLElement | undefined;\n              details: Types.FocusedElementDetails;\n          }\n        | undefined;\n    private _lastVal: WeakHTMLElement | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        super();\n\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n        const doc = win.document;\n\n        // Add these event listeners as capture - we want Tabster to run before user event handlers\n        doc.addEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.addEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement && activeElement !== doc.body) {\n            this._setFocusedElement(activeElement as HTMLElement);\n        }\n\n        this.subscribe(this._onChanged);\n    };\n\n    dispose(): void {\n        super.dispose();\n\n        const win = this._win();\n        const doc = win.document;\n\n        doc.removeEventListener(KEYBORG_FOCUSIN, this._onFocusIn, true);\n        doc.removeEventListener(KEYBORG_FOCUSOUT, this._onFocusOut, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        this.unsubscribe(this._onChanged);\n\n        delete FocusedElementState._lastResetElement;\n\n        delete this._nextVal;\n        delete this._lastVal;\n    }\n\n    static forgetMemorized(\n        instance: Types.FocusedElementState,\n        parent: HTMLElement\n    ): void {\n        let wel = FocusedElementState._lastResetElement;\n        let el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete FocusedElementState._lastResetElement;\n        }\n\n        el = (instance as FocusedElementState)._nextVal?.element?.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._nextVal;\n        }\n\n        wel = (instance as FocusedElementState)._lastVal;\n        el = wel && wel.get();\n        if (el && dom.nodeContains(parent, el)) {\n            delete (instance as FocusedElementState)._lastVal;\n        }\n    }\n\n    getFocusedElement(): HTMLElement | undefined {\n        return this.getVal();\n    }\n\n    getLastFocusedElement(): HTMLElement | undefined {\n        let el = this._lastVal?.get();\n\n        if (!el || (el && !documentContains(el.ownerDocument, el))) {\n            this._lastVal = el = undefined;\n        }\n\n        return el;\n    }\n\n    focus(\n        element: HTMLElement,\n        noFocusedProgrammaticallyFlag?: boolean,\n        noAccessibleCheck?: boolean\n    ): boolean {\n        if (\n            !this._tabster.focusable.isFocusable(\n                element,\n                noFocusedProgrammaticallyFlag,\n                false,\n                noAccessibleCheck\n            )\n        ) {\n            return false;\n        }\n\n        element.focus();\n\n        return true;\n    }\n\n    focusDefault(container: HTMLElement): boolean {\n        const el = this._tabster.focusable.findDefault({ container });\n\n        if (el) {\n            this._tabster.focusedElement.focus(el);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    getFirstOrLastTabbable(\n        isFirst: boolean,\n        props: Pick<\n            Types.FindFocusableProps,\n            \"container\" | \"ignoreAccessibility\"\n        >\n    ): HTMLElement | undefined {\n        const { container, ignoreAccessibility } = props;\n        let toFocus: HTMLElement | null | undefined;\n\n        if (container) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    container,\n                    undefined,\n                    undefined,\n                    !isFirst,\n                    ignoreAccessibility\n                )?.element;\n            }\n        }\n\n        if (toFocus && !dom.nodeContains(container, toFocus)) {\n            toFocus = undefined;\n        }\n\n        return toFocus || undefined;\n    }\n\n    private _focusFirstOrLast(\n        isFirst: boolean,\n        props: Types.FindFirstProps\n    ): boolean {\n        const toFocus = this.getFirstOrLastTabbable(isFirst, props);\n\n        if (toFocus) {\n            this.focus(toFocus, false, true);\n\n            return true;\n        }\n\n        return false;\n    }\n\n    focusFirst(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(true, props);\n    }\n\n    focusLast(props: Types.FindFirstProps): boolean {\n        return this._focusFirstOrLast(false, props);\n    }\n\n    resetFocus(container: HTMLElement): boolean {\n        if (!this._tabster.focusable.isVisible(container)) {\n            return false;\n        }\n\n        if (!this._tabster.focusable.isFocusable(container, true, true, true)) {\n            const prevTabIndex = container.getAttribute(\"tabindex\");\n            const prevAriaHidden = container.getAttribute(\"aria-hidden\");\n\n            container.tabIndex = -1;\n            container.setAttribute(\"aria-hidden\", \"true\");\n\n            FocusedElementState._lastResetElement = new WeakHTMLElement(\n                this._win,\n                container\n            );\n\n            this.focus(container, true, true);\n\n            this._setOrRemoveAttribute(container, \"tabindex\", prevTabIndex);\n            this._setOrRemoveAttribute(\n                container,\n                \"aria-hidden\",\n                prevAriaHidden\n            );\n        } else {\n            this.focus(container);\n        }\n\n        return true;\n    }\n\n    private _setOrRemoveAttribute(\n        element: HTMLElement,\n        name: string,\n        value: string | null\n    ): void {\n        if (value === null) {\n            element.removeAttribute(name);\n        } else {\n            element.setAttribute(name, value);\n        }\n    }\n\n    private _setFocusedElement(\n        element?: HTMLElement,\n        relatedTarget?: HTMLElement,\n        isFocusedProgrammatically?: boolean\n    ): void {\n        if (this._tabster._noop) {\n            return;\n        }\n\n        const details: Types.FocusedElementDetails = { relatedTarget };\n\n        if (element) {\n            const lastResetElement =\n                FocusedElementState._lastResetElement?.get();\n            FocusedElementState._lastResetElement = undefined;\n\n            if (lastResetElement === element || shouldIgnoreFocus(element)) {\n                return;\n            }\n\n            details.isFocusedProgrammatically = isFocusedProgrammatically;\n\n            const ctx = RootAPI.getTabsterContext(this._tabster, element);\n\n            const modalizerId = ctx?.modalizer?.userId;\n\n            if (modalizerId) {\n                details.modalizerId = modalizerId;\n            }\n        }\n\n        const nextVal = (this._nextVal = {\n            element: element\n                ? new WeakHTMLElement(this._win, element)\n                : undefined,\n            details,\n        });\n\n        if (element && element !== this._val) {\n            this._validateFocusedElement(element);\n        }\n\n        // _validateFocusedElement() might cause the refocus which will trigger\n        // another call to this function. Making sure that the value is correct.\n        if (this._nextVal === nextVal) {\n            this.setVal(element, details);\n        }\n\n        this._nextVal = undefined;\n    }\n\n    protected setVal(\n        val: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void {\n        super.setVal(val, details);\n\n        if (val) {\n            this._lastVal = new WeakHTMLElement(this._win, val);\n        }\n    }\n\n    private _onFocusIn = (e: KeyborgFocusInEvent): void => {\n        const target = e.composedPath()[0] as HTMLElement;\n\n        if (target) {\n            this._setFocusedElement(\n                target,\n                e.detail.relatedTarget as HTMLElement | undefined,\n                e.detail.isFocusedProgrammatically\n            );\n        }\n    };\n\n    private _onFocusOut = (e: KeyborgFocusOutEvent): void => {\n        this._setFocusedElement(\n            undefined,\n            e.detail?.originalEvent.relatedTarget as HTMLElement | undefined\n        );\n    };\n\n    static findNextTabbable(\n        tabster: Types.TabsterCore,\n        ctx: Types.TabsterContext,\n        container?: HTMLElement,\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const actualContainer = container || ctx.root.getElement();\n\n        if (!actualContainer) {\n            return null;\n        }\n\n        let next: Types.NextTabbable | null = null;\n\n        const isTabbingTimer = FocusedElementState._isTabbingTimer;\n        const win = tabster.getWindow();\n\n        if (isTabbingTimer) {\n            win.clearTimeout(isTabbingTimer);\n        }\n\n        FocusedElementState.isTabbing = true;\n        FocusedElementState._isTabbingTimer = win.setTimeout(() => {\n            delete FocusedElementState._isTabbingTimer;\n            FocusedElementState.isTabbing = false;\n        }, 0);\n\n        const modalizer = ctx.modalizer;\n        const groupper = ctx.groupper;\n        const mover = ctx.mover;\n\n        const callFindNext = (\n            what: Types.Groupper | Types.Mover | Types.Modalizer\n        ) => {\n            next = what.findNextTabbable(\n                currentElement,\n                referenceElement,\n                isBackward,\n                ignoreAccessibility\n            );\n\n            if (currentElement && !next?.element) {\n                const parentElement =\n                    what !== modalizer &&\n                    dom.getParentElement(what.getElement());\n\n                if (parentElement) {\n                    const parentCtx = RootAPI.getTabsterContext(\n                        tabster,\n                        currentElement,\n                        { referenceElement: parentElement }\n                    );\n\n                    if (parentCtx) {\n                        const currentScopeElement = what.getElement();\n                        const newCurrent = isBackward\n                            ? currentScopeElement\n                            : (currentScopeElement &&\n                                  getLastChild(currentScopeElement)) ||\n                              currentScopeElement;\n\n                        if (newCurrent) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                parentCtx,\n                                container,\n                                newCurrent,\n                                parentElement,\n                                isBackward,\n                                ignoreAccessibility\n                            );\n\n                            if (next) {\n                                next.outOfDOMOrder = true;\n                            }\n                        }\n                    }\n                }\n            }\n        };\n\n        if (groupper && mover) {\n            callFindNext(ctx.groupperBeforeMover ? groupper : mover);\n        } else if (groupper) {\n            callFindNext(groupper);\n        } else if (mover) {\n            callFindNext(mover);\n        } else if (modalizer) {\n            callFindNext(modalizer);\n        } else {\n            const findProps: Types.FindNextProps = {\n                container: actualContainer,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            const nextElement = tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            next = {\n                element: nextElement,\n                outOfDOMOrder: findPropsOut.outOfDOMOrder,\n                uncontrolled: findPropsOut.uncontrolled,\n            };\n        }\n\n        return next;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _validateFocusedElement = (element: HTMLElement): void => {\n        // TODO: Make sure this is not needed anymore and write tests.\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Tab || event.ctrlKey) {\n            return;\n        }\n\n        const currentElement = this.getVal();\n\n        if (\n            !currentElement ||\n            !currentElement.ownerDocument ||\n            currentElement.contentEditable === \"true\"\n        ) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const controlTab = tabster.controlTab;\n        const ctx = RootAPI.getTabsterContext(tabster, currentElement);\n\n        if (!ctx || ctx.ignoreKeydown(event)) {\n            return;\n        }\n\n        const isBackward = event.shiftKey;\n\n        const next = FocusedElementState.findNextTabbable(\n            tabster,\n            ctx,\n            undefined,\n            currentElement,\n            undefined,\n            isBackward,\n            true\n        );\n\n        const rootElement = ctx.root.getElement();\n\n        if (!rootElement) {\n            return;\n        }\n\n        const nextElement = next?.element;\n        const uncontrolledCompletelyContainer =\n            getUncontrolledCompletelyContainer(tabster, currentElement);\n\n        if (nextElement) {\n            const nextUncontrolled = next.uncontrolled;\n\n            if (\n                ctx.uncontrolled ||\n                dom.nodeContains(nextUncontrolled, currentElement)\n            ) {\n                if (\n                    (!next.outOfDOMOrder &&\n                        nextUncontrolled === ctx.uncontrolled) ||\n                    (uncontrolledCompletelyContainer &&\n                        !dom.nodeContains(\n                            uncontrolledCompletelyContainer,\n                            nextElement\n                        ))\n                ) {\n                    // Nothing to do, everything will be done by the browser or something\n                    // that controls the uncontrolled area.\n                    return;\n                }\n\n                // We are in uncontrolled area. We allow whatever controls it to move\n                // focus, but we add a phantom dummy to make sure the focus is moved\n                // to the correct place if the uncontrolled area allows default action.\n                // We only need that in the controlled mode, because in uncontrolled\n                // mode we have dummy inputs around everything that redirects focus.\n                DummyInputManager.addPhantomDummyWithTarget(\n                    tabster,\n                    currentElement,\n                    isBackward,\n                    nextElement\n                );\n\n                return;\n            }\n\n            if (nextUncontrolled || nextElement.tagName === \"IFRAME\") {\n                // For iframes and uncontrolled areas we always want to use default action to\n                // move focus into.\n                if (\n                    dispatchMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: nextElement,\n                        relatedEvent: event,\n                    })\n                ) {\n                    DummyInputManager.moveWithPhantomDummy(\n                        this._tabster,\n                        nextUncontrolled ?? nextElement,\n                        false,\n                        isBackward,\n                        event\n                    );\n                }\n\n                return;\n            }\n\n            if (controlTab || next?.outOfDOMOrder) {\n                if (\n                    dispatchMoveFocusEvent({\n                        by: \"root\",\n                        owner: rootElement,\n                        next: nextElement,\n                        relatedEvent: event,\n                    })\n                ) {\n                    event.preventDefault();\n                    event.stopImmediatePropagation();\n\n                    nativeFocus(nextElement);\n                }\n            } else {\n                // We are in uncontrolled mode and the next element is in DOM order.\n                // Just allow the default action.\n            }\n        } else {\n            if (\n                !uncontrolledCompletelyContainer &&\n                dispatchMoveFocusEvent({\n                    by: \"root\",\n                    owner: rootElement,\n                    next: null,\n                    relatedEvent: event,\n                })\n            ) {\n                ctx.root.moveOutWithDefaultAction(isBackward, event);\n            }\n        }\n    };\n\n    _onChanged = (\n        element: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        if (element) {\n            triggerEvent(element, Types.FocusInEventName, details);\n        } else {\n            const last = this._lastVal?.get();\n\n            if (last) {\n                const d = { ...details };\n                const lastCtx = RootAPI.getTabsterContext(this._tabster, last);\n                const modalizerId = lastCtx?.modalizer?.userId;\n\n                if (modalizerId) {\n                    d.modalizerId = modalizerId;\n                }\n\n                triggerEvent(last, Types.FocusOutEventName, d);\n            }\n        }\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    getAdjacentElement,\n    dispatchMoveFocusEvent,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nclass GroupperDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        groupper: Groupper,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(\n            tabster,\n            element,\n            DummyInputManagerPriorities.Groupper,\n            sys,\n            true\n        );\n\n        this._setHandlers(\n            (\n                dummyInput: DummyInput,\n                isBackward: boolean,\n                relatedTarget: HTMLElement | null\n            ) => {\n                const container = element.get();\n                const input = dummyInput.input;\n\n                if (container && input) {\n                    const ctx = RootAPI.getTabsterContext(tabster, input);\n\n                    if (ctx) {\n                        let next: HTMLElement | null | undefined;\n\n                        next = groupper.findNextTabbable(\n                            relatedTarget || undefined,\n                            undefined,\n                            isBackward,\n                            true\n                        )?.element;\n\n                        if (!next) {\n                            next = FocusedElementState.findNextTabbable(\n                                tabster,\n                                ctx,\n                                undefined,\n                                dummyInput.isOutside\n                                    ? input\n                                    : getAdjacentElement(\n                                          container,\n                                          !isBackward\n                                      ),\n                                undefined,\n                                isBackward,\n                                true\n                            )?.element;\n                        }\n\n                        if (next) {\n                            nativeFocus(next);\n                        }\n                    }\n                }\n            }\n        );\n    }\n}\n\nexport class Groupper\n    extends TabsterPart<Types.GroupperProps>\n    implements Types.Groupper\n{\n    private _shouldTabInside = false;\n    private _first: WeakHTMLElement | undefined;\n    private _onDispose: (groupper: Groupper) => void;\n\n    dummyManager: GroupperDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (groupper: Groupper) => void,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n        this.makeTabbable(false);\n\n        this._onDispose = onDispose;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new GroupperDummyManager(\n                this._element,\n                this,\n                tabster,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        const element = this._element.get();\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n\n        if (element) {\n            if (__DEV__) {\n                _setInformativeStyle(this._element, true);\n            }\n        }\n\n        delete this._first;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const groupperElement = this.getElement();\n\n        if (!groupperElement) {\n            return null;\n        }\n\n        const currentIsDummy =\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === groupperElement;\n\n        if (\n            !this._shouldTabInside &&\n            currentElement &&\n            dom.nodeContains(groupperElement, currentElement) &&\n            !currentIsDummy\n        ) {\n            return { element: undefined, outOfDOMOrder: true };\n        }\n\n        const groupperFirstFocusable = this.getFirst(true);\n\n        if (\n            !currentElement ||\n            !dom.nodeContains(groupperElement, currentElement) ||\n            currentIsDummy\n        ) {\n            return {\n                element: groupperFirstFocusable,\n                outOfDOMOrder: true,\n            };\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (this._shouldTabInside && groupperFirstFocusable) {\n            const findProps: Types.FindNextProps = {\n                container: groupperElement,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n\n            if (\n                !next &&\n                this._props.tabbability ===\n                    Types.GroupperTabbabilities.LimitedTrapFocus\n            ) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container: groupperElement,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    makeTabbable(isTabbable: boolean): void {\n        this._shouldTabInside = isTabbable || !this._props.tabbability;\n\n        if (__DEV__) {\n            _setInformativeStyle(this._element, !this._shouldTabInside);\n        }\n    }\n\n    isActive(noIfFirstIsFocused?: boolean): boolean | undefined {\n        const element = this.getElement() || null;\n        let isParentActive = true;\n\n        for (\n            let e = dom.getParentElement(element);\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            const g = getTabsterOnElement(this._tabster, e)?.groupper as\n                | Groupper\n                | undefined;\n\n            if (g) {\n                if (!g._shouldTabInside) {\n                    isParentActive = false;\n                }\n            }\n        }\n\n        let ret = isParentActive\n            ? this._props.tabbability\n                ? this._shouldTabInside\n                : false\n            : undefined;\n\n        if (ret && noIfFirstIsFocused) {\n            const focused = this._tabster.focusedElement.getFocusedElement();\n\n            if (focused) {\n                ret = focused !== this.getFirst(true);\n            }\n        }\n\n        return ret;\n    }\n\n    getFirst(orContainer: boolean): HTMLElement | undefined {\n        const groupperElement = this.getElement();\n        let first: HTMLElement | undefined;\n\n        if (groupperElement) {\n            if (\n                orContainer &&\n                this._tabster.focusable.isFocusable(groupperElement)\n            ) {\n                return groupperElement;\n            }\n\n            first = this._first?.get();\n\n            if (!first) {\n                first =\n                    this._tabster.focusable.findFirst({\n                        container: groupperElement,\n                        useActiveModalizer: true,\n                    }) || undefined;\n\n                if (first) {\n                    this.setFirst(first);\n                }\n            }\n        }\n\n        return first;\n    }\n\n    setFirst(element: HTMLElement | undefined): void {\n        if (element) {\n            this._first = new WeakHTMLElement(this._tabster.getWindow, element);\n        } else {\n            delete this._first;\n        }\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const cachedGrouppers = state.cachedGrouppers;\n\n        const parentElement = dom.getParentElement(this.getElement());\n        const parentCtx =\n            parentElement &&\n            RootAPI.getTabsterContext(this._tabster, parentElement);\n        const parentCtxGroupper = parentCtx?.groupper;\n        const parentGroupper = parentCtx?.groupperBeforeMover\n            ? parentCtxGroupper\n            : undefined;\n        let parentGroupperElement: HTMLElement | undefined;\n\n        const getIsActive = (groupper: Types.Groupper) => {\n            let cached = cachedGrouppers[groupper.id];\n            let isActive: boolean | undefined;\n\n            if (cached) {\n                isActive = cached.isActive;\n            } else {\n                isActive = this.isActive(true);\n\n                cached = cachedGrouppers[groupper.id] = {\n                    isActive,\n                };\n            }\n\n            return isActive;\n        };\n\n        if (parentGroupper) {\n            parentGroupperElement = parentGroupper.getElement();\n\n            if (\n                !getIsActive(parentGroupper) &&\n                parentGroupperElement &&\n                state.container !== parentGroupperElement &&\n                dom.nodeContains(state.container, parentGroupperElement)\n            ) {\n                // Do not fall into a child groupper of inactive parent groupper if it's in the scope of the search.\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_REJECT;\n            }\n        }\n\n        const isActive = getIsActive(this);\n        const groupperElement = this.getElement();\n\n        if (groupperElement) {\n            if (isActive !== true) {\n                if (groupperElement === element && parentCtxGroupper) {\n                    if (!parentGroupperElement) {\n                        parentGroupperElement = parentCtxGroupper.getElement();\n                    }\n\n                    if (\n                        parentGroupperElement &&\n                        !getIsActive(parentCtxGroupper) &&\n                        dom.nodeContains(\n                            state.container,\n                            parentGroupperElement\n                        ) &&\n                        parentGroupperElement !== state.container\n                    ) {\n                        state.skippedFocusable = true;\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n\n                if (\n                    groupperElement !== element &&\n                    dom.nodeContains(groupperElement, element)\n                ) {\n                    state.skippedFocusable = true;\n                    return NodeFilter.FILTER_REJECT;\n                }\n\n                const cached = cachedGrouppers[this.id];\n                let first: HTMLElement | null | undefined;\n\n                if (\"first\" in cached) {\n                    first = cached.first;\n                } else {\n                    first = cached.first = this.getFirst(true);\n                }\n\n                if (first && state.acceptCondition(first)) {\n                    state.rejectElementsFrom = groupperElement;\n                    state.skippedFocusable = true;\n\n                    if (first !== state.from) {\n                        state.found = true;\n                        state.foundElement = first;\n                        return NodeFilter.FILTER_ACCEPT;\n                    } else {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n                }\n            }\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateGroupperProps(props: Types.GroupperProps): void {\n    // TODO: Implement validation.\n}\n\nexport class GroupperAPI implements Types.GroupperAPI {\n    private _tabster: Types.TabsterCore;\n    private _updateTimer: number | undefined;\n    private _win: Types.GetWindow;\n    private _current: Record<string, Types.Groupper> = {};\n    private _grouppers: Record<string, Types.Groupper> = {};\n    private _handleKeyPressTimer: number | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        // Making sure groupper's onFocus is called before modalizer's onFocus.\n        this._tabster.focusedElement.subscribeFirst(this._onFocus);\n\n        const doc = win.document;\n\n        const activeElement = dom.getActiveElement(doc);\n\n        if (activeElement) {\n            this._onFocus(activeElement as HTMLElement);\n        }\n\n        doc.addEventListener(\"mousedown\", this._onMouseDown, true);\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(\n            Types.GroupperMoveFocusEventName,\n            this._onMoveFocus\n        );\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._handleKeyPressTimer) {\n            win.clearTimeout(this._handleKeyPressTimer);\n            delete this._handleKeyPressTimer;\n        }\n\n        this._current = {};\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.document.removeEventListener(\"mousedown\", this._onMouseDown, true);\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(\n            Types.GroupperMoveFocusEventName,\n            this._onMoveFocus\n        );\n\n        Object.keys(this._grouppers).forEach((groupperId) => {\n            if (this._grouppers[groupperId]) {\n                this._grouppers[groupperId].dispose();\n                delete this._grouppers[groupperId];\n            }\n        });\n    }\n\n    createGroupper(\n        element: HTMLElement,\n        props: Types.GroupperProps,\n        sys: Types.SysProps | undefined\n    ) {\n        if (__DEV__) {\n            validateGroupperProps(props);\n        }\n\n        const newGroupper = new Groupper(\n            this._tabster,\n            element,\n            this._onGroupperDispose,\n            props,\n            sys\n        );\n\n        this._grouppers[newGroupper.id] = newGroupper;\n\n        const focusedElement = this._tabster.focusedElement.getFocusedElement();\n\n        // Newly created groupper contains currently focused element, update the state on the next tick (to\n        // make sure all grouppers are processed).\n        if (\n            focusedElement &&\n            dom.nodeContains(element, focusedElement) &&\n            !this._updateTimer\n        ) {\n            this._updateTimer = this._win().setTimeout(() => {\n                delete this._updateTimer;\n                // Making sure the focused element hasn't changed.\n                if (\n                    focusedElement ===\n                    this._tabster.focusedElement.getFocusedElement()\n                ) {\n                    this._updateCurrent(focusedElement, true, true);\n                }\n            }, 0);\n        }\n\n        return newGroupper;\n    }\n\n    forgetCurrentGrouppers(): void {\n        this._current = {};\n    }\n\n    private _onGroupperDispose = (groupper: Groupper) => {\n        delete this._grouppers[groupper.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        if (element) {\n            this._updateCurrent(element, true, true);\n        }\n    };\n\n    private _onMouseDown = (e: MouseEvent): void => {\n        if (e.target) {\n            this._updateCurrent(e.target as HTMLElement, true);\n        }\n    };\n\n    private _updateCurrent(\n        element: HTMLElement,\n        includeTarget?: boolean,\n        checkTarget?: boolean\n    ): void {\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        const newIds: Record<string, true> = {};\n\n        let isTarget = true;\n\n        for (\n            let el = element as HTMLElement | null;\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            const groupper = getTabsterOnElement(this._tabster, el)?.groupper;\n\n            if (groupper) {\n                newIds[groupper.id] = true;\n\n                if (isTarget && checkTarget && el !== element) {\n                    isTarget = false;\n                }\n\n                if (includeTarget || !isTarget) {\n                    this._current[groupper.id] = groupper;\n                    const isTabbable =\n                        groupper.isActive() ||\n                        (element !== el &&\n                            (!groupper.getProps().delegated ||\n                                groupper.getFirst(false) !== element));\n\n                    groupper.makeTabbable(isTabbable);\n                }\n\n                isTarget = false;\n            }\n        }\n\n        for (const id of Object.keys(this._current)) {\n            const groupper = this._current[id];\n\n            if (!(groupper.id in newIds)) {\n                groupper.makeTabbable(false);\n                groupper.setFirst(undefined);\n                delete this._current[id];\n            }\n        }\n    }\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Enter && event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        // Give a chance to other listeners to handle the event.\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const element = this._tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            this.handleKeyPress(element, event);\n        }\n    };\n\n    private _onMoveFocus = (e: Types.GroupperMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const action = e.detail?.action;\n\n        if (element && action !== undefined && !e.defaultPrevented) {\n            if (action === Types.GroupperMoveFocusActions.Enter) {\n                this._enterGroupper(element);\n            } else {\n                this._escapeGroupper(element);\n            }\n\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private _enterGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const groupper = ctx?.groupper || ctx?.modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            (element === groupperElement ||\n                (groupper.getProps().delegated &&\n                    element === groupper.getFirst(false)))\n        ) {\n            const next = tabster.focusable.findNext({\n                container: groupperElement,\n                currentElement: element,\n                useActiveModalizer: true,\n            });\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        dispatchMoveFocusEvent({\n                            by: \"groupper\",\n                            owner: groupperElement,\n                            next,\n                            relatedEvent,\n                        })))\n            ) {\n                if (relatedEvent) {\n                    // When the application hasn't prevented default,\n                    // we consider the event completely handled, hence we\n                    // prevent the initial event's default action and stop\n                    // propagation.\n                    relatedEvent.preventDefault();\n                    relatedEvent.stopImmediatePropagation();\n                }\n\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    private _escapeGroupper(\n        element: HTMLElement,\n        relatedEvent?: KeyboardEvent,\n        fromModalizer?: boolean\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n        const modalizerInGroupper = ctx?.modalizerInGroupper;\n        let groupper = ctx?.groupper || modalizerInGroupper;\n        const groupperElement = groupper?.getElement();\n\n        if (\n            groupper &&\n            groupperElement &&\n            dom.nodeContains(groupperElement, element)\n        ) {\n            let next: HTMLElement | null | undefined;\n\n            if (element !== groupperElement || fromModalizer) {\n                next = groupper.getFirst(true);\n            } else {\n                const parentElement = dom.getParentElement(groupperElement);\n                const parentCtx = parentElement\n                    ? RootAPI.getTabsterContext(tabster, parentElement)\n                    : undefined;\n\n                groupper = parentCtx?.groupper;\n                next = groupper?.getFirst(true);\n            }\n\n            if (\n                next &&\n                (!relatedEvent ||\n                    (relatedEvent &&\n                        dispatchMoveFocusEvent({\n                            by: \"groupper\",\n                            owner: groupperElement,\n                            next,\n                            relatedEvent,\n                        })))\n            ) {\n                if (groupper) {\n                    groupper.makeTabbable(false);\n\n                    if (modalizerInGroupper) {\n                        tabster.modalizer?.setActive(undefined);\n                    }\n                }\n\n                // This part happens asynchronously inside setTimeout,\n                // so no need to prevent default or stop propagation.\n                next.focus();\n\n                return next;\n            }\n        }\n\n        return null;\n    }\n\n    moveFocus(\n        element: HTMLElement,\n        action: Types.GroupperMoveFocusAction\n    ): HTMLElement | null {\n        return action === Types.GroupperMoveFocusActions.Enter\n            ? this._enterGroupper(element)\n            : this._escapeGroupper(element);\n    }\n\n    handleKeyPress(\n        element: HTMLElement,\n        event: KeyboardEvent,\n        fromModalizer?: boolean\n    ): void {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, element);\n\n        if (ctx && (ctx?.groupper || ctx?.modalizerInGroupper)) {\n            const win = this._win();\n\n            if (this._handleKeyPressTimer) {\n                win.clearTimeout(this._handleKeyPressTimer);\n                delete this._handleKeyPressTimer;\n            }\n\n            if (ctx.ignoreKeydown(event)) {\n                return;\n            }\n\n            if (event.keyCode === Keys.Enter) {\n                this._enterGroupper(element, event);\n            } else if (event.keyCode === Keys.Esc) {\n                // We will handle Esc asynchronously, if something in the application will\n                // move focus during the keypress handling, we will not interfere.\n                const focusedElement =\n                    tabster.focusedElement.getFocusedElement();\n\n                this._handleKeyPressTimer = win.setTimeout(() => {\n                    delete this._handleKeyPressTimer;\n\n                    if (\n                        focusedElement !==\n                            tabster.focusedElement.getFocusedElement() &&\n                        // A part of Modalizer that has called this handler to escape the active groupper\n                        // might have been removed from DOM, if the focus is on body, we still want to handle Esc.\n                        ((fromModalizer && !focusedElement) || !fromModalizer)\n                    ) {\n                        // Something else in the application has moved focus, we will not handle Esc.\n                        return;\n                    }\n\n                    this._escapeGroupper(element, event, fromModalizer);\n                }, 0);\n            }\n        }\n    }\n}\n\nfunction _setInformativeStyle(\n    weakElement: Types.WeakHTMLElement,\n    remove: boolean\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-groupper\");\n            } else {\n                element.style.setProperty(\"--tabster-groupper\", \"unlimited\");\n            }\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { createKeyborg, disposeKeyborg, Keyborg } from \"keyborg\";\n\nimport * as Types from \"../Types\";\nimport { Subscribable } from \"./Subscribable\";\n\nexport class KeyboardNavigationState\n    extends Subscribable<boolean>\n    implements Types.KeyboardNavigationState\n{\n    private _keyborg?: Keyborg;\n\n    constructor(getWindow: Types.GetWindow) {\n        super();\n        this._keyborg = createKeyborg(getWindow());\n        this._keyborg.subscribe(this._onChange);\n    }\n\n    dispose(): void {\n        super.dispose();\n\n        if (this._keyborg) {\n            this._keyborg.unsubscribe(this._onChange);\n\n            disposeKeyborg(this._keyborg);\n\n            delete this._keyborg;\n        }\n    }\n\n    private _onChange = (isNavigatingWithKeyboard: boolean) => {\n        this.setVal(isNavigatingWithKeyboard, undefined);\n    };\n\n    setNavigatingWithKeyboard(isNavigatingWithKeyboard: boolean): void {\n        this._keyborg?.setVal(isNavigatingWithKeyboard);\n    }\n\n    isNavigatingWithKeyboard(): boolean {\n        return !!this._keyborg?.isNavigatingWithKeyboard();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { RootAPI } from \"./Root\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { Keys } from \"./Keys\";\nimport * as Types from \"./Types\";\nimport {\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    HTMLElementWithDummyContainer,\n    TabsterPart,\n    WeakHTMLElement,\n    triggerEvent,\n    augmentAttribute,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nlet _wasFocusedCounter = 0;\n\nconst _ariaHidden = \"aria-hidden\";\n\nfunction _setInformativeStyle(\n    weakElement: WeakHTMLElement,\n    remove: boolean,\n    internalId?: string,\n    userId?: string,\n    isActive?: boolean,\n    wasFocused?: number\n): void {\n    if (__DEV__) {\n        const element = weakElement.get();\n\n        if (element) {\n            if (remove) {\n                element.style.removeProperty(\"--tabster-modalizer\");\n            } else {\n                element.style.setProperty(\n                    \"--tabster-modalizer\",\n                    internalId +\n                        \",\" +\n                        userId +\n                        \",\" +\n                        (isActive ? \"active\" : \"inactive\") +\n                        \",\" +\n                        \",\" +\n                        (wasFocused ? `focused(${wasFocused})` : \"not-focused\")\n                );\n            }\n        }\n    }\n}\n\n/**\n * Manages the dummy inputs for the Modalizer.\n */\nclass ModalizerDummyManager extends DummyInputManager {\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Modalizer, sys);\n\n        this._setHandlers((dummyInput: DummyInput, isBackward: boolean) => {\n            const el = element.get();\n            const container = el && RootAPI.getRoot(tabster, el)?.getElement();\n            const input = dummyInput.input;\n            let toFocus: HTMLElement | null | undefined;\n\n            if (container && input) {\n                const dummyContainer = (\n                    input as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get();\n\n                const ctx = RootAPI.getTabsterContext(\n                    tabster,\n                    dummyContainer || input\n                );\n\n                if (ctx) {\n                    toFocus = FocusedElementState.findNextTabbable(\n                        tabster,\n                        ctx,\n                        container,\n                        input,\n                        undefined,\n                        isBackward,\n                        true\n                    )?.element;\n                }\n\n                if (toFocus) {\n                    nativeFocus(toFocus);\n                }\n            }\n        });\n    }\n}\n\nexport class Modalizer\n    extends TabsterPart<Types.ModalizerProps>\n    implements Types.Modalizer\n{\n    userId: string;\n\n    private _isActive: boolean | undefined;\n    private _wasFocused = 0;\n    private _onDispose: (modalizer: Modalizer) => void;\n    private _activeElements: WeakHTMLElement<HTMLElement>[];\n\n    dummyManager: ModalizerDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (modalizer: Modalizer) => void,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined,\n        activeElements: WeakHTMLElement<HTMLElement>[]\n    ) {\n        super(tabster, element, props);\n\n        this.userId = props.id;\n        this._onDispose = onDispose;\n        this._activeElements = activeElements;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new ModalizerDummyManager(\n                this._element,\n                tabster,\n                sys\n            );\n        }\n\n        if (__DEV__) {\n            _setInformativeStyle(\n                this._element,\n                false,\n                this.id,\n                this.userId,\n                this._isActive,\n                this._wasFocused\n            );\n        }\n    }\n\n    makeActive(isActive: boolean): void {\n        if (this._isActive !== isActive) {\n            this._isActive = isActive;\n\n            const element = this.getElement();\n\n            if (element) {\n                const activeElements = this._activeElements;\n                const index = activeElements\n                    .map((e) => e.get())\n                    .indexOf(element);\n\n                if (isActive) {\n                    if (index < 0) {\n                        activeElements.push(\n                            new WeakHTMLElement(\n                                this._tabster.getWindow,\n                                element\n                            )\n                        );\n                    }\n                } else {\n                    if (index >= 0) {\n                        activeElements.splice(index, 1);\n                    }\n                }\n            }\n\n            if (__DEV__) {\n                _setInformativeStyle(\n                    this._element,\n                    false,\n                    this.id,\n                    this.userId,\n                    this._isActive,\n                    this._wasFocused\n                );\n            }\n\n            this.triggerFocusEvent(\n                isActive\n                    ? Types.ModalizerActiveEventName\n                    : Types.ModalizerInactiveEventName\n            );\n        }\n    }\n\n    focused(noIncrement?: boolean): number {\n        if (!noIncrement) {\n            this._wasFocused = ++_wasFocusedCounter;\n        }\n\n        return this._wasFocused;\n    }\n\n    setProps(props: Types.ModalizerProps): void {\n        if (props.id) {\n            this.userId = props.id;\n        }\n\n        this._props = { ...props };\n    }\n\n    dispose(): void {\n        this.makeActive(false);\n        this._onDispose(this);\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n        this._activeElements = [];\n        this._remove();\n    }\n\n    isActive(): boolean {\n        return !!this._isActive;\n    }\n\n    contains(element: HTMLElement) {\n        return dom.nodeContains(this.getElement(), element);\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const modalizerElement = this.getElement();\n\n        if (!modalizerElement) {\n            return null;\n        }\n\n        const tabster = this._tabster;\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        const container =\n            currentElement &&\n            RootAPI.getRoot(tabster, currentElement)?.getElement();\n\n        if (container) {\n            const findProps: Types.FindNextProps = {\n                container,\n                currentElement,\n                referenceElement,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = tabster.focusable[isBackward ? \"findPrev\" : \"findNext\"](\n                findProps,\n                findPropsOut\n            );\n\n            if (!next && this._props.isTrapped && tabster.modalizer?.activeId) {\n                next = tabster.focusable[isBackward ? \"findLast\" : \"findFirst\"](\n                    {\n                        container,\n                        ignoreAccessibility,\n                        useActiveModalizer: true,\n                    },\n                    findPropsOut\n                );\n\n                outOfDOMOrder = true;\n            } else {\n                outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            }\n\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    triggerFocusEvent(\n        eventName: Types.ModalizerEventName,\n        allElements?: boolean\n    ): boolean {\n        const element = this.getElement();\n        let defaultPrevented = false;\n\n        if (element) {\n            const elements = allElements\n                ? this._activeElements.map((e) => e.get())\n                : [element];\n\n            for (const el of elements) {\n                if (\n                    el &&\n                    !triggerEvent<Types.ModalizerEventDetails>(el, eventName, {\n                        id: this.userId,\n                        element,\n                        eventName,\n                    })\n                ) {\n                    defaultPrevented = true;\n                }\n            }\n        }\n\n        return defaultPrevented;\n    }\n\n    private _remove(): void {\n        if (__DEV__) {\n            _setInformativeStyle(this._element, true);\n        }\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateModalizerProps(props: Types.ModalizerProps): void {\n    // TODO: Implement validation.\n}\n\nexport class ModalizerAPI implements Types.ModalizerAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _restoreModalizerFocusTimer: number | undefined;\n    private _modalizers: Record<string, Types.Modalizer>;\n    private _parts: Record<string, Record<string, Types.Modalizer>>;\n    private _augMap: WeakMap<HTMLElement, true>;\n    private _aug: WeakHTMLElement<HTMLElement>[];\n    private _hiddenUpdateTimer: number | undefined;\n    private _alwaysAccessibleSelector: string | undefined;\n    private _accessibleCheck: Types.ModalizerElementAccessibleCheck | undefined;\n\n    activeId: string | undefined;\n    currentIsOthersAccessible: boolean | undefined;\n    activeElements: WeakHTMLElement<HTMLElement>[];\n\n    constructor(\n        tabster: Types.TabsterCore,\n        // @deprecated use accessibleCheck.\n        alwaysAccessibleSelector?: string,\n        accessibleCheck?: Types.ModalizerElementAccessibleCheck\n    ) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n        this._modalizers = {};\n        this._parts = {};\n        this._augMap = new WeakMap();\n        this._aug = [];\n        this._alwaysAccessibleSelector = alwaysAccessibleSelector;\n        this._accessibleCheck = accessibleCheck;\n        this.activeElements = [];\n\n        if (!tabster.controlTab) {\n            tabster.root.addDummyInputs();\n        }\n\n        const win = this._win();\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n\n        // Dispose all modalizers managed by the API\n        Object.keys(this._modalizers).forEach((modalizerId) => {\n            if (this._modalizers[modalizerId]) {\n                this._modalizers[modalizerId].dispose();\n                delete this._modalizers[modalizerId];\n            }\n        });\n\n        win.clearTimeout(this._restoreModalizerFocusTimer);\n        win.clearTimeout(this._hiddenUpdateTimer);\n\n        this._parts = {};\n        delete this.activeId;\n        this.activeElements = [];\n\n        this._augMap = new WeakMap();\n        this._aug = [];\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n    }\n\n    createModalizer(\n        element: HTMLElement,\n        props: Types.ModalizerProps,\n        sys: Types.SysProps | undefined\n    ): Types.Modalizer {\n        if (__DEV__) {\n            validateModalizerProps(props);\n        }\n\n        const modalizer = new Modalizer(\n            this._tabster,\n            element,\n            this._onModalizerDispose,\n            props,\n            sys,\n            this.activeElements\n        );\n\n        const id = modalizer.id;\n        const userId = props.id;\n\n        this._modalizers[id] = modalizer;\n\n        let part = this._parts[userId];\n        if (!part) {\n            part = this._parts[userId] = {};\n        }\n        part[id] = modalizer;\n\n        // Adding a modalizer which is already focused, activate it\n        if (\n            dom.nodeContains(\n                element,\n                this._tabster.focusedElement.getFocusedElement() ?? null\n            )\n        ) {\n            if (userId !== this.activeId) {\n                this.setActive(modalizer);\n            } else {\n                modalizer.makeActive(true);\n            }\n        }\n\n        return modalizer;\n    }\n\n    private _onModalizerDispose = (modalizer: Modalizer) => {\n        const id = modalizer.id;\n        const userId = modalizer.userId;\n        const part = this._parts[userId];\n\n        delete this._modalizers[id];\n\n        if (part) {\n            delete part[id];\n\n            if (Object.keys(part).length === 0) {\n                delete this._parts[userId];\n\n                if (this.activeId === userId) {\n                    this.setActive(undefined);\n                }\n            }\n        }\n    };\n\n    private _onKeyDown = (event: KeyboardEvent): void => {\n        if (event.keyCode !== Keys.Esc) {\n            return;\n        }\n\n        const tabster = this._tabster;\n        const element = tabster.focusedElement.getFocusedElement();\n\n        if (element) {\n            const ctx = RootAPI.getTabsterContext(tabster, element);\n            const modalizer = ctx?.modalizer;\n\n            if (\n                ctx &&\n                !ctx.groupper &&\n                modalizer?.isActive() &&\n                !ctx.ignoreKeydown(event)\n            ) {\n                const activeId = modalizer.userId;\n\n                if (activeId) {\n                    const part = this._parts[activeId];\n\n                    if (part) {\n                        const focusedSince = Object.keys(part)\n                            .map((id) => {\n                                const m = part[id];\n                                const el = m.getElement();\n                                let groupper: Types.Groupper | undefined;\n\n                                if (el) {\n                                    groupper = getTabsterOnElement(\n                                        this._tabster,\n                                        el\n                                    )?.groupper;\n                                }\n\n                                return m && el && groupper\n                                    ? {\n                                          el,\n                                          focusedSince: m.focused(true),\n                                      }\n                                    : { focusedSince: 0 };\n                            })\n                            .filter((f) => f.focusedSince > 0)\n                            .sort((a, b) =>\n                                a.focusedSince > b.focusedSince\n                                    ? -1\n                                    : a.focusedSince < b.focusedSince\n                                    ? 1\n                                    : 0\n                            );\n\n                        if (focusedSince.length) {\n                            const groupperElement = focusedSince[0].el;\n\n                            if (groupperElement) {\n                                tabster.groupper?.handleKeyPress(\n                                    groupperElement,\n                                    event,\n                                    true\n                                );\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    isAugmented(element: HTMLElement): boolean {\n        return this._augMap.has(element);\n    }\n\n    hiddenUpdate(): void {\n        if (this._hiddenUpdateTimer) {\n            return;\n        }\n\n        this._hiddenUpdateTimer = this._win().setTimeout(() => {\n            delete this._hiddenUpdateTimer;\n            this._hiddenUpdate();\n        }, 250);\n    }\n\n    setActive(modalizer: Types.Modalizer | undefined): void {\n        const userId = modalizer?.userId;\n        const activeId = this.activeId;\n\n        if (activeId === userId) {\n            return;\n        }\n\n        this.activeId = userId;\n\n        if (activeId) {\n            const part = this._parts[activeId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(false);\n                }\n            }\n        }\n\n        if (userId) {\n            const part = this._parts[userId];\n\n            if (part) {\n                for (const id of Object.keys(part)) {\n                    part[id].makeActive(true);\n                }\n            }\n        }\n\n        this.currentIsOthersAccessible =\n            modalizer?.getProps().isOthersAccessible;\n\n        this.hiddenUpdate();\n    }\n\n    focus(\n        elementFromModalizer: HTMLElement,\n        noFocusFirst?: boolean,\n        noFocusDefault?: boolean\n    ): boolean {\n        const ctx = RootAPI.getTabsterContext(\n            this._tabster,\n            elementFromModalizer\n        );\n\n        const modalizer = ctx?.modalizer;\n\n        if (modalizer) {\n            this.setActive(modalizer);\n\n            const props = modalizer.getProps();\n            const modalizerRoot = modalizer.getElement();\n\n            if (modalizerRoot) {\n                if (noFocusFirst === undefined) {\n                    noFocusFirst = props.isNoFocusFirst;\n                }\n\n                if (\n                    !noFocusFirst &&\n                    this._tabster.keyboardNavigation.isNavigatingWithKeyboard() &&\n                    this._tabster.focusedElement.focusFirst({\n                        container: modalizerRoot,\n                    })\n                ) {\n                    return true;\n                }\n\n                if (noFocusDefault === undefined) {\n                    noFocusDefault = props.isNoFocusDefault;\n                }\n\n                if (\n                    !noFocusDefault &&\n                    this._tabster.focusedElement.focusDefault(modalizerRoot)\n                ) {\n                    return true;\n                }\n\n                this._tabster.focusedElement.resetFocus(modalizerRoot);\n            }\n        } else if (__DEV__) {\n            console.error(\"Element is not in Modalizer.\", elementFromModalizer);\n        }\n\n        return false;\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        const modalizerUserId = state.modalizerUserId;\n        const currentModalizer = state.currentCtx?.modalizer;\n\n        if (modalizerUserId) {\n            for (const e of this.activeElements) {\n                const el = e.get();\n\n                if (el && (dom.nodeContains(element, el) || el === element)) {\n                    // We have a part of currently active modalizer somewhere deeper in the DOM,\n                    // skipping all other checks.\n                    return NodeFilter.FILTER_SKIP;\n                }\n            }\n        }\n\n        const ret =\n            modalizerUserId === currentModalizer?.userId ||\n            (!modalizerUserId &&\n                currentModalizer?.getProps().isAlwaysAccessible)\n                ? undefined\n                : NodeFilter.FILTER_SKIP;\n\n        if (ret !== undefined) {\n            state.skippedFocusable = true;\n        }\n\n        return ret;\n    }\n\n    private _hiddenUpdate(): void {\n        const tabster = this._tabster;\n        const body = tabster.getWindow().document.body;\n        const activeId = this.activeId;\n\n        const parts = this._parts;\n        const visibleElements: HTMLElement[] = [];\n        const hiddenElements: HTMLElement[] = [];\n        const alwaysAccessibleSelector = this._alwaysAccessibleSelector;\n        const alwaysAccessibleElements: HTMLElement[] = alwaysAccessibleSelector\n            ? Array.from(\n                  dom.querySelectorAll(\n                      body,\n                      alwaysAccessibleSelector\n                  ) as HTMLElement[]\n              )\n            : [];\n        const activeModalizerElements: HTMLElement[] = [];\n\n        for (const userId of Object.keys(parts)) {\n            const modalizerParts = parts[userId];\n\n            for (const id of Object.keys(modalizerParts)) {\n                const modalizer = modalizerParts[id];\n                const el = modalizer.getElement();\n                const props = modalizer.getProps();\n                const isAlwaysAccessible = props.isAlwaysAccessible;\n\n                if (el) {\n                    if (userId === activeId) {\n                        activeModalizerElements.push(el);\n\n                        if (!this.currentIsOthersAccessible) {\n                            visibleElements.push(el);\n                        }\n                    } else if (isAlwaysAccessible) {\n                        alwaysAccessibleElements.push(el);\n                    } else {\n                        hiddenElements.push(el);\n                    }\n                }\n            }\n        }\n\n        const augmentedMap = this._augMap;\n        const allVisibleElements: HTMLElement[] | undefined =\n            visibleElements.length > 0\n                ? [...visibleElements, ...alwaysAccessibleElements]\n                : undefined;\n\n        const newAugmented: WeakHTMLElement<HTMLElement>[] = [];\n        const newAugmentedMap: WeakMap<HTMLElement, true> = new WeakMap();\n\n        const toggle = (element: HTMLElement, hide: boolean) => {\n            const tagName = element.tagName;\n\n            if (tagName === \"SCRIPT\" || tagName === \"STYLE\") {\n                return;\n            }\n\n            let isAugmented = false;\n\n            if (augmentedMap.has(element)) {\n                if (hide) {\n                    isAugmented = true;\n                } else {\n                    augmentedMap.delete(element);\n                    augmentAttribute(tabster, element, _ariaHidden);\n                }\n            } else if (\n                hide &&\n                !this._accessibleCheck?.(element, activeModalizerElements) &&\n                augmentAttribute(tabster, element, _ariaHidden, \"true\")\n            ) {\n                augmentedMap.set(element, true);\n                isAugmented = true;\n            }\n\n            if (isAugmented) {\n                newAugmented.push(\n                    new WeakHTMLElement(tabster.getWindow, element)\n                );\n                newAugmentedMap.set(element, true);\n            }\n        };\n\n        const walk = (element: HTMLElement) => {\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                let skip = false;\n                let containsModalizer = false;\n\n                if (allVisibleElements) {\n                    for (const c of allVisibleElements) {\n                        if (el === c) {\n                            skip = true;\n                            break;\n                        }\n\n                        if (dom.nodeContains(el, c)) {\n                            containsModalizer = true;\n                            break;\n                        }\n                    }\n\n                    if (containsModalizer) {\n                        walk(el as HTMLElement);\n                    } else if (!skip) {\n                        toggle(el as HTMLElement, true);\n                    }\n                } else {\n                    toggle(el as HTMLElement, false);\n                }\n            }\n        };\n\n        if (!allVisibleElements) {\n            alwaysAccessibleElements.forEach((e) => toggle(e, false));\n        }\n\n        hiddenElements.forEach((e) => toggle(e, true));\n\n        if (body) {\n            walk(body);\n        }\n\n        this._aug\n            ?.map((e) => e.get())\n            .forEach((e) => {\n                if (e && !newAugmentedMap.get(e)) {\n                    toggle(e, false);\n                }\n            });\n\n        this._aug = newAugmented;\n        this._augMap = newAugmentedMap;\n    }\n\n    /**\n     * Subscribes to the focus state and handles modalizer related focus events\n     * @param e - Element that is focused\n     * @param details - Additional data about the focus event\n     */\n    private _onFocus = (\n        focusedElement: HTMLElement | undefined,\n        details: Types.FocusedElementDetails\n    ): void => {\n        const ctx =\n            focusedElement &&\n            RootAPI.getTabsterContext(this._tabster, focusedElement);\n\n        // Modalizer behaviour is opt in, only apply to elements that have a tabster context\n        if (!ctx || !focusedElement) {\n            return;\n        }\n\n        const augmentedMap = this._augMap;\n\n        for (\n            let e: HTMLElement | null = focusedElement;\n            e;\n            e = dom.getParentElement(e)\n        ) {\n            // If the newly focused element is inside some of the hidden containers,\n            // remove aria-hidden from those synchronously for the screen readers\n            // to be able to read the element. The rest of aria-hiddens, will be removed\n            // acynchronously for the sake of performance.\n\n            if (augmentedMap.has(e)) {\n                augmentedMap.delete(e);\n                augmentAttribute(this._tabster, e, _ariaHidden);\n            }\n        }\n\n        const modalizer = ctx.modalizer;\n\n        // An inactive groupper with the modalizer on the same node will not give the modalizer\n        // in the context, yet we still want to track that the modalizer's container was focused.\n        (\n            modalizer ||\n            getTabsterOnElement(this._tabster, focusedElement)?.modalizer\n        )?.focused();\n\n        if (modalizer?.userId === this.activeId) {\n            this.currentIsOthersAccessible =\n                modalizer?.getProps().isOthersAccessible;\n\n            return;\n        }\n\n        // Developers calling `element.focus()` should change/deactivate active modalizer\n        if (\n            details.isFocusedProgrammatically ||\n            this.currentIsOthersAccessible ||\n            modalizer?.getProps().isAlwaysAccessible\n        ) {\n            this.setActive(modalizer);\n        } else {\n            // Focused outside of the active modalizer, try pull focus back to current modalizer\n            const win = this._win();\n            win.clearTimeout(this._restoreModalizerFocusTimer);\n            // TODO some rendering frameworks (i.e. React) might async rerender the DOM so we need to wait for a duration\n            // Figure out a better way of doing this rather than a 100ms timeout\n            this._restoreModalizerFocusTimer = win.setTimeout(\n                () => this._restoreModalizerFocus(focusedElement),\n                100\n            );\n        }\n    };\n\n    /**\n     * Called when an element is focused outside of an active modalizer.\n     * Attempts to pull focus back into the active modalizer\n     * @param outsideElement - An element being focused outside of the modalizer\n     */\n    private _restoreModalizerFocus(\n        outsideElement: HTMLElement | undefined\n    ): void {\n        const ownerDocument = outsideElement?.ownerDocument;\n\n        if (!outsideElement || !ownerDocument) {\n            return;\n        }\n\n        const ctx = RootAPI.getTabsterContext(this._tabster, outsideElement);\n        const modalizer = ctx?.modalizer;\n        const activeId = this.activeId;\n\n        if (\n            (!modalizer && !activeId) ||\n            (modalizer && activeId === modalizer.userId)\n        ) {\n            return;\n        }\n\n        const container = ctx?.root.getElement();\n\n        if (container) {\n            let toFocus = this._tabster.focusable.findFirst({\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (toFocus) {\n                if (\n                    outsideElement.compareDocumentPosition(toFocus) &\n                    document.DOCUMENT_POSITION_PRECEDING\n                ) {\n                    toFocus = this._tabster.focusable.findLast({\n                        container,\n                        useActiveModalizer: true,\n                    });\n\n                    if (!toFocus) {\n                        // This only might mean that findFirst/findLast are buggy and inconsistent.\n                        throw new Error(\"Something went wrong.\");\n                    }\n                }\n\n                this._tabster.focusedElement.focus(toFocus);\n\n                return;\n            }\n        }\n\n        // Current Modalizer doesn't seem to have focusable elements.\n        // Blurring the currently focused element which is outside of the current Modalizer.\n        outsideElement.blur();\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nativeFocus } from \"keyborg\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { getTabsterOnElement } from \"./Instance\";\nimport { Keys } from \"./Keys\";\nimport { RootAPI } from \"./Root\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    DummyInput,\n    DummyInputManager,\n    DummyInputManagerPriorities,\n    getElementUId,\n    getPromise,\n    HTMLElementWithDummyContainer,\n    isElementVerticallyVisibleInContainer,\n    matchesSelector,\n    scrollIntoView,\n    TabsterPart,\n    triggerEvent,\n    dispatchMoveFocusEvent,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst _inputSelector = [\"input\", \"textarea\", \"*[contenteditable]\"].join(\", \");\n\nclass MoverDummyManager extends DummyInputManager {\n    private _tabster: Types.TabsterCore;\n    private _getMemorized: () => WeakHTMLElement | undefined;\n\n    constructor(\n        element: WeakHTMLElement,\n        tabster: Types.TabsterCore,\n        getMemorized: () => WeakHTMLElement | undefined,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, DummyInputManagerPriorities.Mover, sys);\n\n        this._tabster = tabster;\n        this._getMemorized = getMemorized;\n\n        this._setHandlers(this._onFocusDummyInput);\n    }\n\n    private _onFocusDummyInput = (dummyInput: DummyInput) => {\n        const container = this._element.get();\n        const input = dummyInput.input;\n\n        if (container && input) {\n            const ctx = RootAPI.getTabsterContext(this._tabster, container);\n\n            let toFocus: HTMLElement | null | undefined;\n\n            if (ctx) {\n                toFocus = FocusedElementState.findNextTabbable(\n                    this._tabster,\n                    ctx,\n                    undefined,\n                    input,\n                    undefined,\n                    !dummyInput.isFirst,\n                    true\n                )?.element;\n            }\n\n            const memorized = this._getMemorized()?.get();\n            if (memorized) {\n                toFocus = memorized;\n            }\n\n            if (toFocus) {\n                nativeFocus(toFocus);\n            }\n        }\n    };\n}\n\n// TypeScript enums produce depressing JavaScript code, so, we're just using\n// a few old style constants here.\nconst _moverUpdateAdd = 1;\nconst _moverUpdateAttr = 2;\nconst _moverUpdateRemove = 3;\n\ninterface MoverUpdateQueueItem {\n    element: HTMLElement;\n    type:\n        | typeof _moverUpdateAdd\n        | typeof _moverUpdateAttr\n        | typeof _moverUpdateRemove;\n}\n\nexport class Mover\n    extends TabsterPart<Types.MoverProps>\n    implements Types.Mover\n{\n    private _unobserve: (() => void) | undefined;\n    private _intersectionObserver: IntersectionObserver | undefined;\n    private _setCurrentTimer: number | undefined;\n    private _current: WeakHTMLElement | undefined;\n    private _prevCurrent: WeakHTMLElement | undefined;\n    private _visible: Record<string, Types.Visibility> = {};\n    private _fullyVisible: string | undefined;\n    private _win: Types.GetWindow;\n    private _onDispose: (mover: Mover) => void;\n    private _allElements: WeakMap<HTMLElement, Mover> | undefined;\n    private _updateQueue: MoverUpdateQueueItem[] | undefined;\n    private _updateTimer: number | undefined;\n\n    visibilityTolerance: number;\n    dummyManager: MoverDummyManager | undefined;\n\n    constructor(\n        tabster: Types.TabsterCore,\n        element: HTMLElement,\n        onDispose: (mover: Mover) => void,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ) {\n        super(tabster, element, props);\n\n        this._win = tabster.getWindow;\n        this.visibilityTolerance = props.visibilityTolerance ?? 0.8;\n\n        if (this._props.trackState || this._props.visibilityAware) {\n            this._intersectionObserver = new IntersectionObserver(\n                this._onIntersection,\n                { threshold: [0, 0.25, 0.5, 0.75, 1] }\n            );\n            this._observeState();\n        }\n\n        this._onDispose = onDispose;\n        const getMemorized = () =>\n            props.memorizeCurrent ? this._current : undefined;\n\n        if (!tabster.controlTab) {\n            this.dummyManager = new MoverDummyManager(\n                this._element,\n                tabster,\n                getMemorized,\n                sys\n            );\n        }\n    }\n\n    dispose(): void {\n        this._onDispose(this);\n\n        if (this._intersectionObserver) {\n            this._intersectionObserver.disconnect();\n            delete this._intersectionObserver;\n        }\n\n        delete this._current;\n        delete this._fullyVisible;\n        delete this._allElements;\n        delete this._updateQueue;\n\n        if (this._unobserve) {\n            this._unobserve();\n            delete this._unobserve;\n        }\n\n        const win = this._win();\n\n        if (this._setCurrentTimer) {\n            win.clearTimeout(this._setCurrentTimer);\n            delete this._setCurrentTimer;\n        }\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            delete this._updateTimer;\n        }\n\n        this.dummyManager?.dispose();\n        delete this.dummyManager;\n    }\n\n    setCurrent(element: HTMLElement | undefined): void {\n        if (element) {\n            this._current = new WeakHTMLElement(this._win, element);\n        } else {\n            this._current = undefined;\n        }\n\n        if (\n            (this._props.trackState || this._props.visibilityAware) &&\n            !this._setCurrentTimer\n        ) {\n            this._setCurrentTimer = this._win().setTimeout(() => {\n                delete this._setCurrentTimer;\n\n                const changed: (WeakHTMLElement | undefined)[] = [];\n\n                if (this._current !== this._prevCurrent) {\n                    changed.push(this._current);\n                    changed.push(this._prevCurrent);\n                    this._prevCurrent = this._current;\n                }\n\n                for (const weak of changed) {\n                    const el = weak?.get();\n\n                    if (el && this._allElements?.get(el) === this) {\n                        const props = this._props;\n\n                        if (\n                            el &&\n                            (props.visibilityAware !== undefined ||\n                                props.trackState)\n                        ) {\n                            const state = this.getState(el);\n\n                            if (state) {\n                                triggerEvent(el, Types.MoverEventName, state);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    getCurrent(): HTMLElement | null {\n        return this._current?.get() || null;\n    }\n\n    findNextTabbable(\n        currentElement?: HTMLElement,\n        referenceElement?: HTMLElement,\n        isBackward?: boolean,\n        ignoreAccessibility?: boolean\n    ): Types.NextTabbable | null {\n        const container = this.getElement();\n        const currentIsDummy =\n            container &&\n            (\n                currentElement as HTMLElementWithDummyContainer\n            )?.__tabsterDummyContainer?.get() === container;\n\n        if (!container) {\n            return null;\n        }\n\n        let next: HTMLElement | null | undefined = null;\n        let outOfDOMOrder = false;\n        let uncontrolled: HTMLElement | null | undefined;\n\n        if (\n            this._props.tabbable ||\n            currentIsDummy ||\n            (currentElement && !dom.nodeContains(container, currentElement))\n        ) {\n            const findProps: Types.FindNextProps = {\n                currentElement,\n                referenceElement,\n                container,\n                ignoreAccessibility,\n                useActiveModalizer: true,\n            };\n\n            const findPropsOut: Types.FindFocusableOutputProps = {};\n\n            next = this._tabster.focusable[\n                isBackward ? \"findPrev\" : \"findNext\"\n            ](findProps, findPropsOut);\n\n            outOfDOMOrder = !!findPropsOut.outOfDOMOrder;\n            uncontrolled = findPropsOut.uncontrolled;\n        }\n\n        return {\n            element: next,\n            uncontrolled,\n            outOfDOMOrder,\n        };\n    }\n\n    acceptElement(\n        element: HTMLElement,\n        state: Types.FocusableAcceptElementState\n    ): number | undefined {\n        if (!FocusedElementState.isTabbing) {\n            return state.currentCtx?.excludedFromMover\n                ? NodeFilter.FILTER_REJECT\n                : undefined;\n        }\n\n        const {\n            memorizeCurrent,\n            visibilityAware,\n            hasDefault = true,\n        } = this._props;\n        const moverElement = this.getElement();\n\n        if (\n            moverElement &&\n            (memorizeCurrent || visibilityAware || hasDefault) &&\n            (!dom.nodeContains(moverElement, state.from) ||\n                (\n                    state.from as HTMLElementWithDummyContainer\n                ).__tabsterDummyContainer?.get() === moverElement)\n        ) {\n            let found: HTMLElement | undefined | null;\n\n            if (memorizeCurrent) {\n                const current = this._current?.get();\n\n                if (current && state.acceptCondition(current)) {\n                    found = current;\n                }\n            }\n\n            if (!found && hasDefault) {\n                found = this._tabster.focusable.findDefault({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                });\n            }\n\n            if (!found && visibilityAware) {\n                found = this._tabster.focusable.findElement({\n                    container: moverElement,\n                    useActiveModalizer: true,\n                    isBackward: state.isBackward,\n                    acceptCondition: (el) => {\n                        const id = getElementUId(this._win, el);\n                        const visibility = this._visible[id];\n\n                        return (\n                            moverElement !== el &&\n                            !!this._allElements?.get(el) &&\n                            state.acceptCondition(el) &&\n                            (visibility === Types.Visibilities.Visible ||\n                                (visibility ===\n                                    Types.Visibilities.PartiallyVisible &&\n                                    (visibilityAware ===\n                                        Types.Visibilities.PartiallyVisible ||\n                                        !this._fullyVisible)))\n                        );\n                    },\n                });\n            }\n\n            if (found) {\n                state.found = true;\n                state.foundElement = found;\n                state.rejectElementsFrom = moverElement;\n                state.skippedFocusable = true;\n                return NodeFilter.FILTER_ACCEPT;\n            }\n        }\n\n        return undefined;\n    }\n\n    private _onIntersection = (entries: IntersectionObserverEntry[]): void => {\n        for (const entry of entries) {\n            const el = entry.target as HTMLElement;\n            const id = getElementUId(this._win, el);\n\n            let newVisibility: Types.Visibility;\n            let fullyVisible = this._fullyVisible;\n\n            if (entry.intersectionRatio >= 0.25) {\n                newVisibility =\n                    entry.intersectionRatio >= 0.75\n                        ? Types.Visibilities.Visible\n                        : Types.Visibilities.PartiallyVisible;\n\n                if (newVisibility === Types.Visibilities.Visible) {\n                    fullyVisible = id;\n                }\n            } else {\n                newVisibility = Types.Visibilities.Invisible;\n            }\n\n            if (this._visible[id] !== newVisibility) {\n                if (newVisibility === undefined) {\n                    delete this._visible[id];\n\n                    if (fullyVisible === id) {\n                        delete this._fullyVisible;\n                    }\n                } else {\n                    this._visible[id] = newVisibility;\n                    this._fullyVisible = fullyVisible;\n                }\n\n                const state = this.getState(el);\n\n                if (state) {\n                    triggerEvent(el, Types.MoverEventName, state);\n                }\n            }\n        }\n    };\n\n    private _observeState(): void {\n        const element = this.getElement();\n\n        if (\n            this._unobserve ||\n            !element ||\n            typeof MutationObserver === \"undefined\"\n        ) {\n            return;\n        }\n\n        const win = this._win();\n        const allElements = (this._allElements = new WeakMap());\n        const tabsterFocusable = this._tabster.focusable;\n        let updateQueue: MoverUpdateQueueItem[] = (this._updateQueue = []);\n\n        const observer = dom.createMutationObserver(\n            (mutations: MutationRecord[]) => {\n                for (const mutation of mutations) {\n                    const target = mutation.target;\n                    const removed = mutation.removedNodes;\n                    const added = mutation.addedNodes;\n\n                    if (mutation.type === \"attributes\") {\n                        if (mutation.attributeName === \"tabindex\") {\n                            updateQueue.push({\n                                element: target as HTMLElement,\n                                type: _moverUpdateAttr,\n                            });\n                        }\n                    } else {\n                        for (let i = 0; i < removed.length; i++) {\n                            updateQueue.push({\n                                element: removed[\n                                    i\n                                ] as HTMLElement as HTMLElement,\n                                type: _moverUpdateRemove,\n                            });\n                        }\n\n                        for (let i = 0; i < added.length; i++) {\n                            updateQueue.push({\n                                element: added[i] as HTMLElement,\n                                type: _moverUpdateAdd,\n                            });\n                        }\n                    }\n                }\n\n                requestUpdate();\n            }\n        );\n\n        const setElement = (element: HTMLElement, remove?: boolean): void => {\n            const current = allElements.get(element);\n\n            if (current && remove) {\n                this._intersectionObserver?.unobserve(element);\n                allElements.delete(element);\n            }\n\n            if (!current && !remove) {\n                allElements.set(element, this);\n                this._intersectionObserver?.observe(element);\n            }\n        };\n\n        const updateElement = (element: HTMLElement): void => {\n            const isFocusable = tabsterFocusable.isFocusable(element);\n            const current = allElements.get(element);\n\n            if (current) {\n                if (!isFocusable) {\n                    setElement(element, true);\n                }\n            } else {\n                if (isFocusable) {\n                    setElement(element);\n                }\n            }\n        };\n\n        const addNewElements = (element: HTMLElement): void => {\n            const { mover } = getMoverGroupper(element);\n\n            if (mover && mover !== this) {\n                if (\n                    mover.getElement() === element &&\n                    tabsterFocusable.isFocusable(element)\n                ) {\n                    setElement(element);\n                } else {\n                    return;\n                }\n            }\n\n            const walker = createElementTreeWalker(\n                win.document,\n                element,\n                (node: Node): number => {\n                    const { mover, groupper } = getMoverGroupper(\n                        node as HTMLElement\n                    );\n\n                    if (mover && mover !== this) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    const groupperFirstFocusable = groupper?.getFirst(true);\n\n                    if (\n                        groupper &&\n                        groupper.getElement() !== node &&\n                        groupperFirstFocusable &&\n                        groupperFirstFocusable !== node\n                    ) {\n                        return NodeFilter.FILTER_REJECT;\n                    }\n\n                    if (tabsterFocusable.isFocusable(node as HTMLElement)) {\n                        setElement(node as HTMLElement);\n                    }\n\n                    return NodeFilter.FILTER_SKIP;\n                }\n            );\n\n            if (walker) {\n                walker.currentNode = element;\n\n                while (walker.nextNode()) {\n                    /* Iterating for the sake of calling processNode() callback. */\n                }\n            }\n        };\n\n        const removeWalk = (element: HTMLElement): void => {\n            const current = allElements.get(element);\n\n            if (current) {\n                setElement(element, true);\n            }\n\n            for (\n                let el = dom.getFirstElementChild(element);\n                el;\n                el = dom.getNextElementSibling(el)\n            ) {\n                removeWalk(el as HTMLElement);\n            }\n        };\n\n        const requestUpdate = () => {\n            if (!this._updateTimer && updateQueue.length) {\n                this._updateTimer = win.setTimeout(() => {\n                    delete this._updateTimer;\n\n                    for (const { element, type } of updateQueue) {\n                        switch (type) {\n                            case _moverUpdateAttr:\n                                updateElement(element);\n                                break;\n                            case _moverUpdateAdd:\n                                addNewElements(element);\n                                break;\n                            case _moverUpdateRemove:\n                                removeWalk(element);\n                                break;\n                        }\n                    }\n\n                    updateQueue = this._updateQueue = [];\n                }, 0);\n            }\n        };\n\n        const getMoverGroupper = (\n            element: HTMLElement\n        ): { mover?: Mover; groupper?: Types.Groupper } => {\n            const ret: {\n                mover?: Mover;\n                groupper?: Types.Groupper;\n            } = {};\n\n            for (\n                let el: HTMLElement | null = element;\n                el;\n                el = dom.getParentElement(el)\n            ) {\n                const toe = getTabsterOnElement(this._tabster, el);\n\n                if (toe) {\n                    if (toe.groupper && !ret.groupper) {\n                        ret.groupper = toe.groupper;\n                    }\n\n                    if (toe.mover) {\n                        ret.mover = toe.mover as Mover;\n                        break;\n                    }\n                }\n            }\n\n            return ret;\n        };\n\n        updateQueue.push({ element, type: _moverUpdateAdd });\n        requestUpdate();\n\n        observer.observe(element, {\n            childList: true,\n            subtree: true,\n            attributes: true,\n            attributeFilter: [\"tabindex\"],\n        });\n\n        this._unobserve = () => {\n            observer.disconnect();\n        };\n    }\n\n    getState(element: HTMLElement): Types.MoverElementState | undefined {\n        const id = getElementUId(this._win, element);\n\n        if (id in this._visible) {\n            const visibility =\n                this._visible[id] || Types.Visibilities.Invisible;\n            const isCurrent = this._current\n                ? this._current.get() === element\n                : undefined;\n\n            return {\n                isCurrent,\n                visibility,\n            };\n        }\n\n        return undefined;\n    }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction validateMoverProps(props: Types.MoverProps): void {\n    // TODO: Implement validation.\n}\n\n/**\n * Calculates distance between two rectangles.\n *\n * @param ax1 first rectangle left\n * @param ay1 first rectangle top\n * @param ax2 first rectangle right\n * @param ay2 first rectangle bottom\n * @param bx1 second rectangle left\n * @param by1 second rectangle top\n * @param bx2 second rectangle right\n * @param by2 second rectangle bottom\n * @returns number, shortest distance between the rectangles.\n */\nfunction getDistance(\n    ax1: number,\n    ay1: number,\n    ax2: number,\n    ay2: number,\n    bx1: number,\n    by1: number,\n    bx2: number,\n    by2: number\n): number {\n    const xDistance = ax2 < bx1 ? bx1 - ax2 : bx2 < ax1 ? ax1 - bx2 : 0;\n    const yDistance = ay2 < by1 ? by1 - ay2 : by2 < ay1 ? ay1 - by2 : 0;\n\n    return xDistance === 0\n        ? yDistance\n        : yDistance === 0\n        ? xDistance\n        : Math.sqrt(xDistance * xDistance + yDistance * yDistance);\n}\n\nexport class MoverAPI implements Types.MoverAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _movers: Record<string, Mover>;\n    private _ignoredInputTimer: number | undefined;\n    private _ignoredInputResolve: ((value: boolean) => void) | undefined;\n\n    constructor(tabster: Types.TabsterCore, getWindow: Types.GetWindow) {\n        this._tabster = tabster;\n        this._win = getWindow;\n        this._movers = {};\n\n        tabster.queueInit(this._init);\n    }\n\n    private _init = (): void => {\n        const win = this._win();\n\n        win.addEventListener(\"keydown\", this._onKeyDown, true);\n        win.addEventListener(Types.MoverMoveFocusEventName, this._onMoveFocus);\n\n        this._tabster.focusedElement.subscribe(this._onFocus);\n    };\n\n    dispose(): void {\n        const win = this._win();\n\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        this._ignoredInputResolve?.(false);\n\n        if (this._ignoredInputTimer) {\n            win.clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        win.removeEventListener(\"keydown\", this._onKeyDown, true);\n        win.removeEventListener(\n            Types.MoverMoveFocusEventName,\n            this._onMoveFocus\n        );\n\n        Object.keys(this._movers).forEach((moverId) => {\n            if (this._movers[moverId]) {\n                this._movers[moverId].dispose();\n                delete this._movers[moverId];\n            }\n        });\n    }\n\n    createMover(\n        element: HTMLElement,\n        props: Types.MoverProps,\n        sys: Types.SysProps | undefined\n    ): Types.Mover {\n        if (__DEV__) {\n            validateMoverProps(props);\n        }\n\n        const newMover = new Mover(\n            this._tabster,\n            element,\n            this._onMoverDispose,\n            props,\n            sys\n        );\n        this._movers[newMover.id] = newMover;\n        return newMover;\n    }\n\n    private _onMoverDispose = (mover: Mover) => {\n        delete this._movers[mover.id];\n    };\n\n    private _onFocus = (element: HTMLElement | undefined): void => {\n        // When something in the app gets focused, we are making sure that\n        // the relevant context Mover is aware of it.\n        // Looking for the relevant context Mover from the currently\n        // focused element parent, not from the element itself, because the\n        // Mover element itself cannot be its own current (but might be\n        // current for its parent Mover).\n        let currentFocusableElement = element;\n        let deepestFocusableElement = element;\n\n        for (\n            let el: HTMLElement | null | undefined =\n                dom.getParentElement(element);\n            el;\n            el = dom.getParentElement(el)\n        ) {\n            // We go through all Movers up from the focused element and\n            // set their current element to the deepest focusable of that\n            // Mover.\n            const mover = getTabsterOnElement(this._tabster, el)?.mover;\n\n            if (mover) {\n                mover.setCurrent(deepestFocusableElement);\n                currentFocusableElement = undefined;\n            }\n\n            if (\n                !currentFocusableElement &&\n                this._tabster.focusable.isFocusable(el)\n            ) {\n                currentFocusableElement = deepestFocusableElement = el;\n            }\n        }\n    };\n\n    moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey\n    ): HTMLElement | null {\n        return this._moveFocus(fromElement, key);\n    }\n\n    private _moveFocus(\n        fromElement: HTMLElement,\n        key: Types.MoverKey,\n        relatedEvent?: KeyboardEvent\n    ): HTMLElement | null {\n        const tabster = this._tabster;\n        const ctx = RootAPI.getTabsterContext(tabster, fromElement, {\n            checkRtl: true,\n        });\n\n        if (\n            !ctx ||\n            !ctx.mover ||\n            ctx.excludedFromMover ||\n            (relatedEvent && ctx.ignoreKeydown(relatedEvent))\n        ) {\n            return null;\n        }\n\n        const mover = ctx.mover;\n        const container = mover.getElement();\n\n        if (ctx.groupperBeforeMover) {\n            const groupper = ctx.groupper;\n\n            if (groupper && !groupper.isActive(true)) {\n                // For the cases when we have Mover/Active Groupper/Inactive Groupper, we need to check\n                // the grouppers between the current element and the current mover.\n                for (\n                    let el: HTMLElement | null | undefined =\n                        dom.getParentElement(groupper.getElement());\n                    el && el !== container;\n                    el = dom.getParentElement(el)\n                ) {\n                    if (\n                        getTabsterOnElement(tabster, el)?.groupper?.isActive(\n                            true\n                        )\n                    ) {\n                        return null;\n                    }\n                }\n            } else {\n                return null;\n            }\n        }\n\n        if (!container) {\n            return null;\n        }\n\n        const focusable = tabster.focusable;\n        const moverProps = mover.getProps();\n        const direction = moverProps.direction || Types.MoverDirections.Both;\n        const isBoth = direction === Types.MoverDirections.Both;\n        const isVertical =\n            isBoth || direction === Types.MoverDirections.Vertical;\n        const isHorizontal =\n            isBoth || direction === Types.MoverDirections.Horizontal;\n        const isGridLinear = direction === Types.MoverDirections.GridLinear;\n        const isGrid = isGridLinear || direction === Types.MoverDirections.Grid;\n        const isCyclic = moverProps.cyclic;\n\n        let next: HTMLElement | null | undefined;\n        let scrollIntoViewArg: boolean | undefined;\n\n        let focusedElementRect: DOMRect;\n        let focusedElementX1 = 0;\n        let focusedElementX2 = 0;\n\n        if (isGrid) {\n            focusedElementRect = fromElement.getBoundingClientRect();\n            focusedElementX1 = Math.ceil(focusedElementRect.left);\n            focusedElementX2 = Math.floor(focusedElementRect.right);\n        }\n\n        if (ctx.rtl) {\n            if (key === Types.MoverKeys.ArrowRight) {\n                key = Types.MoverKeys.ArrowLeft;\n            } else if (key === Types.MoverKeys.ArrowLeft) {\n                key = Types.MoverKeys.ArrowRight;\n            }\n        }\n\n        if (\n            (key === Types.MoverKeys.ArrowDown && isVertical) ||\n            (key === Types.MoverKeys.ArrowRight && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findNext({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n\n                if (!isGridLinear && focusedElementX2 > nextElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (\n            (key === Types.MoverKeys.ArrowUp && isVertical) ||\n            (key === Types.MoverKeys.ArrowLeft && (isHorizontal || isGrid))\n        ) {\n            next = focusable.findPrev({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n            });\n\n            if (next && isGrid) {\n                const nextElementX2 = Math.floor(\n                    next.getBoundingClientRect().right\n                );\n\n                if (!isGridLinear && nextElementX2 > focusedElementX1) {\n                    next = undefined;\n                }\n            } else if (!next && isCyclic) {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === Types.MoverKeys.Home) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findFirst({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === Types.MoverKeys.End) {\n            if (isGrid) {\n                focusable.findElement({\n                    container,\n                    currentElement: fromElement,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left ?? 0\n                        );\n\n                        if (\n                            el !== fromElement &&\n                            focusedElementX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n\n                        next = el;\n                        return false;\n                    },\n                });\n            } else {\n                next = focusable.findLast({\n                    container,\n                    useActiveModalizer: true,\n                });\n            }\n        } else if (key === Types.MoverKeys.PageUp) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                isBackward: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the first column move forward and preserve previous column\n            if (isGrid && next) {\n                const firstColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 < nextElementX1 ||\n                            firstColumnX1 >= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = false;\n        } else if (key === Types.MoverKeys.PageDown) {\n            focusable.findElement({\n                currentElement: fromElement,\n                container,\n                useActiveModalizer: true,\n                acceptCondition: (el) => {\n                    if (!focusable.isFocusable(el)) {\n                        return false;\n                    }\n\n                    if (\n                        isElementVerticallyVisibleInContainer(\n                            this._win,\n                            el,\n                            mover.visibilityTolerance\n                        )\n                    ) {\n                        next = el;\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            // will be on the last column move backwards and preserve previous column\n            if (isGrid && next) {\n                const lastColumnX1 = Math.ceil(\n                    next.getBoundingClientRect().left\n                );\n                focusable.findElement({\n                    currentElement: next,\n                    container,\n                    useActiveModalizer: true,\n                    isBackward: true,\n                    acceptCondition: (el) => {\n                        if (!focusable.isFocusable(el)) {\n                            return false;\n                        }\n\n                        const nextElementX1 = Math.ceil(\n                            el.getBoundingClientRect().left\n                        );\n                        if (\n                            focusedElementX1 > nextElementX1 ||\n                            lastColumnX1 <= nextElementX1\n                        ) {\n                            return true;\n                        }\n                        next = el;\n                        return false;\n                    },\n                });\n            }\n\n            scrollIntoViewArg = true;\n        } else if (isGrid) {\n            const isBackward = key === Types.MoverKeys.ArrowUp;\n            const ax1 = focusedElementX1;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay1 = Math.ceil(focusedElementRect!.top);\n            const ax2 = focusedElementX2;\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            const ay2 = Math.floor(focusedElementRect!.bottom);\n            let targetElement: HTMLElement | undefined;\n            let lastDistance: number | undefined;\n            let lastIntersection = 0;\n\n            focusable.findAll({\n                container,\n                currentElement: fromElement,\n                isBackward,\n                onElement: (el) => {\n                    // Find element which has maximal intersection with the focused element horizontally,\n                    // or the closest one.\n                    const rect = el.getBoundingClientRect();\n\n                    const bx1 = Math.ceil(rect.left);\n                    const by1 = Math.ceil(rect.top);\n                    const bx2 = Math.floor(rect.right);\n                    const by2 = Math.floor(rect.bottom);\n\n                    if (\n                        (isBackward && ay1 < by2) ||\n                        (!isBackward && ay2 > by1)\n                    ) {\n                        // Only consider elements which are below/above curretly focused.\n                        return true;\n                    }\n\n                    const xIntersectionWidth =\n                        Math.ceil(Math.min(ax2, bx2)) -\n                        Math.floor(Math.max(ax1, bx1));\n                    const minWidth = Math.ceil(Math.min(ax2 - ax1, bx2 - bx1));\n\n                    if (\n                        xIntersectionWidth > 0 &&\n                        minWidth >= xIntersectionWidth\n                    ) {\n                        // Element intersects with the focused element on X axis.\n                        const intersection = xIntersectionWidth / minWidth;\n\n                        if (intersection > lastIntersection) {\n                            targetElement = el;\n                            lastIntersection = intersection;\n                        }\n                    } else if (lastIntersection === 0) {\n                        // If we didn't have intersection, try just the closest one.\n                        const distance = getDistance(\n                            ax1,\n                            ay1,\n                            ax2,\n                            ay2,\n                            bx1,\n                            by1,\n                            bx2,\n                            by2\n                        );\n\n                        if (\n                            lastDistance === undefined ||\n                            distance < lastDistance\n                        ) {\n                            lastDistance = distance;\n                            targetElement = el;\n                        }\n                    } else if (lastIntersection > 0) {\n                        // Element doesn't intersect, but we had intersection already, stop search.\n                        return false;\n                    }\n\n                    return true;\n                },\n            });\n\n            next = targetElement;\n        }\n\n        if (\n            next &&\n            (!relatedEvent ||\n                (relatedEvent &&\n                    dispatchMoveFocusEvent({\n                        by: \"mover\",\n                        owner: container,\n                        next,\n                        relatedEvent,\n                    })))\n        ) {\n            if (scrollIntoViewArg !== undefined) {\n                scrollIntoView(this._win, next, scrollIntoViewArg);\n            }\n\n            if (relatedEvent) {\n                relatedEvent.preventDefault();\n                relatedEvent.stopImmediatePropagation();\n            }\n\n            nativeFocus(next);\n\n            return next;\n        }\n\n        return null;\n    }\n\n    private _onKeyDown = async (event: KeyboardEvent): Promise<void> => {\n        if (this._ignoredInputTimer) {\n            this._win().clearTimeout(this._ignoredInputTimer);\n            delete this._ignoredInputTimer;\n        }\n\n        this._ignoredInputResolve?.(false);\n\n        // Give a chance to other listeners to handle the event (for example,\n        // to scroll instead of moving focus).\n        if (event.ctrlKey || event.altKey || event.shiftKey || event.metaKey) {\n            return;\n        }\n\n        const keyCode = event.keyCode;\n        let moverKey: Types.MoverKey | undefined;\n\n        if (keyCode === Keys.Down) {\n            moverKey = Types.MoverKeys.ArrowDown;\n        } else if (keyCode === Keys.Right) {\n            moverKey = Types.MoverKeys.ArrowRight;\n        } else if (keyCode === Keys.Up) {\n            moverKey = Types.MoverKeys.ArrowUp;\n        } else if (keyCode === Keys.Left) {\n            moverKey = Types.MoverKeys.ArrowLeft;\n        } else if (keyCode === Keys.PageDown) {\n            moverKey = Types.MoverKeys.PageDown;\n        } else if (keyCode === Keys.PageUp) {\n            moverKey = Types.MoverKeys.PageUp;\n        } else if (keyCode === Keys.Home) {\n            moverKey = Types.MoverKeys.Home;\n        } else if (keyCode === Keys.End) {\n            moverKey = Types.MoverKeys.End;\n        }\n\n        if (!moverKey) {\n            return;\n        }\n\n        const focused = this._tabster.focusedElement.getFocusedElement();\n\n        if (!focused || (await this._isIgnoredInput(focused, keyCode))) {\n            return;\n        }\n\n        this._moveFocus(focused, moverKey, event);\n    };\n\n    private _onMoveFocus = (e: Types.MoverMoveFocusEvent): void => {\n        const element = e.composedPath()[0] as HTMLElement | null | undefined;\n        const key = e.detail?.key;\n\n        if (element && key !== undefined && !e.defaultPrevented) {\n            this._moveFocus(element, key);\n            e.stopImmediatePropagation();\n        }\n    };\n\n    private async _isIgnoredInput(\n        element: HTMLElement,\n        keyCode: number\n    ): Promise<boolean> {\n        if (\n            element.getAttribute(\"aria-expanded\") === \"true\" &&\n            element.hasAttribute(\"aria-activedescendant\")\n        ) {\n            // It is likely a combobox with expanded options and arrow keys are\n            // controlled by it.\n            return true;\n        }\n\n        if (matchesSelector(element, _inputSelector)) {\n            let selectionStart = 0;\n            let selectionEnd = 0;\n            let textLength = 0;\n            let asyncRet: Promise<boolean> | undefined;\n\n            if (element.tagName === \"INPUT\" || element.tagName === \"TEXTAREA\") {\n                const type = (element as HTMLInputElement).type;\n                const value = (element as HTMLInputElement).value;\n\n                textLength = (value || \"\").length;\n\n                if (type === \"email\" || type === \"number\") {\n                    // For these types Chromium doesn't provide selectionStart and selectionEnd.\n                    // Hence the ugly workaround to find if the caret position is changed with\n                    // the keypress.\n                    // TODO: Have a look at range, week, time, time, date, datetime-local.\n                    if (textLength) {\n                        const selection = dom.getSelection(element);\n\n                        if (selection) {\n                            const initialLength = selection.toString().length;\n                            const isBackward =\n                                keyCode === Keys.Left || keyCode === Keys.Up;\n\n                            selection.modify(\n                                \"extend\",\n                                isBackward ? \"backward\" : \"forward\",\n                                \"character\"\n                            );\n\n                            if (initialLength !== selection.toString().length) {\n                                // The caret is moved, so, we're not on the edge of the value.\n                                // Restore original selection.\n                                selection.modify(\n                                    \"extend\",\n                                    isBackward ? \"forward\" : \"backward\",\n                                    \"character\"\n                                );\n\n                                return true;\n                            } else {\n                                textLength = 0;\n                            }\n                        }\n                    }\n                } else {\n                    const selStart = (element as HTMLInputElement)\n                        .selectionStart;\n\n                    if (selStart === null) {\n                        // Do not ignore not text editable inputs like checkboxes and radios (but ignore hidden).\n                        return type === \"hidden\";\n                    }\n\n                    selectionStart = selStart || 0;\n                    selectionEnd =\n                        (element as HTMLInputElement).selectionEnd || 0;\n                }\n            } else if (element.contentEditable === \"true\") {\n                asyncRet = new (getPromise(this._win))((resolve) => {\n                    this._ignoredInputResolve = (value: boolean) => {\n                        delete this._ignoredInputResolve;\n                        resolve(value);\n                    };\n\n                    const win = this._win();\n\n                    if (this._ignoredInputTimer) {\n                        win.clearTimeout(this._ignoredInputTimer);\n                    }\n\n                    const {\n                        anchorNode: prevAnchorNode,\n                        focusNode: prevFocusNode,\n                        anchorOffset: prevAnchorOffset,\n                        focusOffset: prevFocusOffset,\n                    } = dom.getSelection(element) || {};\n\n                    // Get selection gives incorrect value if we call it syncronously onKeyDown.\n                    this._ignoredInputTimer = win.setTimeout(() => {\n                        delete this._ignoredInputTimer;\n\n                        const {\n                            anchorNode,\n                            focusNode,\n                            anchorOffset,\n                            focusOffset,\n                        } = dom.getSelection(element) || {};\n\n                        if (\n                            anchorNode !== prevAnchorNode ||\n                            focusNode !== prevFocusNode ||\n                            anchorOffset !== prevAnchorOffset ||\n                            focusOffset !== prevFocusOffset\n                        ) {\n                            this._ignoredInputResolve?.(false);\n                            return;\n                        }\n\n                        selectionStart = anchorOffset || 0;\n                        selectionEnd = focusOffset || 0;\n                        textLength = element.textContent?.length || 0;\n\n                        if (anchorNode && focusNode) {\n                            if (\n                                dom.nodeContains(element, anchorNode) &&\n                                dom.nodeContains(element, focusNode)\n                            ) {\n                                if (anchorNode !== element) {\n                                    let anchorFound = false;\n\n                                    const addOffsets = (\n                                        node: ChildNode\n                                    ): boolean => {\n                                        if (node === anchorNode) {\n                                            anchorFound = true;\n                                        } else if (node === focusNode) {\n                                            return true;\n                                        }\n\n                                        const nodeText = node.textContent;\n\n                                        if (\n                                            nodeText &&\n                                            !dom.getFirstChild(node)\n                                        ) {\n                                            const len = nodeText.length;\n\n                                            if (anchorFound) {\n                                                if (focusNode !== anchorNode) {\n                                                    selectionEnd += len;\n                                                }\n                                            } else {\n                                                selectionStart += len;\n                                                selectionEnd += len;\n                                            }\n                                        }\n\n                                        let stop = false;\n\n                                        for (\n                                            let e = dom.getFirstChild(node);\n                                            e && !stop;\n                                            e = e.nextSibling\n                                        ) {\n                                            stop = addOffsets(e);\n                                        }\n\n                                        return stop;\n                                    };\n\n                                    addOffsets(element);\n                                }\n                            }\n                        }\n\n                        this._ignoredInputResolve?.(true);\n                    }, 0);\n                });\n            }\n\n            if (asyncRet && !(await asyncRet)) {\n                return true;\n            }\n\n            if (selectionStart !== selectionEnd) {\n                return true;\n            }\n\n            if (\n                selectionStart > 0 &&\n                (keyCode === Keys.Left ||\n                    keyCode === Keys.Up ||\n                    keyCode === Keys.Home)\n            ) {\n                return true;\n            }\n\n            if (\n                selectionStart < textLength &&\n                (keyCode === Keys.Right ||\n                    keyCode === Keys.Down ||\n                    keyCode === Keys.End)\n            ) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport {\n    createElementTreeWalker,\n    getInstanceContext,\n    HTMLElementWithUID,\n    InstanceContext,\n    WeakHTMLElement,\n} from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nexport function observeMutations(\n    doc: HTMLDocument,\n    tabster: Types.TabsterCore,\n    updateTabsterByAttribute: (\n        tabster: Types.TabsterCore,\n        element: HTMLElementWithUID,\n        dispose?: boolean\n    ) => void,\n    syncState: boolean\n): () => void {\n    if (typeof MutationObserver === \"undefined\") {\n        return () => {\n            /* Noop */\n        };\n    }\n\n    const getWindow = tabster.getWindow;\n\n    let elementByUId: InstanceContext[\"elementByUId\"] | undefined;\n\n    const onMutation = (mutations: MutationRecord[]) => {\n        for (const mutation of mutations) {\n            const target = mutation.target;\n            const removed = mutation.removedNodes;\n            const added = mutation.addedNodes;\n\n            if (mutation.type === \"attributes\") {\n                if (mutation.attributeName === Types.TabsterAttributeName) {\n                    updateTabsterByAttribute(tabster, target as HTMLElement);\n                }\n            } else {\n                for (let i = 0; i < removed.length; i++) {\n                    updateTabsterElements(removed[i], true);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    updateTabsterElements(added[i]);\n                    tabster._dummyObserver.domChanged?.(target as HTMLElement);\n                }\n            }\n        }\n\n        tabster.modalizer?.hiddenUpdate();\n    };\n\n    function updateTabsterElements(node: Node, removed?: boolean): void {\n        if (!elementByUId) {\n            elementByUId = getInstanceContext(getWindow).elementByUId;\n        }\n\n        processNode(node as HTMLElement, removed);\n\n        const walker = createElementTreeWalker(\n            doc,\n            node,\n            (element: Node): number => {\n                return processNode(element as HTMLElement, removed);\n            }\n        );\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n\n    function processNode(element: HTMLElement, removed?: boolean): number {\n        if (!element.getAttribute) {\n            // It might actually be a text node.\n            return NodeFilter.FILTER_SKIP;\n        }\n\n        const uid = (element as HTMLElementWithUID).__tabsterElementUID;\n\n        if (uid && elementByUId) {\n            if (removed) {\n                delete elementByUId[uid];\n            } else {\n                elementByUId[uid] ??= new WeakHTMLElement(getWindow, element);\n            }\n        }\n\n        if (\n            getTabsterOnElement(tabster, element) ||\n            element.hasAttribute(Types.TabsterAttributeName)\n        ) {\n            updateTabsterByAttribute(tabster, element, removed);\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    }\n\n    const observer = dom.createMutationObserver(onMutation);\n\n    if (syncState) {\n        updateTabsterElements(getWindow().document.body);\n    }\n\n    observer.observe(doc, {\n        childList: true,\n        subtree: true,\n        attributes: true,\n        attributeFilter: [Types.TabsterAttributeName],\n    });\n\n    return () => {\n        observer.disconnect();\n    };\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"../Instance\";\nimport * as Types from \"../Types\";\nimport {\n    documentContains,\n    getElementUId,\n    getPromise,\n    WeakHTMLElement,\n} from \"../Utils\";\nimport { Subscribable } from \"./Subscribable\";\n\nconst _conditionCheckTimeout = 100;\n\ninterface ObservedElementInfo {\n    element: WeakHTMLElement;\n    prevNames?: string[];\n}\n\ninterface ObservedWaiting {\n    timer?: number;\n    conditionTimer?: number;\n    request?: Types.ObservedElementAsyncRequest<HTMLElement | null>;\n    resolve?: (value: HTMLElement | null) => void;\n    reject?: () => void;\n}\n\nexport class ObservedElementAPI\n    extends Subscribable<HTMLElement, Types.ObservedElementDetails>\n    implements Types.ObservedElementAPI\n{\n    private _win: Types.GetWindow;\n    private _tabster: Types.TabsterCore;\n    private _waiting: Record<string, ObservedWaiting> = {};\n    private _lastRequestFocusId = 0;\n    private _observedById: { [uid: string]: ObservedElementInfo } = {};\n    private _observedByName: {\n        [name: string]: { [uid: string]: ObservedElementInfo };\n    } = {};\n    private _currentRequest:\n        | Types.ObservedElementAsyncRequest<HTMLElement | null>\n        | undefined;\n    private _currentRequestTimestamp = 0;\n\n    constructor(tabster: Types.TabsterCore) {\n        super();\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(() => {\n            this._tabster.focusedElement.subscribe(this._onFocus);\n        });\n    }\n\n    dispose(): void {\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        for (const key of Object.keys(this._waiting)) {\n            this._rejectWaiting(key);\n        }\n\n        this._observedById = {};\n        this._observedByName = {};\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (e) {\n            const current = this._currentRequest;\n\n            if (current) {\n                const delta = Date.now() - this._currentRequestTimestamp;\n                const settleTime = 300;\n\n                if (delta >= settleTime) {\n                    // Giving some time for the focus to settle before\n                    // automatically cancelling the current request on focus change.\n                    delete this._currentRequest;\n                    current.cancel();\n                }\n            }\n        }\n    };\n\n    private _rejectWaiting(key: string, shouldResolve?: boolean): void {\n        const w = this._waiting[key];\n\n        if (w) {\n            const win = this._win();\n\n            if (w.timer) {\n                win.clearTimeout(w.timer);\n            }\n\n            if (w.conditionTimer) {\n                win.clearTimeout(w.conditionTimer);\n            }\n\n            if (!shouldResolve && w.reject) {\n                w.reject();\n            } else if (shouldResolve && w.resolve) {\n                w.resolve(null);\n            }\n\n            delete this._waiting[key];\n        }\n    }\n\n    private _isObservedNamesUpdated(cur: string[], prev?: string[]) {\n        if (!prev || cur.length !== prev.length) {\n            return true;\n        }\n        for (let i = 0; i < cur.length; ++i) {\n            if (cur[i] !== prev[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns existing element by observed name\n     *\n     * @param observedName An observed name\n     * @param accessibility Optionally, return only if the element is accessible or focusable\n     * @returns HTMLElement | null\n     */\n    getElement(\n        observedName: string,\n        accessibility?: Types.ObservedElementAccesibility\n    ): HTMLElement | null {\n        const o = this._observedByName[observedName];\n\n        if (o) {\n            for (const uid of Object.keys(o)) {\n                let el = o[uid].element.get() || null;\n                if (el) {\n                    if (\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Accessible &&\n                            !this._tabster.focusable.isAccessible(el)) ||\n                        (accessibility ===\n                            Types.ObservedElementAccesibilities.Focusable &&\n                            !this._tabster.focusable.isFocusable(el, true))\n                    ) {\n                        el = null;\n                    }\n                } else {\n                    delete o[uid];\n                    delete this._observedById[uid];\n                }\n\n                return el;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Waits for the element to appear in the DOM and returns it.\n     *\n     * @param observedName An observed name\n     * @param timeout Wait no longer than this timeout\n     * @param accessibility Optionally, wait for the element to also become accessible or focusable before returning it\n     * @returns Promise<HTMLElement | null>\n     */\n    waitElement(\n        observedName: string,\n        timeout: number,\n        accessibility?: Types.ObservedElementAccesibility\n    ): Types.ObservedElementAsyncRequest<HTMLElement | null> {\n        const el = this.getElement(observedName, accessibility);\n\n        if (el) {\n            return {\n                result: getPromise(this._win).resolve(el),\n                cancel: () => {\n                    /**/\n                },\n            };\n        }\n\n        let prefix: string;\n\n        if (accessibility === Types.ObservedElementAccesibilities.Accessible) {\n            prefix = \"a\";\n        } else if (\n            accessibility === Types.ObservedElementAccesibilities.Focusable\n        ) {\n            prefix = \"f\";\n        } else {\n            prefix = \"_\";\n        }\n\n        const key = prefix + observedName;\n        let w = this._waiting[key];\n\n        if (w && w.request) {\n            return w.request;\n        }\n\n        w = this._waiting[key] = {\n            timer: this._win().setTimeout(() => {\n                if (w.conditionTimer) {\n                    this._win().clearTimeout(w.conditionTimer);\n                }\n\n                delete this._waiting[key];\n\n                if (w.resolve) {\n                    w.resolve(null);\n                }\n            }, timeout),\n        };\n\n        const promise = new (getPromise(this._win))<HTMLElement | null>(\n            (resolve, reject) => {\n                w.resolve = resolve;\n                w.reject = reject;\n            }\n        );\n\n        w.request = {\n            result: promise,\n            cancel: () => {\n                this._rejectWaiting(key, true);\n            },\n        };\n\n        if (accessibility && this.getElement(observedName)) {\n            // If the observed element is alread in DOM, but not accessible yet,\n            // we need to run the wait logic.\n            this._waitConditional(observedName);\n        }\n\n        return w.request;\n    }\n\n    requestFocus(\n        observedName: string,\n        timeout: number\n    ): Types.ObservedElementAsyncRequest<boolean> {\n        const requestId = ++this._lastRequestFocusId;\n        const currentRequestFocus = this._currentRequest;\n\n        if (currentRequestFocus) {\n            currentRequestFocus.cancel();\n        }\n\n        const request = this.waitElement(\n            observedName,\n            timeout,\n            Types.ObservedElementAccesibilities.Focusable\n        );\n\n        this._currentRequest = request;\n        this._currentRequestTimestamp = Date.now();\n\n        request.result.finally(() => {\n            if (this._currentRequest === request) {\n                delete this._currentRequest;\n            }\n        });\n\n        return {\n            result: request.result.then((element) =>\n                this._lastRequestFocusId === requestId && element\n                    ? this._tabster.focusedElement.focus(element, true)\n                    : false\n            ),\n            cancel: () => {\n                request.cancel();\n            },\n        };\n    }\n\n    onObservedElementUpdate = (element: HTMLElement): void => {\n        const observed = getTabsterOnElement(this._tabster, element)?.observed;\n        const uid = getElementUId(this._win, element);\n        let info: ObservedElementInfo | undefined = this._observedById[uid];\n\n        if (observed && documentContains(element.ownerDocument, element)) {\n            if (!info) {\n                info = this._observedById[uid] = {\n                    element: new WeakHTMLElement(this._win, element),\n                };\n            }\n\n            observed.names.sort();\n            const observedNames = observed.names;\n            const prevNames = info.prevNames; // prevNames are already sorted\n\n            if (this._isObservedNamesUpdated(observedNames, prevNames)) {\n                if (prevNames) {\n                    prevNames.forEach((prevName) => {\n                        const obn = this._observedByName[prevName];\n\n                        if (obn && obn[uid]) {\n                            if (Object.keys(obn).length > 1) {\n                                delete obn[uid];\n                            } else {\n                                delete this._observedByName[prevName];\n                            }\n                        }\n                    });\n                }\n\n                info.prevNames = observedNames;\n            }\n\n            observedNames.forEach((observedName) => {\n                let obn = this._observedByName[observedName];\n\n                if (!obn) {\n                    obn = this._observedByName[observedName] = {};\n                }\n\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                obn[uid] = info!;\n\n                this._waitConditional(observedName);\n            });\n        } else if (info) {\n            const prevNames = info.prevNames;\n\n            if (prevNames) {\n                prevNames.forEach((prevName) => {\n                    const obn = this._observedByName[prevName];\n\n                    if (obn && obn[uid]) {\n                        if (Object.keys(obn).length > 1) {\n                            delete obn[uid];\n                        } else {\n                            delete this._observedByName[prevName];\n                        }\n                    }\n                });\n            }\n\n            delete this._observedById[uid];\n        }\n    };\n\n    private _waitConditional(observedName: string): void {\n        const waitingElementKey = \"_\" + observedName;\n        const waitingAccessibleElementKey = \"a\" + observedName;\n        const waitingFocusableElementKey = \"f\" + observedName;\n        const waitingElement = this._waiting[waitingElementKey];\n        const waitingAccessibleElement =\n            this._waiting[waitingAccessibleElementKey];\n        const waitingFocusableElement =\n            this._waiting[waitingFocusableElementKey];\n        const win = this._win();\n\n        const resolve = (\n            element: HTMLElement,\n            key: string,\n            waiting: ObservedWaiting,\n            accessibility: Types.ObservedElementAccesibility\n        ) => {\n            const observed = getTabsterOnElement(\n                this._tabster,\n                element\n            )?.observed;\n\n            if (!observed || !observed.names.includes(observedName)) {\n                return;\n            }\n\n            if (waiting.timer) {\n                win.clearTimeout(waiting.timer);\n            }\n\n            delete this._waiting[key];\n\n            if (waiting.resolve) {\n                waiting.resolve(element);\n            }\n\n            this.trigger(element, {\n                names: [observedName],\n                details: observed.details,\n                accessibility,\n            });\n        };\n\n        if (waitingElement) {\n            const element = this.getElement(observedName);\n\n            if (element && documentContains(element.ownerDocument, element)) {\n                resolve(\n                    element,\n                    waitingElementKey,\n                    waitingElement,\n                    Types.ObservedElementAccesibilities.Any\n                );\n            }\n        }\n\n        if (\n            waitingAccessibleElement &&\n            !waitingAccessibleElement.conditionTimer\n        ) {\n            const resolveAccessible = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isAccessible(element)\n                ) {\n                    resolve(\n                        element,\n                        waitingAccessibleElementKey,\n                        waitingAccessibleElement,\n                        Types.ObservedElementAccesibilities.Accessible\n                    );\n                } else {\n                    waitingAccessibleElement.conditionTimer = win.setTimeout(\n                        resolveAccessible,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveAccessible();\n        }\n\n        if (\n            waitingFocusableElement &&\n            !waitingFocusableElement.conditionTimer\n        ) {\n            const resolveFocusable = () => {\n                const element = this.getElement(observedName);\n\n                if (\n                    element &&\n                    documentContains(element.ownerDocument, element) &&\n                    this._tabster.focusable.isFocusable(element, true)\n                ) {\n                    resolve(\n                        element,\n                        waitingFocusableElementKey,\n                        waitingFocusableElement,\n                        Types.ObservedElementAccesibilities.Focusable\n                    );\n                } else {\n                    waitingFocusableElement.conditionTimer = win.setTimeout(\n                        resolveFocusable,\n                        _conditionCheckTimeout\n                    );\n                }\n            };\n\n            resolveFocusable();\n        }\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport * as Types from \"./Types\";\nimport { getBoundingRect } from \"./Utils\";\n\ninterface WindowWithOutlineStyle extends Window {\n    __tabsterOutline?: {\n        style?: HTMLStyleElement;\n        elements?: Types.OutlineElements;\n    };\n}\n\nconst defaultProps: Types.OutlineProps = {\n    areaClass: \"tabster-focus-outline-area\",\n    outlineClass: \"tabster-focus-outline\",\n    outlineColor: \"#ff4500\",\n    outlineWidth: 2,\n    zIndex: 2147483647,\n};\n\nlet _props: Types.OutlineProps = defaultProps;\n\nclass OutlinePosition {\n    public left: number;\n    public top: number;\n    public right: number;\n    public bottom: number;\n\n    constructor(left: number, top: number, right: number, bottom: number) {\n        this.left = left;\n        this.top = top;\n        this.right = right;\n        this.bottom = bottom;\n    }\n\n    public equalsTo(other: OutlinePosition): boolean {\n        return (\n            this.left === other.left &&\n            this.top === other.top &&\n            this.right === other.right &&\n            this.bottom === other.bottom\n        );\n    }\n\n    public clone(): OutlinePosition {\n        return new OutlinePosition(\n            this.left,\n            this.top,\n            this.right,\n            this.bottom\n        );\n    }\n}\n\nexport class OutlineAPI implements Types.OutlineAPI {\n    private _tabster: Types.TabsterCore;\n    private _win: Types.GetWindow;\n    private _updateTimer: number | undefined;\n    private _outlinedElement: HTMLElement | undefined;\n    private _curPos: OutlinePosition | undefined;\n    private _isVisible = false;\n    private _curOutlineElements: Types.OutlineElements | undefined;\n    private _allOutlineElements: Types.OutlineElements[] = [];\n    private _fullScreenElement: HTMLElement | undefined;\n    private _fullScreenEventName: string | undefined;\n    private _fullScreenElementName: string | undefined;\n\n    constructor(tabster: Types.TabsterCore) {\n        this._tabster = tabster;\n        this._win = tabster.getWindow;\n\n        tabster.queueInit(this._init);\n\n        if (typeof document !== \"undefined\") {\n            if (\"onfullscreenchange\" in document) {\n                this._fullScreenEventName = \"fullscreenchange\";\n                this._fullScreenElementName = \"fullscreenElement\";\n            } else if (\"onwebkitfullscreenchange\" in document) {\n                this._fullScreenEventName = \"webkitfullscreenchange\";\n                this._fullScreenElementName = \"webkitFullscreenElement\";\n            } else if (\"onmozfullscreenchange\" in document) {\n                this._fullScreenEventName = \"mozfullscreenchange\";\n                this._fullScreenElementName = \"mozFullScreenElement\";\n            } else if (\"onmsfullscreenchange\" in document) {\n                this._fullScreenEventName = \"msfullscreenchange\";\n                this._fullScreenElementName = \"msFullscreenElement\";\n            }\n        }\n    }\n\n    private _init = (): void => {\n        this._tabster.keyboardNavigation.subscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.subscribe(this._onFocus);\n\n        const win = this._win();\n\n        win.addEventListener(\"scroll\", this._onScroll, true); // Capture!\n\n        if (this._fullScreenEventName) {\n            win.document.addEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n    };\n\n    setup(props?: Partial<Types.OutlineProps>): void {\n        _props = { ..._props, ...props };\n\n        const win = this._win() as WindowWithOutlineStyle;\n\n        if (!win.__tabsterOutline) {\n            win.__tabsterOutline = {};\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(win.document, _props);\n        }\n\n        if (!props || !props.areaClass) {\n            win.document.body.classList.add(defaultProps.areaClass);\n        } else {\n            win.document.body.classList.remove(defaultProps.areaClass);\n        }\n    }\n\n    dispose(): void {\n        const win = this._win();\n\n        if (this._updateTimer) {\n            win.clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._tabster.keyboardNavigation.unsubscribe(\n            this._onKeyboardNavigationStateChanged\n        );\n        this._tabster.focusedElement.unsubscribe(this._onFocus);\n\n        win.removeEventListener(\"scroll\", this._onScroll, true);\n\n        if (this._fullScreenEventName) {\n            win.document.removeEventListener(\n                this._fullScreenEventName,\n                this._onFullScreenChanged\n            );\n        }\n\n        this._allOutlineElements.forEach((outlineElements) =>\n            this._removeDOM(outlineElements.container)\n        );\n        this._allOutlineElements = [];\n\n        delete this._outlinedElement;\n        delete this._curPos;\n        delete this._curOutlineElements;\n        delete this._fullScreenElement;\n    }\n\n    private _onFullScreenChanged = (e: Event): void => {\n        if (!this._fullScreenElementName || !e.target) {\n            return;\n        }\n\n        const target = (e.target as Document).body || (e.target as HTMLElement);\n        const outlineElements = this._getDOM(target);\n\n        if (target.ownerDocument && outlineElements) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const fsElement: HTMLElement | null = (target.ownerDocument as any)[\n                this._fullScreenElementName\n            ];\n\n            if (fsElement) {\n                fsElement.appendChild(outlineElements.container);\n                this._fullScreenElement = fsElement;\n            } else {\n                target.ownerDocument.body.appendChild(\n                    outlineElements.container\n                );\n                this._fullScreenElement = undefined;\n            }\n        }\n    };\n\n    private _onKeyboardNavigationStateChanged = (): void => {\n        this._onFocus(this._tabster.focusedElement.getFocusedElement());\n    };\n\n    private _shouldShowCustomOutline(element: HTMLElement): boolean {\n        const tabsterOnElement = getTabsterOnElement(this._tabster, element);\n\n        if (\n            tabsterOnElement &&\n            tabsterOnElement.outline &&\n            tabsterOnElement.outline.isIgnored\n        ) {\n            return false;\n        }\n\n        for (let i: HTMLElement | null = element; i; i = i.parentElement) {\n            if (i.classList && i.classList.contains(_props.areaClass)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    private _onFocus = (e: HTMLElement | undefined): void => {\n        if (!this._updateElement(e) && this._isVisible) {\n            this._setVisibility(false);\n        }\n    };\n\n    private _updateElement(e: HTMLElement | undefined): boolean {\n        this._outlinedElement = undefined;\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        this._curPos = undefined;\n\n        if (!this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n            return false;\n        }\n\n        if (e) {\n            // TODO: It's hard (and not necessary) to come up with every possible\n            // condition when there should be no outline, it's better to add an\n            // API to customize the ignores.\n            if (e.tagName === \"INPUT\") {\n                const inputType = (e as HTMLInputElement).type;\n                const outlinedInputTypes = {\n                    button: true,\n                    checkbox: true,\n                    file: true,\n                    image: true,\n                    radio: true,\n                    range: true,\n                    reset: true,\n                    submit: true,\n                };\n\n                if (!(inputType in outlinedInputTypes)) {\n                    return false;\n                }\n            } else if (\n                e.tagName === \"TEXTAREA\" ||\n                e.contentEditable === \"true\" ||\n                e.tagName === \"IFRAME\"\n            ) {\n                return false;\n            }\n\n            if (!this._shouldShowCustomOutline(e)) {\n                return false;\n            }\n\n            if (this._tabster.keyboardNavigation.isNavigatingWithKeyboard()) {\n                this._outlinedElement = e;\n                this._updateOutline();\n            }\n\n            return true;\n        }\n\n        return false;\n    }\n\n    private _onScroll = (e: UIEvent): void => {\n        if (\n            !this._outlinedElement ||\n            !OutlineAPI._isParentChild(\n                e.target as HTMLElement,\n                this._outlinedElement\n            )\n        ) {\n            return;\n        }\n\n        this._curPos = undefined;\n\n        this._setOutlinePosition();\n    };\n\n    private _updateOutline(): void {\n        this._setOutlinePosition();\n\n        if (this._updateTimer) {\n            this._win().clearTimeout(this._updateTimer);\n            this._updateTimer = undefined;\n        }\n\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        this._updateTimer = this._win().setTimeout(() => {\n            this._updateTimer = undefined;\n            this._updateOutline();\n        }, 30);\n    }\n\n    private _setVisibility(visible: boolean): void {\n        this._isVisible = visible;\n\n        if (this._curOutlineElements) {\n            if (visible) {\n                this._curOutlineElements.container.classList.add(\n                    `${_props.outlineClass}_visible`\n                );\n            } else {\n                this._curOutlineElements.container.classList.remove(\n                    `${_props.outlineClass}_visible`\n                );\n                this._curPos = undefined;\n            }\n        }\n    }\n\n    private _setOutlinePosition(): void {\n        if (!this._outlinedElement) {\n            return;\n        }\n\n        let boundingRect = getBoundingRect(this._win, this._outlinedElement);\n\n        const position = new OutlinePosition(\n            boundingRect.left,\n            boundingRect.top,\n            boundingRect.right,\n            boundingRect.bottom\n        );\n\n        if (this._curPos && position.equalsTo(this._curPos)) {\n            return;\n        }\n\n        const outlineElements = this._getDOM(this._outlinedElement);\n        const win =\n            this._outlinedElement.ownerDocument &&\n            this._outlinedElement.ownerDocument.defaultView;\n\n        if (!outlineElements || !win) {\n            return;\n        }\n\n        if (this._curOutlineElements !== outlineElements) {\n            this._setVisibility(false);\n            this._curOutlineElements = outlineElements;\n        }\n\n        this._curPos = position;\n\n        const p = position.clone();\n        let hasAbsolutePositionedParent = false;\n        let hasFixedPositionedParent = false;\n\n        const container = outlineElements.container;\n        const scrollingElement =\n            container &&\n            container.ownerDocument &&\n            (container.ownerDocument.scrollingElement as HTMLElement);\n\n        if (!scrollingElement) {\n            return;\n        }\n\n        for (\n            let parent = this._outlinedElement.parentElement;\n            parent && parent.nodeType === Node.ELEMENT_NODE;\n            parent = parent.parentElement\n        ) {\n            // The element might be partially visible within its scrollable parent,\n            // reduce the bounding rect if this is the case.\n\n            if (parent === this._fullScreenElement) {\n                break;\n            }\n\n            boundingRect = getBoundingRect(this._win, parent);\n\n            const win =\n                parent.ownerDocument && parent.ownerDocument.defaultView;\n\n            if (!win) {\n                return;\n            }\n\n            const computedStyle = win.getComputedStyle(parent);\n            const position = computedStyle.position;\n\n            if (position === \"absolute\") {\n                hasAbsolutePositionedParent = true;\n            } else if (position === \"fixed\" || position === \"sticky\") {\n                hasFixedPositionedParent = true;\n            }\n\n            if (computedStyle.overflow === \"visible\") {\n                continue;\n            }\n\n            if (\n                (!hasAbsolutePositionedParent && !hasFixedPositionedParent) ||\n                computedStyle.overflow === \"hidden\"\n            ) {\n                if (boundingRect.left > p.left) {\n                    p.left = boundingRect.left;\n                }\n                if (boundingRect.top > p.top) {\n                    p.top = boundingRect.top;\n                }\n                if (boundingRect.right < p.right) {\n                    p.right = boundingRect.right;\n                }\n                if (boundingRect.bottom < p.bottom) {\n                    p.bottom = boundingRect.bottom;\n                }\n            }\n        }\n\n        const allRect = getBoundingRect(this._win, scrollingElement);\n        const allWidth = allRect.left + allRect.right;\n        const allHeight = allRect.top + allRect.bottom;\n        const ow = _props.outlineWidth;\n\n        p.left = p.left > ow ? p.left - ow : 0;\n        p.top = p.top > ow ? p.top - ow : 0;\n        p.right = p.right < allWidth - ow ? p.right + ow : allWidth;\n        p.bottom = p.bottom < allHeight - ow ? p.bottom + ow : allHeight;\n\n        const width = p.right - p.left;\n        const height = p.bottom - p.top;\n\n        if (width > ow * 2 && height > ow * 2) {\n            const leftBorderNode = outlineElements.left;\n            const topBorderNode = outlineElements.top;\n            const rightBorderNode = outlineElements.right;\n            const bottomBorderNode = outlineElements.bottom;\n            const sx =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageXOffset;\n            const sy =\n                this._fullScreenElement || hasFixedPositionedParent\n                    ? 0\n                    : win.pageYOffset;\n\n            container.style.position = hasFixedPositionedParent\n                ? \"fixed\"\n                : \"absolute\";\n\n            container.style.background = _props.outlineColor;\n\n            leftBorderNode.style.width =\n                rightBorderNode.style.width =\n                topBorderNode.style.height =\n                bottomBorderNode.style.height =\n                    _props.outlineWidth + \"px\";\n\n            leftBorderNode.style.left =\n                topBorderNode.style.left =\n                bottomBorderNode.style.left =\n                    p.left + sx + \"px\";\n            rightBorderNode.style.left = p.left + sx + width - ow + \"px\";\n\n            leftBorderNode.style.top =\n                rightBorderNode.style.top =\n                topBorderNode.style.top =\n                    p.top + sy + \"px\";\n            bottomBorderNode.style.top = p.top + sy + height - ow + \"px\";\n\n            leftBorderNode.style.height = rightBorderNode.style.height =\n                height + \"px\";\n\n            topBorderNode.style.width = bottomBorderNode.style.width =\n                width + \"px\";\n\n            this._setVisibility(true);\n        } else {\n            this._setVisibility(false);\n        }\n    }\n\n    private _getDOM(\n        contextElement: HTMLElement\n    ): Types.OutlineElements | undefined {\n        const doc = contextElement.ownerDocument;\n        const win = (doc && doc.defaultView) as WindowWithOutlineStyle;\n\n        if (!doc || !win || !win.__tabsterOutline) {\n            return undefined;\n        }\n\n        if (!win.__tabsterOutline.style) {\n            win.__tabsterOutline.style = appendStyles(doc, _props);\n        }\n\n        if (!win.__tabsterOutline.elements) {\n            const outlineElements: Types.OutlineElements = {\n                container: doc.createElement(\"div\"),\n                left: doc.createElement(\"div\"),\n                top: doc.createElement(\"div\"),\n                right: doc.createElement(\"div\"),\n                bottom: doc.createElement(\"div\"),\n            };\n\n            outlineElements.container.className = _props.outlineClass;\n            outlineElements.left.className = `${_props.outlineClass}__left`;\n            outlineElements.top.className = `${_props.outlineClass}__top`;\n            outlineElements.right.className = `${_props.outlineClass}__right`;\n            outlineElements.bottom.className = `${_props.outlineClass}__bottom`;\n\n            outlineElements.container.appendChild(outlineElements.left);\n            outlineElements.container.appendChild(outlineElements.top);\n            outlineElements.container.appendChild(outlineElements.right);\n            outlineElements.container.appendChild(outlineElements.bottom);\n\n            doc.body.appendChild(outlineElements.container);\n\n            win.__tabsterOutline.elements = outlineElements;\n\n            // TODO: Make a garbage collector to remove the references\n            // to the outlines which are nowhere in the DOM anymore.\n            this._allOutlineElements.push(outlineElements);\n        }\n\n        return win.__tabsterOutline.elements;\n    }\n\n    private _removeDOM(contextElement: HTMLElement): void {\n        const win = (contextElement.ownerDocument &&\n            contextElement.ownerDocument.defaultView) as WindowWithOutlineStyle;\n        const outline = win && win.__tabsterOutline;\n\n        if (!outline) {\n            return;\n        }\n\n        if (outline.style && outline.style.parentNode) {\n            outline.style.parentNode.removeChild(outline.style);\n\n            delete outline.style;\n        }\n\n        const outlineElements = outline && outline.elements;\n\n        if (outlineElements) {\n            if (outlineElements.container.parentNode) {\n                outlineElements.container.parentNode.removeChild(\n                    outlineElements.container\n                );\n            }\n\n            delete outline.elements;\n        }\n    }\n\n    private static _isParentChild(\n        parent: HTMLElement,\n        child: HTMLElement\n    ): boolean {\n        return (\n            child === parent ||\n            // tslint:disable-next-line:no-bitwise\n            !!(\n                parent.compareDocumentPosition(child) &\n                document.DOCUMENT_POSITION_CONTAINED_BY\n            )\n        );\n    }\n}\n\nfunction appendStyles(\n    document: HTMLDocument,\n    props: Types.OutlineProps\n): HTMLStyleElement {\n    const style = document.createElement(\"style\");\n    style.type = \"text/css\";\n    style.appendChild(document.createTextNode(getOutlineStyles(props)));\n    document.head.appendChild(style);\n    return style;\n}\n\nfunction getOutlineStyles(props: Types.OutlineProps): string {\n    return `\n.${props.areaClass} *, .${props.areaClass} *:focus {\noutline: none !important;\n}\n\n.${props.outlineClass} {\ndisplay: none;\nposition: absolute;\nwidth: 0;\nheight: 0;\nleft: 0;\ntop: 0;\nz-index: ${props.zIndex};\n}\n\n.${props.outlineClass}.${props.outlineClass}_visible {\ndisplay: block;\n}\n\n.${props.outlineClass}__left,\n.${props.outlineClass}__top,\n.${props.outlineClass}__right,\n.${props.outlineClass}__bottom {\nposition: absolute;\nbackground: inherit;\n}`;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport * as Types from \"./Types\";\n\n/**\n * Allows default or user focus behaviour on the DOM subtree\n * i.e. Tabster will not control focus events within an uncontrolled area\n */\nexport class UncontrolledAPI implements Types.UncontrolledAPI {\n    private _isUncontrolledCompletely?: (\n        element: HTMLElement,\n        completely: boolean\n    ) => boolean | undefined;\n\n    constructor(\n        isUncontrolledCompletely?: (\n            element: HTMLElement,\n            completely: boolean\n        ) => boolean | undefined\n    ) {\n        this._isUncontrolledCompletely = isUncontrolledCompletely;\n    }\n\n    isUncontrolledCompletely(\n        element: HTMLElement,\n        completely: boolean\n    ): boolean {\n        const isUncontrolledCompletely = this._isUncontrolledCompletely?.(\n            element,\n            completely\n        );\n        // If isUncontrolledCompletely callback is not defined or returns undefined, then the default\n        // behaviour is to return the uncontrolled.completely value from the element.\n        return isUncontrolledCompletely === undefined\n            ? completely\n            : isUncontrolledCompletely;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getTabsterOnElement } from \"./Instance\";\nimport type {\n    RestorerAPI as RestorerAPIType,\n    GetWindow,\n    Restorer as RestorerInterface,\n    RestorerProps,\n    KeyboardNavigationState,\n    FocusedElementState,\n    TabsterCore,\n} from \"./Types\";\nimport { RestorerTypes } from \"./Types\";\nimport { TabsterPart, WeakHTMLElement, triggerEvent } from \"./Utils\";\nimport { dom } from \"./DOMAPI\";\n\nconst EVENT_NAME = \"restorer:restorefocus\";\nconst HISOTRY_DEPTH = 10;\n\nclass Restorer extends TabsterPart<RestorerProps> implements RestorerInterface {\n    private _hasFocus = false;\n\n    constructor(\n        tabster: TabsterCore,\n        element: HTMLElement,\n        props: RestorerProps\n    ) {\n        super(tabster, element, props);\n\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.addEventListener(\"focusout\", this._onFocusOut);\n            element?.addEventListener(\"focusin\", this._onFocusIn);\n\n            // set hasFocus when the instance is created, in case focus has already moved within it\n            this._hasFocus = dom.nodeContains(\n                element,\n                element && dom.getActiveElement(element.ownerDocument)\n            );\n        }\n    }\n\n    dispose(): void {\n        if (this._props.type === RestorerTypes.Source) {\n            const element = this._element?.get();\n            element?.removeEventListener(\"focusout\", this._onFocusOut);\n            element?.removeEventListener(\"focusin\", this._onFocusIn);\n\n            if (this._hasFocus) {\n                const doc = this._tabster.getWindow().document;\n                triggerEvent(doc.body, EVENT_NAME);\n            }\n        }\n    }\n\n    private _onFocusOut = (e: FocusEvent) => {\n        const element = this._element?.get();\n        if (element && e.relatedTarget === null) {\n            triggerEvent(element, EVENT_NAME);\n        }\n        if (\n            element &&\n            !dom.nodeContains(element, e.relatedTarget as HTMLElement | null)\n        ) {\n            this._hasFocus = false;\n        }\n    };\n\n    private _onFocusIn = () => {\n        this._hasFocus = true;\n    };\n}\n\nexport class RestorerAPI implements RestorerAPIType {\n    private _tabster: TabsterCore;\n    private _history: WeakHTMLElement<HTMLElement>[] = [];\n    private _keyboardNavState: KeyboardNavigationState;\n    private _focusedElementState: FocusedElementState;\n    private _restoreFocusTimeout = 0;\n    private _getWindow: GetWindow;\n\n    constructor(tabster: TabsterCore) {\n        this._tabster = tabster;\n        this._getWindow = tabster.getWindow;\n        this._getWindow().addEventListener(EVENT_NAME, this._onRestoreFocus);\n\n        this._keyboardNavState = tabster.keyboardNavigation;\n        this._focusedElementState = tabster.focusedElement;\n\n        this._focusedElementState.subscribe(this._onFocusIn);\n    }\n\n    dispose(): void {\n        const win = this._getWindow();\n        this._focusedElementState.unsubscribe(this._onFocusIn);\n        win.removeEventListener(EVENT_NAME, this._onRestoreFocus);\n\n        if (this._restoreFocusTimeout) {\n            win.clearTimeout(this._restoreFocusTimeout);\n        }\n    }\n\n    private _onRestoreFocus = (e: CustomEvent) => {\n        const win = this._getWindow();\n        if (this._restoreFocusTimeout) {\n            win.clearTimeout(this._restoreFocusTimeout);\n            this._restoreFocusTimeout = 0;\n        }\n\n        // ShadowDOM will have shadowRoot as e.target.\n        const target = e.composedPath()[0];\n\n        if (target) {\n            this._restoreFocusTimeout = win.setTimeout(() =>\n                this._restoreFocus(target as HTMLElement)\n            );\n        }\n    };\n\n    private _onFocusIn = (element: HTMLElement | undefined) => {\n        if (!element) {\n            return;\n        }\n\n        const tabsterAttribute = getTabsterOnElement(this._tabster, element);\n        if (\n            tabsterAttribute?.restorer?.getProps().type !== RestorerTypes.Target\n        ) {\n            return;\n        }\n\n        this._addToHistory(element);\n    };\n\n    private _addToHistory(element: HTMLElement) {\n        // Don't duplicate the top of history\n        if (this._history[this._history.length - 1]?.get() === element) {\n            return;\n        }\n\n        if (this._history.length > HISOTRY_DEPTH) {\n            this._history.shift();\n        }\n\n        this._history.push(\n            new WeakHTMLElement<HTMLElement>(this._getWindow, element)\n        );\n    }\n\n    private _restoreFocus = (source: HTMLElement) => {\n        // don't restore focus if focus isn't lost to body\n        const doc = this._getWindow().document;\n        if (dom.getActiveElement(doc) !== doc.body) {\n            return;\n        }\n\n        if (\n            // clicking on any empty space focuses body - this is can be a false positive\n            !this._keyboardNavState.isNavigatingWithKeyboard() &&\n            // Source no longer exists on DOM - always restore focus\n            dom.nodeContains(doc.body, source)\n        ) {\n            return;\n        }\n\n        let weakElement = this._history.pop();\n        while (\n            weakElement &&\n            !dom.nodeContains(doc.body, dom.getParentElement(weakElement.get()))\n        ) {\n            weakElement = this._history.pop();\n        }\n\n        weakElement?.get()?.focus();\n    };\n\n    public createRestorer(element: HTMLElement, props: RestorerProps) {\n        const restorer = new Restorer(this._tabster, element, props);\n        // Focus might already be on a restorer target when it gets created so the focusin will not do anything\n        if (\n            props.type === RestorerTypes.Target &&\n            dom.getActiveElement(element.ownerDocument) === element\n        ) {\n            this._addToHistory(element);\n        }\n\n        return restorer;\n    }\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport function getActiveElement(doc: Document): Element | null {\n    let activeElement = doc.activeElement;\n\n    while (activeElement?.shadowRoot?.activeElement) {\n        activeElement = activeElement.shadowRoot.activeElement;\n    }\n\n    return activeElement;\n}\n\nexport function nodeContains(\n    node: Node | null | undefined,\n    otherNode: Node | null | undefined\n): boolean {\n    if (!node || !otherNode) {\n        return false;\n    }\n\n    let currentNode: HTMLElement | Node | null | undefined = otherNode;\n\n    while (currentNode) {\n        if (currentNode === node) {\n            return true;\n        }\n\n        if (\n            typeof (currentNode as HTMLSlotElement).assignedElements !==\n                \"function\" &&\n            (currentNode as HTMLElement).assignedSlot?.parentNode\n        ) {\n            // Element is slotted\n            currentNode = (currentNode as HTMLElement).assignedSlot?.parentNode;\n        } else if (currentNode.nodeType === document.DOCUMENT_FRAGMENT_NODE) {\n            // Element is in shadow root\n            currentNode = (currentNode as ShadowRoot).host;\n        } else {\n            currentNode = currentNode.parentNode;\n        }\n    }\n\n    return false;\n}\n\nexport function getParentNode(\n    node: Node | null | undefined\n): ParentNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (\n        node.nodeType === Node.DOCUMENT_FRAGMENT_NODE &&\n        (node as ShadowRoot).host\n    ) {\n        return (node as ShadowRoot).host;\n    }\n\n    return node.parentNode;\n}\n\nexport function getParentElement(\n    element: HTMLElement | null | undefined\n): HTMLElement | null {\n    for (\n        let parentNode = getParentNode(element);\n        parentNode;\n        parentNode = getParentNode(parentNode)\n    ) {\n        if (parentNode.nodeType === Node.ELEMENT_NODE) {\n            return parentNode as HTMLElement;\n        }\n    }\n\n    return null;\n}\n\nexport function getFirstChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if ((node as Element).shadowRoot) {\n        const child = getFirstChild((node as Element).shadowRoot);\n\n        if (child) {\n            return child;\n        }\n\n        // If the attached shadowRoot has no children, just try ordinary children,\n        // that might come after.\n    }\n\n    return node.firstChild;\n}\n\nexport function getLastChild(node: Node | null | undefined): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    if (!node.lastChild && (node as Element).shadowRoot) {\n        return getLastChild((node as Element).shadowRoot);\n    }\n\n    return node.lastChild;\n}\n\nexport function getNextSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    return node?.nextSibling || null;\n}\n\nexport function getPreviousSibling(\n    node: Node | null | undefined\n): ChildNode | null {\n    if (!node) {\n        return null;\n    }\n\n    let sibling = node.previousSibling;\n\n    if (!sibling && node.parentElement?.shadowRoot) {\n        sibling = getLastChild(node.parentElement.shadowRoot);\n    }\n\n    return sibling;\n}\n\nexport function getFirstElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getFirstChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getNextSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getLastElementChild(\n    element: Element | null | undefined\n): Element | null {\n    let child = getLastChild(element);\n\n    while (child && child.nodeType !== Node.ELEMENT_NODE) {\n        child = getPreviousSibling(child);\n    }\n\n    return child as Element | null;\n}\n\nexport function getNextElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getNextSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getNextSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function getPreviousElementSibling(\n    element: Element | null | undefined\n): Element | null {\n    let sibling = getPreviousSibling(element);\n\n    while (sibling && sibling.nodeType !== Node.ELEMENT_NODE) {\n        sibling = getPreviousSibling(sibling);\n    }\n\n    return sibling as Element | null;\n}\n\nexport function appendChild(parent: Node, child: Node): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.appendChild(child)\n        : parent.appendChild(child);\n}\n\nexport function insertBefore(\n    parent: Node,\n    child: Node,\n    referenceChild: Node | null\n): Node {\n    const shadowRoot = (parent as Element).shadowRoot;\n    return shadowRoot\n        ? shadowRoot.insertBefore(child, referenceChild)\n        : parent.insertBefore(child, referenceChild);\n}\n\ninterface ShadowRootWithGetSelection extends ShadowRoot {\n    getSelection?: typeof Window.prototype.getSelection;\n}\n\nexport function getSelection(ref: Node): Selection | null {\n    const win = ref.ownerDocument?.defaultView;\n\n    if (!win) {\n        return null;\n    }\n\n    for (let el: Node | null = ref; el; el = el.parentNode) {\n        if (el.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n            const tmp = el as ShadowRootWithGetSelection;\n\n            // ShadowRoot.getSelection() exists only in Chrome.\n            if (tmp.getSelection) {\n                return tmp.getSelection() || null;\n            }\n\n            break;\n        }\n    }\n\n    return win.getSelection() || null;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { getLastElementChild, nodeContains } from \"./DOMFunctions\";\n\nfunction getLastChild(container: HTMLElement): HTMLElement | undefined {\n    let lastChild: HTMLElement | null = null;\n\n    for (\n        let i = getLastElementChild(container);\n        i;\n        i = getLastElementChild(i)\n    ) {\n        lastChild = i as HTMLElement;\n    }\n\n    return lastChild || undefined;\n}\n\nexport class ShadowTreeWalker implements TreeWalker {\n    public readonly filter: NodeFilter | null;\n    public readonly root: Node;\n    public readonly whatToShow: number;\n\n    private _doc: Document;\n    private _walkerStack: TreeWalker[] = [];\n    private _currentNode: Node;\n    private _currentSetFor: Set<TreeWalker> = new Set();\n\n    constructor(\n        doc: Document,\n        root: Node,\n        whatToShow?: number,\n        filter?: NodeFilter | null\n    ) {\n        this._doc = doc;\n        this.root = root;\n        this.filter = filter ?? null;\n        this.whatToShow = whatToShow ?? NodeFilter.SHOW_ALL;\n        this._currentNode = root;\n\n        this._walkerStack.unshift(\n            doc.createTreeWalker(root, whatToShow, this._acceptNode)\n        );\n\n        const shadowRoot = (root as Element).shadowRoot;\n\n        if (shadowRoot) {\n            const walker = this._doc.createTreeWalker(\n                shadowRoot,\n                this.whatToShow,\n                { acceptNode: this._acceptNode }\n            );\n\n            this._walkerStack.unshift(walker);\n        }\n    }\n\n    private _acceptNode = (node: Node): number => {\n        if (node.nodeType === Node.ELEMENT_NODE) {\n            const shadowRoot = (node as Element).shadowRoot;\n\n            if (shadowRoot) {\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                this._walkerStack.unshift(walker);\n\n                return NodeFilter.FILTER_ACCEPT;\n            } else {\n                if (typeof this.filter === \"function\") {\n                    return this.filter(node);\n                } else if (this.filter?.acceptNode) {\n                    return this.filter.acceptNode(node);\n                }\n            }\n        }\n\n        return NodeFilter.FILTER_SKIP;\n    };\n\n    public get currentNode(): Node {\n        return this._currentNode;\n    }\n\n    public set currentNode(node: Node) {\n        if (!nodeContains(this.root, node)) {\n            throw new Error(\n                \"Cannot set currentNode to a node that is not contained by the root node.\"\n            );\n        }\n\n        const walkers: TreeWalker[] = [];\n        let curNode: Node | null | undefined = node;\n        let currentWalkerCurrentNode = node;\n\n        this._currentNode = node;\n\n        while (curNode && curNode !== this.root) {\n            if (curNode.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n                const shadowRoot = curNode as ShadowRoot;\n\n                const walker = this._doc.createTreeWalker(\n                    shadowRoot,\n                    this.whatToShow,\n                    { acceptNode: this._acceptNode }\n                );\n\n                walkers.push(walker);\n\n                walker.currentNode = currentWalkerCurrentNode;\n\n                this._currentSetFor.add(walker);\n\n                curNode = currentWalkerCurrentNode = shadowRoot.host;\n            } else {\n                curNode = curNode.parentNode;\n            }\n        }\n\n        const walker = this._doc.createTreeWalker(this.root, this.whatToShow, {\n            acceptNode: this._acceptNode,\n        });\n\n        walkers.push(walker);\n\n        walker.currentNode = currentWalkerCurrentNode;\n\n        this._currentSetFor.add(walker);\n\n        this._walkerStack = walkers;\n    }\n\n    public firstChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public lastChild(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public nextNode(): Node | null {\n        const nextNode = this._walkerStack[0].nextNode();\n\n        if (nextNode) {\n            const shadowRoot = (nextNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(nextNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(nextNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return nextNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.nextNode();\n            }\n\n            return nextNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.nextNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public previousNode(): Node | null {\n        const currentWalker = this._walkerStack[0];\n\n        if (currentWalker.currentNode === currentWalker.root) {\n            if (this._currentSetFor.has(currentWalker)) {\n                this._currentSetFor.delete(currentWalker);\n\n                if (this._walkerStack.length > 1) {\n                    this._walkerStack.shift();\n                    return this.previousNode();\n                } else {\n                    return null;\n                }\n            }\n\n            const lastChild = getLastChild(currentWalker.root as HTMLElement);\n\n            if (lastChild) {\n                currentWalker.currentNode = lastChild;\n\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(lastChild);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(lastChild);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return lastChild;\n                }\n            }\n        }\n\n        const previousNode = currentWalker.previousNode();\n\n        if (previousNode) {\n            const shadowRoot = (previousNode as Element).shadowRoot;\n\n            if (shadowRoot) {\n                let nodeResult: number | undefined;\n\n                if (typeof this.filter === \"function\") {\n                    nodeResult = this.filter(previousNode);\n                } else if (this.filter?.acceptNode) {\n                    nodeResult = this.filter.acceptNode(previousNode);\n                }\n\n                if (nodeResult === NodeFilter.FILTER_ACCEPT) {\n                    return previousNode;\n                }\n\n                // _acceptNode should have added new walker for this shadow,\n                // go in recursively.\n                return this.previousNode();\n            }\n\n            return previousNode;\n        } else {\n            if (this._walkerStack.length > 1) {\n                this._walkerStack.shift();\n\n                return this.previousNode();\n            } else {\n                return null;\n            }\n        }\n    }\n\n    public nextSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public previousSibling(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n\n    public parentNode(): Node | null {\n        if (__DEV__) {\n            throw new Error(\"Method not implemented.\");\n        }\n\n        return null;\n    }\n}\n\nexport function createShadowTreeWalker(\n    doc: Document,\n    root: Node,\n    whatToShow?: number,\n    filter?: NodeFilter | null\n) {\n    return new ShadowTreeWalker(doc, root, whatToShow, filter);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { nodeContains } from \"./DOMFunctions\";\n\ninterface OverridenAttachShadow {\n    __origAttachShadow?: typeof Element.prototype.attachShadow;\n}\n\nexport class ShadowMutationObserver implements MutationObserver {\n    private static _shadowObservers: Set<ShadowMutationObserver> = new Set();\n\n    private _root?: Node;\n    private _options?: MutationObserverInit;\n    private _callback: MutationCallback;\n    private _observer: MutationObserver;\n    private _subObservers: Map<Node, MutationObserver>;\n    private _isObserving = false;\n\n    private static _overrideAttachShadow(\n        win: Window & typeof globalThis\n    ): void {\n        const origAttachShadow = win.Element.prototype.attachShadow;\n\n        if ((origAttachShadow as OverridenAttachShadow).__origAttachShadow) {\n            return;\n        }\n\n        Element.prototype.attachShadow = function (\n            this: Element,\n            options?: ShadowRootInit\n        ): ShadowRoot {\n            const shadowRoot = origAttachShadow.call(this, options);\n\n            for (const shadowObserver of ShadowMutationObserver._shadowObservers) {\n                shadowObserver._addSubObserver(shadowRoot);\n            }\n\n            return shadowRoot;\n        };\n\n        (\n            Element.prototype.attachShadow as OverridenAttachShadow\n        ).__origAttachShadow = origAttachShadow;\n    }\n\n    constructor(callback: MutationCallback) {\n        this._callback = callback;\n        this._observer = new MutationObserver(this._callbackWrapper);\n        this._subObservers = new Map();\n    }\n\n    private _callbackWrapper = (\n        mutations: MutationRecord[],\n        observer: MutationObserver\n    ): void => {\n        for (const mutation of mutations) {\n            if (mutation.type === \"childList\") {\n                const removed = mutation.removedNodes;\n                const added = mutation.addedNodes;\n\n                for (let i = 0; i < removed.length; i++) {\n                    this._walkShadows(removed[i], true);\n                }\n\n                for (let i = 0; i < added.length; i++) {\n                    this._walkShadows(added[i]);\n                }\n            }\n        }\n\n        this._callback(mutations, observer);\n    };\n\n    private _addSubObserver(shadowRoot: ShadowRoot): void {\n        if (\n            !this._options ||\n            !this._callback ||\n            this._subObservers.has(shadowRoot)\n        ) {\n            return;\n        }\n\n        if (this._options.subtree && nodeContains(this._root, shadowRoot)) {\n            const subObserver = new MutationObserver(this._callbackWrapper);\n\n            this._subObservers.set(shadowRoot, subObserver);\n\n            if (this._isObserving) {\n                subObserver.observe(shadowRoot, this._options);\n            }\n\n            this._walkShadows(shadowRoot);\n        }\n    }\n\n    public disconnect(): void {\n        this._isObserving = false;\n\n        delete this._options;\n\n        ShadowMutationObserver._shadowObservers.delete(this);\n\n        for (const subObserver of this._subObservers.values()) {\n            subObserver.disconnect();\n        }\n\n        this._subObservers.clear();\n\n        this._observer.disconnect();\n    }\n\n    public observe(target: Node, options?: MutationObserverInit): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n        const win = doc?.defaultView as Window & typeof globalThis;\n\n        if (!doc || !win) {\n            return;\n        }\n\n        ShadowMutationObserver._overrideAttachShadow(win);\n        ShadowMutationObserver._shadowObservers.add(this);\n\n        this._root = target;\n        this._options = options;\n\n        this._isObserving = true;\n\n        this._observer.observe(target, options);\n\n        this._walkShadows(target);\n    }\n\n    private _walkShadows(target: Node, remove?: boolean): void {\n        const doc =\n            target.nodeType === Node.DOCUMENT_NODE\n                ? (target as Document)\n                : target.ownerDocument;\n\n        if (!doc) {\n            return;\n        }\n\n        if (target === doc) {\n            target = doc.body;\n        } else {\n            const shadowRoot = (target as Element).shadowRoot;\n\n            if (shadowRoot) {\n                this._addSubObserver(shadowRoot);\n                return;\n            }\n        }\n\n        const walker = doc.createTreeWalker(target, NodeFilter.SHOW_ELEMENT, {\n            acceptNode: (node) => {\n                if (node.nodeType === Node.ELEMENT_NODE) {\n                    if (remove) {\n                        const subObserver = this._subObservers.get(node);\n\n                        if (subObserver) {\n                            subObserver.disconnect();\n                            this._subObservers.delete(node);\n                        }\n                    } else {\n                        const shadowRoot = (node as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            this._addSubObserver(shadowRoot);\n                        }\n                    }\n                }\n\n                return NodeFilter.FILTER_SKIP;\n            },\n        });\n\n        walker.nextNode();\n    }\n\n    public takeRecords(): MutationRecord[] {\n        const records = this._observer.takeRecords();\n\n        for (const subObserver of this._subObservers.values()) {\n            records.push(...subObserver.takeRecords());\n        }\n\n        return records;\n    }\n}\n\nexport function createShadowMutationObserver(\n    callback: MutationCallback\n): MutationObserver {\n    return new ShadowMutationObserver(callback);\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nfunction shadowQuerySelector(\n    node: ParentNode,\n    selector: string,\n    all: boolean\n): Element[] {\n    // TODO: This is probably slow. Optimize to use each shadowRoot's querySelector/querySelectorAll\n    //       instead of walking the tree.\n\n    const elements: Element[] = [];\n\n    walk(node, selector);\n\n    return elements;\n\n    function walk(from: Node, selector: string): void {\n        let el: Element | null = null;\n\n        const walker = document.createTreeWalker(\n            from,\n            NodeFilter.SHOW_ELEMENT,\n            {\n                acceptNode: (n) => {\n                    if (n.nodeType === Node.ELEMENT_NODE) {\n                        if ((n as Element).matches(selector)) {\n                            el = n as Element;\n                            elements.push(el);\n                            return all\n                                ? NodeFilter.FILTER_SKIP\n                                : NodeFilter.FILTER_ACCEPT;\n                        }\n\n                        const shadowRoot = (n as Element).shadowRoot;\n\n                        if (shadowRoot) {\n                            walk(shadowRoot, selector);\n                            return !all && elements.length\n                                ? NodeFilter.FILTER_ACCEPT\n                                : NodeFilter.FILTER_SKIP;\n                        }\n                    }\n                    return NodeFilter.FILTER_SKIP;\n                },\n            }\n        );\n\n        walker.nextNode();\n    }\n}\n\nexport function querySelectorAll(\n    node: ParentNode,\n    selector: string\n): Element[] {\n    return shadowQuerySelector(node, selector, true);\n}\n\nexport function querySelector(\n    node: ParentNode,\n    selector: string\n): Element | null {\n    return shadowQuerySelector(node, selector, false)[0] || null;\n}\n\nexport function getElementById(doc: Document, id: string): HTMLElement | null {\n    return querySelector(doc, \"#\" + id) as HTMLElement | null;\n}\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// TODO: The functions below do not consider Shadow DOM slots yet. We will be adding\n// support for slots as the need arises.\n\nexport { createShadowTreeWalker as createTreeWalker } from \"./ShadowTreeWalker\";\nexport { createShadowMutationObserver as createMutationObserver } from \"./ShadowMutationObserver\";\nexport {\n    appendChild,\n    getActiveElement,\n    getFirstChild,\n    getFirstElementChild,\n    getLastChild,\n    getLastElementChild,\n    getNextElementSibling,\n    getNextSibling,\n    getParentElement,\n    getParentNode,\n    getPreviousElementSibling,\n    getPreviousSibling,\n    getSelection,\n    insertBefore,\n    nodeContains,\n} from \"./DOMFunctions\";\nexport {\n    getElementById,\n    querySelector,\n    querySelectorAll,\n} from \"./querySelector\";\n","/*!\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CrossOriginAPI } from \"./CrossOrigin\";\nimport { DeloserAPI } from \"./Deloser\";\nimport { FocusableAPI } from \"./Focusable\";\nimport { FocusedElementState } from \"./State/FocusedElement\";\nimport { GroupperAPI } from \"./Groupper\";\nimport { getTabsterOnElement, updateTabsterByAttribute } from \"./Instance\";\nimport { KeyboardNavigationState } from \"./State/KeyboardNavigation\";\nimport { ModalizerAPI } from \"./Modalizer\";\nimport { MoverAPI } from \"./Mover\";\nimport { observeMutations } from \"./MutationEvent\";\nimport { ObservedElementAPI } from \"./State/ObservedElement\";\nimport { OutlineAPI } from \"./Outline\";\nimport { RootAPI, WindowWithTabsterInstance } from \"./Root\";\nimport * as Types from \"./Types\";\nimport { UncontrolledAPI } from \"./Uncontrolled\";\nimport {\n    cleanupFakeWeakRefs,\n    clearElementCache,\n    createElementTreeWalker,\n    createWeakMap,\n    disposeInstanceContext,\n    startFakeWeakRefsCleanup,\n    stopFakeWeakRefsCleanupAndClearStorage,\n    dispatchGroupperMoveFocusEvent,\n    dispatchMoverMoveFocusEvent,\n    DummyInputObserver,\n} from \"./Utils\";\nimport { RestorerAPI } from \"./Restorer\";\nimport { dom, setDOMAPI } from \"./DOMAPI\";\nimport * as shadowDOMAPI from \"./Shadowdomize\";\n\nexport { Types };\nexport * from \"./AttributeHelpers\";\n\nexport { dispatchGroupperMoveFocusEvent, dispatchMoverMoveFocusEvent };\n\nclass Tabster implements Types.Tabster {\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    core: Types.TabsterCore;\n\n    constructor(tabster: Types.TabsterCore) {\n        this.keyboardNavigation = tabster.keyboardNavigation;\n        this.focusedElement = tabster.focusedElement;\n        this.focusable = tabster.focusable;\n        this.root = tabster.root;\n        this.uncontrolled = tabster.uncontrolled;\n        this.core = tabster;\n    }\n}\n\n/**\n * Extends Window to include an internal Tabster instance.\n */\nclass TabsterCore implements Types.TabsterCore {\n    private _storage: WeakMap<HTMLElement, Types.TabsterElementStorage>;\n    private _unobserve: (() => void) | undefined;\n    private _win: WindowWithTabsterInstance | undefined;\n    private _forgetMemorizedTimer: number | undefined;\n    private _forgetMemorizedElements: HTMLElement[] = [];\n    private _wrappers: Set<Tabster> = new Set<Tabster>();\n    private _initTimer: number | undefined;\n    private _initQueue: (() => void)[] = [];\n\n    _version: string = __VERSION__;\n    _noop = false;\n    controlTab: boolean;\n    rootDummyInputs: boolean;\n\n    // Core APIs\n    keyboardNavigation: Types.KeyboardNavigationState;\n    focusedElement: Types.FocusedElementState;\n    focusable: Types.FocusableAPI;\n    root: Types.RootAPI;\n    uncontrolled: Types.UncontrolledAPI;\n    internal: Types.InternalAPI;\n    _dummyObserver: Types.DummyInputObserver;\n\n    // Extended APIs\n    groupper?: Types.GroupperAPI;\n    mover?: Types.MoverAPI;\n    outline?: Types.OutlineAPI;\n    deloser?: Types.DeloserAPI;\n    modalizer?: Types.ModalizerAPI;\n    observedElement?: Types.ObservedElementAPI;\n    crossOrigin?: Types.CrossOriginAPI;\n    restorer?: Types.RestorerAPI;\n    getParent: (el: Node) => Node | null;\n\n    constructor(win: Window, props?: Types.TabsterCoreProps) {\n        this._storage = createWeakMap(win);\n        this._win = win;\n\n        const getWindow = this.getWindow;\n\n        if (props?.DOMAPI) {\n            setDOMAPI({ ...props.DOMAPI });\n        }\n\n        this.keyboardNavigation = new KeyboardNavigationState(getWindow);\n        this.focusedElement = new FocusedElementState(this, getWindow);\n        this.focusable = new FocusableAPI(this);\n        this.root = new RootAPI(this, props?.autoRoot);\n        this.uncontrolled = new UncontrolledAPI(\n            // TODO: Remove checkUncontrolledTrappingFocus in the next major version.\n            props?.checkUncontrolledCompletely ||\n                props?.checkUncontrolledTrappingFocus\n        );\n        this.controlTab = props?.controlTab ?? true;\n        this.rootDummyInputs = !!props?.rootDummyInputs;\n\n        this._dummyObserver = new DummyInputObserver(getWindow);\n\n        this.getParent = props?.getParent ?? dom.getParentNode;\n\n        this.internal = {\n            stopObserver: (): void => {\n                if (this._unobserve) {\n                    this._unobserve();\n                    delete this._unobserve;\n                }\n            },\n\n            resumeObserver: (syncState: boolean): void => {\n                if (!this._unobserve) {\n                    const doc = getWindow().document;\n                    this._unobserve = observeMutations(\n                        doc,\n                        this,\n                        updateTabsterByAttribute,\n                        syncState\n                    );\n                }\n            },\n        };\n\n        startFakeWeakRefsCleanup(getWindow);\n\n        // Gives a tick to the host app to initialize other tabster\n        // APIs before tabster starts observing attributes.\n        this.queueInit(() => {\n            this.internal.resumeObserver(true);\n        });\n    }\n\n    /**\n     * Merges external props with the current props. Not all\n     * props can/should be mergeable, so let's add more as we move on.\n     * @param props Tabster props\n     */\n    private _mergeProps(props?: Types.TabsterCoreProps) {\n        if (!props) {\n            return;\n        }\n\n        this.getParent = props.getParent ?? this.getParent;\n    }\n\n    createTabster(\n        noRefCount?: boolean,\n        props?: Types.TabsterCoreProps\n    ): Types.Tabster {\n        const wrapper = new Tabster(this);\n\n        if (!noRefCount) {\n            this._wrappers.add(wrapper);\n        }\n\n        this._mergeProps(props);\n\n        return wrapper;\n    }\n\n    disposeTabster(wrapper: Types.Tabster, allInstances?: boolean) {\n        if (allInstances) {\n            this._wrappers.clear();\n        } else {\n            this._wrappers.delete(wrapper);\n        }\n\n        if (this._wrappers.size === 0) {\n            this.dispose();\n        }\n    }\n\n    dispose(): void {\n        this.internal.stopObserver();\n\n        const win = this._win;\n\n        win?.clearTimeout(this._initTimer);\n        delete this._initTimer;\n        this._initQueue = [];\n\n        this._forgetMemorizedElements = [];\n\n        if (win && this._forgetMemorizedTimer) {\n            win.clearTimeout(this._forgetMemorizedTimer);\n            delete this._forgetMemorizedTimer;\n        }\n\n        this.outline?.dispose();\n        this.crossOrigin?.dispose();\n        this.deloser?.dispose();\n        this.groupper?.dispose();\n        this.mover?.dispose();\n        this.modalizer?.dispose();\n        this.observedElement?.dispose();\n        this.restorer?.dispose();\n\n        this.keyboardNavigation.dispose();\n        this.focusable.dispose();\n        this.focusedElement.dispose();\n        this.root.dispose();\n\n        this._dummyObserver.dispose();\n\n        stopFakeWeakRefsCleanupAndClearStorage(this.getWindow);\n        clearElementCache(this.getWindow);\n\n        this._storage = new WeakMap();\n        this._wrappers.clear();\n\n        if (win) {\n            disposeInstanceContext(win);\n            delete win.__tabsterInstance;\n            delete this._win;\n        }\n    }\n\n    storageEntry(\n        element: HTMLElement,\n        addremove?: boolean\n    ): Types.TabsterElementStorageEntry | undefined {\n        const storage = this._storage;\n        let entry = storage.get(element);\n\n        if (entry) {\n            if (addremove === false && Object.keys(entry).length === 0) {\n                storage.delete(element);\n            }\n        } else if (addremove === true) {\n            entry = {};\n            storage.set(element, entry);\n        }\n\n        return entry;\n    }\n\n    getWindow = () => {\n        if (!this._win) {\n            throw new Error(\"Using disposed Tabster.\");\n        }\n\n        return this._win;\n    };\n\n    forceCleanup(): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._forgetMemorizedElements.push(this._win.document.body);\n\n        if (this._forgetMemorizedTimer) {\n            return;\n        }\n\n        this._forgetMemorizedTimer = this._win.setTimeout(() => {\n            delete this._forgetMemorizedTimer;\n\n            for (\n                let el: HTMLElement | undefined =\n                    this._forgetMemorizedElements.shift();\n                el;\n                el = this._forgetMemorizedElements.shift()\n            ) {\n                clearElementCache(this.getWindow, el);\n                FocusedElementState.forgetMemorized(this.focusedElement, el);\n            }\n        }, 0);\n\n        cleanupFakeWeakRefs(this.getWindow, true);\n    }\n\n    queueInit(callback: () => void): void {\n        if (!this._win) {\n            return;\n        }\n\n        this._initQueue.push(callback);\n\n        if (!this._initTimer) {\n            this._initTimer = this._win?.setTimeout(() => {\n                delete this._initTimer;\n                this.drainInitQueue();\n            }, 0);\n        }\n    }\n\n    drainInitQueue(): void {\n        if (!this._win) {\n            return;\n        }\n\n        const queue = this._initQueue;\n        // Resetting the queue before calling the callbacks to avoid recursion.\n        this._initQueue = [];\n        queue.forEach((callback) => callback());\n    }\n}\n\nexport function forceCleanup(tabster: Types.Tabster): void {\n    // The only legit case for calling this method is when you've completely removed\n    // the application DOM and not going to add the new one for a while.\n    const tabsterCore = tabster.core;\n    tabsterCore.forceCleanup();\n}\n\n/**\n * Creates an instance of Tabster, returns the current window instance if it already exists.\n */\nexport function createTabster(\n    win: Window,\n    props?: Types.TabsterCoreProps\n): Types.Tabster {\n    let tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    if (tabster) {\n        return tabster.createTabster(false, props);\n    }\n\n    tabster = new TabsterCore(win, props);\n\n    (win as WindowWithTabsterInstance).__tabsterInstance = tabster;\n\n    return tabster.createTabster();\n}\n\n/**\n * Returns an instance of Tabster if it was created before or null.\n */\nexport function getTabster(win: Window): Types.Tabster | null {\n    const tabster = getCurrentTabster(win as WindowWithTabsterInstance);\n\n    return tabster ? tabster.createTabster(true) : null;\n}\n\nexport function getShadowDOMAPI(): Types.DOMAPI {\n    return shadowDOMAPI;\n}\n\n/**\n * Creates a new groupper instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getGroupper(tabster: Types.Tabster): Types.GroupperAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.groupper) {\n        tabsterCore.groupper = new GroupperAPI(\n            tabsterCore,\n            tabsterCore.getWindow\n        );\n    }\n\n    return tabsterCore.groupper;\n}\n\n/**\n * Creates a new mover instance or returns an existing one\n * @param tabster Tabster instance\n */\nexport function getMover(tabster: Types.Tabster): Types.MoverAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.mover) {\n        tabsterCore.mover = new MoverAPI(tabsterCore, tabsterCore.getWindow);\n    }\n\n    return tabsterCore.mover;\n}\n\nexport function getOutline(tabster: Types.Tabster): Types.OutlineAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.outline) {\n        tabsterCore.outline = new OutlineAPI(tabsterCore);\n    }\n\n    return tabsterCore.outline;\n}\n\n/**\n * Creates a new new deloser instance or returns an existing one\n * @param tabster Tabster instance\n * @param props Deloser props\n */\nexport function getDeloser(\n    tabster: Types.Tabster,\n    props?: { autoDeloser: Types.DeloserProps }\n): Types.DeloserAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.deloser) {\n        tabsterCore.deloser = new DeloserAPI(tabsterCore, props);\n    }\n\n    return tabsterCore.deloser;\n}\n\n/**\n * Creates a new modalizer instance or returns an existing one\n * @param tabster Tabster instance\n * @param alwaysAccessibleSelector When Modalizer is active, we put\n * aria-hidden to everything else to hide it from screen readers. This CSS\n * selector allows to exclude some elements from this behaviour. For example,\n * this could be used to exclude aria-live region with the application-wide\n * status announcements.\n * @param accessibleCheck An optional callback that will be called when\n * active Modalizer wants to hide an element that doesn't belong to it from\n * the screen readers by setting aria-hidden. Similar to alwaysAccessibleSelector\n * but allows to address the elements programmatically rather than with a selector.\n * If the callback returns true, the element will not receive aria-hidden.\n */\nexport function getModalizer(\n    tabster: Types.Tabster,\n    // @deprecated use accessibleCheck.\n    alwaysAccessibleSelector?: string,\n    accessibleCheck?: Types.ModalizerElementAccessibleCheck\n): Types.ModalizerAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.modalizer) {\n        tabsterCore.modalizer = new ModalizerAPI(\n            tabsterCore,\n            alwaysAccessibleSelector,\n            accessibleCheck\n        );\n    }\n\n    return tabsterCore.modalizer;\n}\n\nexport function getObservedElement(\n    tabster: Types.Tabster\n): Types.ObservedElementAPI {\n    const tabsterCore = tabster.core;\n\n    if (!tabsterCore.observedElement) {\n        tabsterCore.observedElement = new ObservedElementAPI(tabsterCore);\n    }\n\n    return tabsterCore.observedElement;\n}\n\nexport function getCrossOrigin(tabster: Types.Tabster): Types.CrossOriginAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.crossOrigin) {\n        getDeloser(tabster);\n        getModalizer(tabster);\n        getMover(tabster);\n        getGroupper(tabster);\n        getOutline(tabster);\n        getObservedElement(tabster);\n        tabsterCore.crossOrigin = new CrossOriginAPI(tabsterCore);\n    }\n\n    return tabsterCore.crossOrigin;\n}\n\nexport function getInternal(tabster: Types.Tabster): Types.InternalAPI {\n    const tabsterCore = tabster.core;\n    return tabsterCore.internal;\n}\n\nexport function getRestorer(tabster: Types.Tabster): Types.RestorerAPI {\n    const tabsterCore = tabster.core;\n    if (!tabsterCore.restorer) {\n        tabsterCore.restorer = new RestorerAPI(tabsterCore);\n    }\n\n    return tabsterCore.restorer;\n}\n\nexport function disposeTabster(\n    tabster: Types.Tabster,\n    allInstances?: boolean\n): void {\n    tabster.core.disposeTabster(tabster, allInstances);\n}\n\n/**\n * Returns an instance of Tabster if it already exists on the window .\n * @param win window instance that could contain an Tabster instance.\n */\nexport function getCurrentTabster(win: Window): Types.TabsterCore | undefined {\n    return (win as WindowWithTabsterInstance).__tabsterInstance;\n}\n\n/**\n * Allows to make Tabster non operational. Intended for performance debugging (and other\n * kinds of debugging), you can switch Tabster off without changing the application code\n * that consumes it.\n * @param tabster a reference created by createTabster().\n * @param noop true if you want to make Tabster noop, false if you want to turn it back.\n */\nexport function makeNoOp(tabster: Types.Tabster, noop: boolean): void {\n    const core = tabster.core;\n\n    if (core._noop !== noop) {\n        core._noop = noop;\n\n        const processNode = (element: HTMLElement): number => {\n            if (!element.getAttribute) {\n                return NodeFilter.FILTER_SKIP;\n            }\n\n            if (\n                getTabsterOnElement(core, element) ||\n                element.hasAttribute(Types.TabsterAttributeName)\n            ) {\n                updateTabsterByAttribute(core, element);\n            }\n\n            return NodeFilter.FILTER_SKIP;\n        };\n\n        const doc = core.getWindow().document;\n        const body = doc.body;\n\n        processNode(body);\n\n        const walker = createElementTreeWalker(doc, body, processNode);\n\n        if (walker) {\n            while (walker.nextNode()) {\n                /* Iterating for the sake of calling processNode() callback. */\n            }\n        }\n    }\n}\n\nexport function isNoOp(tabster: Types.TabsterCore): boolean {\n    return (tabster as TabsterCore)._noop;\n}\n"],"names":["TabsterAttributeName","TabsterDummyInputAttributeName","DeloserEventName","ModalizerActiveEventName","ModalizerInactiveEventName","ModalizerFocusInEventName","ModalizerFocusOutEventName","ModalizerBeforeFocusOutEventName","MoverEventName","FocusInEventName","FocusOutEventName","MoveFocusEventName","MoverMoveFocusEventName","GroupperMoveFocusEventName","FocusableSelector","join","GroupperMoveFocusActions","Enter","Escape","ObservedElementAccesibilities","Any","Accessible","Focusable","RestoreFocusOrders","History","DeloserDefault","RootDefault","DeloserFirst","RootFirst","Visibilities","Invisible","PartiallyVisible","Visible","RestorerTypes","Source","Target","MoverDirections","Both","Vertical","Horizontal","Grid","GridLinear","MoverKeys","ArrowUp","ArrowDown","ArrowLeft","ArrowRight","PageUp","PageDown","Home","End","GroupperTabbabilities","Unlimited","Limited","LimitedTrapFocus","SysDummyInputsPositions","Auto","Inside","Outside","getTabsterOnElement","tabster","element","storageEntry","updateTabsterByAttribute","dispose","newAttrValue","_noop","undefined","getAttribute","Types","entry","newAttr","attr","string","newValue","JSON","parse","Error","object","e","__DEV__","console","error","tabsterOnElement","oldTabsterProps","newTabsterProps","key","Object","keys","root","onRoot","part","observedElement","onObservedElementUpdate","sys","deloser","setProps","createDeloser","createRoot","modalizer","createModalizer","restorer","createRestorer","focusable","groupper","createGroupper","mover","createMover","observed","uncontrolled","outline","length","createEventTarget","getWindow","global","EventTarget","TypeError","document","createElement","_createMutationObserver","callback","MutationObserver","_createTreeWalker","doc","whatToShow","filter","createTreeWalker","_getParentNode","node","parentNode","_getParentElement","parentElement","_nodeContains","parent","child","contains","_getActiveElement","activeElement","_querySelector","selector","querySelector","_querySelectorAll","Array","prototype","slice","call","querySelectorAll","_getElementById","id","getElementById","_getFirstChild","firstChild","_getLastChild","lastChild","_getNextSibling","nextSibling","_getPreviousSibling","previousSibling","_getFirstElementChild","firstElementChild","_getLastElementChild","lastElementChild","_getNextElementSibling","nextElementSibling","_getPreviousElementSibling","previousElementSibling","_appendChild","appendChild","_insertBefore","referenceChild","insertBefore","_getSelection","ref","ownerDocument","getSelection","dom","createMutationObserver","getParentNode","getParentElement","nodeContains","getActiveElement","getFirstChild","getLastChild","getNextSibling","getPreviousSibling","getFirstElementChild","getLastElementChild","getNextElementSibling","getPreviousElementSibling","setDOMAPI","domapi","_isBrokenIE11","_DOMRect","DOMRect","constructor","x","y","width","height","left","top","right","bottom","_uidCounter","NodeFilter","SHOW_ELEMENT","_updateDummyInputsTimeout","getInstanceContext","win","ctx","__tabsterInstanceContext","elementByUId","basics","Promise","WeakRef","containerBoundingRectCache","lastContainerBoundingRectCacheId","fakeWeakRefs","fakeWeakRefsStarted","disposeInstanceContext","containerBoundingRectCacheTimer","clearTimeout","fakeWeakRefsTimer","createWeakMap","WeakMap","hasSubFocusable","FakeWeakRef","target","_target","deref","cleanup","fwr","forceRemove","documentContains","WeakHTMLElement","data","context","push","_ref","_data","get","getData","cleanupFakeWeakRefs","startFakeWeakRefsCleanup","getWeakRef","setTimeout","stopFakeWeakRefsCleanupAndClearStorage","createElementTreeWalker","acceptNode","nodeType","Node","ELEMENT_NODE","getBoundingRect","cacheId","__tabsterCacheId","cached","rect","scrollingElement","documentElement","clientWidth","clientHeight","r","getBoundingClientRect","Math","max","min","window","cId","isElementVerticallyVisibleInContainer","tolerance","container","getScrollableContainer","containerRect","elementRect","intersectionTolerance","topIntersection","bottomIntersection","totalIntersection","scrollIntoView","alignToTop","scrollTop","el","scrollWidth","scrollHeight","makeFocusIgnored","__shouldIgnoreFocus","shouldIgnoreFocus","getUId","wnd","rnd","Uint32Array","crypto","getRandomValues","msCrypto","i","random","srnd","toString","Date","now","getElementUId","uid","__tabsterElementUID","getWindowUId","__tabsterCrossOriginWindowUID","clearElementCache","wel","body","matchesSelector","matches","msMatchesSelector","webkitMatchesSelector","getPromise","_lastTabsterPartId","TabsterPart","props","_tabster","_element","_props","getElement","getProps","DummyInput","isOutside","fixedTarget","_fixedTarget","nativeFocus","input","onFocusIn","relatedTarget","_isBackward","useDefaultAction","onFocusOut","tabIndex","setAttribute","style","position","opacity","zIndex","setProperty","isFirst","_isPhantom","isPhantom","addEventListener","_focusIn","_focusOut","__tabsterDummyContainer","_disposeTimer","_clearDisposeTimeout","removeEventListener","removeChild","setTopLeft","isIn","current","previous","compareDocumentPosition","DOCUMENT_POSITION_FOLLOWING","DummyInputManagerPriorities","Root","Modalizer","Mover","Groupper","DummyInputManager","priority","outsideByDefault","callForDefaultAction","_instance","DummyInputManagerCore","_setHandlers","_onFocusIn","_onFocusOut","moveOut","backwards","moveOutWithDefaultAction","relatedEvent","getHandler","setTabbable","tabbable","moveWithPhantomDummy","moveOutOfElement","isBackward","dummy","tagName","isFocusable","potentialDummy","dummyFor","dispatchMoveFocusEvent","by","owner","next","addPhantomDummyWithTarget","sourceElement","targetElement","dummyParent","setDummyInputDebugValue","wrappers","what","map","w","DummyInputObserver","Set","WeakSet","_changedParents","has","add","_updateDummyInputsTimer","_win","_dummyElements","dummyElement","_dummyCallbacks","set","domChanged","_domChanged","remove","delete","_updateTimer","_updateQueue","clear","updatePositions","compute","_lastUpdateQueueTime","_scheduledUpdatePositions","scrollTopLeftCache","Map","setTopLeftCallbacks","manager","dummyInput","_onFocus","first","_firstDummy","last","_lastDummy","_ensurePosition","firstInput","lastInput","toFocus","_wrappers","wrapper","_getCurrent","_addTimer","_getWindow","_addTransformOffsets","_dummyObserver","_computeTransformOffsets","from","transformElements","_transformElements","newTransformElements","scrollLeft","scrollTopLeft","transform","getComputedStyle","_callForDefaultAction","instance","__tabsterDummy","forcedDummyPosition","dummyInputsPosition","_isOutside","_addDummyInputs","force","sort","a","b","firstDummyInput","lastDummyInput","elementParent","getAdjacentElement","prev","cur","adjacent","triggerEvent","name","detail","event","CustomEvent","bubbles","cancelable","composed","details","dispatchEvent","defaultPrevented","dispatchMoverMoveFocusEvent","dispatchGroupperMoveFocusEvent","action","augmentAttribute","value","ret","aug","origVal","removeAttribute","origValue","getTabsterAttribute","plain","stringify","mergeTabsterProps","newProps","setTabsterAttribute","update","_setInformativeStyle","weakElement","removeProperty","RootDummyManager","setFocused","_setFocused","keyboardNavigation","setNavigatingWithKeyboard","focusedElement","getFirstOrLastTabbable","ignoreAccessibility","blur","_onDummyInputFocus","onDispose","hasFocused","_setFocusedTimer","_isFocused","_dummyManager","eventTarget","getParent","rootElement","curElement","composedPath","_onDispose","_sys","controlTab","rootDummyInputs","addDummyInputs","KEYBORG_FOCUSIN","KEYBORG_FOCUSOUT","_add","_remove","dummyManager","RootAPI","autoRoot","_autoRootUnwait","_autoRoot","_autoRootWaiting","_autoRootCreate","_roots","queueInit","forEach","rootId","rootById","newRoot","_onRootDispose","_forceDummy","roots","getRootByUId","__tabsterInstance","getTabsterContext","options","checkRtl","referenceElement","drainInitQueue","excludedFromMover","groupperBeforeMover","modalizerInGroupper","dirRightToLeft","ignoreKeydown","dir","toLowerCase","excludeFromMover","curModalizer","curGroupper","curMover","isActive","tabbability","userId","activeId","assign","rootAPI","shouldIgnoreKeydown","rtl","getRoot","removed","_containerHistoryLength","DeloserItemBase","DeloserItem","_deloser","belongsTo","unshift","focusAvailable","available","findAvailable","focus","resetFocus","resolve","DeloserHistoryByRootBase","rootUId","getLength","_history","removeDeloser","c","hasDeloser","some","d","DeloserHistoryByRoot","unshiftToDeloser","item","splice","skip","resetQueue","DeloserHistory","process","DeloserAPI","getDeloser","historyByRoot","make","createInstance","hbr","h","snapshotIndex","buildElementSelector","withClass","withIndex","escapeRegExp","escapeReplaceValue","elementId","replace","className","split","cls","trim","index","buildSelector","DOCUMENT_FRAGMENT_NODE","isBody","Deloser","_isActive","_snapshotIndex","focusFirst","focusDefault","preserveExisting","we","setActive","active","getActions","clearHistory","setSnapshot","pop","isVisible","restoreFocusOrder","findDefault","_findFirst","availableInHistory","_findInHistory","availableDefault","availableFirst","customFocusLostHandler","noSelectorCheck","els","isNavigatingWithKeyboard","findFirst","useActiveModalizer","_restoreFocusTimer","_scheduleRestoreFocus","_activate","_deactivate","subscribe","autoDeloser","_autoDeloser","_autoDeloserInstance","unsubscribe","_curDeloser","_onDeloserDispose","getFocusedElement","pause","_isPaused","resume","restore","curDeloser","_inDeloser","_isRestoringFocus","restoreFocus","lastFocused","getLastFocusedElement","offsetParent","deloserAPI","autoDeloserProps","getHistory","forceRestoreFocus","Subscribable","_callbacks","_val","callbacks","indexOf","subscribeFirst","setVal","val","_callCallbacks","getVal","trigger","_transactionTimeout","_pingTimeout","_targetIdUp","CrossOriginTransactionTypes","Bootstrap","FocusElement","State","GetElement","RestoreFocusInDeloser","Ping","CrossOriginDeloserItem","trasactions","_transactions","deloserUId","reset","beginTransaction","RestoreFocusInDeloserTransaction","then","CrossOriginDeloserHistoryByRoot","transactions","CrossOriginTransaction","getOwner","knownTargets","timeout","sentTo","targetId","sendUp","ownerId","beginData","_knownTargets","_sentTo","_promise","reject","_resolve","_reject","getTargets","send","begin","selfResponse","targets","transaction","type","isResponse","timestamp","sentto","_isSelfResponding","endData","_sentCount","end","_send","_inProgress","_isDone","onResponse","inProgressId","BootstrapTransaction","shouldForward","makeResponse","FocusElementTransaction","shouldSelfRespond","GetElementTransaction","findElement","forwardResult","CrossOriginStates","Focused","Blurred","Observed","DeadWindow","KeyboardNavigation","Outline","StateTransaction","state","isSelfResponse","_makeFocusedResponse","_makeBlurredResponse","_makeObservedResponse","_makeDeadWindowResponse","_makeKeyboardNavigationResponse","_makeOutlineResponse","CrossOriginElement","ownerUId","observedName","observedDetails","focusOwner","focusOwnerTimestamp","history","historyItem","CrossOriginFocusedElementState","crossOrigin","isFocusedProgrammatically","CrossOriginObservedElementState","names","deadUId","removeTarget","ignoreKeyboardNavigationStateUpdate","origOutlineSetup","accessibility","getElementData","getDeloserUID","dataOut","isWaitElementResolved","isForwardResolved","isResolved","waitElement","result","forwardRet","deloserByUId","PingTransaction","CrossOriginTransactions","_ownerUId","transactionId","knownTarget","t","Transaction","_getTransactionClass","forwardTransaction","_owner","response","_dead","source","postMessage","_onMessage","setup","isSetUp","setSendUp","_onPageHide","_ping","_isDefaultSendUp","_onBrowserMessage","_pingTimer","_deadPromise","timer","withReject","_beginTransaction","catch","finally","deadWindows","all","focused","noFocusedProgrammaticallyFlag","noAccessibleCheck","_focus","focusById","focusByObservedName","elementData","requestFocus","requestId","_lastRequestFocusId","CrossOriginAPI","_onKeyboardNavigationStateChanged","_onObserved","_ctx","_outlineSetup","_blurTimer","_init","deloserElement","FocusableAPI","includeProgrammaticallyFocusable","noVisibleCheck","isAccessible","defaultView","computedStyle","visibility","_isHidden","ignoreDisabled","ignoreAriaDisabled","_isDisabled","hasAttribute","attrVal","isAugmented","out","findLast","findNext","findPrev","acceptCondition","isDefault","findAll","_findElements","found","currentElement","modalizerId","onElement","elements","hasCustomCondition","acceptElementState","modalizerUserId","cachedGrouppers","walker","_acceptElement","prepareForNextElement","shouldContinueIfNotFound","foundElement","foundBackward","fromCtx","outOfDOMOrder","currentNode","FILTER_ACCEPT","skippedFocusable","previousNode","nextNode","FILTER_SKIP","FILTER_REJECT","rejectElementsFrom","currentCtx","fromMover","acceptElement","groupperElement","fromMoverElement","moverElement","Keys","Tab","Esc","Space","Left","Up","Right","Down","getUncontrolledCompletelyContainer","uncontrolledOnElement","isUncontrolledCompletely","completely","FocusedElementState","_onKeyDown","_setFocusedElement","_onChanged","originalEvent","keyCode","ctrlKey","contentEditable","shiftKey","findNextTabbable","nextElement","uncontrolledCompletelyContainer","nextUncontrolled","preventDefault","stopImmediatePropagation","_lastVal","lastCtx","_lastResetElement","_nextVal","forgetMemorized","_focusFirstOrLast","focusLast","prevTabIndex","prevAriaHidden","_setOrRemoveAttribute","lastResetElement","nextVal","_validateFocusedElement","actualContainer","isTabbingTimer","_isTabbingTimer","isTabbing","callFindNext","parentCtx","currentScopeElement","newCurrent","findProps","findPropsOut","GroupperDummyManager","makeTabbable","_first","currentIsDummy","_shouldTabInside","groupperFirstFocusable","getFirst","isTabbable","noIfFirstIsFocused","isParentActive","g","orContainer","setFirst","parentCtxGroupper","parentGroupper","parentGroupperElement","getIsActive","GroupperAPI","_onMouseDown","_onMoveFocus","_grouppers","_updateCurrent","altKey","metaKey","handleKeyPress","_enterGroupper","_escapeGroupper","_handleKeyPressTimer","_current","groupperId","newGroupper","_onGroupperDispose","forgetCurrentGrouppers","includeTarget","checkTarget","newIds","isTarget","delegated","fromModalizer","moveFocus","KeyboardNavigationState","_keyborg","createKeyborg","_onChange","disposeKeyborg","_wasFocusedCounter","_ariaHidden","internalId","wasFocused","ModalizerDummyManager","dummyContainer","activeElements","_activeElements","_wasFocused","makeActive","triggerFocusEvent","noIncrement","modalizerElement","isTrapped","eventName","allElements","ModalizerAPI","alwaysAccessibleSelector","accessibleCheck","_parts","_modalizers","focusedSince","m","f","augmentedMap","_augMap","currentIsOthersAccessible","isOthersAccessible","isAlwaysAccessible","_restoreModalizerFocusTimer","_restoreModalizerFocus","_aug","_alwaysAccessibleSelector","_accessibleCheck","_hiddenUpdateTimer","_onModalizerDispose","hiddenUpdate","_hiddenUpdate","elementFromModalizer","noFocusFirst","noFocusDefault","modalizerRoot","isNoFocusFirst","isNoFocusDefault","currentModalizer","parts","visibleElements","hiddenElements","alwaysAccessibleElements","activeModalizerElements","modalizerParts","allVisibleElements","newAugmented","newAugmentedMap","toggle","hide","walk","containsModalizer","outsideElement","DOCUMENT_POSITION_PRECEDING","_inputSelector","MoverDummyManager","getMemorized","memorized","_getMemorized","_onFocusDummyInput","_moverUpdateAdd","_moverUpdateAttr","_moverUpdateRemove","entries","newVisibility","fullyVisible","_fullyVisible","intersectionRatio","_visible","getState","visibilityTolerance","trackState","visibilityAware","_intersectionObserver","IntersectionObserver","_onIntersection","threshold","_observeState","memorizeCurrent","disconnect","_allElements","_unobserve","_setCurrentTimer","setCurrent","changed","_prevCurrent","weak","getCurrent","hasDefault","tabsterFocusable","updateQueue","observer","mutations","mutation","removedNodes","added","addedNodes","attributeName","requestUpdate","setElement","unobserve","observe","updateElement","addNewElements","getMoverGroupper","removeWalk","toe","childList","subtree","attributes","attributeFilter","isCurrent","getDistance","ax1","ay1","ax2","ay2","bx1","by1","bx2","by2","xDistance","yDistance","sqrt","MoverAPI","_movers","currentFocusableElement","deepestFocusableElement","_ignoredInputTimer","_ignoredInputResolve","moverKey","_isIgnoredInput","_moveFocus","moverId","newMover","_onMoverDispose","fromElement","moverProps","direction","isBoth","isVertical","isHorizontal","isGridLinear","isGrid","isCyclic","cyclic","scrollIntoViewArg","focusedElementRect","focusedElementX1","focusedElementX2","ceil","floor","nextElementX1","nextElementX2","firstColumnX1","lastColumnX1","lastDistance","lastIntersection","xIntersectionWidth","minWidth","intersection","distance","selectionStart","selectionEnd","textLength","asyncRet","selection","initialLength","modify","selStart","anchorNode","prevAnchorNode","focusNode","prevFocusNode","anchorOffset","prevAnchorOffset","focusOffset","prevFocusOffset","textContent","anchorFound","addOffsets","nodeText","len","stop","observeMutations","syncState","onMutation","updateTabsterElements","processNode","_conditionCheckTimeout","ObservedElementAPI","_currentRequest","delta","_currentRequestTimestamp","settleTime","cancel","info","_observedById","observedNames","prevNames","_isObservedNamesUpdated","prevName","obn","_observedByName","_waitConditional","_waiting","_rejectWaiting","shouldResolve","conditionTimer","o","prefix","request","promise","currentRequestFocus","waitingElementKey","waitingAccessibleElementKey","waitingFocusableElementKey","waitingElement","waitingAccessibleElement","waitingFocusableElement","waiting","includes","resolveAccessible","resolveFocusable","defaultProps","areaClass","outlineClass","outlineColor","outlineWidth","OutlinePosition","equalsTo","other","clone","OutlineAPI","_onScroll","_fullScreenEventName","_onFullScreenChanged","_fullScreenElementName","outlineElements","_getDOM","fsElement","_fullScreenElement","_updateElement","_isVisible","_setVisibility","_outlinedElement","_isParentChild","_curPos","_setOutlinePosition","__tabsterOutline","appendStyles","classList","_allOutlineElements","_removeDOM","_curOutlineElements","_shouldShowCustomOutline","isIgnored","inputType","outlinedInputTypes","button","checkbox","file","image","radio","range","submit","_updateOutline","visible","boundingRect","p","hasAbsolutePositionedParent","hasFixedPositionedParent","overflow","allRect","allWidth","allHeight","ow","leftBorderNode","topBorderNode","rightBorderNode","bottomBorderNode","sx","pageXOffset","sy","pageYOffset","background","contextElement","DOCUMENT_POSITION_CONTAINED_BY","createTextNode","getOutlineStyles","head","UncontrolledAPI","_isUncontrolledCompletely","EVENT_NAME","HISOTRY_DEPTH","Restorer","_hasFocus","RestorerAPI","_restoreFocusTimeout","_restoreFocus","tabsterAttribute","_addToHistory","_keyboardNavState","_onRestoreFocus","_focusedElementState","shift","shadowRoot","otherNode","assignedElements","assignedSlot","host","sibling","tmp","ShadowTreeWalker","_doc","_acceptNode","_walkerStack","SHOW_ALL","_currentNode","walkers","curNode","currentWalkerCurrentNode","_currentSetFor","nodeResult","currentWalker","createShadowTreeWalker","ShadowMutationObserver","_overrideAttachShadow","origAttachShadow","Element","attachShadow","__origAttachShadow","shadowObserver","_shadowObservers","_addSubObserver","_walkShadows","_callback","_observer","_callbackWrapper","_subObservers","_options","_root","subObserver","_isObserving","values","DOCUMENT_NODE","takeRecords","records","createShadowMutationObserver","shadowQuerySelector","n","Tabster","core","TabsterCore","__VERSION__","_storage","DOMAPI","checkUncontrolledCompletely","checkUncontrolledTrappingFocus","internal","stopObserver","resumeObserver","_mergeProps","createTabster","noRefCount","disposeTabster","allInstances","size","_initTimer","_initQueue","_forgetMemorizedElements","_forgetMemorizedTimer","addremove","storage","forceCleanup","queue","tabsterCore","getCurrentTabster","getTabster","getShadowDOMAPI","shadowDOMAPI","getGroupper","getMover","getOutline","getModalizer","getObservedElement","getCrossOrigin","getInternal","getRestorer","makeNoOp","noop","isNoOp"],"mappings":"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"}