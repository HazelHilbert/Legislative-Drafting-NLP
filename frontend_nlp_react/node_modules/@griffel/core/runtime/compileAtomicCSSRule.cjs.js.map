{"version":3,"file":"compileAtomicCSSRule.cjs.js","sources":["../../../../packages/core/src/runtime/compileAtomicCSSRule.ts"],"sourcesContent":["import { hyphenateProperty } from './utils/hyphenateProperty';\nimport { normalizeNestedProperty } from './utils/normalizeNestedProperty';\nimport { compileCSSRules } from './compileCSSRules';\n\nexport interface CompileAtomicCSSOptions {\n  className: string;\n\n  selectors: string[];\n  media: string;\n  layer: string;\n  support: string;\n  container: string;\n\n  property: string;\n  value: number | string | Array<number | string>;\n\n  rtlClassName?: string;\n  rtlProperty?: string;\n  rtlValue?: number | string | Array<number | string>;\n}\n\nconst PSEUDO_SELECTOR_REGEX = /,( *[^ &])/g;\n\n/**\n * Normalizes pseudo selectors to always contain &, requires to work properly with comma-separated selectors.\n *\n * @example\n *   \":hover\" => \"&:hover\"\n *   \" :hover\" => \"& :hover\"\n *   \":hover,:focus\" => \"&:hover,&:focus\"\n *   \" :hover, :focus\" => \"& :hover,& :focus\"\n */\nexport function normalizePseudoSelector(pseudoSelector: string): string {\n  return (\n    '&' +\n    normalizeNestedProperty(\n      // Regex there replaces a comma, spaces and an ampersand if it's present with comma and an ampersand.\n      // This allows to normalize input, see examples in JSDoc.\n      pseudoSelector.replace(PSEUDO_SELECTOR_REGEX, ',&$1'),\n    )\n  );\n}\n\nfunction createCSSRule(classNameSelector: string, cssDeclaration: string, pseudos: string[]): string {\n  let cssRule = cssDeclaration;\n\n  if (pseudos.length > 0) {\n    cssRule = pseudos.reduceRight((acc, selector) => {\n      return `${normalizePseudoSelector(selector)} { ${acc} }`;\n    }, cssDeclaration);\n  }\n\n  return `${classNameSelector}{${cssRule}}`;\n}\n\nexport function compileAtomicCSSRule(\n  options: CompileAtomicCSSOptions,\n): [string? /* ltr definition */, string? /* rtl definition */] {\n  const {\n    className,\n    media,\n    layer,\n    selectors,\n    support,\n    property,\n    rtlClassName,\n    rtlProperty,\n    rtlValue,\n    value,\n    container,\n  } = options;\n\n  const classNameSelector = `.${className}`;\n  const cssDeclaration = Array.isArray(value)\n    ? `${value.map(v => `${hyphenateProperty(property)}: ${v}`).join(';')};`\n    : `${hyphenateProperty(property)}: ${value};`;\n\n  let cssRule = createCSSRule(classNameSelector, cssDeclaration, selectors);\n\n  if (rtlProperty && rtlClassName) {\n    const rtlClassNameSelector = `.${rtlClassName}`;\n    const rtlCSSDeclaration = Array.isArray(rtlValue)\n      ? `${rtlValue.map(v => `${hyphenateProperty(rtlProperty)}: ${v}`).join(';')};`\n      : `${hyphenateProperty(rtlProperty)}: ${rtlValue};`;\n\n    cssRule += createCSSRule(rtlClassNameSelector, rtlCSSDeclaration, selectors);\n  }\n\n  if (media) {\n    cssRule = `@media ${media} { ${cssRule} }`;\n  }\n\n  if (layer) {\n    cssRule = `@layer ${layer} { ${cssRule} }`;\n  }\n\n  if (support) {\n    cssRule = `@supports ${support} { ${cssRule} }`;\n  }\n\n  if (container) {\n    cssRule = `@container ${container} { ${cssRule} }`;\n  }\n\n  return compileCSSRules(cssRule, true) as [string?, string?];\n}\n"],"names":["PSEUDO_SELECTOR_REGEX","normalizePseudoSelector","pseudoSelector","normalizeNestedProperty","replace","createCSSRule","classNameSelector","cssDeclaration","pseudos","cssRule","length","reduceRight","acc","selector","compileAtomicCSSRule","options","className","media","layer","selectors","support","property","rtlClassName","rtlProperty","rtlValue","value","container","Array","isArray","map","v","hyphenateProperty","join","rtlClassNameSelector","rtlCSSDeclaration","compileCSSRules"],"mappings":";;;;;;;;AAqBA,MAAMA,qBAAqB,GAAG,aAAa;AAE3C;;;;;;;;;SASgBC,uBAAuBA,CAACC,cAAsB;EAC5D,OACE,GAAG,GACHC,+CAAuB;;;EAGrBD,cAAc,CAACE,OAAO,CAACJ,qBAAqB,EAAE,MAAM,CAAC,CACtD;AAEL;AAEA,SAASK,aAAaA,CAACC,iBAAyB,EAAEC,cAAsB,EAAEC,OAAiB;EACzF,IAAIC,OAAO,GAAGF,cAAc;EAE5B,IAAIC,OAAO,CAACE,MAAM,GAAG,CAAC,EAAE;IACtBD,OAAO,GAAGD,OAAO,CAACG,WAAW,CAAC,CAACC,GAAG,EAAEC,QAAQ;MAC1C,UAAUZ,uBAAuB,CAACY,QAAQ,OAAOD,OAAO;KACzD,EAAEL,cAAc,CAAC;;EAGpB,UAAUD,qBAAqBG,UAAU;AAC3C;SAEgBK,oBAAoBA,CAClCC,OAAgC;EAEhC,MAAM;IACJC,SAAS;IACTC,KAAK;IACLC,KAAK;IACLC,SAAS;IACTC,OAAO;IACPC,QAAQ;IACRC,YAAY;IACZC,WAAW;IACXC,QAAQ;IACRC,KAAK;IACLC;GACD,GAAGX,OAAO;EAEX,MAAMT,iBAAiB,OAAOU,WAAW;EACzC,MAAMT,cAAc,GAAGoB,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,MACpCA,KAAK,CAACI,GAAG,CAACC,CAAC,OAAOC,mCAAiB,CAACV,QAAQ,MAAMS,GAAG,CAAC,CAACE,IAAI,CAAC,GAAG,IAAI,MACnED,mCAAiB,CAACV,QAAQ,MAAMI,QAAQ;EAE/C,IAAIhB,OAAO,GAAGJ,aAAa,CAACC,iBAAiB,EAAEC,cAAc,EAAEY,SAAS,CAAC;EAEzE,IAAII,WAAW,IAAID,YAAY,EAAE;IAC/B,MAAMW,oBAAoB,OAAOX,cAAc;IAC/C,MAAMY,iBAAiB,GAAGP,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,MAC1CA,QAAQ,CAACK,GAAG,CAACC,CAAC,OAAOC,mCAAiB,CAACR,WAAW,MAAMO,GAAG,CAAC,CAACE,IAAI,CAAC,GAAG,IAAI,MACzED,mCAAiB,CAACR,WAAW,MAAMC,WAAW;IAErDf,OAAO,IAAIJ,aAAa,CAAC4B,oBAAoB,EAAEC,iBAAiB,EAAEf,SAAS,CAAC;;EAG9E,IAAIF,KAAK,EAAE;IACTR,OAAO,aAAaQ,WAAWR,WAAW;;EAG5C,IAAIS,KAAK,EAAE;IACTT,OAAO,aAAaS,WAAWT,WAAW;;EAG5C,IAAIW,OAAO,EAAE;IACXX,OAAO,gBAAgBW,aAAaX,WAAW;;EAGjD,IAAIiB,SAAS,EAAE;IACbjB,OAAO,iBAAiBiB,eAAejB,WAAW;;EAGpD,OAAO0B,+BAAe,CAAC1B,OAAO,EAAE,IAAI,CAAuB;AAC7D;;;;;"}