import type { GriffelStylesCSSValue, ValueOrArray } from '@griffel/style-types';
import type * as CSS from 'csstype';
export declare type BorderWidthInput = ValueOrArray<CSS.Property.BorderWidth<GriffelStylesCSSValue>>;
export declare type BorderStyleInput = ValueOrArray<CSS.Property.BorderStyle>;
export declare type BorderColorInput = ValueOrArray<CSS.Property.BorderColor>;
export declare type OutlineWidthInput = ValueOrArray<CSS.Property.OutlineWidth<GriffelStylesCSSValue>>;
export declare type OutlineStyleInput = ValueOrArray<CSS.Property.OutlineStyle>;
export declare type OutlineColorInput = ValueOrArray<CSS.Property.OutlineColor>;
export declare type BorderRadiusInput = ValueOrArray<CSS.Property.BorderRadius<GriffelStylesCSSValue>>;
export declare type GapInput = ValueOrArray<CSS.Property.Gap<GriffelStylesCSSValue>>;
export declare type GridAreaInput = CSS.Property.GridArea;
export declare type MarginInput = ValueOrArray<CSS.Property.Margin<GriffelStylesCSSValue>>;
export declare type MarginBlockInput = ValueOrArray<CSS.Property.MarginBlock<GriffelStylesCSSValue>>;
export declare type MarginInlineInput = ValueOrArray<CSS.Property.MarginInline<GriffelStylesCSSValue>>;
export declare type OverflowInput = ValueOrArray<CSS.Property.Overflow>;
export declare type PaddingInput = ValueOrArray<CSS.Property.Padding<GriffelStylesCSSValue>>;
export declare type PaddingBlockInput = ValueOrArray<CSS.Property.MarginBlock<GriffelStylesCSSValue>>;
export declare type PaddingInlineInput = ValueOrArray<CSS.Property.MarginInline<GriffelStylesCSSValue>>;
export declare type InsetInput = ValueOrArray<CSS.Property.Inset<GriffelStylesCSSValue>>;
export declare type FlexInput = [CSS.Property.Flex, CSS.Property.Flex?, CSS.Property.Flex?];
export declare type TransitionPropertyInput = CSS.Property.TransitionProperty;
export declare type TransitionDurationInput = CSS.Property.TransitionDuration;
export declare type TransitionDelayInput = CSS.Property.TransitionDelay;
export declare type TransitionTimingFunctionInput = CSS.Property.TransitionTimingFunction;
export declare type TransitionGlobalInput = CSS.Globals;
export declare type TextDecorationStyleInput = CSS.Property.TextDecorationStyle;
export declare type TextDecorationLineInput = ValueOrArray<CSS.Property.TextDecorationLine>;
export declare type TextDecorationColorInput = ValueOrArray<CSS.Property.TextDecorationColor>;
export declare type TextDecorationThicknessInput = ValueOrArray<CSS.Property.TextDecorationThickness>;
