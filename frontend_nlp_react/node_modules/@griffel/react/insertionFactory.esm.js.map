{"version":3,"file":"insertionFactory.esm.js","sources":["../../../packages/react/src/insertionFactory.ts"],"sourcesContent":["import type { CSSRulesByBucket, GriffelInsertionFactory, GriffelRenderer } from '@griffel/core';\n\nimport { canUseDOM } from './utils/canUseDOM';\nimport { useInsertionEffect } from './useInsertionEffect';\n\nexport const insertionFactory: GriffelInsertionFactory = () => {\n  const insertionCache: Record<string, boolean> = {};\n\n  return function insert(renderer: GriffelRenderer, cssRules: CSSRulesByBucket) {\n    // Even if `useInsertionEffect` is available, we can use it on a client only as it will not be executed in SSR\n    if (useInsertionEffect && canUseDOM()) {\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      useInsertionEffect(() => {\n        renderer.insertCSSRules(cssRules!);\n      }, [renderer, cssRules]);\n\n      return;\n    }\n\n    if (insertionCache[renderer.id] === undefined) {\n      renderer.insertCSSRules(cssRules!);\n      insertionCache[renderer.id] = true;\n    }\n  };\n};\n"],"names":["insertionFactory","insertionCache","insert","renderer","cssRules","useInsertionEffect","canUseDOM","insertCSSRules","id","undefined"],"mappings":";;;MAKaA,gBAAgB,GAA4BA;EACvD,MAAMC,cAAc,GAA4B,EAAE;EAElD,OAAO,SAASC,MAAMA,CAACC,QAAyB,EAAEC,QAA0B;;IAE1E,IAAIC,kBAAkB,IAAIC,SAAS,EAAE,EAAE;;MAErCD,kBAAkB,CAAC;QACjBF,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;OACnC,EAAE,CAACD,QAAQ,EAAEC,QAAQ,CAAC,CAAC;MAExB;;IAGF,IAAIH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,KAAKC,SAAS,EAAE;MAC7CN,QAAQ,CAACI,cAAc,CAACH,QAAS,CAAC;MAClCH,cAAc,CAACE,QAAQ,CAACK,EAAE,CAAC,GAAG,IAAI;;GAErC;AACH;;;;"}