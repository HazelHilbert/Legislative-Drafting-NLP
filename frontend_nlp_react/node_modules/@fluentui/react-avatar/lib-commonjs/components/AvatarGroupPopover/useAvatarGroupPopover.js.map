{"version":3,"sources":["useAvatarGroupPopover.js"],"sourcesContent":["import * as React from 'react';\nimport { useAvatarGroupContext_unstable } from '../../contexts/AvatarGroupContext';\nimport { defaultAvatarGroupSize } from '../AvatarGroup/useAvatarGroup';\nimport { useControllableState, slot } from '@fluentui/react-utilities';\nimport { MoreHorizontalRegular } from '@fluentui/react-icons';\nimport { Popover, PopoverSurface } from '@fluentui/react-popover';\nimport { Tooltip } from '@fluentui/react-tooltip';\n/**\n * Create the state required to render AvatarGroupPopover.\n *\n * The returned state can be modified with hooks such as useAvatarGroupPopoverStyles_unstable,\n * before being passed to renderAvatarGroupPopover_unstable.\n *\n * @param props - props from this instance of AvatarGroupPopover\n */ export const useAvatarGroupPopover_unstable = (props)=>{\n    var _useAvatarGroupContext_unstable;\n    const size = (_useAvatarGroupContext_unstable = useAvatarGroupContext_unstable((ctx)=>ctx.size)) !== null && _useAvatarGroupContext_unstable !== void 0 ? _useAvatarGroupContext_unstable : defaultAvatarGroupSize;\n    const layout = useAvatarGroupContext_unstable((ctx)=>ctx.layout);\n    const { indicator = size < 24 ? 'icon' : 'count', count = React.Children.count(props.children), children, ...restOfProps } = props;\n    const [popoverOpen, setPopoverOpen] = useControllableState({\n        state: props.open,\n        defaultState: props.defaultOpen,\n        initialState: false\n    });\n    const handleOnPopoverChange = (e, data)=>{\n        var _restOfProps_onOpenChange;\n        (_restOfProps_onOpenChange = restOfProps.onOpenChange) === null || _restOfProps_onOpenChange === void 0 ? void 0 : _restOfProps_onOpenChange.call(restOfProps, e, data);\n        setPopoverOpen(data.open);\n    };\n    let triggerButtonChildren;\n    if (layout === 'pie') {\n        triggerButtonChildren = null;\n    } else if (indicator === 'icon') {\n        triggerButtonChildren = /*#__PURE__*/ React.createElement(MoreHorizontalRegular, null);\n    } else {\n        triggerButtonChildren = count > 99 ? '99+' : `+${count}`;\n    }\n    return {\n        count,\n        indicator,\n        layout,\n        popoverOpen,\n        size,\n        components: {\n            root: Popover,\n            triggerButton: 'button',\n            content: 'ul',\n            popoverSurface: PopoverSurface,\n            tooltip: Tooltip\n        },\n        root: slot.always({\n            // Popover expects a child for its children. The children are added in the renderAvatarGroupPopover.\n            children: /*#__PURE__*/ React.createElement(React.Fragment, null),\n            size: 'small',\n            trapFocus: true,\n            ...restOfProps,\n            open: popoverOpen,\n            onOpenChange: handleOnPopoverChange\n        }, {\n            elementType: Popover\n        }),\n        triggerButton: slot.always(props.triggerButton, {\n            defaultProps: {\n                children: triggerButtonChildren,\n                type: 'button'\n            },\n            elementType: 'button'\n        }),\n        content: slot.always(props.content, {\n            defaultProps: {\n                children,\n                role: 'list'\n            },\n            elementType: 'ul'\n        }),\n        popoverSurface: slot.always(props.popoverSurface, {\n            defaultProps: {\n                'aria-label': 'Overflow',\n                tabIndex: 0\n            },\n            elementType: PopoverSurface\n        }),\n        tooltip: slot.always(props.tooltip, {\n            defaultProps: {\n                content: 'View more people.',\n                relationship: 'label'\n            },\n            elementType: Tooltip\n        })\n    };\n};\n"],"names":["useAvatarGroupPopover_unstable","props","_useAvatarGroupContext_unstable","size","useAvatarGroupContext_unstable","ctx","defaultAvatarGroupSize","layout","indicator","count","React","Children","children","restOfProps","popoverOpen","setPopoverOpen","useControllableState","state","open","defaultState","defaultOpen","initialState","handleOnPopoverChange","e","data","_restOfProps_onOpenChange","onOpenChange","call","triggerButtonChildren","createElement","MoreHorizontalRegular","components","root","Popover","triggerButton","content","popoverSurface","PopoverSurface","tooltip","Tooltip","slot","always","Fragment","trapFocus","elementType","defaultProps","type","role","tabIndex","relationship"],"mappings":";;;;+BAciBA;;;eAAAA;;;;iEAdM;oCACwB;gCACR;gCACI;4BACL;8BACE;8BAChB;AAQb,MAAMA,iCAAiC,CAACC;IAC/C,IAAIC;IACJ,MAAMC,OAAO,AAACD,CAAAA,kCAAkCE,IAAAA,kDAA8B,EAAC,CAACC,MAAMA,IAAIF,IAAI,CAAA,MAAO,QAAQD,oCAAoC,KAAK,IAAIA,kCAAkCI,sCAAsB;IAClN,MAAMC,SAASH,IAAAA,kDAA8B,EAAC,CAACC,MAAMA,IAAIE,MAAM;IAC/D,MAAM,EAAEC,YAAYL,OAAO,KAAK,SAAS,OAAO,EAAEM,QAAQC,OAAMC,QAAQ,CAACF,KAAK,CAACR,MAAMW,QAAQ,CAAC,EAAEA,QAAQ,EAAE,GAAGC,aAAa,GAAGZ;IAC7H,MAAM,CAACa,aAAaC,eAAe,GAAGC,IAAAA,oCAAoB,EAAC;QACvDC,OAAOhB,MAAMiB,IAAI;QACjBC,cAAclB,MAAMmB,WAAW;QAC/BC,cAAc;IAClB;IACA,MAAMC,wBAAwB,CAACC,GAAGC;QAC9B,IAAIC;QACHA,CAAAA,4BAA4BZ,YAAYa,YAAY,AAAD,MAAO,QAAQD,8BAA8B,KAAK,IAAI,KAAK,IAAIA,0BAA0BE,IAAI,CAACd,aAAaU,GAAGC;QAClKT,eAAeS,KAAKN,IAAI;IAC5B;IACA,IAAIU;IACJ,IAAIrB,WAAW,OAAO;QAClBqB,wBAAwB;IAC5B,OAAO,IAAIpB,cAAc,QAAQ;QAC7BoB,wBAAwB,WAAW,GAAGlB,OAAMmB,aAAa,CAACC,iCAAqB,EAAE;IACrF,OAAO;QACHF,wBAAwBnB,QAAQ,KAAK,QAAQ,CAAC,CAAC,EAAEA,MAAM,CAAC;IAC5D;IACA,OAAO;QACHA;QACAD;QACAD;QACAO;QACAX;QACA4B,YAAY;YACRC,MAAMC,qBAAO;YACbC,eAAe;YACfC,SAAS;YACTC,gBAAgBC,4BAAc;YAC9BC,SAASC,qBAAO;QACpB;QACAP,MAAMQ,oBAAI,CAACC,MAAM,CAAC;YACd,oGAAoG;YACpG7B,UAAU,WAAW,GAAGF,OAAMmB,aAAa,CAACnB,OAAMgC,QAAQ,EAAE;YAC5DvC,MAAM;YACNwC,WAAW;YACX,GAAG9B,WAAW;YACdK,MAAMJ;YACNY,cAAcJ;QAClB,GAAG;YACCsB,aAAaX,qBAAO;QACxB;QACAC,eAAeM,oBAAI,CAACC,MAAM,CAACxC,MAAMiC,aAAa,EAAE;YAC5CW,cAAc;gBACVjC,UAAUgB;gBACVkB,MAAM;YACV;YACAF,aAAa;QACjB;QACAT,SAASK,oBAAI,CAACC,MAAM,CAACxC,MAAMkC,OAAO,EAAE;YAChCU,cAAc;gBACVjC;gBACAmC,MAAM;YACV;YACAH,aAAa;QACjB;QACAR,gBAAgBI,oBAAI,CAACC,MAAM,CAACxC,MAAMmC,cAAc,EAAE;YAC9CS,cAAc;gBACV,cAAc;gBACdG,UAAU;YACd;YACAJ,aAAaP,4BAAc;QAC/B;QACAC,SAASE,oBAAI,CAACC,MAAM,CAACxC,MAAMqC,OAAO,EAAE;YAChCO,cAAc;gBACVV,SAAS;gBACTc,cAAc;YAClB;YACAL,aAAaL,qBAAO;QACxB;IACJ;AACJ"}