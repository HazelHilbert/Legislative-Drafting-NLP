{"version":3,"sources":["useAvatarGroup.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\n/**\n * Create the state required to render AvatarGroup.\n *\n * The returned state can be modified with hooks such as useAvatarGroupStyles_unstable,\n * before being passed to renderAvatarGroup_unstable.\n *\n * @param props - props from this instance of AvatarGroup\n * @param ref - reference to root HTMLElement of AvatarGroup\n */ export const useAvatarGroup_unstable = (props, ref)=>{\n    const { layout = 'spread', size = defaultAvatarGroupSize } = props;\n    const root = slot.always(getIntrinsicElementProps('div', {\n        role: 'group',\n        ...props,\n        // FIXME:\n        // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n        // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n        ref: ref\n    }, [\n        'size'\n    ]), {\n        elementType: 'div'\n    });\n    return {\n        layout,\n        size,\n        components: {\n            root: 'div'\n        },\n        root\n    };\n};\nexport const defaultAvatarGroupSize = 32;\n"],"names":["useAvatarGroup_unstable","defaultAvatarGroupSize","props","ref","layout","size","root","slot","always","getIntrinsicElementProps","role","elementType","components"],"mappings":";;;;;;;;;;;IAUiBA,uBAAuB;eAAvBA;;IAuBJC,sBAAsB;eAAtBA;;;;iEAjCU;gCACwB;AASpC,MAAMD,0BAA0B,CAACE,OAAOC;IAC/C,MAAM,EAAEC,SAAS,QAAQ,EAAEC,OAAOJ,sBAAsB,EAAE,GAAGC;IAC7D,MAAMI,OAAOC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,OAAO;QACrDC,MAAM;QACN,GAAGR,KAAK;QACR,SAAS;QACT,4EAA4E;QAC5E,4FAA4F;QAC5FC,KAAKA;IACT,GAAG;QACC;KACH,GAAG;QACAQ,aAAa;IACjB;IACA,OAAO;QACHP;QACAC;QACAO,YAAY;YACRN,MAAM;QACV;QACAA;IACJ;AACJ;AACO,MAAML,yBAAyB"}