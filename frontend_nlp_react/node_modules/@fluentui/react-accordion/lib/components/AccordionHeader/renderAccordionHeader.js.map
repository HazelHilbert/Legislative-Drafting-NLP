{"version":3,"sources":["renderAccordionHeader.tsx"],"sourcesContent":["/** @jsxRuntime automatic */\n/** @jsxImportSource @fluentui/react-jsx-runtime */\n\nimport { assertSlots } from '@fluentui/react-utilities';\nimport type { AccordionHeaderState, AccordionHeaderSlots, AccordionHeaderContextValues } from './AccordionHeader.types';\nimport { AccordionHeaderProvider } from '../../contexts/accordionHeader';\n\n/**\n * Function that renders the final JSX of the component\n */\nexport const renderAccordionHeader_unstable = (\n  state: AccordionHeaderState,\n  contextValues: AccordionHeaderContextValues,\n) => {\n  assertSlots<AccordionHeaderSlots>(state);\n\n  return (\n    <AccordionHeaderProvider value={contextValues.accordionHeader}>\n      <state.root>\n        <state.button>\n          {state.expandIconPosition === 'start' && state.expandIcon && <state.expandIcon />}\n          {state.icon && <state.icon />}\n          {state.root.children}\n          {state.expandIconPosition === 'end' && state.expandIcon && <state.expandIcon />}\n        </state.button>\n      </state.root>\n    </AccordionHeaderProvider>\n  );\n};\n"],"names":["assertSlots","AccordionHeaderProvider","renderAccordionHeader_unstable","state","contextValues","value","accordionHeader","root","button","expandIconPosition","expandIcon","icon","children"],"mappings":"AAAA,0BAA0B,GAC1B,iDAAiD;AAEjD,SAASA,WAAW,QAAQ,4BAA4B;AAExD,SAASC,uBAAuB,QAAQ,iCAAiC;AAEzE;;CAEC,GACD,OAAO,MAAMC,iCAAiC,CAC5CC,OACAC;IAEAJ,YAAkCG;IAElC,qBACE,KAACF;QAAwBI,OAAOD,cAAcE,eAAe;kBAC3D,cAAA,KAACH,MAAMI,IAAI;sBACT,cAAA,MAACJ,MAAMK,MAAM;;oBACVL,MAAMM,kBAAkB,KAAK,WAAWN,MAAMO,UAAU,kBAAI,KAACP,MAAMO,UAAU;oBAC7EP,MAAMQ,IAAI,kBAAI,KAACR,MAAMQ,IAAI;oBACzBR,MAAMI,IAAI,CAACK,QAAQ;oBACnBT,MAAMM,kBAAkB,KAAK,SAASN,MAAMO,UAAU,kBAAI,KAACP,MAAMO,UAAU;;;;;AAKtF,EAAE"}