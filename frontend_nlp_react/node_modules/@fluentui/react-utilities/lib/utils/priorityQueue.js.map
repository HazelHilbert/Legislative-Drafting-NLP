{"version":3,"sources":["priorityQueue.ts"],"sourcesContent":["/**\n * @internal\n */\nexport type PriorityQueueCompareFn<T> = (a: T, b: T) => number;\n\n/**\n * @internal\n */\nexport interface PriorityQueue<T> {\n  all: () => T[];\n  clear: () => void;\n  contains: (item: T) => boolean;\n  dequeue: () => T;\n  enqueue: (item: T) => void;\n  peek: () => T | null;\n  remove: (item: T) => void;\n  size: () => number;\n}\n\n/**\n * @internal\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */\nexport function createPriorityQueue<T>(compare: PriorityQueueCompareFn<T>): PriorityQueue<T> {\n  const arr: T[] = [];\n  let size = 0;\n\n  const swap = (a: number, b: number) => {\n    const tmp = arr[a];\n    arr[a] = arr[b];\n    arr[b] = tmp;\n  };\n\n  const heapify = (i: number) => {\n    let smallest = i;\n    const l = left(i);\n    const r = right(i);\n\n    if (l < size && compare(arr[l], arr[smallest]) < 0) {\n      smallest = l;\n    }\n\n    if (r < size && compare(arr[r], arr[smallest]) < 0) {\n      smallest = r;\n    }\n\n    if (smallest !== i) {\n      swap(smallest, i);\n      heapify(smallest);\n    }\n  };\n\n  const dequeue = () => {\n    if (size === 0) {\n      throw new Error('Priority queue empty');\n    }\n\n    const res = arr[0];\n    arr[0] = arr[--size];\n    heapify(0);\n\n    return res;\n  };\n\n  const peek = () => {\n    if (size === 0) {\n      return null;\n    }\n\n    return arr[0];\n  };\n\n  const enqueue = (item: T) => {\n    arr[size++] = item;\n    let i = size - 1;\n    let p = parent(i);\n    while (i > 0 && compare(arr[p], arr[i]) > 0) {\n      swap(p, i);\n      i = p;\n      p = parent(i);\n    }\n  };\n\n  const contains = (item: T) => {\n    const index = arr.indexOf(item);\n    return index >= 0 && index < size;\n  };\n\n  const remove = (item: T) => {\n    const i = arr.indexOf(item);\n\n    if (i === -1 || i >= size) {\n      return;\n    }\n\n    arr[i] = arr[--size];\n    heapify(i);\n  };\n\n  const clear = () => {\n    size = 0;\n  };\n\n  const all = () => {\n    return arr.slice(0, size);\n  };\n\n  return {\n    all,\n    clear,\n    contains,\n    dequeue,\n    enqueue,\n    peek,\n    remove,\n    size: () => size,\n  };\n}\n\nconst left = (i: number) => {\n  return 2 * i + 1;\n};\n\nconst right = (i: number) => {\n  return 2 * i + 2;\n};\n\nconst parent = (i: number) => {\n  return Math.floor((i - 1) / 2);\n};\n"],"names":["createPriorityQueue","compare","arr","size","swap","a","b","tmp","heapify","i","smallest","l","left","r","right","dequeue","Error","res","peek","enqueue","item","p","parent","contains","index","indexOf","remove","clear","all","slice","Math","floor"],"mappings":"AAAA;;CAEC,GAiBD;;;;CAIC,GACD,OAAO,SAASA,oBAAuBC,OAAkC;IACvE,MAAMC,MAAW,EAAE;IACnB,IAAIC,OAAO;IAEX,MAAMC,OAAO,CAACC,GAAWC;QACvB,MAAMC,MAAML,GAAG,CAACG,EAAE;QAClBH,GAAG,CAACG,EAAE,GAAGH,GAAG,CAACI,EAAE;QACfJ,GAAG,CAACI,EAAE,GAAGC;IACX;IAEA,MAAMC,UAAU,CAACC;QACf,IAAIC,WAAWD;QACf,MAAME,IAAIC,KAAKH;QACf,MAAMI,IAAIC,MAAML;QAEhB,IAAIE,IAAIR,QAAQF,QAAQC,GAAG,CAACS,EAAE,EAAET,GAAG,CAACQ,SAAS,IAAI,GAAG;YAClDA,WAAWC;QACb;QAEA,IAAIE,IAAIV,QAAQF,QAAQC,GAAG,CAACW,EAAE,EAAEX,GAAG,CAACQ,SAAS,IAAI,GAAG;YAClDA,WAAWG;QACb;QAEA,IAAIH,aAAaD,GAAG;YAClBL,KAAKM,UAAUD;YACfD,QAAQE;QACV;IACF;IAEA,MAAMK,UAAU;QACd,IAAIZ,SAAS,GAAG;YACd,MAAM,IAAIa,MAAM;QAClB;QAEA,MAAMC,MAAMf,GAAG,CAAC,EAAE;QAClBA,GAAG,CAAC,EAAE,GAAGA,GAAG,CAAC,EAAEC,KAAK;QACpBK,QAAQ;QAER,OAAOS;IACT;IAEA,MAAMC,OAAO;QACX,IAAIf,SAAS,GAAG;YACd,OAAO;QACT;QAEA,OAAOD,GAAG,CAAC,EAAE;IACf;IAEA,MAAMiB,UAAU,CAACC;QACflB,GAAG,CAACC,OAAO,GAAGiB;QACd,IAAIX,IAAIN,OAAO;QACf,IAAIkB,IAAIC,OAAOb;QACf,MAAOA,IAAI,KAAKR,QAAQC,GAAG,CAACmB,EAAE,EAAEnB,GAAG,CAACO,EAAE,IAAI,EAAG;YAC3CL,KAAKiB,GAAGZ;YACRA,IAAIY;YACJA,IAAIC,OAAOb;QACb;IACF;IAEA,MAAMc,WAAW,CAACH;QAChB,MAAMI,QAAQtB,IAAIuB,OAAO,CAACL;QAC1B,OAAOI,SAAS,KAAKA,QAAQrB;IAC/B;IAEA,MAAMuB,SAAS,CAACN;QACd,MAAMX,IAAIP,IAAIuB,OAAO,CAACL;QAEtB,IAAIX,MAAM,CAAC,KAAKA,KAAKN,MAAM;YACzB;QACF;QAEAD,GAAG,CAACO,EAAE,GAAGP,GAAG,CAAC,EAAEC,KAAK;QACpBK,QAAQC;IACV;IAEA,MAAMkB,QAAQ;QACZxB,OAAO;IACT;IAEA,MAAMyB,MAAM;QACV,OAAO1B,IAAI2B,KAAK,CAAC,GAAG1B;IACtB;IAEA,OAAO;QACLyB;QACAD;QACAJ;QACAR;QACAI;QACAD;QACAQ;QACAvB,MAAM,IAAMA;IACd;AACF;AAEA,MAAMS,OAAO,CAACH;IACZ,OAAO,IAAIA,IAAI;AACjB;AAEA,MAAMK,QAAQ,CAACL;IACb,OAAO,IAAIA,IAAI;AACjB;AAEA,MAAMa,SAAS,CAACb;IACd,OAAOqB,KAAKC,KAAK,CAAC,AAACtB,CAAAA,IAAI,CAAA,IAAK;AAC9B"}