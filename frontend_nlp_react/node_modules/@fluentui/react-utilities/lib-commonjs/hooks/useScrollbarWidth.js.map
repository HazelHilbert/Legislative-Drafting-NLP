{"version":3,"sources":["useScrollbarWidth.js"],"sourcesContent":["import * as React from 'react';\nconst cache = new WeakMap();\n/**\n * @returns The width in pixels of the scrollbar in the user agent\n */ export function useScrollbarWidth(options) {\n    const { targetDocument, force } = options;\n    return React.useMemo(()=>{\n        if (!targetDocument) {\n            return 0;\n        }\n        if (!force && cache.has(targetDocument)) {\n            return cache.get(targetDocument);\n        }\n        const outer = targetDocument.createElement('div');\n        outer.style.visibility = 'hidden';\n        outer.style.overflow = 'scroll';\n        const inner = targetDocument.createElement('div');\n        outer.appendChild(inner);\n        targetDocument.body.appendChild(outer);\n        const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n        outer.remove();\n        cache.set(targetDocument, scrollbarWidth);\n        return scrollbarWidth;\n    }, [\n        targetDocument,\n        force\n    ]);\n}\n"],"names":["useScrollbarWidth","cache","WeakMap","options","targetDocument","force","React","useMemo","has","get","outer","createElement","style","visibility","overflow","inner","appendChild","body","scrollbarWidth","offsetWidth","remove","set"],"mappings":";;;;+BAIoBA;;;eAAAA;;;;iEAJG;AACvB,MAAMC,QAAQ,IAAIC;AAGP,SAASF,kBAAkBG,OAAO;IACzC,MAAM,EAAEC,cAAc,EAAEC,KAAK,EAAE,GAAGF;IAClC,OAAOG,OAAMC,OAAO,CAAC;QACjB,IAAI,CAACH,gBAAgB;YACjB,OAAO;QACX;QACA,IAAI,CAACC,SAASJ,MAAMO,GAAG,CAACJ,iBAAiB;YACrC,OAAOH,MAAMQ,GAAG,CAACL;QACrB;QACA,MAAMM,QAAQN,eAAeO,aAAa,CAAC;QAC3CD,MAAME,KAAK,CAACC,UAAU,GAAG;QACzBH,MAAME,KAAK,CAACE,QAAQ,GAAG;QACvB,MAAMC,QAAQX,eAAeO,aAAa,CAAC;QAC3CD,MAAMM,WAAW,CAACD;QAClBX,eAAea,IAAI,CAACD,WAAW,CAACN;QAChC,MAAMQ,iBAAiBR,MAAMS,WAAW,GAAGJ,MAAMI,WAAW;QAC5DT,MAAMU,MAAM;QACZnB,MAAMoB,GAAG,CAACjB,gBAAgBc;QAC1B,OAAOA;IACX,GAAG;QACCd;QACAC;KACH;AACL"}