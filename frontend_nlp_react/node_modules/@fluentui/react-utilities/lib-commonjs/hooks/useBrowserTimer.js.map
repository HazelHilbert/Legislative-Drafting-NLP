{"version":3,"sources":["useBrowserTimer.js"],"sourcesContent":["import * as React from 'react';\n/**\n * @internal\n * Helper to manage a browser timer.\n * Ensures that the timer isn't set multiple times at once,\n * and is cleaned up when the component is unloaded.\n *\n * @param setTimer - The timer setter function\n * @param cancelTimer - The timer cancel function\n * @returns A pair of [setTimer, cancelTimer] that are stable between renders.\n *\n * @example\n * const [setTimer, cancelTimer] = useBrowserTimer(setTimeout, cancelTimeout);\n *\n * setTimer(() => console.log('Hello world!'), 1000);\n * cancelTimer();\n */ export function useBrowserTimer(setTimer, cancelTimer) {\n    const id = React.useRef(undefined);\n    const set = React.useCallback((fn, delay)=>{\n        if (id.current !== undefined) {\n            cancelTimer(id.current);\n        }\n        id.current = setTimer(fn, delay);\n        return id.current;\n    }, [\n        cancelTimer,\n        setTimer\n    ]);\n    const cancel = React.useCallback(()=>{\n        if (id.current !== undefined) {\n            cancelTimer(id.current);\n            id.current = undefined;\n        }\n    }, [\n        cancelTimer\n    ]);\n    // Clean up the timeout when the component is unloaded\n    React.useEffect(()=>cancel, [\n        cancel\n    ]);\n    return [\n        set,\n        cancel\n    ];\n}\n"],"names":["useBrowserTimer","setTimer","cancelTimer","id","React","useRef","undefined","set","useCallback","fn","delay","current","cancel","useEffect"],"mappings":";;;;+BAgBoBA;;;eAAAA;;;;iEAhBG;AAgBZ,SAASA,gBAAgBC,QAAQ,EAAEC,WAAW;IACrD,MAAMC,KAAKC,OAAMC,MAAM,CAACC;IACxB,MAAMC,MAAMH,OAAMI,WAAW,CAAC,CAACC,IAAIC;QAC/B,IAAIP,GAAGQ,OAAO,KAAKL,WAAW;YAC1BJ,YAAYC,GAAGQ,OAAO;QAC1B;QACAR,GAAGQ,OAAO,GAAGV,SAASQ,IAAIC;QAC1B,OAAOP,GAAGQ,OAAO;IACrB,GAAG;QACCT;QACAD;KACH;IACD,MAAMW,SAASR,OAAMI,WAAW,CAAC;QAC7B,IAAIL,GAAGQ,OAAO,KAAKL,WAAW;YAC1BJ,YAAYC,GAAGQ,OAAO;YACtBR,GAAGQ,OAAO,GAAGL;QACjB;IACJ,GAAG;QACCJ;KACH;IACD,sDAAsD;IACtDE,OAAMS,SAAS,CAAC,IAAID,QAAQ;QACxBA;KACH;IACD,OAAO;QACHL;QACAK;KACH;AACL"}