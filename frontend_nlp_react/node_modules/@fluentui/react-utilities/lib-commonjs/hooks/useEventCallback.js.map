{"version":3,"sources":["useEventCallback.js"],"sourcesContent":["import * as React from 'react';\nimport { useIsomorphicLayoutEffect } from './useIsomorphicLayoutEffect';\n/**\n * @internal\n * https://reactjs.org/docs/hooks-faq.html#how-to-read-an-often-changing-value-from-usecallback\n *\n * Modified `useCallback` that can be used when dependencies change too frequently. Can occur when\n * e.g. user props are dependencies which could change on every render\n * e.g. volatile values (i.e. useState/useDispatch) are dependencies which could change frequently\n *\n * This should not be used often, but can be a useful re-render optimization since the callback is a ref and\n * will not be invalidated between re-renders\n *\n * @param fn - The callback function that will be used\n */ export const useEventCallback = (fn)=>{\n    const callbackRef = React.useRef(()=>{\n        throw new Error('Cannot call an event handler while rendering');\n    });\n    useIsomorphicLayoutEffect(()=>{\n        callbackRef.current = fn;\n    }, [\n        fn\n    ]);\n    return React.useCallback((...args)=>{\n        const callback = callbackRef.current;\n        return callback(...args);\n    }, [\n        callbackRef\n    ]);\n};\n"],"names":["useEventCallback","fn","callbackRef","React","useRef","Error","useIsomorphicLayoutEffect","current","useCallback","args","callback"],"mappings":";;;;+BAciBA;;;eAAAA;;;;iEAdM;2CACmB;AAa/B,MAAMA,mBAAmB,CAACC;IACjC,MAAMC,cAAcC,OAAMC,MAAM,CAAC;QAC7B,MAAM,IAAIC,MAAM;IACpB;IACAC,IAAAA,oDAAyB,EAAC;QACtBJ,YAAYK,OAAO,GAAGN;IAC1B,GAAG;QACCA;KACH;IACD,OAAOE,OAAMK,WAAW,CAAC,CAAC,GAAGC;QACzB,MAAMC,WAAWR,YAAYK,OAAO;QACpC,OAAOG,YAAYD;IACvB,GAAG;QACCP;KACH;AACL"}