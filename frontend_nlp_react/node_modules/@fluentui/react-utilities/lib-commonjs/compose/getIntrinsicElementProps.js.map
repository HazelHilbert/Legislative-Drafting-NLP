{"version":3,"sources":["getIntrinsicElementProps.js"],"sourcesContent":["import * as React from 'react';\nimport { getNativeElementProps } from '../utils/getNativeElementProps';\n/**\n * Given an element tagname and user props, filters the props to only allowed props for the given\n * element type.\n *\n * Equivalent to {@link getNativeElementProps}, but more type-safe.\n */ export const getIntrinsicElementProps = (/** The slot's default element type (e.g. 'div') */ tagName, /** The component's props object */ props, /** List of native props to exclude from the returned value */ excludedPropNames)=>{\n    var _props_as;\n    // eslint-disable-next-line deprecation/deprecation\n    return getNativeElementProps((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : tagName, props, excludedPropNames);\n};\n"],"names":["getIntrinsicElementProps","tagName","props","excludedPropNames","_props_as","getNativeElementProps","as"],"mappings":";;;;+BAOiBA;;;eAAAA;;;;iEAPM;uCACe;AAM3B,MAAMA,2BAA2B,CAAC,iDAAiD,GAAGC,SAAS,iCAAiC,GAAGC,OAAO,4DAA4D,GAAGC;IAChN,IAAIC;IACJ,mDAAmD;IACnD,OAAOC,IAAAA,4CAAqB,EAAC,AAACD,CAAAA,YAAYF,MAAMI,EAAE,AAAD,MAAO,QAAQF,cAAc,KAAK,IAAIA,YAAYH,SAASC,OAAOC;AACvH"}