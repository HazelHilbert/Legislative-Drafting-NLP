{"version":3,"sources":["useSelection.js"],"sourcesContent":["import * as React from 'react';\nimport { useControllableState } from '../hooks/useControllableState';\nimport { createSetFromIterable } from '../utils/createSetFromIterable';\nfunction useSelectionState(params) {\n    const [selected, setSelected] = useControllableState({\n        initialState: new Set(),\n        defaultState: React.useMemo(()=>params.defaultSelectedItems && createSetFromIterable(params.defaultSelectedItems), [\n            params.defaultSelectedItems\n        ]),\n        state: React.useMemo(()=>params.selectedItems && createSetFromIterable(params.selectedItems), [\n            params.selectedItems\n        ])\n    });\n    const changeSelection = (event, nextSelectedItems)=>{\n        var _params_onSelectionChange;\n        (_params_onSelectionChange = params.onSelectionChange) === null || _params_onSelectionChange === void 0 ? void 0 : _params_onSelectionChange.call(params, event, {\n            selectedItems: nextSelectedItems\n        });\n        setSelected(nextSelectedItems);\n    };\n    return [\n        selected,\n        changeSelection\n    ];\n}\nfunction useSingleSelection(params) {\n    const [selected, changeSelection] = useSelectionState(params);\n    const methods = {\n        deselectItem: (event)=>changeSelection(event, new Set()),\n        selectItem: (event, itemId)=>changeSelection(event, new Set([\n                itemId\n            ])),\n        toggleAllItems: ()=>{\n            if (process.env.NODE_ENV !== 'production') {\n                throw new Error('[react-utilities]: `toggleAllItems` should not be used in single selection mode');\n            }\n        },\n        toggleItem: (event, itemId)=>changeSelection(event, new Set([\n                itemId\n            ])),\n        clearItems: (event)=>changeSelection(event, new Set()),\n        isSelected: (itemId)=>{\n            var _selected_has;\n            return (_selected_has = selected.has(itemId)) !== null && _selected_has !== void 0 ? _selected_has : false;\n        }\n    };\n    return [\n        selected,\n        methods\n    ];\n}\nfunction useMultipleSelection(params) {\n    const [selected, changeSelection] = useSelectionState(params);\n    const methods = {\n        toggleItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            if (selected.has(itemId)) {\n                nextSelectedItems.delete(itemId);\n            } else {\n                nextSelectedItems.add(itemId);\n            }\n            changeSelection(event, nextSelectedItems);\n        },\n        selectItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            nextSelectedItems.add(itemId);\n            changeSelection(event, nextSelectedItems);\n        },\n        deselectItem: (event, itemId)=>{\n            const nextSelectedItems = new Set(selected);\n            nextSelectedItems.delete(itemId);\n            changeSelection(event, nextSelectedItems);\n        },\n        clearItems: (event)=>{\n            changeSelection(event, new Set());\n        },\n        isSelected: (itemId)=>selected.has(itemId),\n        toggleAllItems: (event, itemIds)=>{\n            const allItemsSelected = itemIds.every((itemId)=>selected.has(itemId));\n            const nextSelectedItems = new Set(selected);\n            if (allItemsSelected) {\n                nextSelectedItems.clear();\n            } else {\n                itemIds.forEach((itemId)=>nextSelectedItems.add(itemId));\n            }\n            changeSelection(event, nextSelectedItems);\n        }\n    };\n    return [\n        selected,\n        methods\n    ];\n}\nexport function useSelection(params) {\n    if (params.selectionMode === 'multiselect') {\n        // selectionMode is a static value, so we can safely ignore rules-of-hooks\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        return useMultipleSelection(params);\n    }\n    // selectionMode is a static value, so we can safely ignore rules-of-hooks\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useSingleSelection(params);\n}\n"],"names":["useSelection","useSelectionState","params","selected","setSelected","useControllableState","initialState","Set","defaultState","React","useMemo","defaultSelectedItems","createSetFromIterable","state","selectedItems","changeSelection","event","nextSelectedItems","_params_onSelectionChange","onSelectionChange","call","useSingleSelection","methods","deselectItem","selectItem","itemId","toggleAllItems","process","env","NODE_ENV","Error","toggleItem","clearItems","isSelected","_selected_has","has","useMultipleSelection","delete","add","itemIds","allItemsSelected","every","clear","forEach","selectionMode"],"mappings":"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"}