{"version":3,"sources":["getReactCallbackName.js"],"sourcesContent":["import * as React from 'react';\n/**\n * React.SyntheticEvent contains name of a callback that should be fired, this function returns it.\n *\n * Ideally, it should also distinguish regular and \"capture\" callbacks, but it's possible only with React 17 as\n * \".eventPhase\" there has proper value, see https://github.com/facebook/react/pull/19244. In React 16 all events\n * are handled in bubble phase.\n */ export function getReactCallbackName(event) {\n    if (event._reactName) {\n        return event._reactName;\n    }\n    if (event.dispatchConfig) {\n        if (event.dispatchConfig.registrationName) {\n            return event.dispatchConfig.registrationName;\n        }\n        return event.dispatchConfig.phasedRegistrationNames.bubbled;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n        // eslint-disable-next-line no-console\n        console.error(`@fluentui/react-utilities [${getReactCallbackName.name}]:\nPassed React.SyntheticEvent does not contain \".dispatchConfig\" or \"._reactName\". This should not happen, please report it to https://github.com/microsoft/fluentui.`);\n    }\n}\n"],"names":["getReactCallbackName","event","_reactName","dispatchConfig","registrationName","phasedRegistrationNames","bubbled","process","env","NODE_ENV","console","error","name"],"mappings":";;;;+BAOoBA;;;eAAAA;;;;iEAPG;AAOZ,SAASA,qBAAqBC,KAAK;IAC1C,IAAIA,MAAMC,UAAU,EAAE;QAClB,OAAOD,MAAMC,UAAU;IAC3B;IACA,IAAID,MAAME,cAAc,EAAE;QACtB,IAAIF,MAAME,cAAc,CAACC,gBAAgB,EAAE;YACvC,OAAOH,MAAME,cAAc,CAACC,gBAAgB;QAChD;QACA,OAAOH,MAAME,cAAc,CAACE,uBAAuB,CAACC,OAAO;IAC/D;IACA,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACvC,sCAAsC;QACtCC,QAAQC,KAAK,CAAC,CAAC,2BAA2B,EAAEX,qBAAqBY,IAAI,CAAC;mKACqF,CAAC;IAChK;AACJ"}