{"version":3,"sources":["useInteractionTagPrimary.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { useInteractionTagContext_unstable } from '../../contexts/interactionTagContext';\nconst avatarSizeMap = {\n    medium: 28,\n    small: 20,\n    'extra-small': 16\n};\nconst avatarShapeMap = {\n    rounded: 'square',\n    circular: 'circular'\n};\n/**\n * Create the state required to render InteractionTagPrimary.\n *\n * The returned state can be modified with hooks such as useInteractionTagPrimaryStyles_unstable,\n * before being passed to renderInteractionTagPrimary_unstable.\n *\n * @param props - props from this instance of InteractionTagPrimary\n * @param ref - reference to root HTMLButtonElement of InteractionTagPrimary\n */ export const useInteractionTagPrimary_unstable = (props, ref)=>{\n    const { appearance, disabled, interactionTagPrimaryId, shape, size } = useInteractionTagContext_unstable();\n    const { hasSecondaryAction = false } = props;\n    return {\n        appearance,\n        avatarShape: avatarShapeMap[shape],\n        avatarSize: avatarSizeMap[size],\n        disabled,\n        hasSecondaryAction,\n        shape,\n        size,\n        components: {\n            root: 'button',\n            media: 'span',\n            icon: 'span',\n            primaryText: 'span',\n            secondaryText: 'span'\n        },\n        root: slot.always(getIntrinsicElementProps('button', {\n            ref,\n            disabled,\n            id: interactionTagPrimaryId,\n            ...props\n        }), {\n            elementType: 'button'\n        }),\n        media: slot.optional(props.media, {\n            elementType: 'span'\n        }),\n        icon: slot.optional(props.icon, {\n            elementType: 'span'\n        }),\n        primaryText: slot.optional(props.primaryText, {\n            renderByDefault: true,\n            defaultProps: {\n                children: props.children\n            },\n            elementType: 'span'\n        }),\n        secondaryText: slot.optional(props.secondaryText, {\n            elementType: 'span'\n        })\n    };\n};\n"],"names":["useInteractionTagPrimary_unstable","avatarSizeMap","medium","small","avatarShapeMap","rounded","circular","props","ref","appearance","disabled","interactionTagPrimaryId","shape","size","useInteractionTagContext_unstable","hasSecondaryAction","avatarShape","avatarSize","components","root","media","icon","primaryText","secondaryText","slot","always","getIntrinsicElementProps","id","elementType","optional","renderByDefault","defaultProps","children"],"mappings":";;;;+BAoBiBA;;;eAAAA;;;;iEApBM;gCACwB;uCACG;AAClD,MAAMC,gBAAgB;IAClBC,QAAQ;IACRC,OAAO;IACP,eAAe;AACnB;AACA,MAAMC,iBAAiB;IACnBC,SAAS;IACTC,UAAU;AACd;AASW,MAAMN,oCAAoC,CAACO,OAAOC;IACzD,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,uBAAuB,EAAEC,KAAK,EAAEC,IAAI,EAAE,GAAGC,IAAAA,wDAAiC;IACxG,MAAM,EAAEC,qBAAqB,KAAK,EAAE,GAAGR;IACvC,OAAO;QACHE;QACAO,aAAaZ,cAAc,CAACQ,MAAM;QAClCK,YAAYhB,aAAa,CAACY,KAAK;QAC/BH;QACAK;QACAH;QACAC;QACAK,YAAY;YACRC,MAAM;YACNC,OAAO;YACPC,MAAM;YACNC,aAAa;YACbC,eAAe;QACnB;QACAJ,MAAMK,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,UAAU;YACjDlB;YACAE;YACAiB,IAAIhB;YACJ,GAAGJ,KAAK;QACZ,IAAI;YACAqB,aAAa;QACjB;QACAR,OAAOI,oBAAI,CAACK,QAAQ,CAACtB,MAAMa,KAAK,EAAE;YAC9BQ,aAAa;QACjB;QACAP,MAAMG,oBAAI,CAACK,QAAQ,CAACtB,MAAMc,IAAI,EAAE;YAC5BO,aAAa;QACjB;QACAN,aAAaE,oBAAI,CAACK,QAAQ,CAACtB,MAAMe,WAAW,EAAE;YAC1CQ,iBAAiB;YACjBC,cAAc;gBACVC,UAAUzB,MAAMyB,QAAQ;YAC5B;YACAJ,aAAa;QACjB;QACAL,eAAeC,oBAAI,CAACK,QAAQ,CAACtB,MAAMgB,aAAa,EAAE;YAC9CK,aAAa;QACjB;IACJ;AACJ"}