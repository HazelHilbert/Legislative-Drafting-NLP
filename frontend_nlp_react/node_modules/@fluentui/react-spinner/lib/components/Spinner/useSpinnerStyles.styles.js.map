{"version":3,"names":["__styles","mergeClasses","shorthands","tokens","typographyStyles","spinnerClassNames","root","spinner","label","rValues","extraTiny","tiny","extraSmall","small","medium","large","extraLarge","huge","spinnnerSizes","spinnerAnimation","container","animationDuration","animationIterationCount","animationTimingFunction","backgroundColor","useRootStyles","mc9l5x","Bt984gj","Brf1p80","Bg96gwp","i8kkvl","Belr9w4","horizontal","Beiy3e4","vertical","d","useLoaderStyles","spinnerSVG","B3aqqti","Brovlpu","Bxa1mx5","Bwaue66","fyp1ls","ag6ruv","osj692","aq5vjd","tlu9e1","J3u96z","d32isg","Bsvqbuc","b3s3i5","Bah9ito","ut6tcf","B7p06xz","B807ibg","f","k","m","useTrackStyles","inverted","gwg7kz","Bvrehnu","Bidp6o","cq3kgi","Btwiser","B8001xd","Bdordwa","Bo2mdfu","E10nrc","Bwl7w15","Bksq7rz","primary","B8k2rxp","y14cdu","useLabelStyles","sj55zd","Bahqtrf","Be2twd7","Bhrd7zp","useSpinnerStyles_unstable","state","labelPosition","size","appearance","rootStyles","spinnerStyles","labelStyles","trackStyles","className"],"sources":["useSpinnerStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nexport const spinnerClassNames = {\n    root: 'fui-Spinner',\n    spinner: 'fui-Spinner__spinner',\n    label: 'fui-Spinner__label'\n};\n/*\n * TODO: Update with proper tokens when added\n * Radii for the Spinner circles\n */ const rValues = {\n    extraTiny: '7px',\n    tiny: '9px',\n    extraSmall: '11px',\n    small: '13px',\n    medium: '14.5px',\n    large: '16.5px',\n    extraLarge: '18.5px',\n    huge: '20px'\n};\n/*\n * TODO: Update with proper tokens when added\n * Sizes for the Spinner\n */ const spinnnerSizes = {\n    extraTiny: '16px',\n    tiny: '20px',\n    extraSmall: '24px',\n    small: '28px',\n    medium: '32px',\n    large: '36px',\n    extraLarge: '40px',\n    huge: '44px'\n};\n/*\n * TODO: Update with proper tokens when added\n * Animation for Spinner\n */ const spinnerAnimation = {\n    container: {\n        animationDuration: '3s',\n        animationIterationCount: 'infinite',\n        animationTimingFunction: 'linear',\n        backgroundColor: 'transparent'\n    }\n};\n/**\n * Styles for the root slot\n */ const useRootStyles = makeStyles({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        lineHeight: '0',\n        ...shorthands.gap('8px')\n    },\n    horizontal: {\n        flexDirection: 'row'\n    },\n    vertical: {\n        flexDirection: 'column'\n    }\n});\nconst useLoaderStyles = makeStyles({\n    // global SVG class\n    spinnerSVG: {\n        ':focus': {\n            ...shorthands.outline('3px', 'solid', 'transparent')\n        },\n        ['& > svg']: {\n            animationName: {\n                '0%': {\n                    transform: 'rotate(0deg)'\n                },\n                '100%': {\n                    transform: 'rotate(360deg)'\n                }\n            },\n            ...spinnerAnimation.container,\n            '@media screen and (prefers-reduced-motion: reduce)': {\n                animationDuration: '0.01ms',\n                animationIterationCount: '1'\n            }\n        },\n        ['& > svg > circle']: {\n            cx: '50%',\n            cy: '50%',\n            fill: 'none'\n        }\n    },\n    'extra-tiny': {\n        ['& > svg']: {\n            height: spinnnerSizes.extraTiny,\n            width: spinnnerSizes.extraTiny\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThick,\n            r: rValues.extraTiny\n        }\n    },\n    tiny: {\n        ['& > svg']: {\n            height: spinnnerSizes.tiny,\n            width: spinnnerSizes.tiny\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThick,\n            r: rValues.tiny\n        }\n    },\n    'extra-small': {\n        ['& > svg']: {\n            height: spinnnerSizes.extraSmall,\n            width: spinnnerSizes.extraSmall\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThick,\n            r: rValues.extraSmall\n        }\n    },\n    small: {\n        ['& > svg']: {\n            height: spinnnerSizes.small,\n            width: spinnnerSizes.small\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThick,\n            r: rValues.small\n        }\n    },\n    medium: {\n        ['& > svg']: {\n            height: spinnnerSizes.medium,\n            width: spinnnerSizes.medium\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThicker,\n            r: rValues.medium\n        }\n    },\n    large: {\n        ['& > svg']: {\n            height: spinnnerSizes.large,\n            width: spinnnerSizes.large\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThicker,\n            r: rValues.large\n        }\n    },\n    'extra-large': {\n        ['& > svg']: {\n            height: spinnnerSizes.extraLarge,\n            width: spinnnerSizes.extraLarge\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThicker,\n            r: rValues.extraLarge\n        }\n    },\n    huge: {\n        ['& > svg']: {\n            height: spinnnerSizes.huge,\n            width: spinnnerSizes.huge\n        },\n        ['& > svg > circle']: {\n            strokeWidth: tokens.strokeWidthThickest,\n            r: rValues.huge\n        }\n    }\n});\nconst useTrackStyles = makeStyles({\n    inverted: {\n        ['& > svg > circle.fui-Spinner__Tail']: {\n            stroke: tokens.colorNeutralStrokeOnBrand2,\n            animationName: {\n                '0%': {\n                    strokeDasharray: '1,150',\n                    strokeDashoffset: '0'\n                },\n                '50%': {\n                    strokeDasharray: '90,150',\n                    strokeDashoffset: '-35'\n                },\n                '100%': {\n                    strokeDasharray: '90,150',\n                    strokeDashoffset: '-124'\n                }\n            },\n            animationDuration: '1.5s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: tokens.curveEasyEase,\n            strokeLinecap: 'round',\n            transform: 'rotate(-90deg)',\n            transformOrigin: '50% 50%',\n            '@media screen and (prefers-reduced-motion: reduce)': {\n                animationDuration: '0.01ms',\n                animationIterationCount: '1'\n            }\n        },\n        ['& > svg > circle.fui-Spinner__Track']: {\n            stroke: 'rgba(255, 255, 255, 0.2)'\n        }\n    },\n    primary: {\n        ['& > svg > circle.fui-Spinner__Tail']: {\n            stroke: tokens.colorBrandStroke1,\n            '@media screen and (forced-colors: active)': {\n                stroke: tokens.colorNeutralStrokeOnBrand2\n            },\n            animationName: {\n                '0%': {\n                    strokeDasharray: '1,150',\n                    strokeDashoffset: '0'\n                },\n                '50%': {\n                    strokeDasharray: '90,150',\n                    strokeDashoffset: '-35'\n                },\n                '100%': {\n                    strokeDasharray: '90,150',\n                    strokeDashoffset: '-124'\n                }\n            },\n            animationDuration: '1.5s',\n            animationIterationCount: 'infinite',\n            animationTimingFunction: tokens.curveEasyEase,\n            strokeLinecap: 'round',\n            transform: 'rotate(-90deg)',\n            transformOrigin: '50% 50%',\n            '@media screen and (prefers-reduced-motion: reduce)': {\n                animationDuration: '0.01ms',\n                animationIterationCount: '1'\n            }\n        },\n        ['& > svg > circle.fui-Spinner__Track']: {\n            stroke: tokens.colorBrandStroke2Contrast,\n            '@media screen and (forced-colors: active)': {\n                stroke: tokens.colorNeutralBackgroundInverted\n            }\n        }\n    }\n});\nconst useLabelStyles = makeStyles({\n    // style for label\n    inverted: {\n        color: 'rgba(255, 255, 255, 1)'\n    },\n    primary: {},\n    'extra-tiny': {\n        ...typographyStyles.body1\n    },\n    tiny: {\n        ...typographyStyles.body1\n    },\n    'extra-small': {\n        ...typographyStyles.body1\n    },\n    small: {\n        ...typographyStyles.body1\n    },\n    medium: {\n        ...typographyStyles.subtitle2\n    },\n    large: {\n        ...typographyStyles.subtitle2\n    },\n    'extra-large': {\n        ...typographyStyles.subtitle2\n    },\n    huge: {\n        ...typographyStyles.subtitle1\n    }\n});\n/**\n * Apply styling to the Spinner slots based on the state\n */ export const useSpinnerStyles_unstable = (state)=>{\n    const { labelPosition, size, appearance = 'primary' } = state;\n    const rootStyles = useRootStyles();\n    const spinnerStyles = useLoaderStyles();\n    const labelStyles = useLabelStyles();\n    const trackStyles = useTrackStyles();\n    state.root.className = mergeClasses(spinnerClassNames.root, rootStyles.root, (labelPosition === 'above' || labelPosition === 'below') && rootStyles.vertical, (labelPosition === 'before' || labelPosition === 'after') && rootStyles.horizontal, state.root.className);\n    if (state.spinner) {\n        state.spinner.className = mergeClasses(spinnerClassNames.spinner, spinnerStyles.spinnerSVG, spinnerStyles[size], trackStyles[appearance], state.spinner.className);\n    }\n    if (state.label) {\n        state.label.className = mergeClasses(spinnerClassNames.label, labelStyles[size], labelStyles[appearance], state.label.className);\n    }\n    return state;\n};\n"],"mappings":"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"}