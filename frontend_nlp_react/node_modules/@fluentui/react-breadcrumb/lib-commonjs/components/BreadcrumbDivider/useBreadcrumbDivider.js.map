{"version":3,"sources":["useBreadcrumbDivider.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\nimport { ChevronRight20Regular, ChevronRight16Regular, ChevronRight12Regular, ChevronLeft20Regular, ChevronLeft16Regular, ChevronLeft12Regular } from '@fluentui/react-icons';\nimport { useBreadcrumbContext_unstable } from '../Breadcrumb/BreadcrumbContext';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Create the state required to render BreadcrumbDivider.\n *\n * The returned state can be modified with hooks such as useBreadcrumbDividerStyles_unstable,\n * before being passed to renderBreadcrumbDivider_unstable.\n *\n * @param props - props from this instance of BreadcrumbDivider\n * @param ref - reference to root HTMLElement of BreadcrumbDivider\n */ export const useBreadcrumbDivider_unstable = (props, ref)=>{\n    const { size } = useBreadcrumbContext_unstable();\n    const { dir } = useFluent();\n    const icon = getDividerIcon(size, dir);\n    return {\n        components: {\n            root: 'li'\n        },\n        root: slot.always(getIntrinsicElementProps('li', {\n            ref,\n            'aria-hidden': true,\n            children: icon,\n            ...props\n        }), {\n            elementType: 'li'\n        })\n    };\n};\nconst dividerIcons = {\n    rtl: {\n        small: /*#__PURE__*/ React.createElement(ChevronLeft12Regular, null),\n        medium: /*#__PURE__*/ React.createElement(ChevronLeft16Regular, null),\n        large: /*#__PURE__*/ React.createElement(ChevronLeft20Regular, null)\n    },\n    ltr: {\n        small: /*#__PURE__*/ React.createElement(ChevronRight12Regular, null),\n        medium: /*#__PURE__*/ React.createElement(ChevronRight16Regular, null),\n        large: /*#__PURE__*/ React.createElement(ChevronRight20Regular, null)\n    }\n};\n/**\n * Get icon of the divider\n *\n * @param size - size of the Breadcrumb\n */ function getDividerIcon(size = 'medium', dir) {\n    const dividerIcon = dir === 'rtl' ? dividerIcons.rtl : dividerIcons.ltr;\n    if (size === 'small') {\n        return dividerIcon.small;\n    }\n    if (size === 'large') {\n        return dividerIcon.large;\n    }\n    return dividerIcon.medium;\n}\n"],"names":["useBreadcrumbDivider_unstable","props","ref","size","useBreadcrumbContext_unstable","dir","useFluent","icon","getDividerIcon","components","root","slot","always","getIntrinsicElementProps","children","elementType","dividerIcons","rtl","small","React","createElement","ChevronLeft12Regular","medium","ChevronLeft16Regular","large","ChevronLeft20Regular","ltr","ChevronRight12Regular","ChevronRight16Regular","ChevronRight20Regular","dividerIcon"],"mappings":";;;;+BAaiBA;;;eAAAA;;;;iEAbM;gCACwB;4BACuG;mCACxG;qCACE;AASrC,MAAMA,gCAAgC,CAACC,OAAOC;IACrD,MAAM,EAAEC,IAAI,EAAE,GAAGC,IAAAA,gDAA6B;IAC9C,MAAM,EAAEC,GAAG,EAAE,GAAGC,IAAAA,uCAAS;IACzB,MAAMC,OAAOC,eAAeL,MAAME;IAClC,OAAO;QACHI,YAAY;YACRC,MAAM;QACV;QACAA,MAAMC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,MAAM;YAC7CX;YACA,eAAe;YACfY,UAAUP;YACV,GAAGN,KAAK;QACZ,IAAI;YACAc,aAAa;QACjB;IACJ;AACJ;AACA,MAAMC,eAAe;IACjBC,KAAK;QACDC,OAAO,WAAW,GAAGC,OAAMC,aAAa,CAACC,gCAAoB,EAAE;QAC/DC,QAAQ,WAAW,GAAGH,OAAMC,aAAa,CAACG,gCAAoB,EAAE;QAChEC,OAAO,WAAW,GAAGL,OAAMC,aAAa,CAACK,gCAAoB,EAAE;IACnE;IACAC,KAAK;QACDR,OAAO,WAAW,GAAGC,OAAMC,aAAa,CAACO,iCAAqB,EAAE;QAChEL,QAAQ,WAAW,GAAGH,OAAMC,aAAa,CAACQ,iCAAqB,EAAE;QACjEJ,OAAO,WAAW,GAAGL,OAAMC,aAAa,CAACS,iCAAqB,EAAE;IACpE;AACJ;AACA;;;;CAIC,GAAG,SAASrB,eAAeL,OAAO,QAAQ,EAAEE,GAAG;IAC5C,MAAMyB,cAAczB,QAAQ,QAAQW,aAAaC,GAAG,GAAGD,aAAaU,GAAG;IACvE,IAAIvB,SAAS,SAAS;QAClB,OAAO2B,YAAYZ,KAAK;IAC5B;IACA,IAAIf,SAAS,SAAS;QAClB,OAAO2B,YAAYN,KAAK;IAC5B;IACA,OAAOM,YAAYR,MAAM;AAC7B"}