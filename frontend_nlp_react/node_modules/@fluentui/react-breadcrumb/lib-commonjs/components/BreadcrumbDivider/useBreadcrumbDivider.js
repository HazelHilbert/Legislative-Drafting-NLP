"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useBreadcrumbDivider_unstable", {
    enumerable: true,
    get: function() {
        return useBreadcrumbDivider_unstable;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _reactutilities = require("@fluentui/react-utilities");
const _reacticons = require("@fluentui/react-icons");
const _BreadcrumbContext = require("../Breadcrumb/BreadcrumbContext");
const _reactsharedcontexts = require("@fluentui/react-shared-contexts");
const useBreadcrumbDivider_unstable = (props, ref)=>{
    const { size } = (0, _BreadcrumbContext.useBreadcrumbContext_unstable)();
    const { dir } = (0, _reactsharedcontexts.useFluent_unstable)();
    const icon = getDividerIcon(size, dir);
    return {
        components: {
            root: 'li'
        },
        root: _reactutilities.slot.always((0, _reactutilities.getIntrinsicElementProps)('li', {
            ref,
            'aria-hidden': true,
            children: icon,
            ...props
        }), {
            elementType: 'li'
        })
    };
};
const dividerIcons = {
    rtl: {
        small: /*#__PURE__*/ _react.createElement(_reacticons.ChevronLeft12Regular, null),
        medium: /*#__PURE__*/ _react.createElement(_reacticons.ChevronLeft16Regular, null),
        large: /*#__PURE__*/ _react.createElement(_reacticons.ChevronLeft20Regular, null)
    },
    ltr: {
        small: /*#__PURE__*/ _react.createElement(_reacticons.ChevronRight12Regular, null),
        medium: /*#__PURE__*/ _react.createElement(_reacticons.ChevronRight16Regular, null),
        large: /*#__PURE__*/ _react.createElement(_reacticons.ChevronRight20Regular, null)
    }
};
/**
 * Get icon of the divider
 *
 * @param size - size of the Breadcrumb
 */ function getDividerIcon(size = 'medium', dir) {
    const dividerIcon = dir === 'rtl' ? dividerIcons.rtl : dividerIcons.ltr;
    if (size === 'small') {
        return dividerIcon.small;
    }
    if (size === 'large') {
        return dividerIcon.large;
    }
    return dividerIcon.medium;
}
