{"version":3,"sources":["useARIAButtonProps.js"],"sourcesContent":["import { Enter, Space } from '@fluentui/keyboard-keys';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport * as React from 'react';\n/**\n * @internal\n *\n * Button keyboard handling, role, disabled and tabIndex implementation that ensures ARIA spec\n * for multiple scenarios of non native button elements. Ensuring 1st rule of ARIA for cases\n * where no attribute addition is required.\n *\n * @param type - the proper scenario to be interpreted by the hook.\n *  1. `button` - Minimal interference from the hook, as semantic button already supports most of the states\n *  2. `a` or `div` - Proper keyboard/mouse handling plus other support to ensure ARIA behavior\n * @param props - the props to be passed down the line to the desired element.\n * This hook will encapsulate proper properties, such as `onClick`, `onKeyDown`, `onKeyUp`, etc,.\n *\n * @example\n * ```tsx\n * const buttonProps = useARIAButtonProps('a', {\n *   href: './some-route'\n *   onClick: () => console.log('this should run both on click and Space and Enter')\n * })\n *\n * // ...\n *\n * return (\n *  <a {...buttonProps}>This anchor will behave as a proper button</a>\n * )\n * ```\n */ export function useARIAButtonProps(type, props) {\n    const { disabled, disabledFocusable = false, ['aria-disabled']: ariaDisabled, onClick, onKeyDown, onKeyUp, ...rest } = props !== null && props !== void 0 ? props : {};\n    const normalizedARIADisabled = typeof ariaDisabled === 'string' ? ariaDisabled === 'true' : ariaDisabled;\n    const isDisabled = disabled || disabledFocusable || normalizedARIADisabled;\n    const handleClick = useEventCallback((ev)=>{\n        if (isDisabled) {\n            ev.preventDefault();\n            ev.stopPropagation();\n        } else {\n            onClick === null || onClick === void 0 ? void 0 : onClick(ev);\n        }\n    });\n    const handleKeyDown = useEventCallback((ev)=>{\n        onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(ev);\n        if (ev.isDefaultPrevented()) {\n            return;\n        }\n        const key = ev.key;\n        if (isDisabled && (key === Enter || key === Space)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            return;\n        }\n        if (key === Space) {\n            ev.preventDefault();\n            return;\n        } else if (key === Enter) {\n            ev.preventDefault();\n            ev.currentTarget.click();\n        }\n    });\n    const handleKeyUp = useEventCallback((ev)=>{\n        onKeyUp === null || onKeyUp === void 0 ? void 0 : onKeyUp(ev);\n        if (ev.isDefaultPrevented()) {\n            return;\n        }\n        const key = ev.key;\n        if (isDisabled && (key === Enter || key === Space)) {\n            ev.preventDefault();\n            ev.stopPropagation();\n            return;\n        }\n        if (key === Space) {\n            ev.preventDefault();\n            ev.currentTarget.click();\n        }\n    });\n    // If a <button> tag is to be rendered we just need to set disabled and aria-disabled correctly\n    if (type === 'button' || type === undefined) {\n        return {\n            ...rest,\n            disabled: disabled && !disabledFocusable,\n            'aria-disabled': disabledFocusable ? true : normalizedARIADisabled,\n            // onclick should still use internal handler to ensure prevention if disabled\n            // if disabledFocusable then there's no requirement for handlers as those events should not be propagated\n            onClick: disabledFocusable ? undefined : handleClick,\n            onKeyUp: disabledFocusable ? undefined : onKeyUp,\n            onKeyDown: disabledFocusable ? undefined : onKeyDown\n        };\n    } else {\n        const resultProps = {\n            role: 'button',\n            tabIndex: disabled && !disabledFocusable ? undefined : 0,\n            ...rest,\n            // If it's not a <button> than listeners are required even with disabledFocusable\n            // Since you cannot assure the default behavior of the element\n            // E.g: <a> will redirect on click\n            onClick: handleClick,\n            onKeyUp: handleKeyUp,\n            onKeyDown: handleKeyDown,\n            'aria-disabled': disabled || disabledFocusable || normalizedARIADisabled\n        };\n        if (type === 'a' && isDisabled) {\n            resultProps.href = undefined;\n        }\n        return resultProps;\n    }\n}\n"],"names":["useARIAButtonProps","type","props","disabled","disabledFocusable","ariaDisabled","onClick","onKeyDown","onKeyUp","rest","normalizedARIADisabled","isDisabled","handleClick","useEventCallback","ev","preventDefault","stopPropagation","handleKeyDown","isDefaultPrevented","key","Enter","Space","currentTarget","click","handleKeyUp","undefined","resultProps","role","tabIndex","href"],"mappings":";;;;+BA6BoBA;;;eAAAA;;;;8BA7BS;gCACI;iEACV;AA2BZ,SAASA,mBAAmBC,IAAI,EAAEC,KAAK;IAC9C,MAAM,EAAEC,QAAQ,EAAEC,oBAAoB,KAAK,EAAE,CAAC,gBAAgB,EAAEC,YAAY,EAAEC,OAAO,EAAEC,SAAS,EAAEC,OAAO,EAAE,GAAGC,MAAM,GAAGP,UAAU,QAAQA,UAAU,KAAK,IAAIA,QAAQ,CAAC;IACrK,MAAMQ,yBAAyB,OAAOL,iBAAiB,WAAWA,iBAAiB,SAASA;IAC5F,MAAMM,aAAaR,YAAYC,qBAAqBM;IACpD,MAAME,cAAcC,IAAAA,gCAAgB,EAAC,CAACC;QAClC,IAAIH,YAAY;YACZG,GAAGC,cAAc;YACjBD,GAAGE,eAAe;QACtB,OAAO;YACHV,YAAY,QAAQA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQQ;QAC9D;IACJ;IACA,MAAMG,gBAAgBJ,IAAAA,gCAAgB,EAAC,CAACC;QACpCP,cAAc,QAAQA,cAAc,KAAK,IAAI,KAAK,IAAIA,UAAUO;QAChE,IAAIA,GAAGI,kBAAkB,IAAI;YACzB;QACJ;QACA,MAAMC,MAAML,GAAGK,GAAG;QAClB,IAAIR,cAAeQ,CAAAA,QAAQC,mBAAK,IAAID,QAAQE,mBAAK,AAAD,GAAI;YAChDP,GAAGC,cAAc;YACjBD,GAAGE,eAAe;YAClB;QACJ;QACA,IAAIG,QAAQE,mBAAK,EAAE;YACfP,GAAGC,cAAc;YACjB;QACJ,OAAO,IAAII,QAAQC,mBAAK,EAAE;YACtBN,GAAGC,cAAc;YACjBD,GAAGQ,aAAa,CAACC,KAAK;QAC1B;IACJ;IACA,MAAMC,cAAcX,IAAAA,gCAAgB,EAAC,CAACC;QAClCN,YAAY,QAAQA,YAAY,KAAK,IAAI,KAAK,IAAIA,QAAQM;QAC1D,IAAIA,GAAGI,kBAAkB,IAAI;YACzB;QACJ;QACA,MAAMC,MAAML,GAAGK,GAAG;QAClB,IAAIR,cAAeQ,CAAAA,QAAQC,mBAAK,IAAID,QAAQE,mBAAK,AAAD,GAAI;YAChDP,GAAGC,cAAc;YACjBD,GAAGE,eAAe;YAClB;QACJ;QACA,IAAIG,QAAQE,mBAAK,EAAE;YACfP,GAAGC,cAAc;YACjBD,GAAGQ,aAAa,CAACC,KAAK;QAC1B;IACJ;IACA,+FAA+F;IAC/F,IAAItB,SAAS,YAAYA,SAASwB,WAAW;QACzC,OAAO;YACH,GAAGhB,IAAI;YACPN,UAAUA,YAAY,CAACC;YACvB,iBAAiBA,oBAAoB,OAAOM;YAC5C,6EAA6E;YAC7E,yGAAyG;YACzGJ,SAASF,oBAAoBqB,YAAYb;YACzCJ,SAASJ,oBAAoBqB,YAAYjB;YACzCD,WAAWH,oBAAoBqB,YAAYlB;QAC/C;IACJ,OAAO;QACH,MAAMmB,cAAc;YAChBC,MAAM;YACNC,UAAUzB,YAAY,CAACC,oBAAoBqB,YAAY;YACvD,GAAGhB,IAAI;YACP,iFAAiF;YACjF,8DAA8D;YAC9D,kCAAkC;YAClCH,SAASM;YACTJ,SAASgB;YACTjB,WAAWU;YACX,iBAAiBd,YAAYC,qBAAqBM;QACtD;QACA,IAAIT,SAAS,OAAOU,YAAY;YAC5Be,YAAYG,IAAI,GAAGJ;QACvB;QACA,OAAOC;IACX;AACJ"}