{"version":3,"sources":["useFlatTreeNavigation.js"],"sourcesContent":["import { useEventCallback, useMergedRefs } from '@fluentui/react-utilities';\nimport { nextTypeAheadElement } from '../utils/nextTypeAheadElement';\nimport { treeDataTypes } from '../utils/tokens';\nimport { useRovingTabIndex } from './useRovingTabIndexes';\nimport { dataTreeItemValueAttrName } from '../utils/getTreeItemValueFromElement';\nimport * as React from 'react';\nimport { useHTMLElementWalkerRef } from './useHTMLElementWalkerRef';\nexport function useFlatTreeNavigation() {\n    const { walkerRef, rootRef: walkerRootRef } = useHTMLElementWalkerRef();\n    const { rove, initialize: initializeRovingTabIndex } = useRovingTabIndex();\n    const rootRefCallback = React.useCallback((root)=>{\n        if (walkerRef.current && root) {\n            initializeRovingTabIndex(walkerRef.current);\n        }\n    }, [\n        initializeRovingTabIndex,\n        walkerRef\n    ]);\n    function getNextElement(data) {\n        if (!walkerRef.current) {\n            return null;\n        }\n        switch(data.type){\n            case treeDataTypes.Click:\n                return data.target;\n            case treeDataTypes.TypeAhead:\n                walkerRef.current.currentElement = data.target;\n                return nextTypeAheadElement(walkerRef.current, data.event.key);\n            case treeDataTypes.ArrowLeft:\n                {\n                    const nextElement = parentElement(data.parentValue, walkerRef.current);\n                    if (!nextElement && process.env.NODE_ENV !== 'production') {\n                        // eslint-disable-next-line no-console\n                        console.warn(`@fluentui/react-tree [useFlatTreeNavigation]:\n\\'ArrowLeft\\' navigation was not possible.\nNo parent element found for the current element:`, data.target);\n                    }\n                    return nextElement;\n                }\n            case treeDataTypes.ArrowRight:\n                {\n                    walkerRef.current.currentElement = data.target;\n                    const nextElement = firstChild(data.target, walkerRef.current);\n                    if (!nextElement && process.env.NODE_ENV !== 'production') {\n                        const ariaLevel = Number(data.target.getAttribute('aria-level'));\n                        // eslint-disable-next-line no-console\n                        console.warn(`@fluentui/react-tree [useFlatTreeNavigation]:\n\\'ArrowRight\\' navigation was not possible.\nNo element with \"aria-posinset=1\" and \"aria-level=${ariaLevel + 1}\"\nwas found after the current element!`, data.target);\n                    }\n                    return nextElement;\n                }\n            case treeDataTypes.End:\n                walkerRef.current.currentElement = walkerRef.current.root;\n                return walkerRef.current.lastChild();\n            case treeDataTypes.Home:\n                walkerRef.current.currentElement = walkerRef.current.root;\n                return walkerRef.current.firstChild();\n            case treeDataTypes.ArrowDown:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.nextElement();\n            case treeDataTypes.ArrowUp:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.previousElement();\n        }\n    }\n    const navigate = useEventCallback((data)=>{\n        const nextElement = getNextElement(data);\n        if (nextElement) {\n            rove(nextElement);\n        }\n    });\n    return {\n        navigate,\n        rootRef: useMergedRefs(walkerRootRef, rootRefCallback)\n    };\n}\nfunction firstChild(target, treeWalker) {\n    const nextElement = treeWalker.nextElement();\n    if (!nextElement) {\n        return null;\n    }\n    const nextElementAriaPosInSet = nextElement.getAttribute('aria-posinset');\n    const nextElementAriaLevel = nextElement.getAttribute('aria-level');\n    const targetAriaLevel = target.getAttribute('aria-level');\n    if (nextElementAriaPosInSet === '1' && Number(nextElementAriaLevel) === Number(targetAriaLevel) + 1) {\n        return nextElement;\n    }\n    return null;\n}\nfunction parentElement(parentValue, treeWalker) {\n    if (parentValue === undefined) {\n        return null;\n    }\n    return treeWalker.root.querySelector(`[${dataTreeItemValueAttrName}=\"${parentValue}\"]`);\n}\n"],"names":["useFlatTreeNavigation","walkerRef","rootRef","walkerRootRef","useHTMLElementWalkerRef","rove","initialize","initializeRovingTabIndex","useRovingTabIndex","rootRefCallback","React","useCallback","root","current","getNextElement","data","type","treeDataTypes","Click","target","TypeAhead","currentElement","nextTypeAheadElement","event","key","ArrowLeft","nextElement","parentElement","parentValue","process","env","NODE_ENV","console","warn","ArrowRight","firstChild","ariaLevel","Number","getAttribute","End","lastChild","Home","ArrowDown","ArrowUp","previousElement","navigate","useEventCallback","useMergedRefs","treeWalker","nextElementAriaPosInSet","nextElementAriaLevel","targetAriaLevel","undefined","querySelector","dataTreeItemValueAttrName"],"mappings":";;;;+BAOgBA;;;eAAAA;;;;gCAPgC;sCACX;wBACP;qCACI;6CACQ;iEACnB;yCACiB;AACjC,SAASA;IACZ,MAAM,EAAEC,SAAS,EAAEC,SAASC,aAAa,EAAE,GAAGC,IAAAA,gDAAuB;IACrE,MAAM,EAAEC,IAAI,EAAEC,YAAYC,wBAAwB,EAAE,GAAGC,IAAAA,sCAAiB;IACxE,MAAMC,kBAAkBC,OAAMC,WAAW,CAAC,CAACC;QACvC,IAAIX,UAAUY,OAAO,IAAID,MAAM;YAC3BL,yBAAyBN,UAAUY,OAAO;QAC9C;IACJ,GAAG;QACCN;QACAN;KACH;IACD,SAASa,eAAeC,IAAI;QACxB,IAAI,CAACd,UAAUY,OAAO,EAAE;YACpB,OAAO;QACX;QACA,OAAOE,KAAKC,IAAI;YACZ,KAAKC,qBAAa,CAACC,KAAK;gBACpB,OAAOH,KAAKI,MAAM;YACtB,KAAKF,qBAAa,CAACG,SAAS;gBACxBnB,UAAUY,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOG,IAAAA,0CAAoB,EAACrB,UAAUY,OAAO,EAAEE,KAAKQ,KAAK,CAACC,GAAG;YACjE,KAAKP,qBAAa,CAACQ,SAAS;gBACxB;oBACI,MAAMC,cAAcC,cAAcZ,KAAKa,WAAW,EAAE3B,UAAUY,OAAO;oBACrE,IAAI,CAACa,eAAeG,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;wBACvD,sCAAsC;wBACtCC,QAAQC,IAAI,CAAC,CAAC;;gDAEU,CAAC,EAAElB,KAAKI,MAAM;oBAC1C;oBACA,OAAOO;gBACX;YACJ,KAAKT,qBAAa,CAACiB,UAAU;gBACzB;oBACIjC,UAAUY,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;oBAC9C,MAAMO,cAAcS,WAAWpB,KAAKI,MAAM,EAAElB,UAAUY,OAAO;oBAC7D,IAAI,CAACa,eAAeG,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;wBACvD,MAAMK,YAAYC,OAAOtB,KAAKI,MAAM,CAACmB,YAAY,CAAC;wBAClD,sCAAsC;wBACtCN,QAAQC,IAAI,CAAC,CAAC;;kDAEY,EAAEG,YAAY,EAAE;oCAC9B,CAAC,EAAErB,KAAKI,MAAM;oBAC9B;oBACA,OAAOO;gBACX;YACJ,KAAKT,qBAAa,CAACsB,GAAG;gBAClBtC,UAAUY,OAAO,CAACQ,cAAc,GAAGpB,UAAUY,OAAO,CAACD,IAAI;gBACzD,OAAOX,UAAUY,OAAO,CAAC2B,SAAS;YACtC,KAAKvB,qBAAa,CAACwB,IAAI;gBACnBxC,UAAUY,OAAO,CAACQ,cAAc,GAAGpB,UAAUY,OAAO,CAACD,IAAI;gBACzD,OAAOX,UAAUY,OAAO,CAACsB,UAAU;YACvC,KAAKlB,qBAAa,CAACyB,SAAS;gBACxBzC,UAAUY,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOlB,UAAUY,OAAO,CAACa,WAAW;YACxC,KAAKT,qBAAa,CAAC0B,OAAO;gBACtB1C,UAAUY,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOlB,UAAUY,OAAO,CAAC+B,eAAe;QAChD;IACJ;IACA,MAAMC,WAAWC,IAAAA,gCAAgB,EAAC,CAAC/B;QAC/B,MAAMW,cAAcZ,eAAeC;QACnC,IAAIW,aAAa;YACbrB,KAAKqB;QACT;IACJ;IACA,OAAO;QACHmB;QACA3C,SAAS6C,IAAAA,6BAAa,EAAC5C,eAAeM;IAC1C;AACJ;AACA,SAAS0B,WAAWhB,MAAM,EAAE6B,UAAU;IAClC,MAAMtB,cAAcsB,WAAWtB,WAAW;IAC1C,IAAI,CAACA,aAAa;QACd,OAAO;IACX;IACA,MAAMuB,0BAA0BvB,YAAYY,YAAY,CAAC;IACzD,MAAMY,uBAAuBxB,YAAYY,YAAY,CAAC;IACtD,MAAMa,kBAAkBhC,OAAOmB,YAAY,CAAC;IAC5C,IAAIW,4BAA4B,OAAOZ,OAAOa,0BAA0Bb,OAAOc,mBAAmB,GAAG;QACjG,OAAOzB;IACX;IACA,OAAO;AACX;AACA,SAASC,cAAcC,WAAW,EAAEoB,UAAU;IAC1C,IAAIpB,gBAAgBwB,WAAW;QAC3B,OAAO;IACX;IACA,OAAOJ,WAAWpC,IAAI,CAACyC,aAAa,CAAC,CAAC,CAAC,EAAEC,sDAAyB,CAAC,EAAE,EAAE1B,YAAY,EAAE,CAAC;AAC1F"}