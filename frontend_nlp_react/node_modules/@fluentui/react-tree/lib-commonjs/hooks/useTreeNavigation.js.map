{"version":3,"sources":["useTreeNavigation.js"],"sourcesContent":["import { nextTypeAheadElement } from '../utils/nextTypeAheadElement';\nimport { treeDataTypes } from '../utils/tokens';\nimport { useRovingTabIndex } from './useRovingTabIndexes';\nimport * as React from 'react';\nimport { useHTMLElementWalkerRef } from './useHTMLElementWalkerRef';\nimport { useMergedRefs } from '@fluentui/react-utilities';\nexport function useTreeNavigation() {\n    const { rove, initialize: initializeRovingTabIndex } = useRovingTabIndex();\n    const { walkerRef, rootRef: walkerRootRef } = useHTMLElementWalkerRef();\n    const rootRefCallback = React.useCallback((root)=>{\n        if (root && walkerRef.current) {\n            initializeRovingTabIndex(walkerRef.current);\n        }\n    }, [\n        walkerRef,\n        initializeRovingTabIndex\n    ]);\n    const getNextElement = (data)=>{\n        if (!walkerRef.current) {\n            return null;\n        }\n        switch(data.type){\n            case treeDataTypes.Click:\n                return data.target;\n            case treeDataTypes.TypeAhead:\n                walkerRef.current.currentElement = data.target;\n                return nextTypeAheadElement(walkerRef.current, data.event.key);\n            case treeDataTypes.ArrowLeft:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.parentElement();\n            case treeDataTypes.ArrowRight:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.firstChild();\n            case treeDataTypes.End:\n                walkerRef.current.currentElement = walkerRef.current.root;\n                return lastChildRecursive(walkerRef.current);\n            case treeDataTypes.Home:\n                walkerRef.current.currentElement = walkerRef.current.root;\n                return walkerRef.current.firstChild();\n            case treeDataTypes.ArrowDown:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.nextElement();\n            case treeDataTypes.ArrowUp:\n                walkerRef.current.currentElement = data.target;\n                return walkerRef.current.previousElement();\n        }\n    };\n    function navigate(data) {\n        const nextElement = getNextElement(data);\n        if (nextElement) {\n            rove(nextElement);\n        }\n    }\n    return {\n        navigate,\n        rootRef: useMergedRefs(walkerRootRef, rootRefCallback)\n    };\n}\nfunction lastChildRecursive(walker) {\n    let lastElement = null;\n    let nextElement = null;\n    while(nextElement = walker.lastChild()){\n        lastElement = nextElement;\n    }\n    return lastElement;\n}\n"],"names":["useTreeNavigation","rove","initialize","initializeRovingTabIndex","useRovingTabIndex","walkerRef","rootRef","walkerRootRef","useHTMLElementWalkerRef","rootRefCallback","React","useCallback","root","current","getNextElement","data","type","treeDataTypes","Click","target","TypeAhead","currentElement","nextTypeAheadElement","event","key","ArrowLeft","parentElement","ArrowRight","firstChild","End","lastChildRecursive","Home","ArrowDown","nextElement","ArrowUp","previousElement","navigate","useMergedRefs","walker","lastElement","lastChild"],"mappings":";;;;+BAMgBA;;;eAAAA;;;;sCANqB;wBACP;qCACI;iEACX;yCACiB;gCACV;AACvB,SAASA;IACZ,MAAM,EAAEC,IAAI,EAAEC,YAAYC,wBAAwB,EAAE,GAAGC,IAAAA,sCAAiB;IACxE,MAAM,EAAEC,SAAS,EAAEC,SAASC,aAAa,EAAE,GAAGC,IAAAA,gDAAuB;IACrE,MAAMC,kBAAkBC,OAAMC,WAAW,CAAC,CAACC;QACvC,IAAIA,QAAQP,UAAUQ,OAAO,EAAE;YAC3BV,yBAAyBE,UAAUQ,OAAO;QAC9C;IACJ,GAAG;QACCR;QACAF;KACH;IACD,MAAMW,iBAAiB,CAACC;QACpB,IAAI,CAACV,UAAUQ,OAAO,EAAE;YACpB,OAAO;QACX;QACA,OAAOE,KAAKC,IAAI;YACZ,KAAKC,qBAAa,CAACC,KAAK;gBACpB,OAAOH,KAAKI,MAAM;YACtB,KAAKF,qBAAa,CAACG,SAAS;gBACxBf,UAAUQ,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOG,IAAAA,0CAAoB,EAACjB,UAAUQ,OAAO,EAAEE,KAAKQ,KAAK,CAACC,GAAG;YACjE,KAAKP,qBAAa,CAACQ,SAAS;gBACxBpB,UAAUQ,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOd,UAAUQ,OAAO,CAACa,aAAa;YAC1C,KAAKT,qBAAa,CAACU,UAAU;gBACzBtB,UAAUQ,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOd,UAAUQ,OAAO,CAACe,UAAU;YACvC,KAAKX,qBAAa,CAACY,GAAG;gBAClBxB,UAAUQ,OAAO,CAACQ,cAAc,GAAGhB,UAAUQ,OAAO,CAACD,IAAI;gBACzD,OAAOkB,mBAAmBzB,UAAUQ,OAAO;YAC/C,KAAKI,qBAAa,CAACc,IAAI;gBACnB1B,UAAUQ,OAAO,CAACQ,cAAc,GAAGhB,UAAUQ,OAAO,CAACD,IAAI;gBACzD,OAAOP,UAAUQ,OAAO,CAACe,UAAU;YACvC,KAAKX,qBAAa,CAACe,SAAS;gBACxB3B,UAAUQ,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOd,UAAUQ,OAAO,CAACoB,WAAW;YACxC,KAAKhB,qBAAa,CAACiB,OAAO;gBACtB7B,UAAUQ,OAAO,CAACQ,cAAc,GAAGN,KAAKI,MAAM;gBAC9C,OAAOd,UAAUQ,OAAO,CAACsB,eAAe;QAChD;IACJ;IACA,SAASC,SAASrB,IAAI;QAClB,MAAMkB,cAAcnB,eAAeC;QACnC,IAAIkB,aAAa;YACbhC,KAAKgC;QACT;IACJ;IACA,OAAO;QACHG;QACA9B,SAAS+B,IAAAA,6BAAa,EAAC9B,eAAeE;IAC1C;AACJ;AACA,SAASqB,mBAAmBQ,MAAM;IAC9B,IAAIC,cAAc;IAClB,IAAIN,cAAc;IAClB,MAAMA,cAAcK,OAAOE,SAAS,GAAG;QACnCD,cAAcN;IAClB;IACA,OAAOM;AACX"}