{"version":3,"sources":["createHeadlessTree.js"],"sourcesContent":["/**\n * creates a list of virtual tree items\n * and provides a map to access each item by id\n */ export function createHeadlessTree(initialProps = []) {\n    const root = createHeadlessTreeRootItem();\n    const itemsPerValue = new Map([\n        [\n            root.value,\n            root\n        ]\n    ]);\n    const headlessTree = {\n        root,\n        get size () {\n            return itemsPerValue.size;\n        },\n        getParent: (key)=>{\n            var _itemsPerValue_get;\n            var _itemsPerValue_get_parentValue, _itemsPerValue_get1;\n            return (_itemsPerValue_get1 = itemsPerValue.get((_itemsPerValue_get_parentValue = (_itemsPerValue_get = itemsPerValue.get(key)) === null || _itemsPerValue_get === void 0 ? void 0 : _itemsPerValue_get.parentValue) !== null && _itemsPerValue_get_parentValue !== void 0 ? _itemsPerValue_get_parentValue : root.value)) !== null && _itemsPerValue_get1 !== void 0 ? _itemsPerValue_get1 : root;\n        },\n        get: (key)=>itemsPerValue.get(key),\n        has: (key)=>itemsPerValue.has(key),\n        add (props) {\n            const { parentValue = headlessTreeRootId, ...propsWithoutParentValue } = props;\n            const parentItem = itemsPerValue.get(parentValue);\n            if (!parentItem) {\n                if (process.env.NODE_ENV === 'development') {\n                    // eslint-disable-next-line no-console\n                    console.error(`@fluentui/react-tree [createHeadlessTree]:\nTreeItem \"${props.value}\" is wrongly positioned, did you properly ordered provided item props? make sure provided items are organized, parents should come before children`);\n                }\n                return;\n            }\n            parentItem.itemType = 'branch';\n            var _propsWithoutParentValue_itemType;\n            const item = {\n                value: props.value,\n                getTreeItemProps: ()=>({\n                        ...propsWithoutParentValue,\n                        parentValue,\n                        'aria-level': item.level,\n                        'aria-posinset': item.position,\n                        'aria-setsize': parentItem.childrenValues.length,\n                        itemType: item.itemType\n                    }),\n                itemType: (_propsWithoutParentValue_itemType = propsWithoutParentValue.itemType) !== null && _propsWithoutParentValue_itemType !== void 0 ? _propsWithoutParentValue_itemType : 'leaf',\n                level: parentItem.level + 1,\n                parentValue,\n                childrenValues: [],\n                index: -1,\n                position: parentItem.childrenValues.push(props.value)\n            };\n            itemsPerValue.set(item.value, item);\n        },\n        // TODO: eventually it would be nice to have this method exported for the user to modify\n        // the internal state of the virtual tree\n        // remove(value) {\n        //   const itemToBeRemoved = itemsPerValue.get(value);\n        //   if (!itemToBeRemoved) {\n        //     return;\n        //   }\n        //   const parentItem = headlessTree.getParent(value);\n        //   parentItem.childrenValues.splice(itemToBeRemoved.position, 1);\n        //   itemsPerValue.delete(value);\n        //   if (parentItem.childrenValues.length === 0) {\n        //     parentItem.itemType = 'leaf';\n        //   }\n        //   for (let index = itemToBeRemoved.position; index < parentItem.childrenValues.length; index++) {\n        //     const child = itemsPerValue.get(parentItem.childrenValues[index]);\n        //     if (child) {\n        //       child.position = index + 1;\n        //     }\n        //   }\n        //   for (const descendant of HeadlessTreeSubtreeGenerator(value, headlessTree)) {\n        //     itemsPerValue.delete(descendant.value);\n        //   }\n        // },\n        subtree: (key)=>HeadlessTreeSubtreeGenerator(key, headlessTree),\n        children: (key)=>HeadlessTreeChildrenGenerator(key, headlessTree),\n        ancestors: (key)=>HeadlessTreeAncestorsGenerator(key, headlessTree),\n        visibleItems: (openItems)=>HeadlessTreeVisibleItemsGenerator(openItems, headlessTree)\n    };\n    initialProps.forEach(headlessTree.add);\n    return headlessTree;\n}\nexport const headlessTreeRootId = '__fuiHeadlessTreeRoot';\nfunction createHeadlessTreeRootItem() {\n    return {\n        parentValue: undefined,\n        value: headlessTreeRootId,\n        itemType: 'branch',\n        getTreeItemProps: ()=>{\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error(`@fluentui/react-tree [createHeadlessTree]:\nInternal error, trying to access treeitem props from invalid root element`);\n            }\n            return {\n                id: headlessTreeRootId,\n                parentValue: undefined,\n                value: headlessTreeRootId,\n                'aria-setsize': -1,\n                'aria-level': -1,\n                'aria-posinset': -1,\n                itemType: 'branch'\n            };\n        },\n        childrenValues: [],\n        get index () {\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error(`@fluentui/react-tree [createHeadlessTree]:\nInternal error, trying to access treeitem props from invalid root element`);\n            }\n            return -1;\n        },\n        get position () {\n            if (process.env.NODE_ENV !== 'production') {\n                // eslint-disable-next-line no-console\n                console.error(`@fluentui/react-tree [createHeadlessTree]:\nInternal error, trying to access treeitem props from invalid root element`);\n            }\n            return -1;\n        },\n        level: 0\n    };\n}\n/**\n * Generator that returns all subtree of a given virtual tree item\n * @param key the key of the item to get the subtree from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeSubtreeGenerator(key, virtualTreeItems) {\n    const item = virtualTreeItems.get(key);\n    if (!item || item.childrenValues.length === 0) {\n        return;\n    }\n    for (const childValue of item.childrenValues){\n        yield virtualTreeItems.get(childValue);\n        yield* HeadlessTreeSubtreeGenerator(childValue, virtualTreeItems);\n    }\n}\n/**\n * Generator that returns all children of a given virtual tree item\n * @param key the key of the item to get the children from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeChildrenGenerator(key, virtualTreeItems) {\n    const item = virtualTreeItems.get(key);\n    if (!item || item.childrenValues.length === 0) {\n        return;\n    }\n    for (const childValue of item.childrenValues){\n        yield virtualTreeItems.get(childValue);\n    }\n}\n/**\n * Generator that returns all ancestors of a given virtual tree item\n * @param key the key of the item to get the children from\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeAncestorsGenerator(key, virtualTreeItems) {\n    let parent = virtualTreeItems.getParent(key);\n    while(parent !== virtualTreeItems.root){\n        yield parent;\n        parent = virtualTreeItems.getParent(parent.value);\n    }\n}\n/**\n * Generator that returns all visible items of a given virtual tree\n * @param openItems the open items of the tree\n */ // eslint-disable-next-line @typescript-eslint/naming-convention\nfunction* HeadlessTreeVisibleItemsGenerator(openItems, virtualTreeItems) {\n    let index = 0;\n    for (const item of HeadlessTreeSubtreeGenerator(virtualTreeItems.root.value, virtualTreeItems)){\n        if (isItemVisible(item, openItems, virtualTreeItems)) {\n            item.index = index++;\n            yield item;\n        }\n    }\n}\nfunction isItemVisible(item, openItems, virtualTreeItems) {\n    if (item.level === 1) {\n        return true;\n    }\n    while(item.parentValue && item.parentValue !== virtualTreeItems.root.value){\n        if (!openItems.has(item.parentValue)) {\n            return false;\n        }\n        const parent = virtualTreeItems.get(item.parentValue);\n        if (!parent) {\n            return false;\n        }\n        item = parent;\n    }\n    return true;\n}\n"],"names":["createHeadlessTree","headlessTreeRootId","initialProps","root","createHeadlessTreeRootItem","itemsPerValue","Map","value","headlessTree","size","getParent","key","_itemsPerValue_get","_itemsPerValue_get_parentValue","_itemsPerValue_get1","get","parentValue","has","add","props","propsWithoutParentValue","parentItem","process","env","NODE_ENV","console","error","itemType","_propsWithoutParentValue_itemType","item","getTreeItemProps","level","position","childrenValues","length","index","push","set","subtree","HeadlessTreeSubtreeGenerator","children","HeadlessTreeChildrenGenerator","ancestors","HeadlessTreeAncestorsGenerator","visibleItems","openItems","HeadlessTreeVisibleItemsGenerator","forEach","undefined","id","virtualTreeItems","childValue","parent","isItemVisible"],"mappings":"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"}