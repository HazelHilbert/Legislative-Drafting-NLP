{"version":3,"sources":["priorityQueue.js"],"sourcesContent":["/**\n * @param compare - comparison function for items\n * @returns Priority queue implemented with a min heap\n */ export function createPriorityQueue(compare) {\n    const arr = [];\n    let size = 0;\n    const left = (i)=>{\n        return 2 * i + 1;\n    };\n    const right = (i)=>{\n        return 2 * i + 2;\n    };\n    const parent = (i)=>{\n        return Math.floor((i - 1) / 2);\n    };\n    const swap = (a, b)=>{\n        const tmp = arr[a];\n        arr[a] = arr[b];\n        arr[b] = tmp;\n    };\n    const heapify = (i)=>{\n        let smallest = i;\n        const l = left(i);\n        const r = right(i);\n        if (l < size && compare(arr[l], arr[smallest]) < 0) {\n            smallest = l;\n        }\n        if (r < size && compare(arr[r], arr[smallest]) < 0) {\n            smallest = r;\n        }\n        if (smallest !== i) {\n            swap(smallest, i);\n            heapify(smallest);\n        }\n    };\n    const dequeue = ()=>{\n        if (size === 0) {\n            throw new Error('Priority queue empty');\n        }\n        const res = arr[0];\n        arr[0] = arr[--size];\n        heapify(0);\n        return res;\n    };\n    const peek = ()=>{\n        if (size === 0) {\n            return null;\n        }\n        return arr[0];\n    };\n    const enqueue = (item)=>{\n        arr[size++] = item;\n        let i = size - 1;\n        let p = parent(i);\n        while(i > 0 && compare(arr[p], arr[i]) > 0){\n            swap(p, i);\n            i = p;\n            p = parent(i);\n        }\n    };\n    const contains = (item)=>{\n        const index = arr.indexOf(item);\n        return index >= 0 && index < size;\n    };\n    const remove = (item)=>{\n        const i = arr.indexOf(item);\n        if (i === -1 || i >= size) {\n            return;\n        }\n        arr[i] = arr[--size];\n        heapify(i);\n    };\n    const clear = ()=>{\n        size = 0;\n    };\n    const all = ()=>{\n        return arr.slice(0, size);\n    };\n    return {\n        all,\n        clear,\n        contains,\n        dequeue,\n        enqueue,\n        peek,\n        remove,\n        size: ()=>size\n    };\n}\n"],"names":["createPriorityQueue","compare","arr","size","left","i","right","parent","Math","floor","swap","a","b","tmp","heapify","smallest","l","r","dequeue","Error","res","peek","enqueue","item","p","contains","index","indexOf","remove","clear","all","slice"],"mappings":"AAAA;;;CAGC;;;;+BAAmBA;;;eAAAA;;;AAAT,SAASA,oBAAoBC,OAAO;IAC3C,MAAMC,MAAM,EAAE;IACd,IAAIC,OAAO;IACX,MAAMC,OAAO,CAACC;QACV,OAAO,IAAIA,IAAI;IACnB;IACA,MAAMC,QAAQ,CAACD;QACX,OAAO,IAAIA,IAAI;IACnB;IACA,MAAME,SAAS,CAACF;QACZ,OAAOG,KAAKC,KAAK,CAAC,AAACJ,CAAAA,IAAI,CAAA,IAAK;IAChC;IACA,MAAMK,OAAO,CAACC,GAAGC;QACb,MAAMC,MAAMX,GAAG,CAACS,EAAE;QAClBT,GAAG,CAACS,EAAE,GAAGT,GAAG,CAACU,EAAE;QACfV,GAAG,CAACU,EAAE,GAAGC;IACb;IACA,MAAMC,UAAU,CAACT;QACb,IAAIU,WAAWV;QACf,MAAMW,IAAIZ,KAAKC;QACf,MAAMY,IAAIX,MAAMD;QAChB,IAAIW,IAAIb,QAAQF,QAAQC,GAAG,CAACc,EAAE,EAAEd,GAAG,CAACa,SAAS,IAAI,GAAG;YAChDA,WAAWC;QACf;QACA,IAAIC,IAAId,QAAQF,QAAQC,GAAG,CAACe,EAAE,EAAEf,GAAG,CAACa,SAAS,IAAI,GAAG;YAChDA,WAAWE;QACf;QACA,IAAIF,aAAaV,GAAG;YAChBK,KAAKK,UAAUV;YACfS,QAAQC;QACZ;IACJ;IACA,MAAMG,UAAU;QACZ,IAAIf,SAAS,GAAG;YACZ,MAAM,IAAIgB,MAAM;QACpB;QACA,MAAMC,MAAMlB,GAAG,CAAC,EAAE;QAClBA,GAAG,CAAC,EAAE,GAAGA,GAAG,CAAC,EAAEC,KAAK;QACpBW,QAAQ;QACR,OAAOM;IACX;IACA,MAAMC,OAAO;QACT,IAAIlB,SAAS,GAAG;YACZ,OAAO;QACX;QACA,OAAOD,GAAG,CAAC,EAAE;IACjB;IACA,MAAMoB,UAAU,CAACC;QACbrB,GAAG,CAACC,OAAO,GAAGoB;QACd,IAAIlB,IAAIF,OAAO;QACf,IAAIqB,IAAIjB,OAAOF;QACf,MAAMA,IAAI,KAAKJ,QAAQC,GAAG,CAACsB,EAAE,EAAEtB,GAAG,CAACG,EAAE,IAAI,EAAE;YACvCK,KAAKc,GAAGnB;YACRA,IAAImB;YACJA,IAAIjB,OAAOF;QACf;IACJ;IACA,MAAMoB,WAAW,CAACF;QACd,MAAMG,QAAQxB,IAAIyB,OAAO,CAACJ;QAC1B,OAAOG,SAAS,KAAKA,QAAQvB;IACjC;IACA,MAAMyB,SAAS,CAACL;QACZ,MAAMlB,IAAIH,IAAIyB,OAAO,CAACJ;QACtB,IAAIlB,MAAM,CAAC,KAAKA,KAAKF,MAAM;YACvB;QACJ;QACAD,GAAG,CAACG,EAAE,GAAGH,GAAG,CAAC,EAAEC,KAAK;QACpBW,QAAQT;IACZ;IACA,MAAMwB,QAAQ;QACV1B,OAAO;IACX;IACA,MAAM2B,MAAM;QACR,OAAO5B,IAAI6B,KAAK,CAAC,GAAG5B;IACxB;IACA,OAAO;QACH2B;QACAD;QACAJ;QACAP;QACAI;QACAD;QACAO;QACAzB,MAAM,IAAIA;IACd;AACJ"}