{"version":3,"sources":["useMeasureList.js"],"sourcesContent":["import * as React from 'react';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\n/**\n * Provides a way of automating size in the virtualizer\n * Returns\n * `width` - element width ref (0 by default),\n * `height` - element height ref (0 by default),\n * `measureElementRef` - a ref function to be passed as `ref` to the element you want to measure\n */ export function useMeasureList(currentIndex, refLength, totalLength, defaultItemSize) {\n    const widthArray = React.useRef(new Array(totalLength).fill(defaultItemSize));\n    const heightArray = React.useRef(new Array(totalLength).fill(defaultItemSize));\n    const refArray = React.useRef([]);\n    const { targetDocument } = useFluent();\n    // the handler for resize observer\n    const handleIndexUpdate = React.useCallback((index)=>{\n        var _refArray_current_index;\n        const boundClientRect = (_refArray_current_index = refArray.current[index]) === null || _refArray_current_index === void 0 ? void 0 : _refArray_current_index.getBoundingClientRect();\n        const containerWidth = boundClientRect === null || boundClientRect === void 0 ? void 0 : boundClientRect.width;\n        widthArray.current[currentIndex + index] = containerWidth || defaultItemSize;\n        const containerHeight = boundClientRect === null || boundClientRect === void 0 ? void 0 : boundClientRect.height;\n        heightArray.current[currentIndex + index] = containerHeight || defaultItemSize;\n    }, [\n        currentIndex,\n        defaultItemSize\n    ]);\n    const handleElementResizeCallback = (entries)=>{\n        for (const entry of entries){\n            const target = entry.target;\n            // Call the elements own resize handler (indexed)\n            target.handleResize();\n        }\n    };\n    React.useEffect(()=>{\n        widthArray.current = new Array(totalLength).fill(defaultItemSize);\n        heightArray.current = new Array(totalLength).fill(defaultItemSize);\n    }, [\n        defaultItemSize,\n        totalLength\n    ]);\n    // Keep the reference of ResizeObserver as a ref, as it should live through renders\n    const resizeObserver = React.useRef(createResizeObserverFromDocument(targetDocument, handleElementResizeCallback));\n    /* createIndexedRef provides a dynamic function to create an undefined number of refs at render time\n   * these refs then provide an indexed callback via attaching 'handleResize' to the element itself\n   * this function is then called on resize by handleElementResize and relies on indexing\n   * to track continuous sizes throughout renders while releasing all virtualized element refs each render cycle.\n   */ const createIndexedRef = React.useCallback((index)=>{\n        const measureElementRef = (el)=>{\n            if (!targetDocument || !resizeObserver.current) {\n                return;\n            }\n            if (el) {\n                el.handleResize = ()=>{\n                    handleIndexUpdate(index);\n                };\n            }\n            // cleanup previous container\n            if (refArray.current[index] !== undefined && refArray.current[index] !== null) {\n                resizeObserver.current.unobserve(refArray.current[index]);\n            }\n            refArray.current[index] = undefined;\n            if (el) {\n                refArray.current[index] = el;\n                resizeObserver.current.observe(el);\n                handleIndexUpdate(index);\n            }\n        };\n        return measureElementRef;\n    }, [\n        handleIndexUpdate,\n        resizeObserver,\n        targetDocument\n    ]);\n    React.useEffect(()=>{\n        const _resizeObserver = resizeObserver;\n        return ()=>{\n            var _resizeObserver_current;\n            return (_resizeObserver_current = _resizeObserver.current) === null || _resizeObserver_current === void 0 ? void 0 : _resizeObserver_current.disconnect();\n        };\n    }, [\n        resizeObserver\n    ]);\n    return {\n        widthArray,\n        heightArray,\n        createIndexedRef,\n        refArray\n    };\n}\n/**\n * FIXME - TS 3.8/3.9 don't have ResizeObserver types by default, move this to a shared utility once we bump the minbar\n * A utility method that creates a ResizeObserver from a target document\n * @param targetDocument - document to use to create the ResizeObserver\n * @param callback  - https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver/ResizeObserver#callback\n * @returns a ResizeObserver instance or null if the global does not exist on the document\n */ export function createResizeObserverFromDocument(targetDocument, callback) {\n    var _targetDocument_defaultView;\n    if (!(targetDocument === null || targetDocument === void 0 ? void 0 : (_targetDocument_defaultView = targetDocument.defaultView) === null || _targetDocument_defaultView === void 0 ? void 0 : _targetDocument_defaultView.ResizeObserver)) {\n        return null;\n    }\n    return new targetDocument.defaultView.ResizeObserver(callback);\n}\n"],"names":["useMeasureList","createResizeObserverFromDocument","currentIndex","refLength","totalLength","defaultItemSize","widthArray","React","useRef","Array","fill","heightArray","refArray","targetDocument","useFluent","handleIndexUpdate","useCallback","index","_refArray_current_index","boundClientRect","current","getBoundingClientRect","containerWidth","width","containerHeight","height","handleElementResizeCallback","entries","entry","target","handleResize","useEffect","resizeObserver","createIndexedRef","measureElementRef","el","undefined","unobserve","observe","_resizeObserver","_resizeObserver_current","disconnect","callback","_targetDocument_defaultView","defaultView","ResizeObserver"],"mappings":";;;;;;;;;;;IAQoBA,cAAc;eAAdA;;IAsFAC,gCAAgC;eAAhCA;;;;iEA9FG;qCACyB;AAOrC,SAASD,eAAeE,YAAY,EAAEC,SAAS,EAAEC,WAAW,EAAEC,eAAe;IACpF,MAAMC,aAAaC,OAAMC,MAAM,CAAC,IAAIC,MAAML,aAAaM,IAAI,CAACL;IAC5D,MAAMM,cAAcJ,OAAMC,MAAM,CAAC,IAAIC,MAAML,aAAaM,IAAI,CAACL;IAC7D,MAAMO,WAAWL,OAAMC,MAAM,CAAC,EAAE;IAChC,MAAM,EAAEK,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,kCAAkC;IAClC,MAAMC,oBAAoBR,OAAMS,WAAW,CAAC,CAACC;QACzC,IAAIC;QACJ,MAAMC,kBAAkB,AAACD,CAAAA,0BAA0BN,SAASQ,OAAO,CAACH,MAAM,AAAD,MAAO,QAAQC,4BAA4B,KAAK,IAAI,KAAK,IAAIA,wBAAwBG,qBAAqB;QACnL,MAAMC,iBAAiBH,oBAAoB,QAAQA,oBAAoB,KAAK,IAAI,KAAK,IAAIA,gBAAgBI,KAAK;QAC9GjB,WAAWc,OAAO,CAAClB,eAAee,MAAM,GAAGK,kBAAkBjB;QAC7D,MAAMmB,kBAAkBL,oBAAoB,QAAQA,oBAAoB,KAAK,IAAI,KAAK,IAAIA,gBAAgBM,MAAM;QAChHd,YAAYS,OAAO,CAAClB,eAAee,MAAM,GAAGO,mBAAmBnB;IACnE,GAAG;QACCH;QACAG;KACH;IACD,MAAMqB,8BAA8B,CAACC;QACjC,KAAK,MAAMC,SAASD,QAAQ;YACxB,MAAME,SAASD,MAAMC,MAAM;YAC3B,iDAAiD;YACjDA,OAAOC,YAAY;QACvB;IACJ;IACAvB,OAAMwB,SAAS,CAAC;QACZzB,WAAWc,OAAO,GAAG,IAAIX,MAAML,aAAaM,IAAI,CAACL;QACjDM,YAAYS,OAAO,GAAG,IAAIX,MAAML,aAAaM,IAAI,CAACL;IACtD,GAAG;QACCA;QACAD;KACH;IACD,mFAAmF;IACnF,MAAM4B,iBAAiBzB,OAAMC,MAAM,CAACP,iCAAiCY,gBAAgBa;IACrF;;;;GAID,GAAG,MAAMO,mBAAmB1B,OAAMS,WAAW,CAAC,CAACC;QAC1C,MAAMiB,oBAAoB,CAACC;YACvB,IAAI,CAACtB,kBAAkB,CAACmB,eAAeZ,OAAO,EAAE;gBAC5C;YACJ;YACA,IAAIe,IAAI;gBACJA,GAAGL,YAAY,GAAG;oBACdf,kBAAkBE;gBACtB;YACJ;YACA,6BAA6B;YAC7B,IAAIL,SAASQ,OAAO,CAACH,MAAM,KAAKmB,aAAaxB,SAASQ,OAAO,CAACH,MAAM,KAAK,MAAM;gBAC3Ee,eAAeZ,OAAO,CAACiB,SAAS,CAACzB,SAASQ,OAAO,CAACH,MAAM;YAC5D;YACAL,SAASQ,OAAO,CAACH,MAAM,GAAGmB;YAC1B,IAAID,IAAI;gBACJvB,SAASQ,OAAO,CAACH,MAAM,GAAGkB;gBAC1BH,eAAeZ,OAAO,CAACkB,OAAO,CAACH;gBAC/BpB,kBAAkBE;YACtB;QACJ;QACA,OAAOiB;IACX,GAAG;QACCnB;QACAiB;QACAnB;KACH;IACDN,OAAMwB,SAAS,CAAC;QACZ,MAAMQ,kBAAkBP;QACxB,OAAO;YACH,IAAIQ;YACJ,OAAO,AAACA,CAAAA,0BAA0BD,gBAAgBnB,OAAO,AAAD,MAAO,QAAQoB,4BAA4B,KAAK,IAAI,KAAK,IAAIA,wBAAwBC,UAAU;QAC3J;IACJ,GAAG;QACCT;KACH;IACD,OAAO;QACH1B;QACAK;QACAsB;QACArB;IACJ;AACJ;AAOW,SAASX,iCAAiCY,cAAc,EAAE6B,QAAQ;IACzE,IAAIC;IACJ,IAAI,CAAE9B,CAAAA,mBAAmB,QAAQA,mBAAmB,KAAK,IAAI,KAAK,IAAI,AAAC8B,CAAAA,8BAA8B9B,eAAe+B,WAAW,AAAD,MAAO,QAAQD,gCAAgC,KAAK,IAAI,KAAK,IAAIA,4BAA4BE,cAAc,AAAD,GAAI;QACxO,OAAO;IACX;IACA,OAAO,IAAIhC,eAAe+B,WAAW,CAACC,cAAc,CAACH;AACzD"}