{"version":3,"sources":["useVirtualizerScrollViewDynamic.tsx"],"sourcesContent":["import * as React from 'react';\nimport { slot, useMergedRefs } from '@fluentui/react-utilities';\nimport { useVirtualizer_unstable } from '../Virtualizer/useVirtualizer';\nimport type {\n  VirtualizerScrollViewDynamicProps,\n  VirtualizerScrollViewDynamicState,\n} from './VirtualizerScrollViewDynamic.types';\nimport { useDynamicVirtualizerMeasure } from '../../Hooks';\nimport { useVirtualizerContextState_unstable, scrollToItemDynamic } from '../../Utilities';\nimport type { VirtualizerDataRef } from '../Virtualizer/Virtualizer.types';\nimport { useImperativeHandle } from 'react';\nimport { useMeasureList } from '../../hooks/useMeasureList';\nimport type { IndexedResizeCallbackElement } from '../../hooks/useMeasureList';\n\nexport function useVirtualizerScrollViewDynamic_unstable(\n  props: VirtualizerScrollViewDynamicProps,\n): VirtualizerScrollViewDynamicState {\n  const contextState = useVirtualizerContextState_unstable(props.virtualizerContext);\n  const { imperativeRef, axis = 'vertical', reversed, imperativeVirtualizerRef } = props;\n\n  let sizeTrackingArray = React.useRef<number[]>(new Array(props.numItems).fill(props.itemSize));\n\n  const getChildSizeAuto = React.useCallback(\n    (index: number) => {\n      if (sizeTrackingArray.current.length <= index || sizeTrackingArray.current[index] <= 0) {\n        // Default size for initial state or untracked\n        return props.itemSize;\n      }\n      /* Required to be defined prior to our measure function\n       * we use a sizing array ref that we will update post-render\n       */\n      return sizeTrackingArray.current[index];\n    },\n    [sizeTrackingArray, props.itemSize],\n  );\n\n  const { virtualizerLength, bufferItems, bufferSize, scrollRef } = useDynamicVirtualizerMeasure({\n    defaultItemSize: props.itemSize,\n    direction: props.axis ?? 'vertical',\n    getItemSize: props.getItemSize ?? getChildSizeAuto,\n    currentIndex: contextState?.contextIndex ?? 0,\n    numItems: props.numItems,\n  });\n\n  // Store the virtualizer length as a ref for imperative ref access\n  const virtualizerLengthRef = React.useRef<number>(virtualizerLength);\n  if (virtualizerLengthRef.current !== virtualizerLength) {\n    virtualizerLengthRef.current = virtualizerLength;\n  }\n  const scrollViewRef = useMergedRefs(props.scrollViewRef, scrollRef) as React.RefObject<HTMLDivElement>;\n  const scrollCallbackRef = React.useRef<null | ((index: number) => void)>(null);\n\n  const _imperativeVirtualizerRef = useMergedRefs(React.useRef<VirtualizerDataRef>(null), imperativeVirtualizerRef);\n\n  useImperativeHandle(\n    imperativeRef,\n    () => {\n      return {\n        scrollTo(index: number, behavior = 'auto', callback: undefined | ((index: number) => void)) {\n          scrollCallbackRef.current = callback ?? null;\n          if (_imperativeVirtualizerRef.current) {\n            const progressiveSizes = _imperativeVirtualizerRef.current.progressiveSizes.current;\n            const totalSize =\n              progressiveSizes && progressiveSizes?.length > 0\n                ? progressiveSizes[Math.max(progressiveSizes.length - 1, 0)]\n                : 0;\n\n            _imperativeVirtualizerRef.current.setFlaggedIndex(index);\n            scrollToItemDynamic({\n              index,\n              itemSizes: _imperativeVirtualizerRef.current?.nodeSizes,\n              totalSize,\n              scrollViewRef,\n              axis,\n              reversed,\n              behavior,\n            });\n          }\n        },\n        currentIndex: _imperativeVirtualizerRef.current?.currentIndex,\n        virtualizerLength: virtualizerLengthRef,\n      };\n    },\n    [axis, scrollViewRef, reversed, _imperativeVirtualizerRef],\n  );\n\n  const handleRenderedIndex = (index: number) => {\n    if (scrollCallbackRef.current) {\n      scrollCallbackRef.current(index);\n    }\n  };\n\n  const virtualizerState = useVirtualizer_unstable({\n    ...props,\n    getItemSize: props.getItemSize ?? getChildSizeAuto,\n    virtualizerLength,\n    bufferItems,\n    bufferSize,\n    scrollViewRef,\n    virtualizerContext: contextState,\n    imperativeVirtualizerRef: _imperativeVirtualizerRef,\n    onRenderedFlaggedIndex: handleRenderedIndex,\n  });\n\n  const measureObject = useMeasureList(\n    virtualizerState.virtualizerStartIndex,\n    virtualizerLength,\n    props.numItems,\n    props.itemSize,\n  );\n\n  if (axis === 'horizontal') {\n    sizeTrackingArray = measureObject.widthArray;\n  } else {\n    sizeTrackingArray = measureObject.heightArray;\n  }\n\n  if (!props.getItemSize) {\n    // Auto-measuring is required\n    React.Children.map(virtualizerState.virtualizedChildren, (child, index) => {\n      if (React.isValidElement(child)) {\n        virtualizerState.virtualizedChildren[index] = (\n          <child.type\n            {...child.props}\n            key={child.key}\n            ref={(element: HTMLElement & IndexedResizeCallbackElement) => {\n              // If a ref exists in props, call it\n              if (typeof child.props.ref === 'function') {\n                child.props.ref(element);\n              } else if (child.props.ref) {\n                child.props.ref.current = element;\n              }\n\n              if (child.hasOwnProperty('ref')) {\n                // We must access this from the child directly, not props (forward ref).\n                // eslint-disable-next-line  @typescript-eslint/no-explicit-any\n                const localRef = (child as any)?.ref;\n\n                if (typeof localRef === 'function') {\n                  localRef(element);\n                } else if (localRef) {\n                  localRef.current = element;\n                }\n              }\n\n              // Call the auto-measure ref attachment.\n              measureObject.createIndexedRef(index)(element);\n            }}\n          />\n        );\n      }\n    });\n  }\n\n  return {\n    ...virtualizerState,\n    components: {\n      ...virtualizerState.components,\n      container: 'div',\n    },\n    container: slot.always(props.container, {\n      defaultProps: {\n        ref: scrollViewRef,\n      },\n      elementType: 'div',\n    }),\n  };\n}\n"],"names":["React","slot","useMergedRefs","useVirtualizer_unstable","useDynamicVirtualizerMeasure","useVirtualizerContextState_unstable","scrollToItemDynamic","useImperativeHandle","useMeasureList","useVirtualizerScrollViewDynamic_unstable","props","contextState","virtualizerContext","imperativeRef","axis","reversed","imperativeVirtualizerRef","sizeTrackingArray","useRef","Array","numItems","fill","itemSize","getChildSizeAuto","useCallback","index","current","length","virtualizerLength","bufferItems","bufferSize","scrollRef","defaultItemSize","direction","getItemSize","currentIndex","contextIndex","virtualizerLengthRef","scrollViewRef","scrollCallbackRef","_imperativeVirtualizerRef","scrollTo","behavior","callback","progressiveSizes","totalSize","Math","max","setFlaggedIndex","itemSizes","nodeSizes","handleRenderedIndex","virtualizerState","onRenderedFlaggedIndex","measureObject","virtualizerStartIndex","widthArray","heightArray","Children","map","virtualizedChildren","child","isValidElement","type","key","ref","element","hasOwnProperty","localRef","createIndexedRef","components","container","always","defaultProps","elementType"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,IAAI,EAAEC,aAAa,QAAQ,4BAA4B;AAChE,SAASC,uBAAuB,QAAQ,gCAAgC;AAKxE,SAASC,4BAA4B,QAAQ,cAAc;AAC3D,SAASC,mCAAmC,EAAEC,mBAAmB,QAAQ,kBAAkB;AAE3F,SAASC,mBAAmB,QAAQ,QAAQ;AAC5C,SAASC,cAAc,QAAQ,6BAA6B;AAG5D,OAAO,SAASC,yCACdC,KAAwC;IAExC,MAAMC,eAAeN,oCAAoCK,MAAME,kBAAkB;IACjF,MAAM,EAAEC,aAAa,EAAEC,OAAO,UAAU,EAAEC,QAAQ,EAAEC,wBAAwB,EAAE,GAAGN;IAEjF,IAAIO,oBAAoBjB,MAAMkB,MAAM,CAAW,IAAIC,MAAMT,MAAMU,QAAQ,EAAEC,IAAI,CAACX,MAAMY,QAAQ;IAE5F,MAAMC,mBAAmBvB,MAAMwB,WAAW,CACxC,CAACC;QACC,IAAIR,kBAAkBS,OAAO,CAACC,MAAM,IAAIF,SAASR,kBAAkBS,OAAO,CAACD,MAAM,IAAI,GAAG;YACtF,8CAA8C;YAC9C,OAAOf,MAAMY,QAAQ;QACvB;QACA;;OAEC,GACD,OAAOL,kBAAkBS,OAAO,CAACD,MAAM;IACzC,GACA;QAACR;QAAmBP,MAAMY,QAAQ;KAAC;QAKxBZ,aACEA,oBACCC;IAJhB,MAAM,EAAEiB,iBAAiB,EAAEC,WAAW,EAAEC,UAAU,EAAEC,SAAS,EAAE,GAAG3B,6BAA6B;QAC7F4B,iBAAiBtB,MAAMY,QAAQ;QAC/BW,WAAWvB,CAAAA,cAAAA,MAAMI,IAAI,cAAVJ,yBAAAA,cAAc;QACzBwB,aAAaxB,CAAAA,qBAAAA,MAAMwB,WAAW,cAAjBxB,gCAAAA,qBAAqBa;QAClCY,cAAcxB,CAAAA,6BAAAA,yBAAAA,mCAAAA,aAAcyB,YAAY,cAA1BzB,wCAAAA,6BAA8B;QAC5CS,UAAUV,MAAMU,QAAQ;IAC1B;IAEA,kEAAkE;IAClE,MAAMiB,uBAAuBrC,MAAMkB,MAAM,CAASU;IAClD,IAAIS,qBAAqBX,OAAO,KAAKE,mBAAmB;QACtDS,qBAAqBX,OAAO,GAAGE;IACjC;IACA,MAAMU,gBAAgBpC,cAAcQ,MAAM4B,aAAa,EAAEP;IACzD,MAAMQ,oBAAoBvC,MAAMkB,MAAM,CAAmC;IAEzE,MAAMsB,4BAA4BtC,cAAcF,MAAMkB,MAAM,CAAqB,OAAOF;IAExFT,oBACEM,eACA;YAuBkB2B;QAtBhB,OAAO;YACLC,UAAShB,KAAa,EAAEiB,WAAW,MAAM,EAAEC,QAA+C;gBACxFJ,kBAAkBb,OAAO,GAAGiB,qBAAAA,sBAAAA,WAAY;gBACxC,IAAIH,0BAA0Bd,OAAO,EAAE;wBAUxBc;oBATb,MAAMI,mBAAmBJ,0BAA0Bd,OAAO,CAACkB,gBAAgB,CAAClB,OAAO;oBACnF,MAAMmB,YACJD,oBAAoBA,CAAAA,6BAAAA,uCAAAA,iBAAkBjB,MAAM,IAAG,IAC3CiB,gBAAgB,CAACE,KAAKC,GAAG,CAACH,iBAAiBjB,MAAM,GAAG,GAAG,GAAG,GAC1D;oBAENa,0BAA0Bd,OAAO,CAACsB,eAAe,CAACvB;oBAClDnB,oBAAoB;wBAClBmB;wBACAwB,SAAS,GAAET,oCAAAA,0BAA0Bd,OAAO,cAAjCc,wDAAAA,kCAAmCU,SAAS;wBACvDL;wBACAP;wBACAxB;wBACAC;wBACA2B;oBACF;gBACF;YACF;YACAP,YAAY,GAAEK,oCAAAA,0BAA0Bd,OAAO,cAAjCc,wDAAAA,kCAAmCL,YAAY;YAC7DP,mBAAmBS;QACrB;IACF,GACA;QAACvB;QAAMwB;QAAevB;QAAUyB;KAA0B;IAG5D,MAAMW,sBAAsB,CAAC1B;QAC3B,IAAIc,kBAAkBb,OAAO,EAAE;YAC7Ba,kBAAkBb,OAAO,CAACD;QAC5B;IACF;QAIef;IAFf,MAAM0C,mBAAmBjD,wBAAwB;QAC/C,GAAGO,KAAK;QACRwB,aAAaxB,CAAAA,sBAAAA,MAAMwB,WAAW,cAAjBxB,iCAAAA,sBAAqBa;QAClCK;QACAC;QACAC;QACAQ;QACA1B,oBAAoBD;QACpBK,0BAA0BwB;QAC1Ba,wBAAwBF;IAC1B;IAEA,MAAMG,gBAAgB9C,eACpB4C,iBAAiBG,qBAAqB,EACtC3B,mBACAlB,MAAMU,QAAQ,EACdV,MAAMY,QAAQ;IAGhB,IAAIR,SAAS,cAAc;QACzBG,oBAAoBqC,cAAcE,UAAU;IAC9C,OAAO;QACLvC,oBAAoBqC,cAAcG,WAAW;IAC/C;IAEA,IAAI,CAAC/C,MAAMwB,WAAW,EAAE;QACtB,6BAA6B;QAC7BlC,MAAM0D,QAAQ,CAACC,GAAG,CAACP,iBAAiBQ,mBAAmB,EAAE,CAACC,OAAOpC;YAC/D,kBAAIzB,MAAM8D,cAAc,CAACD,QAAQ;gBAC/BT,iBAAiBQ,mBAAmB,CAACnC,MAAM,iBACzC,oBAACoC,MAAME,IAAI;oBACR,GAAGF,MAAMnD,KAAK;oBACfsD,KAAKH,MAAMG,GAAG;oBACdC,KAAK,CAACC;wBACJ,oCAAoC;wBACpC,IAAI,OAAOL,MAAMnD,KAAK,CAACuD,GAAG,KAAK,YAAY;4BACzCJ,MAAMnD,KAAK,CAACuD,GAAG,CAACC;wBAClB,OAAO,IAAIL,MAAMnD,KAAK,CAACuD,GAAG,EAAE;4BAC1BJ,MAAMnD,KAAK,CAACuD,GAAG,CAACvC,OAAO,GAAGwC;wBAC5B;wBAEA,IAAIL,MAAMM,cAAc,CAAC,QAAQ;4BAC/B,wEAAwE;4BACxE,+DAA+D;4BAC/D,MAAMC,WAAYP,kBAAAA,4BAAD,AAACA,MAAeI,GAAG;4BAEpC,IAAI,OAAOG,aAAa,YAAY;gCAClCA,SAASF;4BACX,OAAO,IAAIE,UAAU;gCACnBA,SAAS1C,OAAO,GAAGwC;4BACrB;wBACF;wBAEA,wCAAwC;wBACxCZ,cAAce,gBAAgB,CAAC5C,OAAOyC;oBACxC;;YAGN;QACF;IACF;IAEA,OAAO;QACL,GAAGd,gBAAgB;QACnBkB,YAAY;YACV,GAAGlB,iBAAiBkB,UAAU;YAC9BC,WAAW;QACb;QACAA,WAAWtE,KAAKuE,MAAM,CAAC9D,MAAM6D,SAAS,EAAE;YACtCE,cAAc;gBACZR,KAAK3B;YACP;YACAoC,aAAa;QACf;IACF;AACF"}