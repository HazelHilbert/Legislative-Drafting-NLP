{"version":3,"sources":["useTableSelection.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback, useSelection } from '@fluentui/react-utilities';\nconst noop = ()=>undefined;\nexport const defaultTableSelectionState = {\n    allRowsSelected: false,\n    clearRows: noop,\n    deselectRow: noop,\n    isRowSelected: ()=>false,\n    selectRow: noop,\n    selectedRows: new Set(),\n    someRowsSelected: false,\n    toggleAllRows: noop,\n    toggleRow: noop,\n    selectionMode: 'multiselect'\n};\nexport function useTableSelection(options) {\n    // False positive, these plugin hooks are intended to be run on every render\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return (tableState)=>useTableSelectionState(tableState, options);\n}\nexport function useTableSelectionState(tableState, options) {\n    const { items, getRowId } = tableState;\n    const { selectionMode: selectionMode, defaultSelectedItems, selectedItems, onSelectionChange } = options;\n    const [selected, selectionMethods] = useSelection({\n        selectionMode,\n        defaultSelectedItems,\n        selectedItems,\n        onSelectionChange\n    });\n    // Selection state can contain obselete items (i.e. rows that are removed)\n    const selectableRowIds = React.useMemo(()=>{\n        const rowIds = new Set();\n        for(let i = 0; i < items.length; i++){\n            var _getRowId;\n            rowIds.add((_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(items[i])) !== null && _getRowId !== void 0 ? _getRowId : i);\n        }\n        return rowIds;\n    }, [\n        items,\n        getRowId\n    ]);\n    const allRowsSelected = React.useMemo(()=>{\n        if (selectionMode === 'single') {\n            const selectedRow = Array.from(selected)[0];\n            return selectableRowIds.has(selectedRow);\n        }\n        // multiselect case\n        if (selected.size < selectableRowIds.size) {\n            return false;\n        }\n        let res = true;\n        selectableRowIds.forEach((selectableRowId)=>{\n            if (!selected.has(selectableRowId)) {\n                res = false;\n            }\n        });\n        return res;\n    }, [\n        selectableRowIds,\n        selected,\n        selectionMode\n    ]);\n    const someRowsSelected = React.useMemo(()=>{\n        if (selected.size <= 0) {\n            return false;\n        }\n        let res = false;\n        selectableRowIds.forEach((selectableRowId)=>{\n            if (selected.has(selectableRowId)) {\n                res = true;\n            }\n        });\n        return res;\n    }, [\n        selectableRowIds,\n        selected\n    ]);\n    const toggleAllRows = useEventCallback((e)=>{\n        selectionMethods.toggleAllItems(e, items.map((item, i)=>{\n            var _getRowId;\n            return (_getRowId = getRowId === null || getRowId === void 0 ? void 0 : getRowId(item)) !== null && _getRowId !== void 0 ? _getRowId : i;\n        }));\n    });\n    const toggleRow = useEventCallback((e, rowId)=>selectionMethods.toggleItem(e, rowId));\n    const deselectRow = useEventCallback((e, rowId)=>selectionMethods.deselectItem(e, rowId));\n    const selectRow = useEventCallback((e, rowId)=>selectionMethods.selectItem(e, rowId));\n    const isRowSelected = (rowId)=>selectionMethods.isSelected(rowId);\n    const clearRows = useEventCallback((e)=>selectionMethods.clearItems(e));\n    return {\n        ...tableState,\n        selection: {\n            selectionMode,\n            someRowsSelected,\n            allRowsSelected,\n            selectedRows: selected,\n            toggleRow,\n            toggleAllRows,\n            clearRows,\n            deselectRow,\n            selectRow,\n            isRowSelected\n        }\n    };\n}\n"],"names":["defaultTableSelectionState","useTableSelection","useTableSelectionState","noop","undefined","allRowsSelected","clearRows","deselectRow","isRowSelected","selectRow","selectedRows","Set","someRowsSelected","toggleAllRows","toggleRow","selectionMode","options","tableState","items","getRowId","defaultSelectedItems","selectedItems","onSelectionChange","selected","selectionMethods","useSelection","selectableRowIds","React","useMemo","rowIds","i","length","_getRowId","add","selectedRow","Array","from","has","size","res","forEach","selectableRowId","useEventCallback","e","toggleAllItems","map","item","rowId","toggleItem","deselectItem","selectItem","isSelected","clearItems","selection"],"mappings":"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"}