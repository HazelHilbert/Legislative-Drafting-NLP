{"version":3,"sources":["useTableSelectionCell.js"],"sourcesContent":["import * as React from 'react';\nimport { useId, slot } from '@fluentui/react-utilities';\nimport { Checkbox } from '@fluentui/react-checkbox';\nimport { Radio } from '@fluentui/react-radio';\nimport { useTableCell_unstable } from '../TableCell/useTableCell';\nimport { useTableContext } from '../../contexts/tableContext';\n/**\n * Create the state required to render TableSelectionCell.\n *\n * The returned state can be modified with hooks such as useTableSelectionCellStyles_unstable,\n * before being passed to renderTableSelectionCell_unstable.\n *\n * @param props - props from this instance of TableSelectionCell\n * @param ref - reference to root HTMLElement of TableSelectionCell\n */ export const useTableSelectionCell_unstable = (props, ref)=>{\n    const tableCellState = useTableCell_unstable(props, ref);\n    const { noNativeElements } = useTableContext();\n    const { type = 'checkbox', checked = false, subtle = false, hidden = false } = props;\n    return {\n        ...tableCellState,\n        components: {\n            ...tableCellState.components,\n            checkboxIndicator: Checkbox,\n            radioIndicator: Radio\n        },\n        checkboxIndicator: slot.optional(props.checkboxIndicator, {\n            renderByDefault: type === 'checkbox',\n            defaultProps: {\n                checked: props.checked\n            },\n            elementType: Checkbox\n        }),\n        radioIndicator: slot.optional(props.radioIndicator, {\n            renderByDefault: type === 'radio',\n            defaultProps: {\n                checked: !!checked,\n                input: {\n                    name: useId('table-selection-radio')\n                }\n            },\n            elementType: Radio\n        }),\n        type,\n        checked,\n        noNativeElements,\n        subtle,\n        hidden\n    };\n};\n"],"names":["useTableSelectionCell_unstable","props","ref","tableCellState","useTableCell_unstable","noNativeElements","useTableContext","type","checked","subtle","hidden","components","checkboxIndicator","Checkbox","radioIndicator","Radio","slot","optional","renderByDefault","defaultProps","elementType","input","name","useId"],"mappings":";;;;+BAciBA;;;eAAAA;;;;iEAdM;gCACK;+BACH;4BACH;8BACgB;8BACN;AASrB,MAAMA,iCAAiC,CAACC,OAAOC;IACtD,MAAMC,iBAAiBC,IAAAA,mCAAqB,EAACH,OAAOC;IACpD,MAAM,EAAEG,gBAAgB,EAAE,GAAGC,IAAAA,6BAAe;IAC5C,MAAM,EAAEC,OAAO,UAAU,EAAEC,UAAU,KAAK,EAAEC,SAAS,KAAK,EAAEC,SAAS,KAAK,EAAE,GAAGT;IAC/E,OAAO;QACH,GAAGE,cAAc;QACjBQ,YAAY;YACR,GAAGR,eAAeQ,UAAU;YAC5BC,mBAAmBC,uBAAQ;YAC3BC,gBAAgBC,iBAAK;QACzB;QACAH,mBAAmBI,oBAAI,CAACC,QAAQ,CAAChB,MAAMW,iBAAiB,EAAE;YACtDM,iBAAiBX,SAAS;YAC1BY,cAAc;gBACVX,SAASP,MAAMO,OAAO;YAC1B;YACAY,aAAaP,uBAAQ;QACzB;QACAC,gBAAgBE,oBAAI,CAACC,QAAQ,CAAChB,MAAMa,cAAc,EAAE;YAChDI,iBAAiBX,SAAS;YAC1BY,cAAc;gBACVX,SAAS,CAAC,CAACA;gBACXa,OAAO;oBACHC,MAAMC,IAAAA,qBAAK,EAAC;gBAChB;YACJ;YACAH,aAAaL,iBAAK;QACtB;QACAR;QACAC;QACAH;QACAI;QACAC;IACJ;AACJ"}