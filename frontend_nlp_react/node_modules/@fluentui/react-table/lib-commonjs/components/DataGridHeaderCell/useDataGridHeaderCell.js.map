{"version":3,"sources":["useDataGridHeaderCell.js"],"sourcesContent":["import * as React from 'react';\nimport { useEventCallback } from '@fluentui/react-utilities';\nimport { useTableHeaderCell_unstable } from '../TableHeaderCell/useTableHeaderCell';\nimport { useDataGridContext_unstable } from '../../contexts/dataGridContext';\nimport { useColumnIdContext } from '../../contexts/columnIdContext';\nimport { useTableContext } from '../../contexts/tableContext';\nimport { isColumnSortable } from '../../utils/isColumnSortable';\n/**\n * Create the state required to render DataGridHeaderCell.\n *\n * The returned state can be modified with hooks such as useDataGridHeaderCellStyles_unstable,\n * before being passed to renderDataGridHeaderCell_unstable.\n *\n * @param props - props from this instance of DataGridHeaderCell\n * @param ref - reference to root HTMLElement of DataGridHeaderCell\n */ export const useDataGridHeaderCell_unstable = (props, ref)=>{\n    const columnId = useColumnIdContext();\n    const { sortable: gridSortable } = useTableContext();\n    const toggleColumnSort = useDataGridContext_unstable((ctx)=>ctx.sort.toggleColumnSort);\n    const sortable = useDataGridContext_unstable((ctx)=>{\n        const columnSortable = !!ctx.columns.find((c)=>c.columnId === columnId && isColumnSortable(c));\n        if (!gridSortable) {\n            // if the grid is not sortable - disable sorting on all columns\n            return false;\n        }\n        return columnSortable;\n    });\n    const sortDirection = useDataGridContext_unstable((ctx)=>sortable ? ctx.sort.getSortDirection(columnId) : undefined);\n    const resizableColumns = useDataGridContext_unstable((ctx)=>ctx.resizableColumns);\n    const getTableHeaderCellProps = useDataGridContext_unstable((ctx)=>{\n        return ctx.columnSizing_unstable.getTableHeaderCellProps;\n    });\n    // eslint-disable-next-line deprecation/deprecation -- prefer HTMLTableCellElement\n    const onClick = useEventCallback((e)=>{\n        var _props_onClick;\n        if (sortable) {\n            toggleColumnSort(e, columnId);\n        }\n        (_props_onClick = props.onClick) === null || _props_onClick === void 0 ? void 0 : _props_onClick.call(props, e);\n    });\n    return useTableHeaderCell_unstable({\n        sortable,\n        sortDirection,\n        as: 'div',\n        tabIndex: sortable ? undefined : 0,\n        ...resizableColumns ? getTableHeaderCellProps(columnId) : {},\n        ...props,\n        onClick\n    }, ref);\n};\n"],"names":["useDataGridHeaderCell_unstable","props","ref","columnId","useColumnIdContext","sortable","gridSortable","useTableContext","toggleColumnSort","useDataGridContext_unstable","ctx","sort","columnSortable","columns","find","c","isColumnSortable","sortDirection","getSortDirection","undefined","resizableColumns","getTableHeaderCellProps","columnSizing_unstable","onClick","useEventCallback","e","_props_onClick","call","useTableHeaderCell_unstable","as","tabIndex"],"mappings":";;;;+BAeiBA;;;eAAAA;;;;iEAfM;gCACU;oCACW;iCACA;iCACT;8BACH;kCACC;AAStB,MAAMA,iCAAiC,CAACC,OAAOC;IACtD,MAAMC,WAAWC,IAAAA,mCAAkB;IACnC,MAAM,EAAEC,UAAUC,YAAY,EAAE,GAAGC,IAAAA,6BAAe;IAClD,MAAMC,mBAAmBC,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIC,IAAI,CAACH,gBAAgB;IACrF,MAAMH,WAAWI,IAAAA,4CAA2B,EAAC,CAACC;QAC1C,MAAME,iBAAiB,CAAC,CAACF,IAAIG,OAAO,CAACC,IAAI,CAAC,CAACC,IAAIA,EAAEZ,QAAQ,KAAKA,YAAYa,IAAAA,kCAAgB,EAACD;QAC3F,IAAI,CAACT,cAAc;YACf,+DAA+D;YAC/D,OAAO;QACX;QACA,OAAOM;IACX;IACA,MAAMK,gBAAgBR,IAAAA,4CAA2B,EAAC,CAACC,MAAML,WAAWK,IAAIC,IAAI,CAACO,gBAAgB,CAACf,YAAYgB;IAC1G,MAAMC,mBAAmBX,IAAAA,4CAA2B,EAAC,CAACC,MAAMA,IAAIU,gBAAgB;IAChF,MAAMC,0BAA0BZ,IAAAA,4CAA2B,EAAC,CAACC;QACzD,OAAOA,IAAIY,qBAAqB,CAACD,uBAAuB;IAC5D;IACA,kFAAkF;IAClF,MAAME,UAAUC,IAAAA,gCAAgB,EAAC,CAACC;QAC9B,IAAIC;QACJ,IAAIrB,UAAU;YACVG,iBAAiBiB,GAAGtB;QACxB;QACCuB,CAAAA,iBAAiBzB,MAAMsB,OAAO,AAAD,MAAO,QAAQG,mBAAmB,KAAK,IAAI,KAAK,IAAIA,eAAeC,IAAI,CAAC1B,OAAOwB;IACjH;IACA,OAAOG,IAAAA,+CAA2B,EAAC;QAC/BvB;QACAY;QACAY,IAAI;QACJC,UAAUzB,WAAWc,YAAY;QACjC,GAAGC,mBAAmBC,wBAAwBlB,YAAY,CAAC,CAAC;QAC5D,GAAGF,KAAK;QACRsB;IACJ,GAAGrB;AACP"}