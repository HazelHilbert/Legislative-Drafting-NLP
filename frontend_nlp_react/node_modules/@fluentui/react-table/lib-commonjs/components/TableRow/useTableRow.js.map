{"version":3,"sources":["useTableRow.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useFocusVisible, useFocusWithin } from '@fluentui/react-tabster';\nimport { useTableContext } from '../../contexts/tableContext';\nimport { useIsInTableHeader } from '../../contexts/tableHeaderContext';\n/**\n * Create the state required to render TableRow.\n *\n * The returned state can be modified with hooks such as useTableRowStyles_unstable,\n * before being passed to renderTableRow_unstable.\n *\n * @param props - props from this instance of TableRow\n * @param ref - reference to root HTMLElement of TableRow\n */ export const useTableRow_unstable = (props, ref)=>{\n    const { noNativeElements, size } = useTableContext();\n    var _props_as;\n    const rootComponent = ((_props_as = props.as) !== null && _props_as !== void 0 ? _props_as : noNativeElements) ? 'div' : 'tr';\n    const focusVisibleRef = useFocusVisible();\n    const focusWithinRef = useFocusWithin();\n    const isHeaderRow = useIsInTableHeader();\n    var _props_appearance;\n    return {\n        components: {\n            root: rootComponent\n        },\n        root: slot.always(getIntrinsicElementProps(rootComponent, {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: useMergedRefs(ref, focusVisibleRef, focusWithinRef),\n            role: rootComponent === 'div' ? 'row' : undefined,\n            ...props\n        }), {\n            elementType: rootComponent\n        }),\n        size,\n        noNativeElements,\n        appearance: (_props_appearance = props.appearance) !== null && _props_appearance !== void 0 ? _props_appearance : 'none',\n        isHeaderRow\n    };\n};\n"],"names":["useTableRow_unstable","props","ref","noNativeElements","size","useTableContext","_props_as","rootComponent","as","focusVisibleRef","useFocusVisible","focusWithinRef","useFocusWithin","isHeaderRow","useIsInTableHeader","_props_appearance","components","root","slot","always","getIntrinsicElementProps","useMergedRefs","role","undefined","elementType","appearance"],"mappings":";;;;+BAaiBA;;;eAAAA;;;;iEAbM;gCACuC;8BACd;8BAChB;oCACG;AASxB,MAAMA,uBAAuB,CAACC,OAAOC;IAC5C,MAAM,EAAEC,gBAAgB,EAAEC,IAAI,EAAE,GAAGC,IAAAA,6BAAe;IAClD,IAAIC;IACJ,MAAMC,gBAAgB,AAAC,CAAA,AAACD,CAAAA,YAAYL,MAAMO,EAAE,AAAD,MAAO,QAAQF,cAAc,KAAK,IAAIA,YAAYH,gBAAe,IAAK,QAAQ;IACzH,MAAMM,kBAAkBC,IAAAA,6BAAe;IACvC,MAAMC,iBAAiBC,IAAAA,4BAAc;IACrC,MAAMC,cAAcC,IAAAA,sCAAkB;IACtC,IAAIC;IACJ,OAAO;QACHC,YAAY;YACRC,MAAMV;QACV;QACAU,MAAMC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAACb,eAAe;YACtD,SAAS;YACT,4EAA4E;YAC5E,4FAA4F;YAC5FL,KAAKmB,IAAAA,6BAAa,EAACnB,KAAKO,iBAAiBE;YACzCW,MAAMf,kBAAkB,QAAQ,QAAQgB;YACxC,GAAGtB,KAAK;QACZ,IAAI;YACAuB,aAAajB;QACjB;QACAH;QACAD;QACAsB,YAAY,AAACV,CAAAA,oBAAoBd,MAAMwB,UAAU,AAAD,MAAO,QAAQV,sBAAsB,KAAK,IAAIA,oBAAoB;QAClHF;IACJ;AACJ"}