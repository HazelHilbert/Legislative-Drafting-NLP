{"version":3,"sources":["useTableCellActions.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot } from '@fluentui/react-utilities';\n/**\n * Create the state required to render TableCellActions.\n *\n * The returned state can be modified with hooks such as useTableCellActionsStyles_unstable,\n * before being passed to renderTableCellActions_unstable.\n *\n * @param props - props from this instance of TableCellActions\n * @param ref - reference to root HTMLElement of TableCellActions\n */ export const useTableCellActions_unstable = (props, ref)=>{\n    var _props_visible;\n    return {\n        components: {\n            root: 'div'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            // FIXME:\n            // `ref` is wrongly assigned to be `HTMLElement` instead of `HTMLDivElement`\n            // but since it would be a breaking change to fix it, we are casting ref to it's proper type\n            ref: ref,\n            ...props\n        }), {\n            elementType: 'div'\n        }),\n        visible: (_props_visible = props.visible) !== null && _props_visible !== void 0 ? _props_visible : false\n    };\n};\n"],"names":["useTableCellActions_unstable","props","ref","_props_visible","components","root","slot","always","getIntrinsicElementProps","elementType","visible"],"mappings":";;;;+BAUiBA;;;eAAAA;;;;iEAVM;gCACwB;AASpC,MAAMA,+BAA+B,CAACC,OAAOC;IACpD,IAAIC;IACJ,OAAO;QACHC,YAAY;YACRC,MAAM;QACV;QACAA,MAAMC,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,OAAO;YAC9C,SAAS;YACT,4EAA4E;YAC5E,4FAA4F;YAC5FN,KAAKA;YACL,GAAGD,KAAK;QACZ,IAAI;YACAQ,aAAa;QACjB;QACAC,SAAS,AAACP,CAAAA,iBAAiBF,MAAMS,OAAO,AAAD,MAAO,QAAQP,mBAAmB,KAAK,IAAIA,iBAAiB;IACvG;AACJ"}