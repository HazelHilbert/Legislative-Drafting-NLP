{"version":3,"sources":["useSlider.js"],"sourcesContent":["import * as React from 'react';\nimport { useFieldControlProps_unstable } from '@fluentui/react-field';\nimport { getPartitionedNativeProps, useId, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useSliderState_unstable } from './useSliderState';\nimport { useFocusWithin } from '@fluentui/react-tabster';\nexport const useSlider_unstable = (props, ref)=>{\n    // Merge props from surrounding <Field>, if any\n    props = useFieldControlProps_unstable(props, {\n        supportsLabelFor: true\n    });\n    const nativeProps = getPartitionedNativeProps({\n        props,\n        primarySlotTagName: 'input',\n        excludedPropNames: [\n            'onChange',\n            'size'\n        ]\n    });\n    const { disabled, vertical, size = 'medium', // Slots\n    root, input, rail, thumb } = props;\n    const state = {\n        disabled,\n        size,\n        vertical,\n        components: {\n            input: 'input',\n            rail: 'div',\n            root: 'div',\n            thumb: 'div'\n        },\n        root: slot.always(root, {\n            defaultProps: nativeProps.root,\n            elementType: 'div'\n        }),\n        input: slot.always(input, {\n            defaultProps: {\n                id: useId('slider-', props.id),\n                ref,\n                ...nativeProps.primary,\n                type: 'range',\n                orient: vertical ? 'vertical' : undefined\n            },\n            elementType: 'input'\n        }),\n        rail: slot.always(rail, {\n            elementType: 'div'\n        }),\n        thumb: slot.always(thumb, {\n            elementType: 'div'\n        })\n    };\n    state.root.ref = useMergedRefs(state.root.ref, useFocusWithin());\n    useSliderState_unstable(state, props);\n    return state;\n};\n"],"names":["useSlider_unstable","props","ref","useFieldControlProps_unstable","supportsLabelFor","nativeProps","getPartitionedNativeProps","primarySlotTagName","excludedPropNames","disabled","vertical","size","root","input","rail","thumb","state","components","slot","always","defaultProps","elementType","id","useId","primary","type","orient","undefined","useMergedRefs","useFocusWithin","useSliderState_unstable"],"mappings":";;;;+BAKaA;;;eAAAA;;;;iEALU;4BACuB;gCACwB;gCAC9B;8BACT;AACxB,MAAMA,qBAAqB,CAACC,OAAOC;IACtC,+CAA+C;IAC/CD,QAAQE,IAAAA,yCAA6B,EAACF,OAAO;QACzCG,kBAAkB;IACtB;IACA,MAAMC,cAAcC,IAAAA,yCAAyB,EAAC;QAC1CL;QACAM,oBAAoB;QACpBC,mBAAmB;YACf;YACA;SACH;IACL;IACA,MAAM,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,OAAO,QAAQ,EAC3CC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAE,GAAGd;IAC7B,MAAMe,QAAQ;QACVP;QACAE;QACAD;QACAO,YAAY;YACRJ,OAAO;YACPC,MAAM;YACNF,MAAM;YACNG,OAAO;QACX;QACAH,MAAMM,oBAAI,CAACC,MAAM,CAACP,MAAM;YACpBQ,cAAcf,YAAYO,IAAI;YAC9BS,aAAa;QACjB;QACAR,OAAOK,oBAAI,CAACC,MAAM,CAACN,OAAO;YACtBO,cAAc;gBACVE,IAAIC,IAAAA,qBAAK,EAAC,WAAWtB,MAAMqB,EAAE;gBAC7BpB;gBACA,GAAGG,YAAYmB,OAAO;gBACtBC,MAAM;gBACNC,QAAQhB,WAAW,aAAaiB;YACpC;YACAN,aAAa;QACjB;QACAP,MAAMI,oBAAI,CAACC,MAAM,CAACL,MAAM;YACpBO,aAAa;QACjB;QACAN,OAAOG,oBAAI,CAACC,MAAM,CAACJ,OAAO;YACtBM,aAAa;QACjB;IACJ;IACAL,MAAMJ,IAAI,CAACV,GAAG,GAAG0B,IAAAA,6BAAa,EAACZ,MAAMJ,IAAI,CAACV,GAAG,EAAE2B,IAAAA,4BAAc;IAC7DC,IAAAA,uCAAuB,EAACd,OAAOf;IAC/B,OAAOe;AACX"}