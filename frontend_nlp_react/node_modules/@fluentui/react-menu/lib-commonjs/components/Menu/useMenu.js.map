{"version":3,"sources":["useMenu.js"],"sourcesContent":["import * as React from 'react';\nimport { usePositioningMouseTarget, usePositioning, resolvePositioningShorthand } from '@fluentui/react-positioning';\nimport { useControllableState, useId, useOnClickOutside, useEventCallback, useOnScrollOutside, elementContains } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { useFocusFinders } from '@fluentui/react-tabster';\nimport { useMenuContext_unstable } from '../../contexts/menuContext';\nimport { MENU_ENTER_EVENT, useOnMenuMouseEnter } from '../../utils/index';\nimport { useIsSubmenu } from '../../utils/useIsSubmenu';\n// If it's not possible to position the submenu in smaller viewports, try\n// and fallback to this order of positions\nconst submenuFallbackPositions = [\n    'after',\n    'after-bottom',\n    'before-top',\n    'before',\n    'before-bottom',\n    'above'\n];\n/**\n * Create the state required to render Menu.\n *\n * The returned state can be modified with hooks such as useMenuStyles,\n * before being passed to renderMenu_unstable.\n *\n * @param props - props from this instance of Menu\n */ export const useMenu_unstable = (props)=>{\n    const isSubmenu = useIsSubmenu();\n    const { hoverDelay = 500, inline = false, hasCheckmarks = false, hasIcons = false, closeOnScroll = false, openOnContext = false, persistOnItemClick = false, openOnHover = isSubmenu, defaultCheckedValues, mountNode = null } = props;\n    const triggerId = useId('menu');\n    const [contextTarget, setContextTarget] = usePositioningMouseTarget();\n    const positioningState = {\n        position: isSubmenu ? 'after' : 'below',\n        align: isSubmenu ? 'top' : 'start',\n        target: props.openOnContext ? contextTarget : undefined,\n        fallbackPositions: isSubmenu ? submenuFallbackPositions : undefined,\n        ...resolvePositioningShorthand(props.positioning)\n    };\n    const children = React.Children.toArray(props.children);\n    if (process.env.NODE_ENV !== 'production') {\n        if (children.length === 0) {\n            // eslint-disable-next-line no-console\n            console.warn('Menu must contain at least one child');\n        }\n        if (children.length > 2) {\n            // eslint-disable-next-line no-console\n            console.warn('Menu must contain at most two children');\n        }\n    }\n    let menuTrigger = undefined;\n    let menuPopover = undefined;\n    if (children.length === 2) {\n        menuTrigger = children[0];\n        menuPopover = children[1];\n    } else if (children.length === 1) {\n        menuPopover = children[0];\n    }\n    const { targetRef: triggerRef, containerRef: menuPopoverRef } = usePositioning(positioningState);\n    // TODO Better way to narrow types ?\n    const [open, setOpen] = useMenuOpenState({\n        hoverDelay,\n        isSubmenu,\n        setContextTarget,\n        closeOnScroll,\n        menuPopoverRef,\n        triggerRef,\n        open: props.open,\n        defaultOpen: props.defaultOpen,\n        onOpenChange: props.onOpenChange,\n        openOnContext\n    });\n    const [checkedValues, onCheckedValueChange] = useMenuSelectableState({\n        checkedValues: props.checkedValues,\n        defaultCheckedValues,\n        onCheckedValueChange: props.onCheckedValueChange\n    });\n    return {\n        inline,\n        hoverDelay,\n        triggerId,\n        isSubmenu,\n        openOnHover,\n        contextTarget,\n        setContextTarget,\n        hasCheckmarks,\n        hasIcons,\n        closeOnScroll,\n        menuTrigger,\n        menuPopover,\n        mountNode,\n        triggerRef,\n        menuPopoverRef,\n        components: {},\n        openOnContext,\n        open,\n        setOpen,\n        checkedValues,\n        onCheckedValueChange,\n        persistOnItemClick\n    };\n};\n/**\n * Adds appropriate state values and handlers for selectable items\n * i.e checkboxes and radios\n */ const useMenuSelectableState = (props)=>{\n    const [checkedValues, setCheckedValues] = useControllableState({\n        state: props.checkedValues,\n        defaultState: props.defaultCheckedValues,\n        initialState: {}\n    });\n    const onCheckedValueChange = useEventCallback((e, { name, checkedItems })=>{\n        var _props_onCheckedValueChange;\n        (_props_onCheckedValueChange = props.onCheckedValueChange) === null || _props_onCheckedValueChange === void 0 ? void 0 : _props_onCheckedValueChange.call(props, e, {\n            name,\n            checkedItems\n        });\n        setCheckedValues((currentValue)=>({\n                ...currentValue,\n                [name]: checkedItems\n            }));\n    });\n    return [\n        checkedValues,\n        onCheckedValueChange\n    ];\n};\nconst useMenuOpenState = (state)=>{\n    const { targetDocument } = useFluent();\n    const parentSetOpen = useMenuContext_unstable((context)=>context.setOpen);\n    const onOpenChange = useEventCallback((e, data)=>{\n        var _state_onOpenChange;\n        return (_state_onOpenChange = state.onOpenChange) === null || _state_onOpenChange === void 0 ? void 0 : _state_onOpenChange.call(state, e, data);\n    });\n    const setOpenTimeout = React.useRef(0);\n    const enteringTriggerRef = React.useRef(false);\n    const [open, setOpenState] = useControllableState({\n        state: state.open,\n        defaultState: state.defaultOpen,\n        initialState: false\n    });\n    const trySetOpen = useEventCallback((e, data)=>{\n        const event = e instanceof CustomEvent && e.type === MENU_ENTER_EVENT ? e.detail.nativeEvent : e;\n        onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(event, {\n            ...data\n        });\n        if (data.open && e.type === 'contextmenu') {\n            state.setContextTarget(e);\n        }\n        if (!data.open) {\n            state.setContextTarget(undefined);\n        }\n        if (data.bubble) {\n            parentSetOpen(e, {\n                ...data\n            });\n        }\n        setOpenState(data.open);\n    });\n    const setOpen = useEventCallback((e, data)=>{\n        clearTimeout(setOpenTimeout.current);\n        if (!(e instanceof Event) && e.persist) {\n            // < React 17 still uses pooled synthetic events\n            e.persist();\n        }\n        if (e.type === 'mouseleave' || e.type === 'mouseenter' || e.type === 'mousemove' || e.type === MENU_ENTER_EVENT) {\n            var _state_triggerRef_current;\n            if ((_state_triggerRef_current = state.triggerRef.current) === null || _state_triggerRef_current === void 0 ? void 0 : _state_triggerRef_current.contains(e.target)) {\n                enteringTriggerRef.current = e.type === 'mouseenter' || e.type === 'mousemove';\n            }\n            // FIXME leaking Node timeout type\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            setOpenTimeout.current = setTimeout(()=>trySetOpen(e, data), state.hoverDelay);\n        } else {\n            trySetOpen(e, data);\n        }\n    });\n    useOnClickOutside({\n        contains: elementContains,\n        disabled: !open,\n        element: targetDocument,\n        refs: [\n            state.menuPopoverRef,\n            !state.openOnContext && state.triggerRef\n        ].filter(Boolean),\n        callback: (event)=>setOpen(event, {\n                open: false,\n                type: 'clickOutside',\n                event\n            })\n    });\n    // only close on scroll for context, or when closeOnScroll is specified\n    const closeOnScroll = state.openOnContext || state.closeOnScroll;\n    useOnScrollOutside({\n        contains: elementContains,\n        element: targetDocument,\n        callback: (event)=>setOpen(event, {\n                open: false,\n                type: 'scrollOutside',\n                event\n            }),\n        refs: [\n            state.menuPopoverRef,\n            !state.openOnContext && state.triggerRef\n        ].filter(Boolean),\n        disabled: !open || !closeOnScroll\n    });\n    useOnMenuMouseEnter({\n        element: targetDocument,\n        callback: (event)=>{\n            // When moving from a menu directly back to its trigger, this handler can close the menu\n            // Explicitly check a flag to see if this situation happens\n            if (!enteringTriggerRef.current) {\n                setOpen(event, {\n                    open: false,\n                    type: 'menuMouseEnter',\n                    event\n                });\n            }\n        },\n        disabled: !open,\n        refs: [\n            state.menuPopoverRef\n        ]\n    });\n    // Clear timeout on unmount\n    // Setting state after a component unmounts can cause memory leaks\n    React.useEffect(()=>{\n        return ()=>{\n            clearTimeout(setOpenTimeout.current);\n        };\n    }, []);\n    // Manage focus for open state\n    const { findFirstFocusable } = useFocusFinders();\n    const focusFirst = React.useCallback(()=>{\n        const firstFocusable = findFirstFocusable(state.menuPopoverRef.current);\n        firstFocusable === null || firstFocusable === void 0 ? void 0 : firstFocusable.focus();\n    }, [\n        findFirstFocusable,\n        state.menuPopoverRef\n    ]);\n    React.useEffect(()=>{\n        if (open) {\n            focusFirst();\n        }\n    }, [\n        open,\n        focusFirst\n    ]);\n    return [\n        open,\n        setOpen\n    ];\n};\n"],"names":["useMenu_unstable","submenuFallbackPositions","props","isSubmenu","useIsSubmenu","hoverDelay","inline","hasCheckmarks","hasIcons","closeOnScroll","openOnContext","persistOnItemClick","openOnHover","defaultCheckedValues","mountNode","triggerId","useId","contextTarget","setContextTarget","usePositioningMouseTarget","positioningState","position","align","target","undefined","fallbackPositions","resolvePositioningShorthand","positioning","children","React","Children","toArray","process","env","NODE_ENV","length","console","warn","menuTrigger","menuPopover","targetRef","triggerRef","containerRef","menuPopoverRef","usePositioning","open","setOpen","useMenuOpenState","defaultOpen","onOpenChange","checkedValues","onCheckedValueChange","useMenuSelectableState","components","setCheckedValues","useControllableState","state","defaultState","initialState","useEventCallback","e","name","checkedItems","_props_onCheckedValueChange","call","currentValue","targetDocument","useFluent","parentSetOpen","useMenuContext_unstable","context","data","_state_onOpenChange","setOpenTimeout","useRef","enteringTriggerRef","setOpenState","trySetOpen","event","CustomEvent","type","MENU_ENTER_EVENT","detail","nativeEvent","bubble","clearTimeout","current","Event","persist","_state_triggerRef_current","contains","setTimeout","useOnClickOutside","elementContains","disabled","element","refs","filter","Boolean","callback","useOnScrollOutside","useOnMenuMouseEnter","useEffect","findFirstFocusable","useFocusFinders","focusFirst","useCallback","firstFocusable","focus"],"mappings":"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"}