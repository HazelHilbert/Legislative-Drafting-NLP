{"version":3,"sources":["DrawerShared.tsx"],"sourcesContent":["import * as React from 'react';\nimport { mount } from '@cypress/react';\nimport { FluentProvider } from '@fluentui/react-provider';\nimport { webLightTheme } from '@fluentui/react-theme';\nimport { DrawerProps } from '@fluentui/react-components';\n\nconst mountFluent = (element: JSX.Element) => {\n  mount(<FluentProvider theme={webLightTheme}>{element}</FluentProvider>);\n};\n\nexport function testDrawerBaseScenarios(Component: React.ComponentType<DrawerProps>) {\n  describe('basic functionality', () => {\n    it('should not render any element when closed', () => {\n      mountFluent(<Component id=\"drawer\" />);\n\n      cy.get('#drawer').should('not.exist');\n    });\n\n    it('should render an element when opened', () => {\n      mountFluent(<Component id=\"drawer\" open />);\n\n      cy.get('#drawer').should('exist');\n    });\n\n    it('should render children content', () => {\n      const content = 'Test the renderization';\n      mountFluent(\n        <Component id=\"drawer\" open>\n          {content}\n        </Component>,\n      );\n\n      cy.get('#drawer').contains(content);\n    });\n\n    it('should toggle visibility on open prop change', () => {\n      const ExampleDrawer = () => {\n        const [open, setOpen] = React.useState(false);\n\n        return (\n          <>\n            <Component id=\"drawer\" open={open} />\n            <button id=\"button\" onClick={() => setOpen(true)}>\n              Open\n            </button>\n          </>\n        );\n      };\n\n      mountFluent(<ExampleDrawer />);\n\n      cy.get('#drawer').should('not.exist');\n      cy.get('#button').click();\n      cy.get('#drawer').should('exist');\n    });\n  });\n\n  describe('size prop', () => {\n    const sizes = {\n      small: 320,\n      medium: 592,\n      large: 940,\n      full: 1000,\n    };\n\n    Object.entries(sizes).forEach(([size, width]) => {\n      const sizeProp = size as DrawerProps['size'];\n\n      it(`should have correct size when size is ${size}`, () => {\n        mountFluent(<Component size={sizeProp} id=\"drawer\" open />);\n\n        cy.viewport(1000, 1000);\n        cy.get('#drawer').should('have.css', 'width', width + 'px');\n        cy.get('#drawer').invoke('outerWidth').should('equal', width);\n      });\n    });\n\n    it('width should not be bigger than viewport', () => {\n      mountFluent(<Component id=\"drawer\" open />);\n\n      cy.viewport(319, 319);\n      cy.get('#drawer').should('have.css', 'width', '319px');\n      cy.get('#drawer').invoke('outerWidth').should('equal', 319);\n    });\n\n    it('should have custom size', () => {\n      mountFluent(<Component id=\"drawer\" open style={{ width: '200px' }} />);\n\n      cy.get('#drawer').should('have.css', 'width', '200px');\n      cy.get('#drawer').invoke('outerWidth').should('equal', 200);\n    });\n  });\n\n  describe('position prop', () => {\n    const positions = {\n      start: 'left',\n      end: 'right',\n      bottom: 'bottom',\n    };\n\n    Object.entries(positions).forEach(([position, side]) => {\n      const positionProp = position as DrawerProps['position'];\n\n      it(`should have correct position when position is ${position}`, () => {\n        mountFluent(<Component position={positionProp} id=\"drawer\" open />);\n\n        cy.get('#drawer').should('have.css', side, '0px');\n      });\n    });\n  });\n}\n"],"names":["React","mount","FluentProvider","webLightTheme","mountFluent","element","theme","testDrawerBaseScenarios","Component","describe","it","id","cy","get","should","open","content","contains","ExampleDrawer","setOpen","useState","button","onClick","click","sizes","small","medium","large","full","Object","entries","forEach","size","width","sizeProp","viewport","invoke","style","positions","start","end","bottom","position","side","positionProp"],"mappings":"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"}