"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useReducedMotion", {
    enumerable: true,
    get: function() {
        return useReducedMotion;
    }
});
const _interop_require_wildcard = require("@swc/helpers/_/_interop_require_wildcard");
const _react = /*#__PURE__*/ _interop_require_wildcard._(require("react"));
const _reactutilities = require("@fluentui/react-utilities");
const _reactsharedcontexts = require("@fluentui/react-shared-contexts");
const useReducedMotion = ()=>{
    var _fluent_targetDocument;
    const fluent = (0, _reactsharedcontexts.useFluent_unstable)();
    const reducedMotion = _react.useRef(false);
    const targetWindow = (0, _reactutilities.canUseDOM)() && ((_fluent_targetDocument = fluent.targetDocument) === null || _fluent_targetDocument === void 0 ? void 0 : _fluent_targetDocument.defaultView);
    const onMediaQueryChange = _react.useCallback((e)=>{
        reducedMotion.current = e.matches;
    }, []);
    (0, _reactutilities.useIsomorphicLayoutEffect)(()=>{
        if (!targetWindow || !targetWindow.matchMedia) {
            return;
        }
        const match = targetWindow.matchMedia('screen and (prefers-reduced-motion: reduce)');
        if (match.matches) {
            reducedMotion.current = true;
        }
        match.addEventListener('change', onMediaQueryChange);
        return ()=>match.removeEventListener('change', onMediaQueryChange);
    }, [
        onMediaQueryChange,
        targetWindow
    ]);
    return reducedMotion.current;
};
