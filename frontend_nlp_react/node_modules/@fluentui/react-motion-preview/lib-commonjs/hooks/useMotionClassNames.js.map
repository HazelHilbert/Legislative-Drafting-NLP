{"version":3,"sources":["useMotionClassNames.js"],"sourcesContent":["import * as React from 'react';\nimport { mergeClasses } from '@griffel/react';\nimport { useReducedMotionStyles } from '../styles/useReducedMotionStyles.styles';\nfunction assertMotionStyles(styles) {\n    /**\n   * This verification is not necessary in production\n   * as we're verifying static properties that will not change between environments\n   */ if (process.env.NODE_ENV !== 'production') {\n        Object.keys(styles).forEach((key)=>{\n            const allowedTypes = [\n                'default',\n                'enter',\n                'exit',\n                'entering',\n                'entered',\n                'idle',\n                'exiting',\n                'exited',\n                'unmounted'\n            ];\n            /* This means the style provided has a prop that is not allowed as a motion style */ if (!allowedTypes.includes(key)) {\n                // eslint-disable-next-line no-console\n                console.warn([\n                    `@fluentui/react-motion-preview [${assertMotionStyles.name}]:`,\n                    `The property \"${key}\" is not a valid motion style key!`,\n                    `The valid keys are: \"${allowedTypes.join(', ')}\".`,\n                    'Be sure to create motion styles properly.'\n                ].join('\\n'));\n            }\n        });\n    }\n}\nexport const useMotionClassNames = (motion, motionStyles)=>{\n    const { reduced: reducedMotionStyles } = useReducedMotionStyles();\n    const motionClassNames = React.useMemo(()=>{\n        if (!motionStyles.enter && !motionStyles.exit) {\n            return '';\n        }\n        if (motion.active || motion.type === 'idle') {\n            return motionStyles.enter;\n        }\n        if (!motion.active) {\n            return motionStyles.exit;\n        }\n        return '';\n    }, [\n        motion.active,\n        motion.type,\n        motionStyles.enter,\n        motionStyles.exit\n    ]);\n    React.useEffect(()=>assertMotionStyles(motionStyles), [\n        motionStyles\n    ]);\n    return mergeClasses(motionStyles.default, motionClassNames, motionStyles[motion.type], reducedMotionStyles);\n};\n"],"names":["useMotionClassNames","assertMotionStyles","styles","process","env","NODE_ENV","Object","keys","forEach","key","allowedTypes","includes","console","warn","name","join","motion","motionStyles","reduced","reducedMotionStyles","useReducedMotionStyles","motionClassNames","React","useMemo","enter","exit","active","type","useEffect","mergeClasses","default"],"mappings":";;;;+BAgCaA;;;eAAAA;;;;iEAhCU;wBACM;8CACU;AACvC,SAASC,mBAAmBC,MAAM;IAC9B;;;GAGD,GAAG,IAAIC,QAAQC,GAAG,CAACC,QAAQ,KAAK,cAAc;QACzCC,OAAOC,IAAI,CAACL,QAAQM,OAAO,CAAC,CAACC;YACzB,MAAMC,eAAe;gBACjB;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;gBACA;aACH;YACD,kFAAkF,GAAG,IAAI,CAACA,aAAaC,QAAQ,CAACF,MAAM;gBAClH,sCAAsC;gBACtCG,QAAQC,IAAI,CAAC;oBACT,CAAC,gCAAgC,EAAEZ,mBAAmBa,IAAI,CAAC,EAAE,CAAC;oBAC9D,CAAC,cAAc,EAAEL,IAAI,kCAAkC,CAAC;oBACxD,CAAC,qBAAqB,EAAEC,aAAaK,IAAI,CAAC,MAAM,EAAE,CAAC;oBACnD;iBACH,CAACA,IAAI,CAAC;YACX;QACJ;IACJ;AACJ;AACO,MAAMf,sBAAsB,CAACgB,QAAQC;IACxC,MAAM,EAAEC,SAASC,mBAAmB,EAAE,GAAGC,IAAAA,oDAAsB;IAC/D,MAAMC,mBAAmBC,OAAMC,OAAO,CAAC;QACnC,IAAI,CAACN,aAAaO,KAAK,IAAI,CAACP,aAAaQ,IAAI,EAAE;YAC3C,OAAO;QACX;QACA,IAAIT,OAAOU,MAAM,IAAIV,OAAOW,IAAI,KAAK,QAAQ;YACzC,OAAOV,aAAaO,KAAK;QAC7B;QACA,IAAI,CAACR,OAAOU,MAAM,EAAE;YAChB,OAAOT,aAAaQ,IAAI;QAC5B;QACA,OAAO;IACX,GAAG;QACCT,OAAOU,MAAM;QACbV,OAAOW,IAAI;QACXV,aAAaO,KAAK;QAClBP,aAAaQ,IAAI;KACpB;IACDH,OAAMM,SAAS,CAAC,IAAI3B,mBAAmBgB,eAAe;QAClDA;KACH;IACD,OAAOY,IAAAA,oBAAY,EAACZ,aAAaa,OAAO,EAAET,kBAAkBJ,YAAY,CAACD,OAAOW,IAAI,CAAC,EAAER;AAC3F"}