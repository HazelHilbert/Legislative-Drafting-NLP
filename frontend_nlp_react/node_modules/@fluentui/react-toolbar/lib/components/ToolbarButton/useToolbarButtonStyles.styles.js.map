{"version":3,"names":["__styles","mergeClasses","shorthands","useButtonStyles_unstable","useBaseStyles","vertical","Beiy3e4","verticalIcon","Be2twd7","B6of3ja","t21cq0","jrapky","Frg6f3","d","useToolbarButtonStyles_unstable","state","buttonStyles","root","className","icon"],"sources":["useToolbarButtonStyles.styles.js"],"sourcesContent":["import { makeStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { useButtonStyles_unstable } from '@fluentui/react-button';\nconst useBaseStyles = makeStyles({\n    vertical: {\n        flexDirection: 'column'\n    },\n    verticalIcon: {\n        fontSize: '24px',\n        ...shorthands.margin('0')\n    }\n});\n/**\n * Apply styling to the ToolbarButton slots based on the state\n */ export const useToolbarButtonStyles_unstable = (state)=>{\n    useButtonStyles_unstable(state);\n    const buttonStyles = useBaseStyles();\n    state.root.className = mergeClasses(state.root.className, state.vertical && buttonStyles.vertical);\n    if (state.icon) {\n        state.icon.className = mergeClasses(state.icon.className, state.vertical && buttonStyles.verticalIcon);\n    }\n};\n"],"mappings":"AAAA,SAAAA,QAAA,EAAqBC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AACrE,SAASC,wBAAwB,QAAQ,wBAAwB;AACjE,MAAMC,aAAa,gBAAGJ,QAAA;EAAAK,QAAA;IAAAC,OAAA;EAAA;EAAAC,YAAA;IAAAC,OAAA;IAAAC,OAAA;IAAAC,MAAA;IAAAC,MAAA;IAAAC,MAAA;EAAA;AAAA;EAAAC,CAAA;AAAA,CAQrB,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMC,+BAA+B,GAAIC,KAAK,IAAG;EACxDZ,wBAAwB,CAACY,KAAK,CAAC;EAC/B,MAAMC,YAAY,GAAGZ,aAAa,CAAC,CAAC;EACpCW,KAAK,CAACE,IAAI,CAACC,SAAS,GAAGjB,YAAY,CAACc,KAAK,CAACE,IAAI,CAACC,SAAS,EAAEH,KAAK,CAACV,QAAQ,IAAIW,YAAY,CAACX,QAAQ,CAAC;EAClG,IAAIU,KAAK,CAACI,IAAI,EAAE;IACZJ,KAAK,CAACI,IAAI,CAACD,SAAS,GAAGjB,YAAY,CAACc,KAAK,CAACI,IAAI,CAACD,SAAS,EAAEH,KAAK,CAACV,QAAQ,IAAIW,YAAY,CAACT,YAAY,CAAC;EAC1G;AACJ,CAAC"}