{"version":3,"sources":["usePortal.js"],"sourcesContent":["import { setVirtualParent } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { toMountNodeProps } from '../../utils/toMountNodeProps';\nimport { usePortalMountNode } from './usePortalMountNode';\n/**\n * Create the state required to render Portal.\n *\n * The returned state can be modified with hooks such as usePortalStyles, before being passed to renderPortal_unstable.\n *\n * @param props - props from this instance of Portal\n */ export const usePortal_unstable = (props)=>{\n    const { element, className } = toMountNodeProps(props.mountNode);\n    const virtualParentRootRef = React.useRef(null);\n    const fallbackElement = usePortalMountNode({\n        disabled: !!element,\n        className\n    });\n    const mountNode = element !== null && element !== void 0 ? element : fallbackElement;\n    const state = {\n        children: props.children,\n        mountNode,\n        virtualParentRootRef\n    };\n    React.useEffect(()=>{\n        if (!mountNode) {\n            return;\n        }\n        const virtualParent = virtualParentRootRef.current;\n        // By default, we create a mount node for portal on `document.body` (see usePortalMountNode()) and have following structure:\n        //\n        // <body>\n        //   <!-- ‚öõÔ∏è application root -->\n        //   <div id=\"root\">\n        //     <!-- ‚¨áÔ∏è portal node rendered in a tree to anchor (virtual parent node) -->\n        //     <span aria-hidden=\"true\"></span>\n        //   </div>\n        //   <div id=\"portal-mount-node\">\n        //     <!-- üß©portal content -->\n        //   </div>\n        // </body>\n        //\n        // To make sure that `.elementContains()` works correctly, we link a virtual parent to a portal node (a virtual parent node becomes a parent of mount node):\n        //   virtual.contains(mountNode) === false\n        //   (while we need ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è)\n        //   elementsContains(virtualParent, mountNode) === true\n        //   elementsContains(mountNode, virtualParent) === false\n        //\n        // For more details, check docs for virtual parent utils.\n        //\n        // However, if a user provides a custom mount node (via `props`) the structure could be different:\n        //\n        // <body>\n        //   <!-- application root -->\n        //   <div id=\"root\">\n        //     <div id=\"portal-mount-node\">\n        //       <!-- üß©portal content -->\n        //\n        //       <span aria-hidden=\"true\"></span>\n        //     </div>\n        //   </div>\n        // </body>\n        //\n        // A mount node in this case contains portal's content and a virtual parent node. In this case nodes linking is redundant and the check below avoids it.\n        //\n        // Otherwise, there is a circular reference - both elements are parents of each other:\n        //   elementsContains(mountNode, virtualParent) === true\n        //   elementsContains(virtualParent, mountNode) === true\n        const isVirtualParentInsideChild = mountNode.contains(virtualParent);\n        if (virtualParent && !isVirtualParentInsideChild) {\n            setVirtualParent(mountNode, virtualParent);\n            return ()=>{\n                setVirtualParent(mountNode, undefined);\n            };\n        }\n    }, [\n        virtualParentRootRef,\n        mountNode\n    ]);\n    return state;\n};\n"],"names":["usePortal_unstable","props","element","className","toMountNodeProps","mountNode","virtualParentRootRef","React","useRef","fallbackElement","usePortalMountNode","disabled","state","children","useEffect","virtualParent","current","isVirtualParentInsideChild","contains","setVirtualParent","undefined"],"mappings":";;;;+BAUiBA;;;eAAAA;;;;gCAVgB;iEACV;kCACU;oCACE;AAOxB,MAAMA,qBAAqB,CAACC;IACnC,MAAM,EAAEC,OAAO,EAAEC,SAAS,EAAE,GAAGC,IAAAA,kCAAgB,EAACH,MAAMI,SAAS;IAC/D,MAAMC,uBAAuBC,OAAMC,MAAM,CAAC;IAC1C,MAAMC,kBAAkBC,IAAAA,sCAAkB,EAAC;QACvCC,UAAU,CAAC,CAACT;QACZC;IACJ;IACA,MAAME,YAAYH,YAAY,QAAQA,YAAY,KAAK,IAAIA,UAAUO;IACrE,MAAMG,QAAQ;QACVC,UAAUZ,MAAMY,QAAQ;QACxBR;QACAC;IACJ;IACAC,OAAMO,SAAS,CAAC;QACZ,IAAI,CAACT,WAAW;YACZ;QACJ;QACA,MAAMU,gBAAgBT,qBAAqBU,OAAO;QAClD,4HAA4H;QAC5H,EAAE;QACF,SAAS;QACT,iCAAiC;QACjC,oBAAoB;QACpB,iFAAiF;QACjF,uCAAuC;QACvC,WAAW;QACX,iCAAiC;QACjC,gCAAgC;QAChC,WAAW;QACX,UAAU;QACV,EAAE;QACF,4JAA4J;QAC5J,0CAA0C;QAC1C,2BAA2B;QAC3B,wDAAwD;QACxD,yDAAyD;QACzD,EAAE;QACF,yDAAyD;QACzD,EAAE;QACF,kGAAkG;QAClG,EAAE;QACF,SAAS;QACT,8BAA8B;QAC9B,oBAAoB;QACpB,mCAAmC;QACnC,kCAAkC;QAClC,EAAE;QACF,yCAAyC;QACzC,aAAa;QACb,WAAW;QACX,UAAU;QACV,EAAE;QACF,wJAAwJ;QACxJ,EAAE;QACF,sFAAsF;QACtF,wDAAwD;QACxD,wDAAwD;QACxD,MAAMC,6BAA6BZ,UAAUa,QAAQ,CAACH;QACtD,IAAIA,iBAAiB,CAACE,4BAA4B;YAC9CE,IAAAA,gCAAgB,EAACd,WAAWU;YAC5B,OAAO;gBACHI,IAAAA,gCAAgB,EAACd,WAAWe;YAChC;QACJ;IACJ,GAAG;QACCd;QACAD;KACH;IACD,OAAOO;AACX"}