{"version":3,"sources":["TooltipContext.ts"],"sourcesContent":["import * as React from 'react';\n\n/**\n * The context provided by TooltipProvider\n */\nexport type TooltipVisibilityContextValue = {\n  /**\n   * When a tooltip is shown, it sets itself as the visibleTooltip.\n   * The next tooltip to become visible can use it to hide the previous tooltip immediately.\n   */\n  visibleTooltip?: {\n    hide: () => void;\n  };\n};\n\n/**\n * @internal\n * Context shared by all of the tooltips in the app\n */\nconst TooltipVisibilityContext = React.createContext<TooltipVisibilityContextValue | undefined>(\n  undefined,\n) as React.Context<TooltipVisibilityContextValue>;\n\nconst tooltipVisibilityContextDefaultValue: TooltipVisibilityContextValue = {};\n\n/**\n * @internal\n */\nexport const TooltipVisibilityProvider = TooltipVisibilityContext.Provider;\n\nexport function useTooltipVisibility(): TooltipVisibilityContextValue {\n  return React.useContext(TooltipVisibilityContext) ?? tooltipVisibilityContextDefaultValue;\n}\n"],"names":["React","TooltipVisibilityContext","createContext","undefined","tooltipVisibilityContextDefaultValue","TooltipVisibilityProvider","Provider","useTooltipVisibility","useContext"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAe/B;;;CAGC,GACD,MAAMC,2BAA2BD,MAAME,aAAa,CAClDC;AAGF,MAAMC,uCAAsE,CAAC;AAE7E;;CAEC,GACD,OAAO,MAAMC,4BAA4BJ,yBAAyBK,QAAQ,CAAC;AAE3E,OAAO,SAASC;QACPP;IAAP,OAAOA,CAAAA,oBAAAA,MAAMQ,UAAU,CAACP,uCAAjBD,+BAAAA,oBAA8CI;AACvD"}