{"version":3,"sources":["getScrollParent.js"],"sourcesContent":["/**\n * Returns the parent node or the host of the node argument.\n * @param node - DOM node.\n * @returns - parent DOM node.\n */ export const getParentNode = (node)=>{\n    if (node.nodeName === 'HTML') {\n        return node;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return node.parentNode || node.host;\n};\n/**\n * Returns CSS styles of the given node.\n * @param node - DOM node.\n * @returns - CSS styles.\n */ const getStyleComputedProperty = (node)=>{\n    var _node_ownerDocument;\n    if (node.nodeType !== 1) {\n        return {};\n    }\n    const window = (_node_ownerDocument = node.ownerDocument) === null || _node_ownerDocument === void 0 ? void 0 : _node_ownerDocument.defaultView;\n    return window.getComputedStyle(node, null);\n};\n/**\n * Returns the first scrollable parent of the given element.\n * @param node - DOM node.\n * @returns - the first scrollable parent.\n */ export const getScrollParent = (node)=>{\n    // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n    const parentNode = node && getParentNode(node);\n    // eslint-disable-next-line\n    if (!parentNode) return document.body;\n    switch(parentNode.nodeName){\n        case 'HTML':\n        case 'BODY':\n            return parentNode.ownerDocument.body;\n        case '#document':\n            return parentNode.body;\n    }\n    // If any of the overflow props is defined for the node then we return it as the parent\n    const { overflow, overflowX, overflowY } = getStyleComputedProperty(parentNode);\n    if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n        return parentNode;\n    }\n    return getScrollParent(parentNode);\n};\nexport const hasScrollParent = (node)=>{\n    var _scrollParentElement_ownerDocument;\n    const scrollParentElement = getScrollParent(node);\n    return scrollParentElement ? scrollParentElement !== ((_scrollParentElement_ownerDocument = scrollParentElement.ownerDocument) === null || _scrollParentElement_ownerDocument === void 0 ? void 0 : _scrollParentElement_ownerDocument.body) : false;\n};\n"],"names":["getParentNode","getScrollParent","hasScrollParent","node","nodeName","parentNode","host","getStyleComputedProperty","_node_ownerDocument","nodeType","window","ownerDocument","defaultView","getComputedStyle","document","body","overflow","overflowX","overflowY","test","_scrollParentElement_ownerDocument","scrollParentElement"],"mappings":"AAAA;;;;CAIC;;;;;;;;;;;IAAgBA,aAAa;eAAbA;;IAuBAC,eAAe;eAAfA;;IAmBJC,eAAe;eAAfA;;;AA1CF,MAAMF,gBAAgB,CAACG;IAC9B,IAAIA,KAAKC,QAAQ,KAAK,QAAQ;QAC1B,OAAOD;IACX;IACA,8DAA8D;IAC9D,OAAOA,KAAKE,UAAU,IAAIF,KAAKG,IAAI;AACvC;AACA;;;;CAIC,GAAG,MAAMC,2BAA2B,CAACJ;IAClC,IAAIK;IACJ,IAAIL,KAAKM,QAAQ,KAAK,GAAG;QACrB,OAAO,CAAC;IACZ;IACA,MAAMC,SAAS,AAACF,CAAAA,sBAAsBL,KAAKQ,aAAa,AAAD,MAAO,QAAQH,wBAAwB,KAAK,IAAI,KAAK,IAAIA,oBAAoBI,WAAW;IAC/I,OAAOF,OAAOG,gBAAgB,CAACV,MAAM;AACzC;AAKW,MAAMF,kBAAkB,CAACE;IAChC,iFAAiF;IACjF,MAAME,aAAaF,QAAQH,cAAcG;IACzC,2BAA2B;IAC3B,IAAI,CAACE,YAAY,OAAOS,SAASC,IAAI;IACrC,OAAOV,WAAWD,QAAQ;QACtB,KAAK;QACL,KAAK;YACD,OAAOC,WAAWM,aAAa,CAACI,IAAI;QACxC,KAAK;YACD,OAAOV,WAAWU,IAAI;IAC9B;IACA,uFAAuF;IACvF,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAE,GAAGX,yBAAyBF;IACpE,IAAI,wBAAwBc,IAAI,CAACH,WAAWE,YAAYD,YAAY;QAChE,OAAOZ;IACX;IACA,OAAOJ,gBAAgBI;AAC3B;AACO,MAAMH,kBAAkB,CAACC;IAC5B,IAAIiB;IACJ,MAAMC,sBAAsBpB,gBAAgBE;IAC5C,OAAOkB,sBAAsBA,wBAAyB,CAAA,AAACD,CAAAA,qCAAqCC,oBAAoBV,aAAa,AAAD,MAAO,QAAQS,uCAAuC,KAAK,IAAI,KAAK,IAAIA,mCAAmCL,IAAI,AAAD,IAAK;AACnP"}