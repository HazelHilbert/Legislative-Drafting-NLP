{"version":3,"sources":["maxSize.js"],"sourcesContent":["import { size } from '@floating-ui/dom';\nimport { getBoundary } from '../utils/getBoundary';\n/**\n * floating-ui `size` middleware uses floating element's height/width to calculate available height/width.\n * This middleware only runs once per lifecycle, resetting styles applied by maxSize from previous lifecycle.\n * Then floating element's original size is restored and `size` middleware can calculate available height/width correctly.\n */ export const resetMaxSize = (autoSize)=>({\n        name: 'resetMaxSize',\n        fn ({ middlewareData, elements }) {\n            var _middlewareData_resetMaxSize;\n            if ((_middlewareData_resetMaxSize = middlewareData.resetMaxSize) === null || _middlewareData_resetMaxSize === void 0 ? void 0 : _middlewareData_resetMaxSize.maxSizeAlreadyReset) {\n                return {};\n            }\n            const { applyMaxWidth, applyMaxHeight } = autoSize;\n            if (applyMaxWidth) {\n                elements.floating.style.removeProperty('box-sizing');\n                elements.floating.style.removeProperty('max-width');\n                elements.floating.style.removeProperty('width');\n            }\n            if (applyMaxHeight) {\n                elements.floating.style.removeProperty('box-sizing');\n                elements.floating.style.removeProperty('max-height');\n                elements.floating.style.removeProperty('height');\n            }\n            return {\n                data: {\n                    maxSizeAlreadyReset: true\n                },\n                reset: {\n                    rects: true\n                }\n            };\n        }\n    });\nexport function maxSize(autoSize, options) {\n    const { container, overflowBoundary } = options;\n    return size({\n        ...overflowBoundary && {\n            altBoundary: true,\n            boundary: getBoundary(container, overflowBoundary)\n        },\n        apply ({ availableHeight, availableWidth, elements, rects }) {\n            const applyMaxSizeStyles = (apply, dimension, availableSize)=>{\n                if (!apply) {\n                    return;\n                }\n                elements.floating.style.setProperty('box-sizing', 'border-box');\n                elements.floating.style.setProperty(`max-${dimension}`, `${availableSize}px`);\n                if (rects.floating[dimension] > availableSize) {\n                    elements.floating.style.setProperty(dimension, `${availableSize}px`);\n                    const axis = dimension === 'width' ? 'x' : 'y';\n                    if (!elements.floating.style.getPropertyValue(`overflow-${axis}`)) {\n                        elements.floating.style.setProperty(`overflow-${axis}`, 'auto');\n                    }\n                }\n            };\n            const { applyMaxWidth, applyMaxHeight } = autoSize;\n            applyMaxSizeStyles(applyMaxWidth, 'width', availableWidth);\n            applyMaxSizeStyles(applyMaxHeight, 'height', availableHeight);\n        }\n    });\n}\n"],"names":["resetMaxSize","maxSize","autoSize","name","fn","middlewareData","elements","_middlewareData_resetMaxSize","maxSizeAlreadyReset","applyMaxWidth","applyMaxHeight","floating","style","removeProperty","data","reset","rects","options","container","overflowBoundary","size","altBoundary","boundary","getBoundary","apply","availableHeight","availableWidth","applyMaxSizeStyles","dimension","availableSize","setProperty","axis","getPropertyValue"],"mappings":";;;;;;;;;;;IAMiBA,YAAY;eAAZA;;IA4BDC,OAAO;eAAPA;;;qBAlCK;6BACO;AAKjB,MAAMD,eAAe,CAACE,WAAY,CAAA;QACrCC,MAAM;QACNC,IAAI,EAAEC,cAAc,EAAEC,QAAQ,EAAE;YAC5B,IAAIC;YACJ,IAAI,AAACA,CAAAA,+BAA+BF,eAAeL,YAAY,AAAD,MAAO,QAAQO,iCAAiC,KAAK,IAAI,KAAK,IAAIA,6BAA6BC,mBAAmB,EAAE;gBAC9K,OAAO,CAAC;YACZ;YACA,MAAM,EAAEC,aAAa,EAAEC,cAAc,EAAE,GAAGR;YAC1C,IAAIO,eAAe;gBACfH,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCP,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCP,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;YAC3C;YACA,IAAIH,gBAAgB;gBAChBJ,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCP,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;gBACvCP,SAASK,QAAQ,CAACC,KAAK,CAACC,cAAc,CAAC;YAC3C;YACA,OAAO;gBACHC,MAAM;oBACFN,qBAAqB;gBACzB;gBACAO,OAAO;oBACHC,OAAO;gBACX;YACJ;QACJ;IACJ,CAAA;AACG,SAASf,QAAQC,QAAQ,EAAEe,OAAO;IACrC,MAAM,EAAEC,SAAS,EAAEC,gBAAgB,EAAE,GAAGF;IACxC,OAAOG,IAAAA,SAAI,EAAC;QACR,GAAGD,oBAAoB;YACnBE,aAAa;YACbC,UAAUC,IAAAA,wBAAW,EAACL,WAAWC;QACrC,CAAC;QACDK,OAAO,EAAEC,eAAe,EAAEC,cAAc,EAAEpB,QAAQ,EAAEU,KAAK,EAAE;YACvD,MAAMW,qBAAqB,CAACH,OAAOI,WAAWC;gBAC1C,IAAI,CAACL,OAAO;oBACR;gBACJ;gBACAlB,SAASK,QAAQ,CAACC,KAAK,CAACkB,WAAW,CAAC,cAAc;gBAClDxB,SAASK,QAAQ,CAACC,KAAK,CAACkB,WAAW,CAAC,CAAC,IAAI,EAAEF,UAAU,CAAC,EAAE,CAAC,EAAEC,cAAc,EAAE,CAAC;gBAC5E,IAAIb,MAAML,QAAQ,CAACiB,UAAU,GAAGC,eAAe;oBAC3CvB,SAASK,QAAQ,CAACC,KAAK,CAACkB,WAAW,CAACF,WAAW,CAAC,EAAEC,cAAc,EAAE,CAAC;oBACnE,MAAME,OAAOH,cAAc,UAAU,MAAM;oBAC3C,IAAI,CAACtB,SAASK,QAAQ,CAACC,KAAK,CAACoB,gBAAgB,CAAC,CAAC,SAAS,EAAED,KAAK,CAAC,GAAG;wBAC/DzB,SAASK,QAAQ,CAACC,KAAK,CAACkB,WAAW,CAAC,CAAC,SAAS,EAAEC,KAAK,CAAC,EAAE;oBAC5D;gBACJ;YACJ;YACA,MAAM,EAAEtB,aAAa,EAAEC,cAAc,EAAE,GAAGR;YAC1CyB,mBAAmBlB,eAAe,SAASiB;YAC3CC,mBAAmBjB,gBAAgB,UAAUe;QACjD;IACJ;AACJ"}