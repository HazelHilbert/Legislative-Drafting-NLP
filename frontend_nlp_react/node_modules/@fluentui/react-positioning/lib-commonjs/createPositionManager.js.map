{"version":3,"sources":["createPositionManager.js"],"sourcesContent":["import { computePosition } from '@floating-ui/dom';\nimport { isHTMLElement } from '@fluentui/react-utilities';\nimport { debounce, writeArrowUpdates, writeContainerUpdates } from './utils';\nimport { listScrollParents } from './utils/listScrollParents';\nimport { POSITIONING_END_EVENT } from './constants';\nimport { createResizeObserver } from './utils/createResizeObserver';\n/**\n * @internal\n * @returns manager that handles positioning out of the react lifecycle\n */ export function createPositionManager(options) {\n    let isDestroyed = false;\n    const { container, target, arrow, strategy, middleware, placement, useTransform = true, disableUpdateOnResize = false } = options;\n    const targetWindow = container.ownerDocument.defaultView;\n    if (!target || !container || !targetWindow) {\n        return {\n            updatePosition: ()=>undefined,\n            dispose: ()=>undefined\n        };\n    }\n    // When the dimensions of the target or the container change - trigger a position update\n    const resizeObserver = disableUpdateOnResize ? null : createResizeObserver(targetWindow, (entries)=>{\n        // If content rect dimensions to go 0 -> very likely that `display: none` is being used to hide the element\n        // In this case don't update and let users update imperatively\n        const shouldUpdateOnResize = entries.every((entry)=>{\n            return entry.contentRect.width > 0 && entry.contentRect.height > 0;\n        });\n        if (shouldUpdateOnResize) {\n            updatePosition();\n        }\n    });\n    let isFirstUpdate = true;\n    const scrollParents = new Set();\n    // When the container is first resolved, set position `fixed` to avoid scroll jumps.\n    // Without this scroll jumps can occur when the element is rendered initially and receives focus\n    Object.assign(container.style, {\n        position: 'fixed',\n        left: 0,\n        top: 0,\n        margin: 0\n    });\n    const forceUpdate = ()=>{\n        // debounced update can still occur afterwards\n        // early return to avoid memory leaks\n        if (isDestroyed) {\n            return;\n        }\n        if (isFirstUpdate) {\n            listScrollParents(container).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            if (isHTMLElement(target)) {\n                listScrollParents(target).forEach((scrollParent)=>scrollParents.add(scrollParent));\n            }\n            scrollParents.forEach((scrollParent)=>{\n                scrollParent.addEventListener('scroll', updatePosition, {\n                    passive: true\n                });\n            });\n            resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(container);\n            if (isHTMLElement(target)) {\n                resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.observe(target);\n            }\n            isFirstUpdate = false;\n        }\n        Object.assign(container.style, {\n            position: strategy\n        });\n        computePosition(target, container, {\n            placement,\n            middleware,\n            strategy\n        }).then(({ x, y, middlewareData, placement: computedPlacement })=>{\n            // Promise can still resolve after destruction\n            // early return to avoid applying outdated position\n            if (isDestroyed) {\n                return;\n            }\n            writeArrowUpdates({\n                arrow,\n                middlewareData\n            });\n            writeContainerUpdates({\n                container,\n                middlewareData,\n                placement: computedPlacement,\n                coordinates: {\n                    x,\n                    y\n                },\n                lowPPI: ((targetWindow === null || targetWindow === void 0 ? void 0 : targetWindow.devicePixelRatio) || 1) <= 1,\n                strategy,\n                useTransform\n            });\n            container.dispatchEvent(new CustomEvent(POSITIONING_END_EVENT));\n        }).catch((err)=>{\n            // https://github.com/floating-ui/floating-ui/issues/1845\n            // FIXME for node > 14\n            // node 15 introduces promise rejection which means that any components\n            // tests need to be `it('', async () => {})` otherwise there can be race conditions with\n            // JSDOM being torn down before this promise is resolved so globals like `window` and `document` don't exist\n            // Unless all tests that ever use `usePositioning` are turned into async tests, any logging during testing\n            // will actually be counter productive\n            if (process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.error('[usePositioning]: Failed to calculate position', err);\n            }\n        });\n    };\n    const updatePosition = debounce(()=>forceUpdate());\n    const dispose = ()=>{\n        isDestroyed = true;\n        if (targetWindow) {\n            targetWindow.removeEventListener('scroll', updatePosition);\n            targetWindow.removeEventListener('resize', updatePosition);\n        }\n        scrollParents.forEach((scrollParent)=>{\n            scrollParent.removeEventListener('scroll', updatePosition);\n        });\n        scrollParents.clear();\n        resizeObserver === null || resizeObserver === void 0 ? void 0 : resizeObserver.disconnect();\n    };\n    if (targetWindow) {\n        targetWindow.addEventListener('scroll', updatePosition, {\n            passive: true\n        });\n        targetWindow.addEventListener('resize', updatePosition);\n    }\n    // Update the position on initialization\n    updatePosition();\n    return {\n        updatePosition,\n        dispose\n    };\n}\n"],"names":["createPositionManager","options","isDestroyed","container","target","arrow","strategy","middleware","placement","useTransform","disableUpdateOnResize","targetWindow","ownerDocument","defaultView","updatePosition","undefined","dispose","resizeObserver","createResizeObserver","entries","shouldUpdateOnResize","every","entry","contentRect","width","height","isFirstUpdate","scrollParents","Set","Object","assign","style","position","left","top","margin","forceUpdate","listScrollParents","forEach","scrollParent","add","isHTMLElement","addEventListener","passive","observe","computePosition","then","x","y","middlewareData","computedPlacement","writeArrowUpdates","writeContainerUpdates","coordinates","lowPPI","devicePixelRatio","dispatchEvent","CustomEvent","POSITIONING_END_EVENT","catch","err","process","env","NODE_ENV","console","error","debounce","removeEventListener","clear","disconnect"],"mappings":"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"}