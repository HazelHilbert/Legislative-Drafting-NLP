{"version":3,"sources":["useSplitButton.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useId, slot } from '@fluentui/react-utilities';\nimport { Button } from '../Button/Button';\nimport { MenuButton } from '../MenuButton/MenuButton';\n/**\n * Given user props, defines default props for the SplitButton and returns processed state.\n * @param props - User provided props to the SplitButton component.\n * @param ref - User provided ref to be passed to the SplitButton component.\n */ export const useSplitButton_unstable = (props, ref)=>{\n    const { appearance = 'secondary', children, disabled = false, disabledFocusable = false, icon, iconPosition = 'before', menuButton, menuIcon, primaryActionButton, shape = 'rounded', size = 'medium' } = props;\n    const baseId = useId('splitButton-');\n    const menuButtonShorthand = slot.optional(menuButton, {\n        defaultProps: {\n            appearance,\n            disabled,\n            disabledFocusable,\n            menuIcon,\n            shape,\n            size\n        },\n        renderByDefault: true,\n        elementType: MenuButton\n    });\n    const primaryActionButtonShorthand = slot.optional(primaryActionButton, {\n        defaultProps: {\n            appearance,\n            children,\n            disabled,\n            disabledFocusable,\n            icon,\n            iconPosition,\n            id: baseId + '__primaryActionButton',\n            shape,\n            size\n        },\n        renderByDefault: true,\n        elementType: Button\n    });\n    // Resolve menu button's aria-labelledby to be labelled by the primary action button if no label was provided by the\n    // user.\n    if (menuButtonShorthand && primaryActionButtonShorthand && !menuButtonShorthand['aria-label'] && !menuButtonShorthand['aria-labelledby']) {\n        menuButtonShorthand['aria-labelledby'] = primaryActionButtonShorthand.id;\n    }\n    return {\n        // Props passed at the top-level\n        appearance,\n        disabled,\n        disabledFocusable,\n        iconPosition,\n        shape,\n        size,\n        components: {\n            root: 'div',\n            menuButton: MenuButton,\n            primaryActionButton: Button\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            ref,\n            ...props\n        }), {\n            elementType: 'div'\n        }),\n        menuButton: menuButtonShorthand,\n        primaryActionButton: primaryActionButtonShorthand\n    };\n};\n"],"names":["useSplitButton_unstable","props","ref","appearance","children","disabled","disabledFocusable","icon","iconPosition","menuButton","menuIcon","primaryActionButton","shape","size","baseId","useId","menuButtonShorthand","slot","optional","defaultProps","renderByDefault","elementType","MenuButton","primaryActionButtonShorthand","id","Button","components","root","always","getIntrinsicElementProps"],"mappings":";;;;+BAQiBA;;;eAAAA;;;;iEARM;gCAC+B;wBAC/B;4BACI;AAKhB,MAAMA,0BAA0B,CAACC,OAAOC;IAC/C,MAAM,EAAEC,aAAa,WAAW,EAAEC,QAAQ,EAAEC,WAAW,KAAK,EAAEC,oBAAoB,KAAK,EAAEC,IAAI,EAAEC,eAAe,QAAQ,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,QAAQ,SAAS,EAAEC,OAAO,QAAQ,EAAE,GAAGZ;IAC1M,MAAMa,SAASC,IAAAA,qBAAK,EAAC;IACrB,MAAMC,sBAAsBC,oBAAI,CAACC,QAAQ,CAACT,YAAY;QAClDU,cAAc;YACVhB;YACAE;YACAC;YACAI;YACAE;YACAC;QACJ;QACAO,iBAAiB;QACjBC,aAAaC,sBAAU;IAC3B;IACA,MAAMC,+BAA+BN,oBAAI,CAACC,QAAQ,CAACP,qBAAqB;QACpEQ,cAAc;YACVhB;YACAC;YACAC;YACAC;YACAC;YACAC;YACAgB,IAAIV,SAAS;YACbF;YACAC;QACJ;QACAO,iBAAiB;QACjBC,aAAaI,cAAM;IACvB;IACA,oHAAoH;IACpH,QAAQ;IACR,IAAIT,uBAAuBO,gCAAgC,CAACP,mBAAmB,CAAC,aAAa,IAAI,CAACA,mBAAmB,CAAC,kBAAkB,EAAE;QACtIA,mBAAmB,CAAC,kBAAkB,GAAGO,6BAA6BC,EAAE;IAC5E;IACA,OAAO;QACH,gCAAgC;QAChCrB;QACAE;QACAC;QACAE;QACAI;QACAC;QACAa,YAAY;YACRC,MAAM;YACNlB,YAAYa,sBAAU;YACtBX,qBAAqBc,cAAM;QAC/B;QACAE,MAAMV,oBAAI,CAACW,MAAM,CAACC,IAAAA,wCAAwB,EAAC,OAAO;YAC9C3B;YACA,GAAGD,KAAK;QACZ,IAAI;YACAoB,aAAa;QACjB;QACAZ,YAAYO;QACZL,qBAAqBY;IACzB;AACJ"}