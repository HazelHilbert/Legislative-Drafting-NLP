{"version":3,"sources":["useCard.js"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, useMergedRefs, slot } from '@fluentui/react-utilities';\nimport { useFocusableGroup, useFocusWithin } from '@fluentui/react-tabster';\nimport { useCardSelectable } from './useCardSelectable';\nimport { cardContextDefaultValue } from './CardContext';\nconst focusMap = {\n    off: undefined,\n    'no-tab': 'limited-trap-focus',\n    'tab-exit': 'limited',\n    'tab-only': 'unlimited'\n};\n/**\n * Create the state for interactive cards.\n *\n * This internal hook defines if the card is interactive\n * and control focus properties based on that.\n *\n * @param props - props from this instance of Card\n */ const useCardInteractive = ({ focusMode = 'off', ...props })=>{\n    const interactive = [\n        'onClick',\n        'onDoubleClick',\n        'onMouseUp',\n        'onMouseDown',\n        'onPointerUp',\n        'onPointerDown',\n        'onTouchStart',\n        'onTouchEnd',\n        'onDragStart',\n        'onDragEnd'\n    ].some((prop)=>props[prop]);\n    const groupperAttrs = useFocusableGroup({\n        tabBehavior: focusMap[interactive ? 'no-tab' : focusMode]\n    });\n    const interactiveFocusAttributes = {\n        ...groupperAttrs,\n        tabIndex: 0\n    };\n    return {\n        interactive,\n        focusAttributes: !interactive && focusMode === 'off' ? null : interactiveFocusAttributes\n    };\n};\n/**\n * Create the state required to render Card.\n *\n * The returned state can be modified with hooks such as useCardStyles_unstable,\n * before being passed to renderCard_unstable.\n *\n * @param props - props from this instance of Card\n * @param ref - reference to the root element of Card\n */ export const useCard_unstable = (props, ref)=>{\n    const { appearance = 'filled', orientation = 'vertical', size = 'medium' } = props;\n    const [referenceId, setReferenceId] = React.useState(cardContextDefaultValue.selectableA11yProps.referenceId);\n    const [referenceLabel, setReferenceLabel] = React.useState(cardContextDefaultValue.selectableA11yProps.referenceId);\n    const cardBaseRef = useFocusWithin();\n    const { selectable, selected, selectableCardProps, selectFocused, checkboxSlot, floatingActionSlot } = useCardSelectable(props, {\n        referenceId,\n        referenceLabel\n    }, cardBaseRef);\n    const cardRef = useMergedRefs(cardBaseRef, ref);\n    const { interactive, focusAttributes } = useCardInteractive(props);\n    return {\n        appearance,\n        orientation,\n        size,\n        interactive,\n        selectable,\n        selectFocused,\n        selected,\n        selectableA11yProps: {\n            setReferenceId,\n            referenceId,\n            referenceLabel,\n            setReferenceLabel\n        },\n        components: {\n            root: 'div',\n            floatingAction: 'div',\n            checkbox: 'input'\n        },\n        root: slot.always(getIntrinsicElementProps('div', {\n            ref: cardRef,\n            role: 'group',\n            ...!selectable ? focusAttributes : null,\n            ...props,\n            ...selectableCardProps\n        }), {\n            elementType: 'div'\n        }),\n        floatingAction: floatingActionSlot,\n        checkbox: checkboxSlot\n    };\n};\n"],"names":["useCard_unstable","focusMap","off","undefined","useCardInteractive","focusMode","props","interactive","some","prop","groupperAttrs","useFocusableGroup","tabBehavior","interactiveFocusAttributes","tabIndex","focusAttributes","ref","appearance","orientation","size","referenceId","setReferenceId","React","useState","cardContextDefaultValue","selectableA11yProps","referenceLabel","setReferenceLabel","cardBaseRef","useFocusWithin","selectable","selected","selectableCardProps","selectFocused","checkboxSlot","floatingActionSlot","useCardSelectable","cardRef","useMergedRefs","components","root","floatingAction","checkbox","slot","always","getIntrinsicElementProps","role","elementType"],"mappings":";;;;+BAmDiBA;;;eAAAA;;;;iEAnDM;gCACuC;8BACZ;mCAChB;6BACM;AACxC,MAAMC,WAAW;IACbC,KAAKC;IACL,UAAU;IACV,YAAY;IACZ,YAAY;AAChB;AACA;;;;;;;CAOC,GAAG,MAAMC,qBAAqB,CAAC,EAAEC,YAAY,KAAK,EAAE,GAAGC,OAAO;IAC3D,MAAMC,cAAc;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KACH,CAACC,IAAI,CAAC,CAACC,OAAOH,KAAK,CAACG,KAAK;IAC1B,MAAMC,gBAAgBC,IAAAA,+BAAiB,EAAC;QACpCC,aAAaX,QAAQ,CAACM,cAAc,WAAWF,UAAU;IAC7D;IACA,MAAMQ,6BAA6B;QAC/B,GAAGH,aAAa;QAChBI,UAAU;IACd;IACA,OAAO;QACHP;QACAQ,iBAAiB,CAACR,eAAeF,cAAc,QAAQ,OAAOQ;IAClE;AACJ;AASW,MAAMb,mBAAmB,CAACM,OAAOU;IACxC,MAAM,EAAEC,aAAa,QAAQ,EAAEC,cAAc,UAAU,EAAEC,OAAO,QAAQ,EAAE,GAAGb;IAC7E,MAAM,CAACc,aAAaC,eAAe,GAAGC,OAAMC,QAAQ,CAACC,oCAAuB,CAACC,mBAAmB,CAACL,WAAW;IAC5G,MAAM,CAACM,gBAAgBC,kBAAkB,GAAGL,OAAMC,QAAQ,CAACC,oCAAuB,CAACC,mBAAmB,CAACL,WAAW;IAClH,MAAMQ,cAAcC,IAAAA,4BAAc;IAClC,MAAM,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,YAAY,EAAEC,kBAAkB,EAAE,GAAGC,IAAAA,oCAAiB,EAAC9B,OAAO;QAC5Hc;QACAM;IACJ,GAAGE;IACH,MAAMS,UAAUC,IAAAA,6BAAa,EAACV,aAAaZ;IAC3C,MAAM,EAAET,WAAW,EAAEQ,eAAe,EAAE,GAAGX,mBAAmBE;IAC5D,OAAO;QACHW;QACAC;QACAC;QACAZ;QACAuB;QACAG;QACAF;QACAN,qBAAqB;YACjBJ;YACAD;YACAM;YACAC;QACJ;QACAY,YAAY;YACRC,MAAM;YACNC,gBAAgB;YAChBC,UAAU;QACd;QACAF,MAAMG,oBAAI,CAACC,MAAM,CAACC,IAAAA,wCAAwB,EAAC,OAAO;YAC9C7B,KAAKqB;YACLS,MAAM;YACN,GAAG,CAAChB,aAAaf,kBAAkB,IAAI;YACvC,GAAGT,KAAK;YACR,GAAG0B,mBAAmB;QAC1B,IAAI;YACAe,aAAa;QACjB;QACAN,gBAAgBN;QAChBO,UAAUR;IACd;AACJ"}