{"version":3,"names":["__resetStyles","mergeClasses","shorthands","tokens","typographyStyles","dialogContentClassNames","root","useStyles","useDialogContentStyles_unstable","state","styles","className"],"sources":["useDialogContentStyles.styles.js"],"sourcesContent":["import { makeResetStyles, mergeClasses, shorthands } from '@griffel/react';\nimport { tokens, typographyStyles } from '@fluentui/react-theme';\nexport const dialogContentClassNames = {\n    root: 'fui-DialogContent'\n};\n/**\n * Styles for the root slot\n */ const useStyles = makeResetStyles({\n    ...shorthands.padding(tokens.strokeWidthThick),\n    ...shorthands.margin(`calc(${tokens.strokeWidthThick} * -1)`),\n    ...typographyStyles.body1,\n    overflowY: 'auto',\n    minHeight: '32px',\n    boxSizing: 'border-box',\n    gridRowStart: 2,\n    gridRowEnd: 2,\n    gridColumnStart: 1,\n    gridColumnEnd: 4\n});\n/**\n * Apply styling to the DialogContent slots based on the state\n */ export const useDialogContentStyles_unstable = (state)=>{\n    const styles = useStyles();\n    state.root.className = mergeClasses(dialogContentClassNames.root, styles, state.root.className);\n    return state;\n};\n"],"mappings":"AAAA,SAAAA,aAAA,EAA0BC,YAAY,EAAEC,UAAU,QAAQ,gBAAgB;AAC1E,SAASC,MAAM,EAAEC,gBAAgB,QAAQ,uBAAuB;AAChE,OAAO,MAAMC,uBAAuB,GAAG;EACnCC,IAAI,EAAE;AACV,CAAC;AACD;AACA;AACA;AAAI,MAAMC,SAAS,gBAAGP,aAAA,ivCAWrB,CAAC;AACF;AACA;AACA;AAAI,OAAO,MAAMQ,+BAA+B,GAAIC,KAAK,IAAG;EACxD,MAAMC,MAAM,GAAGH,SAAS,CAAC,CAAC;EAC1BE,KAAK,CAACH,IAAI,CAACK,SAAS,GAAGV,YAAY,CAACI,uBAAuB,CAACC,IAAI,EAAEI,MAAM,EAAED,KAAK,CAACH,IAAI,CAACK,SAAS,CAAC;EAC/F,OAAOF,KAAK;AAChB,CAAC"}