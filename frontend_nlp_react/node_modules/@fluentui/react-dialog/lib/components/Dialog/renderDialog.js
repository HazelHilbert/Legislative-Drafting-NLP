  import { jsx as _jsx, jsxs as _jsxs } from "@fluentui/react-jsx-runtime/jsx-runtime";
import { Transition } from 'react-transition-group';
import { DialogProvider, DialogSurfaceProvider } from '../../contexts';
import { DialogTransitionProvider } from '../../contexts/dialogTransitionContext';
/**
 * Render the final JSX of Dialog
 */ export const renderDialog_unstable = (state, contextValues)=>{
    const { content, trigger } = state;
    return /*#__PURE__*/ _jsx(DialogProvider, {
        value: contextValues.dialog,
        children: /*#__PURE__*/ _jsxs(DialogSurfaceProvider, {
            value: contextValues.dialogSurface,
            children: [
                trigger,
                process.env.NODE_ENV === 'test' ? state.open && /*#__PURE__*/ _jsx(DialogTransitionProvider, {
                    value: undefined,
                    children: content
                }) : /*#__PURE__*/ _jsx(Transition, {
                    mountOnEnter: true,
                    unmountOnExit: true,
                    in: state.open,
                    nodeRef: state.dialogRef,
                    appear: true,
                    // FIXME: this should not be hardcoded tokens.durationGentle
                    timeout: 250,
                    children: (status)=>/*#__PURE__*/ _jsx(DialogTransitionProvider, {
                            value: status,
                            children: content
                        })
                })
            ]
        })
    });
};
