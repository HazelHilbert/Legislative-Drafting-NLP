{"version":3,"sources":["createJSX.ts"],"sourcesContent":["import { isSlot } from '@fluentui/react-utilities';\nimport * as React from 'react';\nimport { createCompatSlotComponent } from '../utils/createCompatSlotComponent';\nimport { JSXRuntime, JSXSlotRuntime } from '../utils/types';\nimport { warnIfElementTypeIsInvalid } from '../utils/warnIfElementTypeIsInvalid';\n\nexport function createJSX(runtime: JSXRuntime, slotRuntime: JSXSlotRuntime) {\n  return function jsx<Props extends {}>(\n    type: React.ElementType<Props>,\n    overrideProps: Props | null,\n    key?: React.Key,\n    source?: unknown,\n    self?: unknown,\n  ): React.ReactElement<Props> {\n    // TODO:\n    // this is for backwards compatibility with getSlotsNext\n    // it should be removed once getSlotsNext is obsolete\n    if (isSlot<Props>(overrideProps)) {\n      return slotRuntime<Props>(createCompatSlotComponent(type, overrideProps), null, key, source, self);\n    }\n    if (isSlot<Props>(type)) {\n      return slotRuntime(type, overrideProps, key, source, self);\n    }\n    warnIfElementTypeIsInvalid(type);\n    return runtime(type, overrideProps, key, source, self);\n  };\n}\n"],"names":["isSlot","React","createCompatSlotComponent","warnIfElementTypeIsInvalid","createJSX","runtime","slotRuntime","jsx","type","overrideProps","key","source","self"],"mappings":"AAAA,SAASA,MAAM,QAAQ,4BAA4B;AACnD,YAAYC,WAAW,QAAQ;AAC/B,SAASC,yBAAyB,QAAQ,qCAAqC;AAE/E,SAASC,0BAA0B,QAAQ,sCAAsC;AAEjF,OAAO,SAASC,UAAUC,OAAmB,EAAEC,WAA2B;IACxE,OAAO,SAASC,IACdC,IAA8B,EAC9BC,aAA2B,EAC3BC,GAAe,EACfC,MAAgB,EAChBC,IAAc;QAEd,QAAQ;QACR,wDAAwD;QACxD,qDAAqD;QACrD,IAAIZ,OAAcS,gBAAgB;YAChC,OAAOH,YAAmBJ,0BAA0BM,MAAMC,gBAAgB,MAAMC,KAAKC,QAAQC;QAC/F;QACA,IAAIZ,OAAcQ,OAAO;YACvB,OAAOF,YAAYE,MAAMC,eAAeC,KAAKC,QAAQC;QACvD;QACAT,2BAA2BK;QAC3B,OAAOH,QAAQG,MAAMC,eAAeC,KAAKC,QAAQC;IACnD;AACF"}