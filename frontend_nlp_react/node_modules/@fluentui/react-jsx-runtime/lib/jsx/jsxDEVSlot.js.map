{"version":3,"sources":["jsxDEVSlot.ts"],"sourcesContent":["import * as React from 'react';\nimport { SlotComponentType, UnknownSlotProps } from '@fluentui/react-utilities';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { DevRuntime } from '../utils/DevRuntime';\n\nexport const jsxDEVSlot = <Props extends UnknownSlotProps>(\n  type: SlotComponentType<Props>,\n  overrideProps: Props | null,\n  key?: React.Key,\n  source?: unknown,\n  self?: unknown,\n): React.ReactElement<Props> => {\n  const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n\n  const props: Props = { ...slotProps, ...overrideProps };\n\n  if (renderFunction) {\n    // if runtime is static\n    if (source === true) {\n      return DevRuntime.jsxDEV(\n        React.Fragment,\n        {\n          children: renderFunction(elementType, {\n            ...props,\n            /**\n             * If the runtime is static then children is an array and this array won't be keyed.\n             * Then we should wrap children by a static fragment\n             * as there's no way to know if renderFunction will render statically or dynamically\n             */\n            children: DevRuntime.jsxDEV(React.Fragment, { children: props.children }, undefined, true, self),\n          }),\n        },\n        key,\n        false, // by marking source as false we're declaring that this render is dynamic\n        self,\n      ) as React.ReactElement<Props>;\n    }\n    // if runtime is dynamic (source = false) things are simpler\n    return DevRuntime.jsxDEV(\n      React.Fragment,\n      { children: renderFunction(elementType, props) },\n      key,\n      source,\n      self,\n    ) as React.ReactElement<Props>;\n  }\n  return DevRuntime.jsxDEV(elementType, props, key, source, self);\n};\n"],"names":["React","getMetadataFromSlotComponent","DevRuntime","jsxDEVSlot","type","overrideProps","key","source","self","elementType","renderFunction","props","slotProps","jsxDEV","Fragment","children","undefined"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAE/B,SAASC,4BAA4B,QAAQ,wCAAwC;AACrF,SAASC,UAAU,QAAQ,sBAAsB;AAEjD,OAAO,MAAMC,aAAa,CACxBC,MACAC,eACAC,KACAC,QACAC;IAEA,MAAM,EAAEC,WAAW,EAAEC,cAAc,EAAEC,OAAOC,SAAS,EAAE,GAAGX,6BAA6BG;IAEvF,MAAMO,QAAe;QAAE,GAAGC,SAAS;QAAE,GAAGP,aAAa;IAAC;IAEtD,IAAIK,gBAAgB;QAClB,uBAAuB;QACvB,IAAIH,WAAW,MAAM;YACnB,OAAOL,WAAWW,MAAM,CACtBb,MAAMc,QAAQ,EACd;gBACEC,UAAUL,eAAeD,aAAa;oBACpC,GAAGE,KAAK;oBACR;;;;aAIC,GACDI,UAAUb,WAAWW,MAAM,CAACb,MAAMc,QAAQ,EAAE;wBAAEC,UAAUJ,MAAMI,QAAQ;oBAAC,GAAGC,WAAW,MAAMR;gBAC7F;YACF,GACAF,KACA,OACAE;QAEJ;QACA,4DAA4D;QAC5D,OAAON,WAAWW,MAAM,CACtBb,MAAMc,QAAQ,EACd;YAAEC,UAAUL,eAAeD,aAAaE;QAAO,GAC/CL,KACAC,QACAC;IAEJ;IACA,OAAON,WAAWW,MAAM,CAACJ,aAAaE,OAAOL,KAAKC,QAAQC;AAC5D,EAAE"}