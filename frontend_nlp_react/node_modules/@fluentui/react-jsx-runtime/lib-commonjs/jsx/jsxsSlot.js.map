{"version":3,"sources":["jsxsSlot.js"],"sourcesContent":["import * as React from 'react';\nimport { getMetadataFromSlotComponent } from '../utils/getMetadataFromSlotComponent';\nimport { Runtime } from '../utils/Runtime';\nexport const jsxsSlot = (type, overrideProps, key)=>{\n    const { elementType, renderFunction, props: slotProps } = getMetadataFromSlotComponent(type);\n    const props = {\n        ...slotProps,\n        ...overrideProps\n    };\n    if (renderFunction) {\n        /**\n     * In static runtime then children is an array and this array won't be keyed.\n     * We should wrap children by a static fragment\n     * as there's no way to know if renderFunction will render statically or dynamically\n     */ return Runtime.jsx(React.Fragment, {\n            children: renderFunction(elementType, {\n                ...props,\n                children: Runtime.jsxs(React.Fragment, {\n                    children: props.children\n                }, undefined)\n            })\n        }, key);\n    }\n    return Runtime.jsxs(elementType, props, key);\n};\n"],"names":["jsxsSlot","type","overrideProps","key","elementType","renderFunction","props","slotProps","getMetadataFromSlotComponent","Runtime","jsx","React","Fragment","children","jsxs","undefined"],"mappings":";;;;+BAGaA;;;eAAAA;;;;iEAHU;8CACsB;yBACrB;AACjB,MAAMA,WAAW,CAACC,MAAMC,eAAeC;IAC1C,MAAM,EAAEC,WAAW,EAAEC,cAAc,EAAEC,OAAOC,SAAS,EAAE,GAAGC,IAAAA,0DAA4B,EAACP;IACvF,MAAMK,QAAQ;QACV,GAAGC,SAAS;QACZ,GAAGL,aAAa;IACpB;IACA,IAAIG,gBAAgB;QAChB;;;;KAIH,GAAG,OAAOI,gBAAO,CAACC,GAAG,CAACC,OAAMC,QAAQ,EAAE;YAC/BC,UAAUR,eAAeD,aAAa;gBAClC,GAAGE,KAAK;gBACRO,UAAUJ,gBAAO,CAACK,IAAI,CAACH,OAAMC,QAAQ,EAAE;oBACnCC,UAAUP,MAAMO,QAAQ;gBAC5B,GAAGE;YACP;QACJ,GAAGZ;IACP;IACA,OAAOM,gBAAO,CAACK,IAAI,CAACV,aAAaE,OAAOH;AAC5C"}