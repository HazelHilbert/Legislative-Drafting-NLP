{"version":3,"sources":["useMessageBarBody.ts"],"sourcesContent":["import * as React from 'react';\nimport { getIntrinsicElementProps, slot, useMergedRefs } from '@fluentui/react-utilities';\nimport type { MessageBarBodyProps, MessageBarBodyState } from './MessageBarBody.types';\nimport { useMessageBarContext } from '../../contexts/messageBarContext';\n\n/**\n * Create the state required to render MessageBarBody.\n *\n * The returned state can be modified with hooks such as useMessageBarBodyStyles_unstable,\n * before being passed to renderMessageBarBody_unstable.\n *\n * @param props - props from this instance of MessageBarBody\n * @param ref - reference to root HTMLElement of MessageBarBody\n */\nexport const useMessageBarBody_unstable = (\n  props: MessageBarBodyProps,\n  ref: React.Ref<HTMLDivElement>,\n): MessageBarBodyState => {\n  const { bodyRef } = useMessageBarContext();\n  return {\n    components: {\n      root: 'div',\n    },\n    root: slot.always(\n      getIntrinsicElementProps('div', {\n        ref: useMergedRefs(ref, bodyRef),\n        ...props,\n      }),\n      { elementType: 'div' },\n    ),\n  };\n};\n"],"names":["React","getIntrinsicElementProps","slot","useMergedRefs","useMessageBarContext","useMessageBarBody_unstable","props","ref","bodyRef","components","root","always","elementType"],"mappings":"AAAA,YAAYA,WAAW,QAAQ;AAC/B,SAASC,wBAAwB,EAAEC,IAAI,EAAEC,aAAa,QAAQ,4BAA4B;AAE1F,SAASC,oBAAoB,QAAQ,mCAAmC;AAExE;;;;;;;;CAQC,GACD,OAAO,MAAMC,6BAA6B,CACxCC,OACAC;IAEA,MAAM,EAAEC,OAAO,EAAE,GAAGJ;IACpB,OAAO;QACLK,YAAY;YACVC,MAAM;QACR;QACAA,MAAMR,KAAKS,MAAM,CACfV,yBAAyB,OAAO;YAC9BM,KAAKJ,cAAcI,KAAKC;YACxB,GAAGF,KAAK;QACV,IACA;YAAEM,aAAa;QAAM;IAEzB;AACF,EAAE"}