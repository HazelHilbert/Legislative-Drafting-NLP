{"version":3,"sources":["ToastContainer.types.ts"],"sourcesContent":["import * as React from 'react';\nimport type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport { Announce } from '../AriaLive/AriaLive.types';\nimport { Toast, ToastIntent } from '../../state';\nimport { ToastContainerContextValue } from '../../contexts/toastContainerContext';\nimport { TimerProps } from '../Timer/Timer';\n\nexport type ToastContainerContextValues = {\n  toast: ToastContainerContextValue;\n};\n\nexport type ToastContainerSlots = {\n  root: NonNullable<Slot<'div'>>;\n  timer: NonNullable<Slot<TimerProps>>;\n};\n\n/**\n * ToastContainer Props\n */\nexport type ToastContainerProps = Omit<ComponentProps<Partial<ToastContainerSlots>>, 'content'> &\n  Toast & {\n    visible: boolean;\n    announce: Announce;\n    intent: ToastIntent | undefined;\n    tryRestoreFocus: () => void;\n  };\n\n/**\n * State used in rendering ToastContainer\n */\nexport type ToastContainerState = ComponentState<ToastContainerSlots> &\n  Pick<ToastContainerProps, 'remove' | 'close' | 'updateId' | 'visible' | 'intent'> &\n  Pick<ToastContainerContextValue, 'titleId' | 'bodyId'> & {\n    transitionTimeout: number;\n    timerTimeout: number;\n    running: boolean;\n    onTransitionEntering: () => void;\n    nodeRef: React.Ref<HTMLDivElement>;\n  };\n"],"names":["React"],"mappings":"AAAA,YAAYA,WAAW,QAAQ"}