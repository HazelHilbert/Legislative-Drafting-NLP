{"version":3,"sources":["Toaster.types.ts"],"sourcesContent":["import type { ComponentProps, ComponentState, Slot } from '@fluentui/react-utilities';\nimport type { PortalProps } from '@fluentui/react-portal';\nimport { ToasterOptions } from '../../state/types';\nimport { Announce, AriaLiveProps } from '../AriaLive';\n\nexport type ToasterSlots = {\n  /**\n   * NOTE: This root slot maps in exactly the same way to the containers rendered for each toast position\n   * There is no intention (currently) to let users customize the div for each toast position.\n   */\n  root: Slot<'div'>;\n};\n\nexport type ToasterSlotsInternal = ToasterSlots & {\n  bottomEnd?: Slot<'div'>;\n  bottomStart?: Slot<'div'>;\n  topEnd?: Slot<'div'>;\n  topStart?: Slot<'div'>;\n  top?: Slot<'div'>;\n  bottom?: Slot<'div'>;\n};\n\n/**\n * Toaster Props\n */\nexport type ToasterProps = Omit<ComponentProps<ToasterSlots>, 'children'> &\n  Partial<ToasterOptions> &\n  Pick<PortalProps, 'mountNode'> & {\n    /**\n     * User override API for aria-live narration for toasts\n     */\n    announce?: Announce;\n\n    inline?: boolean;\n  };\n\n/**\n * State used in rendering Toaster\n */\nexport type ToasterState = ComponentState<ToasterSlotsInternal> &\n  Pick<AriaLiveProps, 'announceRef'> &\n  Pick<PortalProps, 'mountNode'> &\n  Pick<Required<ToasterProps>, 'announce' | 'inline'> & {\n    offset: ToasterOptions['offset'] | undefined;\n    renderAriaLive: boolean;\n    dir: 'rtl' | 'ltr';\n  };\n"],"names":[],"mappings":"AAAA,WA8CI"}