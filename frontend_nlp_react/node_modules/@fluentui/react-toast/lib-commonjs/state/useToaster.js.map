{"version":3,"sources":["useToaster.js"],"sourcesContent":["import * as React from 'react';\nimport { isHTMLElement, useEventCallback, useForceUpdate } from '@fluentui/react-utilities';\nimport { useFluent_unstable as useFluent } from '@fluentui/react-shared-contexts';\nimport { createToaster } from './vanilla';\nimport { EVENTS } from './constants';\nexport function useToaster(options = {}) {\n    const forceUpdate = useForceUpdate();\n    const { toasterId: userToasterId, shortcuts } = options;\n    // Currently the toaster options can never be changed at runtime\n    const [toaster] = React.useState(()=>createToaster(options));\n    const { targetDocument } = useFluent();\n    const lastActiveElementRef = React.useRef(null);\n    const isCorrectToaster = useEventCallback((toasterId)=>{\n        return toasterId === userToasterId;\n    });\n    const isFocusShortcut = useEventCallback((e)=>{\n        if (shortcuts === null || shortcuts === void 0 ? void 0 : shortcuts.focus) {\n            return shortcuts.focus(e);\n        }\n    });\n    const pauseAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            var _toast_imperativeRef_current;\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n        });\n    }, [\n        toaster\n    ]);\n    const playAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            var _toast_imperativeRef_current;\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n        });\n    }, [\n        toaster\n    ]);\n    const getMostRecentVisibleToast = React.useCallback(()=>{\n        return Array.from(toaster.visibleToasts).reduce((cur, next)=>{\n            const toast = toaster.toasts.get(next);\n            if (!toast) {\n                return cur;\n            }\n            if (!cur) {\n                return toast;\n            }\n            if (cur.order < (toast === null || toast === void 0 ? void 0 : toast.order)) {\n                return toast;\n            }\n            return cur;\n        }, undefined);\n    }, [\n        toaster\n    ]);\n    const tryRestoreFocus = React.useCallback(()=>{\n        const mostRecentToast = getMostRecentVisibleToast();\n        if (mostRecentToast === null || mostRecentToast === void 0 ? void 0 : mostRecentToast.imperativeRef.current) {\n            mostRecentToast.imperativeRef.current.focus();\n        } else {\n            var _lastActiveElementRef_current;\n            (_lastActiveElementRef_current = lastActiveElementRef.current) === null || _lastActiveElementRef_current === void 0 ? void 0 : _lastActiveElementRef_current.focus();\n            lastActiveElementRef.current = null;\n        }\n    }, [\n        getMostRecentVisibleToast\n    ]);\n    const closeAllToasts = React.useCallback(()=>{\n        toaster.visibleToasts.forEach((toastId)=>{\n            const toast = toaster.toasts.get(toastId);\n            toast === null || toast === void 0 ? void 0 : toast.close();\n        });\n        tryRestoreFocus();\n    }, [\n        toaster,\n        tryRestoreFocus\n    ]);\n    React.useEffect(()=>{\n        if (!targetDocument) {\n            return;\n        }\n        const addToastListener = (eventType, callback)=>{\n            const listener = (e)=>{\n                if (!isCorrectToaster(e.detail.toasterId)) {\n                    return;\n                }\n                callback(e);\n                forceUpdate();\n            };\n            targetDocument.addEventListener(eventType, listener);\n            return ()=>targetDocument.removeEventListener(eventType, listener);\n        };\n        const buildToast = (e)=>{\n            toaster.buildToast(e.detail, forceUpdate);\n        };\n        const dismissToast = (e)=>{\n            toaster.dismissToast(e.detail.toastId);\n        };\n        const updateToast = (e)=>{\n            toaster.updateToast(e.detail);\n        };\n        const dismissAllToasts = (e)=>{\n            toaster.dismissAllToasts();\n        };\n        const pauseToast = (e)=>{\n            const toast = toaster.toasts.get(e.detail.toastId);\n            if (toast) {\n                var _toast_imperativeRef_current;\n                (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.pause();\n            }\n        };\n        const playToast = (e)=>{\n            const toast = toaster.toasts.get(e.detail.toastId);\n            if (toast) {\n                var _toast_imperativeRef_current;\n                (_toast_imperativeRef_current = toast.imperativeRef.current) === null || _toast_imperativeRef_current === void 0 ? void 0 : _toast_imperativeRef_current.play();\n            }\n        };\n        const cleanupBuildListener = addToastListener(EVENTS.show, buildToast);\n        const cleanupUpdateListener = addToastListener(EVENTS.update, updateToast);\n        const cleanupDismissListener = addToastListener(EVENTS.dismiss, dismissToast);\n        const cleanupDismissAllListener = addToastListener(EVENTS.dismissAll, dismissAllToasts);\n        const cleanupPauseListener = addToastListener(EVENTS.pause, pauseToast);\n        const cleanupPlayListener = addToastListener(EVENTS.play, playToast);\n        const focusShortcutListener = (e)=>{\n            if (isFocusShortcut(e)) {\n                pauseAllToasts();\n                const mostRecentToast = getMostRecentVisibleToast();\n                if (mostRecentToast) {\n                    var _mostRecentToast_imperativeRef_current;\n                    lastActiveElementRef.current = isHTMLElement(targetDocument.activeElement) ? targetDocument.activeElement : null;\n                    (_mostRecentToast_imperativeRef_current = mostRecentToast.imperativeRef.current) === null || _mostRecentToast_imperativeRef_current === void 0 ? void 0 : _mostRecentToast_imperativeRef_current.focus();\n                }\n            }\n        };\n        targetDocument.addEventListener('keydown', focusShortcutListener);\n        return ()=>{\n            cleanupBuildListener();\n            cleanupDismissAllListener();\n            cleanupUpdateListener();\n            cleanupDismissListener();\n            cleanupPauseListener();\n            cleanupPlayListener();\n            targetDocument.removeEventListener('keydown', focusShortcutListener);\n        };\n    }, [\n        toaster,\n        forceUpdate,\n        targetDocument,\n        isCorrectToaster,\n        pauseAllToasts,\n        getMostRecentVisibleToast,\n        isFocusShortcut\n    ]);\n    const toastsToRender = (()=>{\n        if (!toaster) {\n            return new Map();\n        }\n        const toRender = new Map();\n        const toasts = Array.from(toaster.toasts.values());\n        toasts.forEach((toast)=>{\n            const { position } = toast;\n            toRender.has(position) || toRender.set(position, []);\n            if (position.startsWith('bottom')) {\n                toRender.get(position).push(toast);\n            } else {\n                toRender.get(position).unshift(toast);\n            }\n        });\n        return toRender;\n    })();\n    return {\n        isToastVisible: toaster.isToastVisible,\n        toastsToRender,\n        pauseAllToasts,\n        playAllToasts,\n        tryRestoreFocus,\n        closeAllToasts\n    };\n}\n"],"names":["useToaster","options","forceUpdate","useForceUpdate","toasterId","userToasterId","shortcuts","toaster","React","useState","createToaster","targetDocument","useFluent","lastActiveElementRef","useRef","isCorrectToaster","useEventCallback","isFocusShortcut","e","focus","pauseAllToasts","useCallback","visibleToasts","forEach","toastId","_toast_imperativeRef_current","toast","toasts","get","imperativeRef","current","pause","playAllToasts","play","getMostRecentVisibleToast","Array","from","reduce","cur","next","order","undefined","tryRestoreFocus","mostRecentToast","_lastActiveElementRef_current","closeAllToasts","close","useEffect","addToastListener","eventType","callback","listener","detail","addEventListener","removeEventListener","buildToast","dismissToast","updateToast","dismissAllToasts","pauseToast","playToast","cleanupBuildListener","EVENTS","show","cleanupUpdateListener","update","cleanupDismissListener","dismiss","cleanupDismissAllListener","dismissAll","cleanupPauseListener","cleanupPlayListener","focusShortcutListener","_mostRecentToast_imperativeRef_current","isHTMLElement","activeElement","toastsToRender","Map","toRender","values","position","has","set","startsWith","push","unshift","isToastVisible"],"mappings":";;;;+BAKgBA;;;eAAAA;;;;iEALO;gCACyC;qCAChB;yBAClB;2BACP;AAChB,SAASA,WAAWC,UAAU,CAAC,CAAC;IACnC,MAAMC,cAAcC,IAAAA,8BAAc;IAClC,MAAM,EAAEC,WAAWC,aAAa,EAAEC,SAAS,EAAE,GAAGL;IAChD,gEAAgE;IAChE,MAAM,CAACM,QAAQ,GAAGC,OAAMC,QAAQ,CAAC,IAAIC,IAAAA,sBAAa,EAACT;IACnD,MAAM,EAAEU,cAAc,EAAE,GAAGC,IAAAA,uCAAS;IACpC,MAAMC,uBAAuBL,OAAMM,MAAM,CAAC;IAC1C,MAAMC,mBAAmBC,IAAAA,gCAAgB,EAAC,CAACZ;QACvC,OAAOA,cAAcC;IACzB;IACA,MAAMY,kBAAkBD,IAAAA,gCAAgB,EAAC,CAACE;QACtC,IAAIZ,cAAc,QAAQA,cAAc,KAAK,IAAI,KAAK,IAAIA,UAAUa,KAAK,EAAE;YACvE,OAAOb,UAAUa,KAAK,CAACD;QAC3B;IACJ;IACA,MAAME,iBAAiBZ,OAAMa,WAAW,CAAC;QACrCd,QAAQe,aAAa,CAACC,OAAO,CAAC,CAACC;YAC3B,IAAIC;YACJ,MAAMC,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACJ;YACjCE,UAAU,QAAQA,UAAU,KAAK,IAAI,KAAK,IAAI,AAACD,CAAAA,+BAA+BC,MAAMG,aAAa,CAACC,OAAO,AAAD,MAAO,QAAQL,iCAAiC,KAAK,IAAI,KAAK,IAAIA,6BAA6BM,KAAK;QAChN;IACJ,GAAG;QACCxB;KACH;IACD,MAAMyB,gBAAgBxB,OAAMa,WAAW,CAAC;QACpCd,QAAQe,aAAa,CAACC,OAAO,CAAC,CAACC;YAC3B,IAAIC;YACJ,MAAMC,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACJ;YACjCE,UAAU,QAAQA,UAAU,KAAK,IAAI,KAAK,IAAI,AAACD,CAAAA,+BAA+BC,MAAMG,aAAa,CAACC,OAAO,AAAD,MAAO,QAAQL,iCAAiC,KAAK,IAAI,KAAK,IAAIA,6BAA6BQ,IAAI;QAC/M;IACJ,GAAG;QACC1B;KACH;IACD,MAAM2B,4BAA4B1B,OAAMa,WAAW,CAAC;QAChD,OAAOc,MAAMC,IAAI,CAAC7B,QAAQe,aAAa,EAAEe,MAAM,CAAC,CAACC,KAAKC;YAClD,MAAMb,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACW;YACjC,IAAI,CAACb,OAAO;gBACR,OAAOY;YACX;YACA,IAAI,CAACA,KAAK;gBACN,OAAOZ;YACX;YACA,IAAIY,IAAIE,KAAK,GAAId,CAAAA,UAAU,QAAQA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMc,KAAK,AAAD,GAAI;gBACzE,OAAOd;YACX;YACA,OAAOY;QACX,GAAGG;IACP,GAAG;QACClC;KACH;IACD,MAAMmC,kBAAkBlC,OAAMa,WAAW,CAAC;QACtC,MAAMsB,kBAAkBT;QACxB,IAAIS,oBAAoB,QAAQA,oBAAoB,KAAK,IAAI,KAAK,IAAIA,gBAAgBd,aAAa,CAACC,OAAO,EAAE;YACzGa,gBAAgBd,aAAa,CAACC,OAAO,CAACX,KAAK;QAC/C,OAAO;YACH,IAAIyB;YACHA,CAAAA,gCAAgC/B,qBAAqBiB,OAAO,AAAD,MAAO,QAAQc,kCAAkC,KAAK,IAAI,KAAK,IAAIA,8BAA8BzB,KAAK;YAClKN,qBAAqBiB,OAAO,GAAG;QACnC;IACJ,GAAG;QACCI;KACH;IACD,MAAMW,iBAAiBrC,OAAMa,WAAW,CAAC;QACrCd,QAAQe,aAAa,CAACC,OAAO,CAAC,CAACC;YAC3B,MAAME,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACJ;YACjCE,UAAU,QAAQA,UAAU,KAAK,IAAI,KAAK,IAAIA,MAAMoB,KAAK;QAC7D;QACAJ;IACJ,GAAG;QACCnC;QACAmC;KACH;IACDlC,OAAMuC,SAAS,CAAC;QACZ,IAAI,CAACpC,gBAAgB;YACjB;QACJ;QACA,MAAMqC,mBAAmB,CAACC,WAAWC;YACjC,MAAMC,WAAW,CAACjC;gBACd,IAAI,CAACH,iBAAiBG,EAAEkC,MAAM,CAAChD,SAAS,GAAG;oBACvC;gBACJ;gBACA8C,SAAShC;gBACThB;YACJ;YACAS,eAAe0C,gBAAgB,CAACJ,WAAWE;YAC3C,OAAO,IAAIxC,eAAe2C,mBAAmB,CAACL,WAAWE;QAC7D;QACA,MAAMI,aAAa,CAACrC;YAChBX,QAAQgD,UAAU,CAACrC,EAAEkC,MAAM,EAAElD;QACjC;QACA,MAAMsD,eAAe,CAACtC;YAClBX,QAAQiD,YAAY,CAACtC,EAAEkC,MAAM,CAAC5B,OAAO;QACzC;QACA,MAAMiC,cAAc,CAACvC;YACjBX,QAAQkD,WAAW,CAACvC,EAAEkC,MAAM;QAChC;QACA,MAAMM,mBAAmB,CAACxC;YACtBX,QAAQmD,gBAAgB;QAC5B;QACA,MAAMC,aAAa,CAACzC;YAChB,MAAMQ,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACV,EAAEkC,MAAM,CAAC5B,OAAO;YACjD,IAAIE,OAAO;gBACP,IAAID;gBACHA,CAAAA,+BAA+BC,MAAMG,aAAa,CAACC,OAAO,AAAD,MAAO,QAAQL,iCAAiC,KAAK,IAAI,KAAK,IAAIA,6BAA6BM,KAAK;YAClK;QACJ;QACA,MAAM6B,YAAY,CAAC1C;YACf,MAAMQ,QAAQnB,QAAQoB,MAAM,CAACC,GAAG,CAACV,EAAEkC,MAAM,CAAC5B,OAAO;YACjD,IAAIE,OAAO;gBACP,IAAID;gBACHA,CAAAA,+BAA+BC,MAAMG,aAAa,CAACC,OAAO,AAAD,MAAO,QAAQL,iCAAiC,KAAK,IAAI,KAAK,IAAIA,6BAA6BQ,IAAI;YACjK;QACJ;QACA,MAAM4B,uBAAuBb,iBAAiBc,iBAAM,CAACC,IAAI,EAAER;QAC3D,MAAMS,wBAAwBhB,iBAAiBc,iBAAM,CAACG,MAAM,EAAER;QAC9D,MAAMS,yBAAyBlB,iBAAiBc,iBAAM,CAACK,OAAO,EAAEX;QAChE,MAAMY,4BAA4BpB,iBAAiBc,iBAAM,CAACO,UAAU,EAAEX;QACtE,MAAMY,uBAAuBtB,iBAAiBc,iBAAM,CAAC/B,KAAK,EAAE4B;QAC5D,MAAMY,sBAAsBvB,iBAAiBc,iBAAM,CAAC7B,IAAI,EAAE2B;QAC1D,MAAMY,wBAAwB,CAACtD;YAC3B,IAAID,gBAAgBC,IAAI;gBACpBE;gBACA,MAAMuB,kBAAkBT;gBACxB,IAAIS,iBAAiB;oBACjB,IAAI8B;oBACJ5D,qBAAqBiB,OAAO,GAAG4C,IAAAA,6BAAa,EAAC/D,eAAegE,aAAa,IAAIhE,eAAegE,aAAa,GAAG;oBAC3GF,CAAAA,yCAAyC9B,gBAAgBd,aAAa,CAACC,OAAO,AAAD,MAAO,QAAQ2C,2CAA2C,KAAK,IAAI,KAAK,IAAIA,uCAAuCtD,KAAK;gBAC1M;YACJ;QACJ;QACAR,eAAe0C,gBAAgB,CAAC,WAAWmB;QAC3C,OAAO;YACHX;YACAO;YACAJ;YACAE;YACAI;YACAC;YACA5D,eAAe2C,mBAAmB,CAAC,WAAWkB;QAClD;IACJ,GAAG;QACCjE;QACAL;QACAS;QACAI;QACAK;QACAc;QACAjB;KACH;IACD,MAAM2D,iBAAiB,AAAC,CAAA;QACpB,IAAI,CAACrE,SAAS;YACV,OAAO,IAAIsE;QACf;QACA,MAAMC,WAAW,IAAID;QACrB,MAAMlD,SAASQ,MAAMC,IAAI,CAAC7B,QAAQoB,MAAM,CAACoD,MAAM;QAC/CpD,OAAOJ,OAAO,CAAC,CAACG;YACZ,MAAM,EAAEsD,QAAQ,EAAE,GAAGtD;YACrBoD,SAASG,GAAG,CAACD,aAAaF,SAASI,GAAG,CAACF,UAAU,EAAE;YACnD,IAAIA,SAASG,UAAU,CAAC,WAAW;gBAC/BL,SAASlD,GAAG,CAACoD,UAAUI,IAAI,CAAC1D;YAChC,OAAO;gBACHoD,SAASlD,GAAG,CAACoD,UAAUK,OAAO,CAAC3D;YACnC;QACJ;QACA,OAAOoD;IACX,CAAA;IACA,OAAO;QACHQ,gBAAgB/E,QAAQ+E,cAAc;QACtCV;QACAxD;QACAY;QACAU;QACAG;IACJ;AACJ"}