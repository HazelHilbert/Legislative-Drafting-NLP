#!/usr/bin/env node
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
const commander = require("commander");
const office_addin_usage_data_1 = require("office-addin-usage-data");
const commands = require("./commands");
/* global process */
commander.name("office-addin-manifest");
commander.version(process.env.npm_package_version || "(version not available)");
commander.command("info <manifest-path>").action(commands.info);
commander
    .command("modify <manifest-path>")
    .option("-g,--guid [guid]", "Change the guid. A random guid is used if one is not provided.")
    .option("-d, --displayName <name>", "Change the display name.")
    .action(commands.modify);
commander
    .command("validate <manifest-path>")
    .option("-p, --production", "Verify the manifest for production environment")
    .action(commands.validate);
commander
    .command("export")
    .option("-m, --manifest <manfest-path>", "Specify the location of the manifest file.  Default is './manifest.json'")
    .option("-o, --output <output-path>", "Specify where to save the package.  Default is next to the manifest file input")
    .action(commands.exportManifest);
// if the command is not known, display an error
commander.on("command:*", function () {
    (0, office_addin_usage_data_1.logErrorMessage)(`The command syntax is not valid.\n`);
    process.exitCode = 1;
    commander.help();
});
if (process.argv.length > 2) {
    commander.parse(process.argv);
}
else {
    commander.help();
}
//# sourceMappingURL=cli.js.map