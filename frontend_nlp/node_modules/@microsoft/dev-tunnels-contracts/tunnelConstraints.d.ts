/**
 * Tunnel constraints.
 */
export declare namespace TunnelConstraints {
    /**
     * Min length of tunnel cluster ID.
     */
    const clusterIdMinLength: number;
    /**
     * Max length of tunnel cluster ID.
     */
    const clusterIdMaxLength: number;
    /**
     * Length of V1 tunnel id.
     */
    const oldTunnelIdLength: number;
    /**
     * Min length of V2 tunnelId.
     */
    const newTunnelIdMinLength: number;
    /**
     * Max length of V2 tunnelId.
     */
    const newTunnelIdMaxLength: number;
    /**
     * Length of a tunnel alias.
     */
    const tunnelAliasLength: number;
    /**
     * Min length of tunnel name.
     */
    const tunnelNameMinLength: number;
    /**
     * Max length of tunnel name.
     */
    const tunnelNameMaxLength: number;
    /**
     * Max length of tunnel or port description.
     */
    const descriptionMaxLength: number;
    /**
     * Min length of a single tunnel or port tag.
     */
    const labelMinLength: number;
    /**
     * Max length of a single tunnel or port tag.
     */
    const labelMaxLength: number;
    /**
     * Maximum number of labels that can be applied to a tunnel or port.
     */
    const maxLabels: number;
    /**
     * Min length of a tunnel domain.
     */
    const tunnelDomainMinLength: number;
    /**
     * Max length of a tunnel domain.
     */
    const tunnelDomainMaxLength: number;
    /**
     * Maximum number of items allowed in the tunnel ports array. The actual limit on
     * number of ports that can be created may be much lower, and may depend on various
     * resource limitations or policies.
     */
    const tunnelMaxPorts: number;
    /**
     * Maximum number of access control entries (ACEs) in a tunnel or tunnel port access
     * control list (ACL).
     */
    const accessControlMaxEntries: number;
    /**
     * Maximum number of subjects (such as user IDs) in a tunnel or tunnel port access
     * control entry (ACE).
     */
    const accessControlMaxSubjects: number;
    /**
     * Max length of an access control subject or organization ID.
     */
    const accessControlSubjectMaxLength: number;
    /**
     * Max length of an access control subject name, when resolving names to IDs.
     */
    const accessControlSubjectNameMaxLength: number;
    /**
     * Maximum number of scopes in an access control entry.
     */
    const accessControlMaxScopes: number;
    /**
     * Regular expression that can match or validate tunnel cluster ID strings.
     *
     * Cluster IDs are alphanumeric; hyphens are not permitted.
     */
    const clusterIdPattern: string;
    /**
     * Regular expression that can match or validate tunnel cluster ID strings.
     *
     * Cluster IDs are alphanumeric; hyphens are not permitted.
     */
    const clusterIdRegex: RegExp;
    /**
     * Characters that are valid in tunnel IDs. Includes numbers and lowercase letters,
     * excluding vowels and 'y' (to avoid accidentally generating any random words).
     */
    const oldTunnelIdChars: string;
    /**
     * Regular expression that can match or validate tunnel ID strings.
     *
     * Tunnel IDs are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const oldTunnelIdPattern: string;
    /**
     * Regular expression that can match or validate tunnel ID strings.
     *
     * Tunnel IDs are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const oldTunnelIdRegex: RegExp;
    /**
     * Characters that are valid in tunnel IDs. Includes numbers and lowercase letters,
     * excluding vowels and 'y' (to avoid accidentally generating any random words).
     */
    const newTunnelIdChars: string;
    /**
     * Regular expression that can match or validate tunnel ID strings.
     *
     * Tunnel IDs are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const newTunnelIdPattern: string;
    /**
     * Regular expression that can match or validate tunnel ID strings.
     *
     * Tunnel IDs are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const newTunnelIdRegex: RegExp;
    /**
     * Characters that are valid in tunnel IDs. Includes numbers and lowercase letters,
     * excluding vowels and 'y' (to avoid accidentally generating any random words).
     */
    const tunnelAliasChars: string;
    /**
     * Regular expression that can match or validate tunnel alias strings.
     *
     * Tunnel Aliases are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const tunnelAliasPattern: string;
    /**
     * Regular expression that can match or validate tunnel alias strings.
     *
     * Tunnel Aliases are fixed-length and have a limited character set of numbers and
     * lowercase letters (minus vowels and y).
     */
    const tunnelAliasRegex: RegExp;
    /**
     * Regular expression that can match or validate tunnel names.
     *
     * Tunnel names are alphanumeric and may contain hyphens. The pattern also allows an
     * empty string because tunnels may be unnamed.
     */
    const tunnelNamePattern: string;
    /**
     * Regular expression that can match or validate tunnel names.
     *
     * Tunnel names are alphanumeric and may contain hyphens. The pattern also allows an
     * empty string because tunnels may be unnamed.
     */
    const tunnelNameRegex: RegExp;
    /**
     * Regular expression that can match or validate tunnel or port labels.
     */
    const labelPattern: string;
    /**
     * Regular expression that can match or validate tunnel or port labels.
     */
    const labelRegex: RegExp;
    /**
     * Regular expression that can match or validate tunnel domains.
     *
     * The tunnel service may perform additional contextual validation at the time the
     * domain is registered.
     */
    const tunnelDomainPattern: string;
    /**
     * Regular expression that can match or validate tunnel domains.
     *
     * The tunnel service may perform additional contextual validation at the time the
     * domain is registered.
     */
    const tunnelDomainRegex: RegExp;
    /**
     * Regular expression that can match or validate an access control subject or
     * organization ID.
     *
     * The : and / characters are allowed because subjects may include IP addresses and
     * ranges. The @ character is allowed because MSA subjects may be identified by email
     * address.
     */
    const accessControlSubjectPattern: string;
    /**
     * Regular expression that can match or validate an access control subject or
     * organization ID.
     */
    const accessControlSubjectRegex: RegExp;
    /**
     * Regular expression that can match or validate an access control subject name, when
     * resolving subject names to IDs.
     *
     * Note angle-brackets are only allowed when they wrap an email address as part of a
     * formatted name with email. The service will block any other use of angle-brackets,
     * to avoid any XSS risks.
     */
    const accessControlSubjectNamePattern: string;
    /**
     * Regular expression that can match or validate an access control subject name, when
     * resolving subject names to IDs.
     */
    const accessControlSubjectNameRegex: RegExp;
}
//# sourceMappingURL=tunnelConstraints.d.ts.map