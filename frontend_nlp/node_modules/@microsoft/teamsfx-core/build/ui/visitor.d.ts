import { FxError, IQTreeNode, InputResult, Inputs, MultiSelectQuestion, Question, Result, SingleSelectQuestion, StaticOptions, TelemetryReporter, UserInteraction, Void } from "@microsoft/teamsfx-api";
export declare function isAutoSkipSelect(q: Question): boolean;
export declare function getSingleOption(q: SingleSelectQuestion | MultiSelectQuestion, option?: StaticOptions): any;
export declare function loadOptions(question: SingleSelectQuestion | MultiSelectQuestion, inputs: Inputs): Promise<StaticOptions>;
export declare type QuestionTreeVisitor = (question: Question, ui: UserInteraction, inputs: Inputs, step?: number, totalSteps?: number) => Promise<Result<InputResult<any>, FxError>>;
/**
 * ask question when visiting the question tree
 * @param question
 * @param core
 * @param inputs
 */
export declare const questionVisitor: QuestionTreeVisitor;
/**
 * serialize the tree node into array in DFS order
 */
export declare function collect(node: IQTreeNode, list: IQTreeNode[], parentMap: Map<IQTreeNode, IQTreeNode>): void;
export declare function traverse(root: IQTreeNode, inputs: Inputs, ui: UserInteraction, telemetryReporter?: TelemetryReporter, visitor?: QuestionTreeVisitor): Promise<Result<Void, FxError>>;
//# sourceMappingURL=visitor.d.ts.map