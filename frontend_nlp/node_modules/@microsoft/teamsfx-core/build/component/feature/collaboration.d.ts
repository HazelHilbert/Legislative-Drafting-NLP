import { Context, FxError, LogProvider, M365TokenProvider, Result } from "@microsoft/teamsfx-api";
import { AadOwner, ResourcePermission, TeamsAppAdmin } from "../../common/permissionInterface";
import { AppUser } from "../driver/teamsApp/interfaces/appdefinitions/appUser";
export declare class AadCollaboration {
    private readonly aadAppClient;
    constructor(m365TokenProvider: M365TokenProvider, logProvider?: LogProvider);
    grantPermission(ctx: Context, objectId: string, userObjectId: string): Promise<Result<ResourcePermission[], FxError>>;
    listCollaborator(ctx: Context, objectId: string): Promise<Result<AadOwner[], FxError>>;
    checkPermission(ctx: Context, objectId: string, userObjectId: string): Promise<Result<ResourcePermission[], FxError>>;
    private handleError;
}
export declare class TeamsCollaboration {
    private readonly tokenProvider;
    constructor(ctx: Context, m365TokenProvider: M365TokenProvider);
    grantPermission(ctx: Context, teamsAppId: string, userInfo: AppUser): Promise<Result<ResourcePermission[], FxError>>;
    listCollaborator(ctx: Context, teamsAppId: string): Promise<Result<TeamsAppAdmin[], FxError>>;
    checkPermission(ctx: Context, teamsAppId: string, userInfo: AppUser): Promise<Result<ResourcePermission[], FxError>>;
    private handleError;
}
//# sourceMappingURL=collaboration.d.ts.map