"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.RetryHandler = void 0;
/**
 * @author Qianhao Dong <qidon@microsoft.com>
 */
const constants_1 = require("./constants");
class RetryHandler {
    static async Retry(fn, ignoreError = false) {
        var _a;
        let retries = constants_1.Retry.RETRY_TIMES;
        while (retries > 0) {
            retries = retries - 1;
            try {
                return await fn();
            }
            catch (e) {
                // Directly throw 404 error, keep trying for other status code e.g. 503 400 500
                if (retries <= 0 || [401, 403, 404, 429].includes((_a = e.response) === null || _a === void 0 ? void 0 : _a.status)) {
                    if (!ignoreError)
                        throw e;
                }
                else {
                    await new Promise((resolve) => setTimeout(resolve, constants_1.Retry.BACKOFF_TIME_MS));
                }
            }
        }
        return undefined;
    }
}
exports.RetryHandler = RetryHandler;
//# sourceMappingURL=retryHandler.js.map