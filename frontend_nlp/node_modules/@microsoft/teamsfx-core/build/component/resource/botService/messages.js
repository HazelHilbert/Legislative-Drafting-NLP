"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.Messages = void 0;
/**
 * @author Qianhao Dong <qidon@microsoft.com>
 */
const localizeUtils_1 = require("../../../common/localizeUtils");
function localString(key, ...params) {
    return [localizeUtils_1.getDefaultString(key, ...params), localizeUtils_1.getLocalizedString(key, ...params)];
}
class Messages {
}
exports.Messages = Messages;
Messages.SomethingIsMissing = (something) => localString("plugins.bot.SomethingIsMissing", something);
Messages.FailToProvisionSomeResource = (resource) => localString("plugins.bot.FailedToProvision", resource);
Messages.FailToUpdateConfigs = (something) => localString("plugins.bot.FailedToUpdateConfigs", something);
Messages.BotRegistrationNotFoundWith = (botId) => localString("plugins.bot.BotRegistrationNotFoundWith", botId);
Messages.BotResourceExist = (where) => localizeUtils_1.getLocalizedString("plugins.bot.BotResourceExists", where);
Messages.ProvisioningBotRegistration = localizeUtils_1.getLocalizedString("plugins.bot.ProvisionBotRegistration");
Messages.SuccessfullyProvisionedBotRegistration = localizeUtils_1.getLocalizedString("plugins.bot.ProvisionBotRegistrationSuccess");
// Suggestions
Messages.RetryTheCurrentStep = localizeUtils_1.getLocalizedString("suggestions.retryTheCurrentStep");
Messages.CheckOutputLogAndTryToFix = localizeUtils_1.getLocalizedString("plugins.bot.CheckLogAndFix");
Messages.NotAllowedToAcquireBotFrameworkToken = () => localString("error.appstudio.NotAllowedToAcquireBotFrameworkToken");
Messages.BotProvisionReturnsForbiddenResult = () => localString("error.appstudio.BotProvisionReturnsForbiddenResult");
Messages.BotProvisionReturnsConflictResult = () => localString("error.appstudio.BotProvisionReturnsConflictResult");
//# sourceMappingURL=messages.js.map