import { Context, SystemError, UserError } from "@microsoft/teamsfx-api";
import { DriverContext } from "../../interface/commonArgs";
export declare enum TelemetryPropertyKey {
    component = "component",
    errorType = "error-type",
    errorCode = "error-code",
    errorMessage = "error-message",
    updateExistingApp = "update",
    success = "success",
    appId = "appid",
    tenantId = "tenant-id",
    publishedAppId = "published-app-id",
    customizedKeys = "customized-manifest-keys",
    customizedOpenAPIKeys = "customized-openapi-keys",
    validationErrors = "validation-errors",
    validationWarnings = "validation-warnings",
    OverwriteIfAppAlreadyExists = "overwrite-if-app-already-exists",
    region = "region"
}
export declare enum TelemetryEventName {
    checkPermission = "check-permission",
    grantPermission = "grant-permission",
    listCollaborator = "list-collaborator",
    appStudioApi = "app-studio-api",
    authSvcApi = "auth-svc-api"
}
export declare class TelemetryUtils {
    static ctx: Context | DriverContext;
    static init(ctx: Context | DriverContext): void;
    static sendStartEvent(eventName: string, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendSuccessEvent(eventName: string, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    static sendErrorEvent(eventName: string, error: SystemError | UserError, _properties?: {
        [key: string]: string;
    }, measurements?: {
        [key: string]: number;
    }): void;
    private static addCommonProperty;
}
//# sourceMappingURL=telemetry.d.ts.map