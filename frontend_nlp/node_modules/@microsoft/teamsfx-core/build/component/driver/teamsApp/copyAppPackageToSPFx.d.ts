/// <reference types="node" />
import { DriverContext } from "../interface/commonArgs";
import { ExecutionResult, StepDriver } from "../interface/stepDriver";
import { WrapDriverContext } from "../util/wrapUtil";
import { copyAppPackageToSPFxArgs } from "./interfaces/CopyAppPackageToSPFxArgs";
export declare class copyAppPackageToSPFxDriver implements StepDriver {
    readonly description: string;
    readonly progressTitle: string;
    private readonly EmptyMap;
    private asCopyAppPackageArgs;
    execute(args: copyAppPackageToSPFxArgs, ctx: DriverContext): Promise<ExecutionResult>;
    copy(args: copyAppPackageToSPFxArgs, context: WrapDriverContext): Promise<Map<string, string>>;
    getIcons(appPackagePath: string): Promise<IIcons>;
}
interface IIcons {
    color?: Buffer;
    outline?: Buffer;
}
export {};
//# sourceMappingURL=copyAppPackageToSPFx.d.ts.map