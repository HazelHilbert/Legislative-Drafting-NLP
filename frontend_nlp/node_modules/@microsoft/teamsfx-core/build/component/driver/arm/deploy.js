"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArmDeployDriver = void 0;
const tslib_1 = require("tslib");
const typedi_1 = require("typedi");
const constant_1 = require("./constant");
const deployImpl_1 = require("./deployImpl");
const wrapUtil_1 = require("../util/wrapUtil");
const localizeUtils_1 = require("../../../common/localizeUtils");
let ArmDeployDriver = class ArmDeployDriver {
    constructor() {
        this.description = localizeUtils_1.getLocalizedString("driver.arm.description.deploy");
        this.progressTitle = localizeUtils_1.getLocalizedString("driver.arm.deploy.progressBar.message");
    }
    async execute(args, ctx) {
        const wrapContext = new wrapUtil_1.WrapDriverContext(ctx, constant_1.Constants.actionName, constant_1.Constants.actionName);
        const impl = new deployImpl_1.ArmDeployImpl(args, wrapContext);
        const wrapRes = await wrapUtil_1.wrapRun(wrapContext, () => impl.run(), true);
        return wrapRes;
    }
};
ArmDeployDriver = tslib_1.__decorate([
    typedi_1.Service(constant_1.Constants.actionName) // DO NOT MODIFY the service name
], ArmDeployDriver);
exports.ArmDeployDriver = ArmDeployDriver;
//# sourceMappingURL=deploy.js.map