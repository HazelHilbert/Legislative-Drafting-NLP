import { FxError, LogProvider, Result } from "@microsoft/teamsfx-api";
import { ExecutionResult, ILifecycle } from "../configManager/interface";
declare type LifecycleState = {
    name: string;
    status: "succeeded" | "failed" | "notExecuted";
    actionStates: ActionState[];
};
declare type ActionState = {
    name: string;
    status: "succeeded" | "failed" | "notExecuted";
    summaries: string[];
};
export declare class SummaryReporter {
    private lifecycles;
    lifecycleStates: LifecycleState[];
    private log;
    constructor(lifecycles: ILifecycle[], log: LogProvider);
    getLifecycleDescriptions(): Result<string, FxError>;
    updateLifecycleState(index: number, execResult: ExecutionResult): void;
    getLifecycleSummary(createdEnvFile?: undefined): string;
}
export {};
//# sourceMappingURL=summary.d.ts.map