import { LogProvider } from "@microsoft/teamsfx-api";
import { AxiosInstance } from "axios";
import { DebugLogger } from "../../../../common/deps-checker/util/cpUtils";
export declare class Utils {
    static configure(configurePath: string, map: Map<string, string>): Promise<void>;
    static normalizeComponentName(name: string): string;
    static execute(command: string, title?: string, workingDir?: string, logProvider?: LogProvider, showInOutputWindow?: boolean): Promise<string>;
    static createAxiosInstanceWithToken(accessToken: string): AxiosInstance;
    static getPackageVersion(pkgName: string): string | undefined;
    static hasNPM(logger: DebugLogger | undefined): Promise<boolean>;
    static getNPMMajorVersion(logger: DebugLogger | undefined): Promise<string | undefined>;
    static getNodeVersion(): Promise<string | undefined>;
    static findGloballyInstalledVersion(logger: LogProvider | undefined, packageName: string, timeoutInSeconds: number, shouldThrowIfNotFound?: boolean): Promise<string | undefined>;
    static findLatestVersion(logger: LogProvider | undefined, packageName: string, timeoutInSeconds: number): Promise<string | undefined>;
    static truncateAppShortName(appName: string): string;
}
export declare function getExecCommand(command: string): string;
//# sourceMappingURL=utils.d.ts.map