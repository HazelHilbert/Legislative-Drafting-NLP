"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.TelemetryMeasurement = exports.TelemtryMessages = exports.DepsCheckerEvent = exports.Messages = void 0;
/* eslint-disable @typescript-eslint/no-var-requires */
// NOTE:
// DO NOT EDIT this file in function plugin.
// The source of truth of this file is in packages/vscode-extension/src/debug/depsChecker.
// If you need to edit this file, please edit it in the above folder
// and run the scripts (tools/depsChecker/copyfiles.sh or tools/depsChecker/copyfiles.ps1 according to your OS)
// to copy you changes to function plugin.
const localizeUtils_1 = require("../../../common/localizeUtils");
exports.Messages = {
    downloadBicep: () => localizeUtils_1.getLocalizedString("depChecker.downloadBicep"),
    finishInstallBicep: () => localizeUtils_1.getLocalizedString("depChecker.finishInstallBicep"),
};
var DepsCheckerEvent;
(function (DepsCheckerEvent) {
    // since FuncToolChecker is disabled and azure functions core tools will be installed as devDependencies now,
    // below events related to FuncToolChecker won't be displayed to end user.
    DepsCheckerEvent["bicepCheckSkipped"] = "bicep-check-skipped";
    DepsCheckerEvent["bicepAlreadyInstalled"] = "bicep-already-installed";
    DepsCheckerEvent["bicepInstallCompleted"] = "bicep-install-completed";
    DepsCheckerEvent["bicepInstallError"] = "bicep-install-error";
    DepsCheckerEvent["bicepInstallScriptCompleted"] = "bicep-install-script-completed";
    DepsCheckerEvent["bicepInstallScriptError"] = "bicep-install-script-error";
    DepsCheckerEvent["bicepValidationError"] = "bicep-validation-error";
    DepsCheckerEvent["bicepFailedToRetrieveGithubReleaseVersions"] = "bicep-failed-to-retrieve-github-release-versions";
    DepsCheckerEvent["clickLearnMore"] = "env-checker-click-learn-more";
    DepsCheckerEvent["clickCancel"] = "env-checker-click-cancel";
})(DepsCheckerEvent = exports.DepsCheckerEvent || (exports.DepsCheckerEvent = {}));
var TelemtryMessages;
(function (TelemtryMessages) {
    TelemtryMessages["failedToInstallBicep"] = "failed to install Bicep.";
    TelemtryMessages["failedToValidateBicep"] = "failed to validate Bicep.";
})(TelemtryMessages = exports.TelemtryMessages || (exports.TelemtryMessages = {}));
var TelemetryMeasurement;
(function (TelemetryMeasurement) {
    TelemetryMeasurement["completionTime"] = "completion-time";
    TelemetryMeasurement["OSArch"] = "os-arch";
    TelemetryMeasurement["OSRelease"] = "os-release";
    TelemetryMeasurement["Component"] = "component";
    TelemetryMeasurement["ErrorMessage"] = "error-message";
})(TelemetryMeasurement = exports.TelemetryMeasurement || (exports.TelemetryMeasurement = {}));
//# sourceMappingURL=common.js.map