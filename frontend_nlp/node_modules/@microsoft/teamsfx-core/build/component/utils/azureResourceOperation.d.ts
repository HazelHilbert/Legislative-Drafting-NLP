import { AzureResourceInfo } from "../driver/interface/commonArgs";
import { AzureAccountProvider } from "@microsoft/teamsfx-api";
import { BlobServiceClient } from "@azure/storage-blob";
import { StorageAccounts } from "@azure/arm-storage";
import { TokenCredential } from "@azure/identity";
/**
 * parse Azure resource id into subscriptionId, resourceGroupName and resourceName
 * @param resourceId Azure resource id
 * @param pattern the pattern that used to parse resource id and extract info from it
 */
export declare function parseAzureResourceId(resourceId: string, pattern: RegExp): AzureResourceInfo;
/**
 * get Azure credential from Azure account provider
 * @param tokenProvider Azure account provider
 */
export declare function getAzureAccountCredential(tokenProvider: AzureAccountProvider): Promise<TokenCredential>;
/**
 * create Azure Storage Blob Service Client
 * @param azureResource azure resource info
 * @param azureCredential azure user credential
 */
export declare function createBlobServiceClient(azureResource: AzureResourceInfo, azureCredential: TokenCredential): Promise<BlobServiceClient>;
export declare function generateSasToken(client: StorageAccounts, resourceGroupName: string, storageName: string): Promise<string>;
//# sourceMappingURL=azureResourceOperation.d.ts.map