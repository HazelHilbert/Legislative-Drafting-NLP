import { AzureAccountProvider, FxError, InputsWithProjectPath, M365TokenProvider, Result, SubscriptionInfo } from "@microsoft/teamsfx-api";
import { DriverContext } from "./driver/interface/commonArgs";
import { ResourceGroupInfo } from "./utils/ResourceGroupHelper";
export interface M365TenantRes {
    tenantIdInToken: string;
    tenantUserName: string;
}
declare class ProvisionUtils {
    /**
     * make sure subscription is correct before provision for V3
     * subscriptionId is provided from .env.xxx file
     */
    ensureSubscription(azureAccountProvider: AzureAccountProvider, givenSubscriptionId?: string): Promise<Result<SubscriptionInfo, FxError>>;
    ensureResourceGroup(inputs: InputsWithProjectPath, azureAccountProvider: AzureAccountProvider, subscriptionId: string, givenResourceGroupName?: string, defaultResourceGroupName?: string): Promise<Result<ResourceGroupInfo, FxError>>;
    getM365TenantId(m365TokenProvider: M365TokenProvider): Promise<Result<M365TenantRes, FxError>>;
    askForProvisionConsentV3(ctx: DriverContext, m365tenant: M365TenantRes | undefined, azureSubInfo: SubscriptionInfo, envName: string | undefined): Promise<Result<undefined, FxError>>;
    ensureM365TenantMatchesV3(actions: string[], tenantId: string | undefined): Result<undefined, FxError>;
}
export declare const provisionUtils: ProvisionUtils;
export {};
//# sourceMappingURL=provisionUtils.d.ts.map