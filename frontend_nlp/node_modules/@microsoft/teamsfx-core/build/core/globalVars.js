"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.setErrorContext = exports.resetErrorContext = exports.ErrorContextMW = exports.globalVars = exports.setLocale = exports.setTools = exports.Locale = exports.TOOLS = void 0;
function setTools(tools) {
    exports.TOOLS = tools;
}
exports.setTools = setTools;
function setLocale(locale) {
    exports.Locale = locale;
}
exports.setLocale = setLocale;
class GlobalVars {
    constructor() {
        this.isVS = false;
        this.teamsAppId = "";
        this.m365TenantId = "";
        //properties for error telemetry
        this.stage = "";
        this.source = "";
        this.component = "";
        this.method = "";
    }
}
exports.globalVars = new GlobalVars();
function ErrorContextMW(option) {
    return async (ctx, next) => {
        option.method = ctx.method;
        setErrorContext(option);
        await next();
        if (option.reset) {
            resetErrorContext();
        }
    };
}
exports.ErrorContextMW = ErrorContextMW;
function resetErrorContext() {
    exports.globalVars.stage = "";
    exports.globalVars.source = "";
    exports.globalVars.component = "";
    exports.globalVars.method = "";
}
exports.resetErrorContext = resetErrorContext;
function setErrorContext(option) {
    if (option.reset) {
        resetErrorContext();
    }
    exports.globalVars.component = option.component || exports.globalVars.component;
    exports.globalVars.source = option.source || exports.globalVars.source;
    exports.globalVars.stage = option.stage || exports.globalVars.stage;
    exports.globalVars.method = option.method || exports.globalVars.method;
}
exports.setErrorContext = setErrorContext;
//# sourceMappingURL=globalVars.js.map