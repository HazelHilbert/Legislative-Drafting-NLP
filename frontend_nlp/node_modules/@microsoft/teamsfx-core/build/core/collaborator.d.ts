import { Context, FxError, InputsWithProjectPath, M365TokenProvider, Result, TokenProvider } from "@microsoft/teamsfx-api";
import { AppIds, ListCollaboratorResult, PermissionsResult } from "../common/permissionInterface";
import { AppUser } from "../component/driver/teamsApp/interfaces/appdefinitions/appUser";
export declare class CollaborationConstants {
    static readonly TeamsAppId = "teamsAppId";
    static readonly AadObjectId = "aadObjectId";
    static readonly DotEnvFilePath = "dotEnvFilePath";
    static readonly AadObjectIdEnv = "AAD_APP_OBJECT_ID";
    static readonly TeamsAppIdEnv = "TEAMS_APP_ID";
    static readonly TeamsAppTenantIdEnv = "TEAMS_APP_TENANT_ID";
    static readonly AppType = "collaborationType";
    static readonly TeamsAppQuestionId = "teamsApp";
    static readonly AadAppQuestionId = "aadApp";
    static readonly placeholderRegex: RegExp;
}
export declare class CollaborationUtil {
    static getCurrentUserInfo(m365TokenProvider?: M365TokenProvider): Promise<Result<AppUser, FxError>>;
    static getUserInfo(m365TokenProvider?: M365TokenProvider, email?: string): Promise<AppUser | undefined>;
    static loadDotEnvFile(dotEnvFilePath: string): Promise<Result<{
        [key: string]: string;
    }, FxError>>;
    static getTeamsAppIdAndAadObjectId(inputs: InputsWithProjectPath): Promise<Result<AppIds, FxError>>;
    static loadManifestId(manifestFilePath: string): Promise<Result<string, FxError>>;
    static requireEnvQuestion(appId: string): boolean;
    static parseManifestId(appId: string): string | undefined;
}
export declare function listCollaborator(ctx: Context, inputs: InputsWithProjectPath, tokenProvider: TokenProvider, telemetryProps?: Record<string, string>): Promise<Result<ListCollaboratorResult, FxError>>;
export declare function checkPermission(ctx: Context, inputs: InputsWithProjectPath, tokenProvider: TokenProvider, telemetryProps?: Record<string, string>): Promise<Result<PermissionsResult, FxError>>;
export declare function grantPermission(ctx: Context, inputs: InputsWithProjectPath, tokenProvider: TokenProvider): Promise<Result<PermissionsResult, FxError>>;
//# sourceMappingURL=collaborator.d.ts.map