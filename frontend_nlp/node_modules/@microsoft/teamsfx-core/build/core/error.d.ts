import { FxError, Inputs, SystemError, UserError } from "@microsoft/teamsfx-api";
export declare const CoreSource = "Core";
export declare const UpgradeSource = "Upgrade";
export declare function MigrationError(e: Error, name: string, helpLink?: string): UserError;
export declare function CopyFileError(e: Error): SystemError;
export declare class NoProjectOpenedError extends UserError {
    constructor();
}
export declare function InvalidInputError(reason: string, inputs?: Inputs): UserError;
export declare function InvalidEnvNameError(): UserError;
export declare function ProjectEnvAlreadyExistError(env: string): FxError;
export declare class ObjectIsUndefinedError extends SystemError {
    constructor(name: string);
}
export declare function UpgradeV3CanceledError(): UserError;
export declare function IncompatibleProjectError(messageKey: string): UserError;
export declare function AbandonedProjectError(): UserError;
export declare function FailedToParseResourceIdError(name: string, resourceId: string): UserError;
export declare function NpmInstallError(path: string, e: Error): SystemError;
export declare class VideoFilterAppRemoteNotSupportedError extends UserError {
    constructor();
}
export declare class NotAllowedMigrationError extends UserError {
    constructor();
}
export declare class FailedToLoadManifestId extends UserError {
    constructor(manifestPath: string);
}
export declare class AppIdNotExist extends UserError {
    constructor(appId: string);
}
//# sourceMappingURL=error.d.ts.map