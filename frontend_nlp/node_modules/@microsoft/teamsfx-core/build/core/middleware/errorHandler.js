// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.convertError = exports.ErrorHandlerMW = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const globalVars_1 = require("../globalVars");
const common_1 = require("../../error/common");
/**
 * in case there're some uncatched exceptions, this middleware will act as a guard
 * to catch exceptions and return specific error.
 */
const ErrorHandlerMW = async (ctx, next) => {
    var _a;
    const inputs = ctx.arguments[ctx.arguments.length - 1];
    if (inputs === null || inputs === void 0 ? void 0 : inputs.locale)
        globalVars_1.setLocale(inputs.locale);
    try {
        await next();
    }
    catch (e) {
        const fxError = common_1.assembleError(e);
        ctx.result = teamsfx_api_1.err(fxError);
    }
    if ((_a = ctx.result) === null || _a === void 0 ? void 0 : _a.isErr()) {
        let fxError = ctx.result.error;
        fxError = convertError(fxError);
        ctx.result = teamsfx_api_1.err(fxError);
    }
};
exports.ErrorHandlerMW = ErrorHandlerMW;
const Reg1 = /The client '.+' with object id '.+' does not have authorization to perform action '.+' over scope '.+' or the scope is invalid. If access was recently granted, please refresh your credentials\./;
const Reg2 = /"resourceGroupName" with value ".+" should satisfy the constraint "Pattern"/;
const Reg3 = /Resource '.+' was disallowed by policy./;
const Reg4 = /The subscription '.+' is disabled and therefore marked as read only. You cannot perform any write actions on this subscription until it is re-enabled\./;
const Reg5 = /The current subscription type is not permitted to perform operations on any provider namespace. Please use a different subscription\./;
const Reg6 = /The provided location '.+' is not available for resource group\. List of available regions is '.+'\./;
const Reg7 = /The subscription '.+' could not be found\./;
const Reg8 = /Invalid resource group location '.+'. The Resource group already exists in location '.+'\./;
const Reg9 = /The access token is from the wrong issuer '.+'\./;
const Reg10 = /Entry not found in cache\./;
const Reg11 = /request to .+ failed, reason: .+/;
const Reg12 = /.+no space left on device.+/;
// const Reg12 = /ENOENT: no such file or directory/;
// const Reg13 = /EBUSY: resource busy or locked/;
// const Reg14 = /Lock is not .+ by you/;
const Reg15 = /EPERM: operation not permitted/;
const Regs = [Reg1, Reg2, Reg3, Reg4, Reg5, Reg6, Reg7, Reg8, Reg9, Reg10, Reg11, Reg12];
function convertError(err) {
    const msg = err.message;
    if (!msg)
        return err;
    if (Reg15.test(msg) === true) {
        const userError = new common_1.FilePermissionError(err, err.source);
        return userError;
    }
    for (const reg of Regs) {
        if (reg.test(msg) === true) {
            const userError = new teamsfx_api_1.UserError(err.source, err.name, err.message, err.displayMessage);
            userError.stack = err.stack;
            return userError;
        }
    }
    return err;
}
exports.convertError = convertError;
//# sourceMappingURL=errorHandler.js.map