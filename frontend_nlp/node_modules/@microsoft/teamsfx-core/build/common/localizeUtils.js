"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDefaultString = exports.getLocalizedString = void 0;
const tslib_1 = require("tslib");
const globalVars_1 = require("../core/globalVars");
const folder_1 = require("../folder");
const path = tslib_1.__importStar(require("path"));
const fs_extra_1 = tslib_1.__importDefault(require("fs-extra"));
const util = tslib_1.__importStar(require("util"));
const LocaleStringMap = new Map();
function getLocaleJson(locale) {
    locale = locale || "";
    const jsonInMap = LocaleStringMap.get(locale);
    if (jsonInMap)
        return jsonInMap;
    const nlsFileName = globalVars_1.Locale ? `package.nls.${globalVars_1.Locale}.json` : "package.nls.json";
    let nlsFilePath = path.join(folder_1.getResourceFolder(), nlsFileName);
    if (!fs_extra_1.default.pathExistsSync(nlsFilePath)) {
        // if nls file does not exist, just read the default one
        nlsFilePath = path.join(folder_1.getResourceFolder(), "package.nls.json");
    }
    const json = fs_extra_1.default.readJSONSync(nlsFilePath);
    if (json) {
        LocaleStringMap.set(locale, json);
    }
    return json;
}
function getLocalizedString(key, ...params) {
    const json = getLocaleJson(globalVars_1.Locale);
    let value = json[key];
    if (value && params && params.length > 0) {
        value = util.format(value, ...params);
    }
    if (!value) {
        return getDefaultString(key, ...params);
    }
    return value || "";
}
exports.getLocalizedString = getLocalizedString;
function getDefaultString(key, ...params) {
    const json = getLocaleJson("");
    let value = json[key];
    if (value && params && params.length > 0) {
        value = util.format(value, ...params);
    }
    return value || "";
}
exports.getDefaultString = getDefaultString;
//# sourceMappingURL=localizeUtils.js.map