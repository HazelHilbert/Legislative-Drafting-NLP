// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.execShell = exports.execPowerShell = void 0;
const tslib_1 = require("tslib");
const cp = tslib_1.__importStar(require("child_process"));
/**
 * Run PowerShell command and return stdout content.
 * Note: the return value may contains EOL.
 */
function execPowerShell(command) {
    return new Promise((resolve, reject) => {
        try {
            const psCommand = `powershell.exe -NoProfile -ExecutionPolicy unrestricted -Command "${command}"`;
            cp.exec(psCommand, { cwd: process.cwd(), maxBuffer: 500 * 1024, timeout: 100000, killSignal: "SIGKILL" }, (error, stdout, stderr) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(stdout);
                }
            });
        }
        catch (error) {
            reject(error);
        }
    });
}
exports.execPowerShell = execPowerShell;
/**
 * Run shell command and return stdout content.
 * Note: the return value may contains EOL.
 */
function execShell(command) {
    return new Promise((resolve, reject) => {
        try {
            cp.exec(command, { cwd: process.cwd(), maxBuffer: 500 * 1024, timeout: 100000, killSignal: "SIGKILL" }, (error, stdout, stderr) => {
                if (error) {
                    reject(error);
                }
                else {
                    resolve(stdout);
                }
            });
        }
        catch (error) {
            reject(error);
        }
    });
}
exports.execShell = execShell;
//# sourceMappingURL=process.js.map