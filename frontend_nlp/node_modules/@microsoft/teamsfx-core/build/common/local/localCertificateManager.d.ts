import { LogProvider, UserInteraction, FxError } from "@microsoft/teamsfx-api";
export interface LocalCertificate {
    certPath: string;
    keyPath: string;
    isTrusted?: boolean;
    alreadyTrusted?: boolean;
    error?: FxError;
    found?: boolean;
}
export declare class LocalCertificateManager {
    private readonly ui?;
    private readonly logger?;
    private readonly certFolder;
    constructor(ui?: UserInteraction, logger?: LogProvider);
    /**
     * Local certificates are located at {home}/.fx/certificate/
     * Public certificate should be trusted into user"s certificate store.
     *
     * - Check and generate cert and key files (subject, usage, expiration, ...)
     * - Check cert store if trusted (thumbprint, expiration)
     * - Add to cert store if not trusted (friendly name as well)
     */
    setupCertificate(needTrust: boolean, checkOnly?: boolean): Promise<LocalCertificate>;
    generateCertificate(certFile: string, keyFile: string): Promise<string>;
    verifyCertificateContent(certContent: string, keyContent: string): [string | undefined, boolean];
    verifyCertificateInStore(thumbprint: string): Promise<boolean | undefined>;
    private trustCertificate;
    private waitForUserConfirm;
    private checkCertificateWindows;
    private trustCertificateWindows;
}
//# sourceMappingURL=localCertificateManager.d.ts.map