"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.LifeCycleUndefinedError = exports.InvalidYmlActionNameError = exports.YamlFieldMissingError = exports.YamlFieldTypeError = exports.InvalidYamlSchemaError = void 0;
/**
 * @author huajiezhang@microsoft.com
 */
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../common/localizeUtils");
const globalVars_1 = require("../core/globalVars");
const types_1 = require("./types");
/**
 * invalid yml schema, failed to parse yml file content into object or schema validation failed
 */
class InvalidYamlSchemaError extends teamsfx_api_1.UserError {
    constructor(filePath, reason) {
        const key = "error.yaml.InvalidYamlSchemaError";
        const keyWithReason = "error.yaml.InvalidYamlSchemaErrorWithReason";
        const defaultMessage = reason
            ? localizeUtils_1.getDefaultString(keyWithReason, filePath, reason)
            : localizeUtils_1.getDefaultString(key, filePath);
        const localizedMessage = reason
            ? localizeUtils_1.getLocalizedString(keyWithReason, filePath, reason)
            : localizeUtils_1.getLocalizedString(key, filePath);
        const errorOptions = {
            source: "ConfigManager",
            name: "InvalidYamlSchemaError",
            message: defaultMessage,
            displayMessage: localizedMessage,
            categories: [types_1.ErrorCategory.Internal],
        };
        errorOptions.helpLink = "https://aka.ms/teamsfx-actions/invalid-lifecycle-error";
        super(errorOptions);
    }
}
exports.InvalidYamlSchemaError = InvalidYamlSchemaError;
/**
 * Yaml field has incorrect type
 */
class YamlFieldTypeError extends teamsfx_api_1.UserError {
    constructor(field, type) {
        const key = "error.yaml.YamlFieldTypeError";
        const errorOptions = {
            source: "ConfigManager",
            name: "YamlFieldTypeError",
            message: localizeUtils_1.getDefaultString(key, field, type, globalVars_1.globalVars.ymlFilePath),
            displayMessage: localizeUtils_1.getLocalizedString(key, field, type, globalVars_1.globalVars.ymlFilePath),
            categories: [types_1.ErrorCategory.Internal],
        };
        super(errorOptions);
    }
}
exports.YamlFieldTypeError = YamlFieldTypeError;
/**
 * Yaml field is missing
 */
class YamlFieldMissingError extends teamsfx_api_1.UserError {
    constructor(field) {
        const key = "error.yaml.YamlFieldMissingError";
        const errorOptions = {
            source: "ConfigManager",
            name: "YamlFieldMissingError",
            message: localizeUtils_1.getDefaultString(key, field, globalVars_1.globalVars.ymlFilePath),
            displayMessage: localizeUtils_1.getLocalizedString(key, field, globalVars_1.globalVars.ymlFilePath),
            categories: [types_1.ErrorCategory.Internal],
        };
        super(errorOptions);
    }
}
exports.YamlFieldMissingError = YamlFieldMissingError;
/**
 * Invalid yaml action name
 */
class InvalidYmlActionNameError extends teamsfx_api_1.UserError {
    constructor(action) {
        const key = "error.yaml.InvalidYmlActionNameError";
        const errorOptions = {
            source: "ConfigManager",
            name: "InvalidYmlActionNameError",
            message: localizeUtils_1.getDefaultString(key, action, globalVars_1.globalVars.ymlFilePath),
            displayMessage: localizeUtils_1.getLocalizedString(key, action, globalVars_1.globalVars.ymlFilePath),
            helpLink: "https://aka.ms/teamsfx-actions",
            categories: [types_1.ErrorCategory.Internal],
        };
        super(errorOptions);
    }
}
exports.InvalidYmlActionNameError = InvalidYmlActionNameError;
/**
 * Lifecycle not found
 */
class LifeCycleUndefinedError extends teamsfx_api_1.UserError {
    constructor(lifecycle) {
        const key = "error.yaml.LifeCycleUndefinedError";
        const errorOptions = {
            source: "Coordinator",
            name: "LifeCycleUndefinedError",
            message: localizeUtils_1.getDefaultString(key, lifecycle, globalVars_1.globalVars.ymlFilePath),
            displayMessage: localizeUtils_1.getLocalizedString(key, lifecycle, globalVars_1.globalVars.ymlFilePath),
            helpLink: "https://aka.ms/teamsfx-actions",
            categories: [types_1.ErrorCategory.Internal],
        };
        super(errorOptions);
    }
}
exports.LifeCycleUndefinedError = LifeCycleUndefinedError;
//# sourceMappingURL=yml.js.map