"use strict";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
exports.InvalidFileOutsideOfTheDirectotryError = exports.CheckSideloadingPermissionFailedError = exports.DeveloperPortalAPIFailedError = void 0;
const teamsfx_api_1 = require("@microsoft/teamsfx-api");
const localizeUtils_1 = require("../common/localizeUtils");
const types_1 = require("./types");
const constants_1 = require("../component/driver/teamsApp/constants");
class DeveloperPortalAPIFailedError extends teamsfx_api_1.SystemError {
    constructor(e, correlationId, apiName, extraData) {
        const errorOptions = {
            source: constants_1.Constants.PLUGIN_NAME,
            error: e,
            message: localizeUtils_1.getDefaultString("error.appstudio.apiFailed.telemetry", e.name, e.message, apiName, correlationId, extraData),
            displayMessage: localizeUtils_1.getLocalizedString("error.appstudio.apiFailed"),
            categories: [types_1.ErrorCategory.Unhandled],
        };
        super(errorOptions);
    }
}
exports.DeveloperPortalAPIFailedError = DeveloperPortalAPIFailedError;
class CheckSideloadingPermissionFailedError extends teamsfx_api_1.SystemError {
    constructor(e, correlationId, apiName, extraData) {
        const errorOptions = {
            source: "M365Account",
            error: e,
            message: localizeUtils_1.getDefaultString("error.appstudio.apiFailed.telemetry", e.name, e.message, apiName, correlationId, extraData),
            categories: [types_1.ErrorCategory.External],
        };
        super(errorOptions);
    }
}
exports.CheckSideloadingPermissionFailedError = CheckSideloadingPermissionFailedError;
class InvalidFileOutsideOfTheDirectotryError extends teamsfx_api_1.UserError {
    constructor(filePath) {
        const errorOptions = {
            source: constants_1.Constants.PLUGIN_NAME,
            message: localizeUtils_1.getDefaultString("error.teamsApp.createAppPackage.invalidFile", filePath),
            displayMessage: localizeUtils_1.getLocalizedString("error.teamsApp.createAppPackage.invalidFile", filePath),
            categories: [types_1.ErrorCategory.External],
        };
        super(errorOptions);
    }
}
exports.InvalidFileOutsideOfTheDirectotryError = InvalidFileOutsideOfTheDirectotryError;
//# sourceMappingURL=teamsApp.js.map