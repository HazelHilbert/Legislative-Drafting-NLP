/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates or updates a database data masking rule.
 *
 * @summary Creates or updates a database data masking rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingRuleCreateOrUpdateDefaultMax.json
 */
function createOrUpdateDataMaskingRuleForDefaultMax() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6852";
        const serverName = "sqlcrudtest-2080";
        const databaseName = "sqlcrudtest-331";
        const dataMaskingRuleName = "rule1";
        const parameters = {
            aliasName: "nickname",
            columnName: "test1",
            maskingFunction: "Default",
            ruleState: "Enabled",
            schemaName: "dbo",
            tableName: "Table_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.dataMaskingRules.createOrUpdate(resourceGroupName, serverName, databaseName, dataMaskingRuleName, parameters);
        console.log(result);
    });
}
createOrUpdateDataMaskingRuleForDefaultMax().catch(console.error);
/**
 * This sample demonstrates how to Creates or updates a database data masking rule.
 *
 * @summary Creates or updates a database data masking rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingRuleCreateOrUpdateDefaultMin.json
 */
function createOrUpdateDataMaskingRuleForDefaultMin() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6852";
        const serverName = "sqlcrudtest-2080";
        const databaseName = "sqlcrudtest-331";
        const dataMaskingRuleName = "rule1";
        const parameters = {
            columnName: "test1",
            maskingFunction: "Default",
            schemaName: "dbo",
            tableName: "Table_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.dataMaskingRules.createOrUpdate(resourceGroupName, serverName, databaseName, dataMaskingRuleName, parameters);
        console.log(result);
    });
}
createOrUpdateDataMaskingRuleForDefaultMin().catch(console.error);
/**
 * This sample demonstrates how to Creates or updates a database data masking rule.
 *
 * @summary Creates or updates a database data masking rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingRuleCreateOrUpdateNumber.json
 */
function createOrUpdateDataMaskingRuleForNumbers() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6852";
        const serverName = "sqlcrudtest-2080";
        const databaseName = "sqlcrudtest-331";
        const dataMaskingRuleName = "rule1";
        const parameters = {
            columnName: "test1",
            maskingFunction: "Number",
            numberFrom: "0",
            numberTo: "2",
            schemaName: "dbo",
            tableName: "Table_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.dataMaskingRules.createOrUpdate(resourceGroupName, serverName, databaseName, dataMaskingRuleName, parameters);
        console.log(result);
    });
}
createOrUpdateDataMaskingRuleForNumbers().catch(console.error);
/**
 * This sample demonstrates how to Creates or updates a database data masking rule.
 *
 * @summary Creates or updates a database data masking rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/stable/2014-04-01/examples/DataMaskingRuleCreateOrUpdateText.json
 */
function createOrUpdateDataMaskingRuleForText() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-6852";
        const serverName = "sqlcrudtest-2080";
        const databaseName = "sqlcrudtest-331";
        const dataMaskingRuleName = "rule1";
        const parameters = {
            columnName: "test1",
            maskingFunction: "Text",
            prefixSize: "1",
            replacementString: "asdf",
            schemaName: "dbo",
            suffixSize: "0",
            tableName: "Table_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.dataMaskingRules.createOrUpdate(resourceGroupName, serverName, databaseName, dataMaskingRuleName, parameters);
        console.log(result);
    });
}
createOrUpdateDataMaskingRuleForText().catch(console.error);
//# sourceMappingURL=dataMaskingRulesCreateOrUpdateSample.js.map