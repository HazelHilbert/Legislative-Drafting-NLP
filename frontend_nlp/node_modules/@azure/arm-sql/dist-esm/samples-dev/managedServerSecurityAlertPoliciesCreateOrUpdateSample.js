/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates or updates a threat detection policy.
 *
 * @summary Creates or updates a threat detection policy.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedServerSecurityAlertCreateMax.json
 */
function updateAManagedServerThreatDetectionPolicyWithAllParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "securityalert-4799";
        const managedInstanceName = "securityalert-6440";
        const securityAlertPolicyName = "Default";
        const parameters = {
            disabledAlerts: ["Access_Anomaly", "Usage_Anomaly"],
            emailAccountAdmins: true,
            emailAddresses: ["testSecurityAlert@microsoft.com"],
            retentionDays: 5,
            state: "Enabled",
            storageAccountAccessKey: "sdlfkjabc+sdlfkjsdlkfsjdfLDKFTERLKFDFKLjsdfksjdflsdkfD2342309432849328476458/3RSD==",
            storageEndpoint: "https://mystorage.blob.core.windows.net"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedServerSecurityAlertPolicies.beginCreateOrUpdateAndWait(resourceGroupName, managedInstanceName, securityAlertPolicyName, parameters);
        console.log(result);
    });
}
updateAManagedServerThreatDetectionPolicyWithAllParameters().catch(console.error);
/**
 * This sample demonstrates how to Creates or updates a threat detection policy.
 *
 * @summary Creates or updates a threat detection policy.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ManagedServerSecurityAlertCreateMin.json
 */
function updateAManagedServerThreatDetectionPolicyWithMinimalParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "securityalert-4799";
        const managedInstanceName = "securityalert-6440";
        const securityAlertPolicyName = "Default";
        const parameters = { state: "Enabled" };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedServerSecurityAlertPolicies.beginCreateOrUpdateAndWait(resourceGroupName, managedInstanceName, securityAlertPolicyName, parameters);
        console.log(result);
    });
}
updateAManagedServerThreatDetectionPolicyWithMinimalParameters().catch(console.error);
//# sourceMappingURL=managedServerSecurityAlertPoliciesCreateOrUpdateSample.js.map