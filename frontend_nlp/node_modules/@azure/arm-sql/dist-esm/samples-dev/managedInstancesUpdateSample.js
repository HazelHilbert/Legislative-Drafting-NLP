/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates a managed instance.
 *
 * @summary Updates a managed instance.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ManagedInstanceRemoveMaintenanceConfiguration.json
 */
function removeMaintenancePolicyFromManagedInstanceSelectDefaultMaintenancePolicy() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "20D7082A-0FC7-4468-82BD-542694D5042B";
        const resourceGroupName = "testrg";
        const managedInstanceName = "testinstance";
        const parameters = {
            maintenanceConfigurationId: "/subscriptions/20d7082a-0fc7-4468-82bd-542694d5042b/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedInstances.beginUpdateAndWait(resourceGroupName, managedInstanceName, parameters);
        console.log(result);
    });
}
removeMaintenancePolicyFromManagedInstanceSelectDefaultMaintenancePolicy().catch(console.error);
/**
 * This sample demonstrates how to Updates a managed instance.
 *
 * @summary Updates a managed instance.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ManagedInstanceUpdateMax.json
 */
function updateManagedInstanceWithAllProperties() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "20D7082A-0FC7-4468-82BD-542694D5042B";
        const resourceGroupName = "testrg";
        const managedInstanceName = "testinstance";
        const parameters = {
            administratorLogin: "dummylogin",
            administratorLoginPassword: "PLACEHOLDER",
            collation: "SQL_Latin1_General_CP1_CI_AS",
            licenseType: "BasePrice",
            maintenanceConfigurationId: "/subscriptions/20D7082A-0FC7-4468-82BD-542694D5042B/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_JapanEast_MI_1",
            minimalTlsVersion: "1.2",
            proxyOverride: "Redirect",
            publicDataEndpointEnabled: false,
            requestedBackupStorageRedundancy: "Geo",
            sku: { name: "GP_Gen4", capacity: 8, tier: "GeneralPurpose" },
            storageSizeInGB: 448,
            tags: { tagKey1: "TagValue1" },
            vCores: 8
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedInstances.beginUpdateAndWait(resourceGroupName, managedInstanceName, parameters);
        console.log(result);
    });
}
updateManagedInstanceWithAllProperties().catch(console.error);
/**
 * This sample demonstrates how to Updates a managed instance.
 *
 * @summary Updates a managed instance.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ManagedInstanceUpdateMin.json
 */
function updateManagedInstanceWithMinimalProperties() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "20D7082A-0FC7-4468-82BD-542694D5042B";
        const resourceGroupName = "testrg";
        const managedInstanceName = "testinstance";
        const parameters = { tags: { tagKey1: "TagValue1" } };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.managedInstances.beginUpdateAndWait(resourceGroupName, managedInstanceName, parameters);
        console.log(result);
    });
}
updateManagedInstanceWithMinimalProperties().catch(console.error);
//# sourceMappingURL=managedInstancesUpdateSample.js.map