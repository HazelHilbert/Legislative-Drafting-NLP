/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates or updates a firewall rule.
 *
 * @summary Creates or updates a firewall rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/FirewallRuleCreate.json
 */
function createAFirewallRuleMaxOrMin() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "firewallrulecrudtest-12";
        const serverName = "firewallrulecrudtest-6285";
        const firewallRuleName = "firewallrulecrudtest-5370";
        const parameters = {
            endIpAddress: "0.0.0.3",
            startIpAddress: "0.0.0.3"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.firewallRules.createOrUpdate(resourceGroupName, serverName, firewallRuleName, parameters);
        console.log(result);
    });
}
createAFirewallRuleMaxOrMin().catch(console.error);
/**
 * This sample demonstrates how to Creates or updates a firewall rule.
 *
 * @summary Creates or updates a firewall rule.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/FirewallRuleUpdate.json
 */
function updateAFirewallRuleMaxOrMin() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "firewallrulecrudtest-12";
        const serverName = "firewallrulecrudtest-6285";
        const firewallRuleName = "firewallrulecrudtest-3927";
        const parameters = {
            endIpAddress: "0.0.0.1",
            startIpAddress: "0.0.0.1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.firewallRules.createOrUpdate(resourceGroupName, serverName, firewallRuleName, parameters);
        console.log(result);
    });
}
updateAFirewallRuleMaxOrMin().catch(console.error);
//# sourceMappingURL=firewallRulesCreateOrUpdateSample.js.map