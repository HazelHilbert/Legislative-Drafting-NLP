/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates an elastic pool.
 *
 * @summary Updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ElasticPoolUpdateAssignMaintenanceConfiguration.json
 */
function assignsMaintenanceConfigurationToAnElasticPool() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            maintenanceConfigurationId: "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_JapanEast_1"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
assignsMaintenanceConfigurationToAnElasticPool().catch(console.error);
/**
 * This sample demonstrates how to Updates an elastic pool.
 *
 * @summary Updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ElasticPoolUpdateResetMaintenanceConfiguration.json
 */
function resetsMaintenanceConfigurationOfAnElasticPoolToDefault() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            maintenanceConfigurationId: "/subscriptions/00000000-1111-2222-3333-444444444444/providers/Microsoft.Maintenance/publicMaintenanceConfigurations/SQL_Default"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
resetsMaintenanceConfigurationOfAnElasticPoolToDefault().catch(console.error);
/**
 * This sample demonstrates how to Updates an elastic pool.
 *
 * @summary Updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ElasticPoolUpdateMax.json
 */
function updateAnElasticPoolWithAllParameter() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {
            licenseType: "LicenseIncluded",
            perDatabaseSettings: { maxCapacity: 1, minCapacity: 0.25 },
            sku: { name: "BC_Gen4", capacity: 2, tier: "BusinessCritical" },
            zoneRedundant: true
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
updateAnElasticPoolWithAllParameter().catch(console.error);
/**
 * This sample demonstrates how to Updates an elastic pool.
 *
 * @summary Updates an elastic pool.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/ElasticPoolUpdateMin.json
 */
function updateAnElasticPoolWithMinimumParameters() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "sqlcrudtest-2369";
        const serverName = "sqlcrudtest-8069";
        const elasticPoolName = "sqlcrudtest-8102";
        const parameters = {};
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.elasticPools.beginUpdateAndWait(resourceGroupName, serverName, elasticPoolName, parameters);
        console.log(result);
    });
}
updateAnElasticPoolWithMinimumParameters().catch(console.error);
//# sourceMappingURL=elasticPoolsUpdateSample.js.map