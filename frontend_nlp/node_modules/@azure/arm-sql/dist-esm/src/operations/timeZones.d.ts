import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { TimeZones } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { TimeZone, TimeZonesListByLocationOptionalParams, TimeZonesGetOptionalParams, TimeZonesGetResponse } from "../models";
/** Class containing TimeZones operations. */
export declare class TimeZonesImpl implements TimeZones {
    private readonly client;
    /**
     * Initialize a new instance of the class TimeZones class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a list of managed instance time zones by location.
     * @param locationName
     * @param options The options parameters.
     */
    listByLocation(locationName: string, options?: TimeZonesListByLocationOptionalParams): PagedAsyncIterableIterator<TimeZone>;
    private listByLocationPagingPage;
    private listByLocationPagingAll;
    /**
     * Gets a list of managed instance time zones by location.
     * @param locationName
     * @param options The options parameters.
     */
    private _listByLocation;
    /**
     * Gets a managed instance time zone.
     * @param locationName
     * @param timeZoneId
     * @param options The options parameters.
     */
    get(locationName: string, timeZoneId: string, options?: TimeZonesGetOptionalParams): Promise<TimeZonesGetResponse>;
    /**
     * ListByLocationNext
     * @param locationName
     * @param nextLink The nextLink from the previous successful call to the ListByLocation method.
     * @param options The options parameters.
     */
    private _listByLocationNext;
}
//# sourceMappingURL=timeZones.d.ts.map