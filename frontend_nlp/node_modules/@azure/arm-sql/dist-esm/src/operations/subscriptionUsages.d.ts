import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SubscriptionUsages } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { SubscriptionUsage, SubscriptionUsagesListByLocationOptionalParams, SubscriptionUsagesGetOptionalParams, SubscriptionUsagesGetResponse } from "../models";
/** Class containing SubscriptionUsages operations. */
export declare class SubscriptionUsagesImpl implements SubscriptionUsages {
    private readonly client;
    /**
     * Initialize a new instance of the class SubscriptionUsages class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets all subscription usage metrics in a given location.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    listByLocation(locationName: string, options?: SubscriptionUsagesListByLocationOptionalParams): PagedAsyncIterableIterator<SubscriptionUsage>;
    private listByLocationPagingPage;
    private listByLocationPagingAll;
    /**
     * Gets all subscription usage metrics in a given location.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    private _listByLocation;
    /**
     * Gets a subscription usage metric.
     * @param locationName The name of the region where the resource is located.
     * @param usageName Name of usage metric to return.
     * @param options The options parameters.
     */
    get(locationName: string, usageName: string, options?: SubscriptionUsagesGetOptionalParams): Promise<SubscriptionUsagesGetResponse>;
    /**
     * ListByLocationNext
     * @param locationName The name of the region where the resource is located.
     * @param nextLink The nextLink from the previous successful call to the ListByLocation method.
     * @param options The options parameters.
     */
    private _listByLocationNext;
}
//# sourceMappingURL=subscriptionUsages.d.ts.map