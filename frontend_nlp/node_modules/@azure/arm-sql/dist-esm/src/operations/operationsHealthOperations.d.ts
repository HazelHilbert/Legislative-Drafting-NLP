import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { OperationsHealthOperations } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { OperationsHealth, OperationsHealthListByLocationOptionalParams } from "../models";
/** Class containing OperationsHealthOperations operations. */
export declare class OperationsHealthOperationsImpl implements OperationsHealthOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class OperationsHealthOperations class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a service operation health status.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    listByLocation(locationName: string, options?: OperationsHealthListByLocationOptionalParams): PagedAsyncIterableIterator<OperationsHealth>;
    private listByLocationPagingPage;
    private listByLocationPagingAll;
    /**
     * Gets a service operation health status.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    private _listByLocation;
    /**
     * ListByLocationNext
     * @param locationName The name of the region where the resource is located.
     * @param nextLink The nextLink from the previous successful call to the ListByLocation method.
     * @param options The options parameters.
     */
    private _listByLocationNext;
}
//# sourceMappingURL=operationsHealthOperations.d.ts.map