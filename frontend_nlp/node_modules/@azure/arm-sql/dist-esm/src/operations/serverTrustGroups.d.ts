import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ServerTrustGroups } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { PollerLike, PollOperationState } from "@azure/core-lro";
import { ServerTrustGroup, ServerTrustGroupsListByLocationOptionalParams, ServerTrustGroupsListByInstanceOptionalParams, ServerTrustGroupsGetOptionalParams, ServerTrustGroupsGetResponse, ServerTrustGroupsCreateOrUpdateOptionalParams, ServerTrustGroupsCreateOrUpdateResponse, ServerTrustGroupsDeleteOptionalParams } from "../models";
/** Class containing ServerTrustGroups operations. */
export declare class ServerTrustGroupsImpl implements ServerTrustGroups {
    private readonly client;
    /**
     * Initialize a new instance of the class ServerTrustGroups class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Lists a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    listByLocation(resourceGroupName: string, locationName: string, options?: ServerTrustGroupsListByLocationOptionalParams): PagedAsyncIterableIterator<ServerTrustGroup>;
    private listByLocationPagingPage;
    private listByLocationPagingAll;
    /**
     * Gets a server trust groups by instance name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: ServerTrustGroupsListByInstanceOptionalParams): PagedAsyncIterableIterator<ServerTrustGroup>;
    private listByInstancePagingPage;
    private listByInstancePagingAll;
    /**
     * Gets a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param serverTrustGroupName The name of the server trust group.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, locationName: string, serverTrustGroupName: string, options?: ServerTrustGroupsGetOptionalParams): Promise<ServerTrustGroupsGetResponse>;
    /**
     * Creates or updates a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param serverTrustGroupName The name of the server trust group.
     * @param parameters The server trust group parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdate(resourceGroupName: string, locationName: string, serverTrustGroupName: string, parameters: ServerTrustGroup, options?: ServerTrustGroupsCreateOrUpdateOptionalParams): Promise<PollerLike<PollOperationState<ServerTrustGroupsCreateOrUpdateResponse>, ServerTrustGroupsCreateOrUpdateResponse>>;
    /**
     * Creates or updates a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param serverTrustGroupName The name of the server trust group.
     * @param parameters The server trust group parameters.
     * @param options The options parameters.
     */
    beginCreateOrUpdateAndWait(resourceGroupName: string, locationName: string, serverTrustGroupName: string, parameters: ServerTrustGroup, options?: ServerTrustGroupsCreateOrUpdateOptionalParams): Promise<ServerTrustGroupsCreateOrUpdateResponse>;
    /**
     * Deletes a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param serverTrustGroupName The name of the server trust group.
     * @param options The options parameters.
     */
    beginDelete(resourceGroupName: string, locationName: string, serverTrustGroupName: string, options?: ServerTrustGroupsDeleteOptionalParams): Promise<PollerLike<PollOperationState<void>, void>>;
    /**
     * Deletes a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param serverTrustGroupName The name of the server trust group.
     * @param options The options parameters.
     */
    beginDeleteAndWait(resourceGroupName: string, locationName: string, serverTrustGroupName: string, options?: ServerTrustGroupsDeleteOptionalParams): Promise<void>;
    /**
     * Lists a server trust group.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param options The options parameters.
     */
    private _listByLocation;
    /**
     * Gets a server trust groups by instance name.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param options The options parameters.
     */
    private _listByInstance;
    /**
     * ListByLocationNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param locationName The name of the region where the resource is located.
     * @param nextLink The nextLink from the previous successful call to the ListByLocation method.
     * @param options The options parameters.
     */
    private _listByLocationNext;
    /**
     * ListByInstanceNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param nextLink The nextLink from the previous successful call to the ListByInstance method.
     * @param options The options parameters.
     */
    private _listByInstanceNext;
}
//# sourceMappingURL=serverTrustGroups.d.ts.map