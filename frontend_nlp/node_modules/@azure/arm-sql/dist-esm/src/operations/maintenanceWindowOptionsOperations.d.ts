import { MaintenanceWindowOptionsOperations } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { MaintenanceWindowOptionsGetOptionalParams, MaintenanceWindowOptionsGetResponse } from "../models";
/** Class containing MaintenanceWindowOptionsOperations operations. */
export declare class MaintenanceWindowOptionsOperationsImpl implements MaintenanceWindowOptionsOperations {
    private readonly client;
    /**
     * Initialize a new instance of the class MaintenanceWindowOptionsOperations class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a list of available maintenance windows.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database to get maintenance windows options for.
     * @param maintenanceWindowOptionsName Maintenance window options name.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, maintenanceWindowOptionsName: string, options?: MaintenanceWindowOptionsGetOptionalParams): Promise<MaintenanceWindowOptionsGetResponse>;
}
//# sourceMappingURL=maintenanceWindowOptionsOperations.d.ts.map