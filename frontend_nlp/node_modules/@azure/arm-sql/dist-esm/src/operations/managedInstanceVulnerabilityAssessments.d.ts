import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedInstanceVulnerabilityAssessments } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { ManagedInstanceVulnerabilityAssessment, ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams, VulnerabilityAssessmentName, ManagedInstanceVulnerabilityAssessmentsGetOptionalParams, ManagedInstanceVulnerabilityAssessmentsGetResponse, ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateOptionalParams, ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse, ManagedInstanceVulnerabilityAssessmentsDeleteOptionalParams } from "../models";
/** Class containing ManagedInstanceVulnerabilityAssessments operations. */
export declare class ManagedInstanceVulnerabilityAssessmentsImpl implements ManagedInstanceVulnerabilityAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class ManagedInstanceVulnerabilityAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets the managed instance's vulnerability assessment policies.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessments
     *                            is defined.
     * @param options The options parameters.
     */
    listByInstance(resourceGroupName: string, managedInstanceName: string, options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams): PagedAsyncIterableIterator<ManagedInstanceVulnerabilityAssessment>;
    private listByInstancePagingPage;
    private listByInstancePagingAll;
    /**
     * Gets the managed instance's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessment
     *                            is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, managedInstanceName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: ManagedInstanceVulnerabilityAssessmentsGetOptionalParams): Promise<ManagedInstanceVulnerabilityAssessmentsGetResponse>;
    /**
     * Creates or updates the managed instance's vulnerability assessment. Learn more about setting SQL
     * vulnerability assessment with managed identity -
     * https://docs.microsoft.com/azure/azure-sql/database/sql-database-vulnerability-assessment-storage
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessment
     *                            is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param parameters The requested resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, managedInstanceName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, parameters: ManagedInstanceVulnerabilityAssessment, options?: ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateOptionalParams): Promise<ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse>;
    /**
     * Removes the managed instance's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessment
     *                            is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, managedInstanceName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: ManagedInstanceVulnerabilityAssessmentsDeleteOptionalParams): Promise<void>;
    /**
     * Gets the managed instance's vulnerability assessment policies.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessments
     *                            is defined.
     * @param options The options parameters.
     */
    private _listByInstance;
    /**
     * ListByInstanceNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance for which the vulnerability assessments
     *                            is defined.
     * @param nextLink The nextLink from the previous successful call to the ListByInstance method.
     * @param options The options parameters.
     */
    private _listByInstanceNext;
}
//# sourceMappingURL=managedInstanceVulnerabilityAssessments.d.ts.map