import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ManagedDatabaseTransparentDataEncryption } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { ManagedTransparentDataEncryption, ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams, TransparentDataEncryptionName, ManagedDatabaseTransparentDataEncryptionGetOptionalParams, ManagedDatabaseTransparentDataEncryptionGetResponse, ManagedDatabaseTransparentDataEncryptionCreateOrUpdateOptionalParams, ManagedDatabaseTransparentDataEncryptionCreateOrUpdateResponse } from "../models";
/** Class containing ManagedDatabaseTransparentDataEncryption operations. */
export declare class ManagedDatabaseTransparentDataEncryptionImpl implements ManagedDatabaseTransparentDataEncryption {
    private readonly client;
    /**
     * Initialize a new instance of the class ManagedDatabaseTransparentDataEncryption class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets a list of managed database's transparent data encryptions.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the managed database for which the transparent data encryption is
     *                     defined.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, managedInstanceName: string, databaseName: string, options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams): PagedAsyncIterableIterator<ManagedTransparentDataEncryption>;
    private listByDatabasePagingPage;
    private listByDatabasePagingAll;
    /**
     * Gets a managed database's transparent data encryption.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the managed database for which the transparent data encryption is
     *                     defined.
     * @param tdeName The name of the transparent data encryption configuration.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, managedInstanceName: string, databaseName: string, tdeName: TransparentDataEncryptionName, options?: ManagedDatabaseTransparentDataEncryptionGetOptionalParams): Promise<ManagedDatabaseTransparentDataEncryptionGetResponse>;
    /**
     * Updates a database's transparent data encryption configuration.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the managed database for which the security alert policy is defined.
     * @param tdeName The name of the transparent data encryption configuration.
     * @param parameters The database transparent data encryption.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, managedInstanceName: string, databaseName: string, tdeName: TransparentDataEncryptionName, parameters: ManagedTransparentDataEncryption, options?: ManagedDatabaseTransparentDataEncryptionCreateOrUpdateOptionalParams): Promise<ManagedDatabaseTransparentDataEncryptionCreateOrUpdateResponse>;
    /**
     * Gets a list of managed database's transparent data encryptions.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the managed database for which the transparent data encryption is
     *                     defined.
     * @param options The options parameters.
     */
    private _listByDatabase;
    /**
     * ListByDatabaseNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param managedInstanceName The name of the managed instance.
     * @param databaseName The name of the managed database for which the transparent data encryption is
     *                     defined.
     * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.
     * @param options The options parameters.
     */
    private _listByDatabaseNext;
}
//# sourceMappingURL=managedDatabaseTransparentDataEncryption.d.ts.map