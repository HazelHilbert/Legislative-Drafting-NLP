import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DatabaseVulnerabilityAssessments } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { DatabaseVulnerabilityAssessment, DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams, VulnerabilityAssessmentName, DatabaseVulnerabilityAssessmentsGetOptionalParams, DatabaseVulnerabilityAssessmentsGetResponse, DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams, DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse, DatabaseVulnerabilityAssessmentsDeleteOptionalParams } from "../models";
/** Class containing DatabaseVulnerabilityAssessments operations. */
export declare class DatabaseVulnerabilityAssessmentsImpl implements DatabaseVulnerabilityAssessments {
    private readonly client;
    /**
     * Initialize a new instance of the class DatabaseVulnerabilityAssessments class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Lists the vulnerability assessment policies associated with a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment policies are
     *                     defined.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, serverName: string, databaseName: string, options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams): PagedAsyncIterableIterator<DatabaseVulnerabilityAssessment>;
    private listByDatabasePagingPage;
    private listByDatabasePagingAll;
    /**
     * Gets the database's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: DatabaseVulnerabilityAssessmentsGetOptionalParams): Promise<DatabaseVulnerabilityAssessmentsGetResponse>;
    /**
     * Creates or updates the database's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param parameters The requested resource.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, parameters: DatabaseVulnerabilityAssessment, options?: DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams): Promise<DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse>;
    /**
     * Removes the database's vulnerability assessment.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment is defined.
     * @param vulnerabilityAssessmentName The name of the vulnerability assessment.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serverName: string, databaseName: string, vulnerabilityAssessmentName: VulnerabilityAssessmentName, options?: DatabaseVulnerabilityAssessmentsDeleteOptionalParams): Promise<void>;
    /**
     * Lists the vulnerability assessment policies associated with a database.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment policies are
     *                     defined.
     * @param options The options parameters.
     */
    private _listByDatabase;
    /**
     * ListByDatabaseNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database for which the vulnerability assessment policies are
     *                     defined.
     * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.
     * @param options The options parameters.
     */
    private _listByDatabaseNext;
}
//# sourceMappingURL=databaseVulnerabilityAssessments.d.ts.map