{"version":3,"file":"index.js","sources":["../src/pagingHelper.ts","../src/models/index.ts","../src/models/mappers.ts","../src/models/parameters.ts","../src/operations/recoverableDatabases.ts","../src/operations/dataMaskingPolicies.ts","../src/operations/dataMaskingRules.ts","../src/operations/geoBackupPolicies.ts","../src/lroImpl.ts","../src/operations/databases.ts","../src/operations/elasticPools.ts","../src/operations/replicationLinks.ts","../src/operations/serverCommunicationLinks.ts","../src/operations/serviceObjectives.ts","../src/operations/elasticPoolActivities.ts","../src/operations/elasticPoolDatabaseActivities.ts","../src/operations/serverUsages.ts","../src/operations/extendedDatabaseBlobAuditingPolicies.ts","../src/operations/extendedServerBlobAuditingPolicies.ts","../src/operations/serverBlobAuditingPolicies.ts","../src/operations/databaseBlobAuditingPolicies.ts","../src/operations/databaseAdvisors.ts","../src/operations/databaseAutomaticTuningOperations.ts","../src/operations/databaseColumns.ts","../src/operations/databaseRecommendedActions.ts","../src/operations/databaseSchemas.ts","../src/operations/databaseSecurityAlertPolicies.ts","../src/operations/databaseTables.ts","../src/operations/databaseVulnerabilityAssessmentRuleBaselines.ts","../src/operations/databaseVulnerabilityAssessments.ts","../src/operations/databaseVulnerabilityAssessmentScans.ts","../src/operations/dataWarehouseUserActivitiesOperations.ts","../src/operations/deletedServers.ts","../src/operations/elasticPoolOperations.ts","../src/operations/encryptionProtectors.ts","../src/operations/failoverGroups.ts","../src/operations/firewallRules.ts","../src/operations/instanceFailoverGroups.ts","../src/operations/instancePools.ts","../src/operations/jobAgents.ts","../src/operations/jobCredentials.ts","../src/operations/jobExecutions.ts","../src/operations/jobs.ts","../src/operations/jobStepExecutions.ts","../src/operations/jobSteps.ts","../src/operations/jobTargetExecutions.ts","../src/operations/jobTargetGroups.ts","../src/operations/jobVersions.ts","../src/operations/capabilities.ts","../src/operations/longTermRetentionPolicies.ts","../src/operations/maintenanceWindowOptionsOperations.ts","../src/operations/maintenanceWindowsOperations.ts","../src/operations/managedBackupShortTermRetentionPolicies.ts","../src/operations/managedDatabaseColumns.ts","../src/operations/managedDatabaseQueries.ts","../src/operations/managedDatabaseRestoreDetails.ts","../src/operations/managedDatabases.ts","../src/operations/managedDatabaseSchemas.ts","../src/operations/managedDatabaseSecurityAlertPolicies.ts","../src/operations/managedDatabaseSecurityEvents.ts","../src/operations/managedDatabaseSensitivityLabels.ts","../src/operations/managedDatabaseRecommendedSensitivityLabels.ts","../src/operations/managedDatabaseTables.ts","../src/operations/managedDatabaseTransparentDataEncryption.ts","../src/operations/managedDatabaseVulnerabilityAssessmentRuleBaselines.ts","../src/operations/managedDatabaseVulnerabilityAssessments.ts","../src/operations/managedDatabaseVulnerabilityAssessmentScans.ts","../src/operations/managedInstanceAdministrators.ts","../src/operations/managedInstanceAzureADOnlyAuthentications.ts","../src/operations/managedInstanceEncryptionProtectors.ts","../src/operations/managedInstanceKeys.ts","../src/operations/managedInstanceLongTermRetentionPolicies.ts","../src/operations/managedInstanceOperations.ts","../src/operations/managedInstancePrivateEndpointConnections.ts","../src/operations/managedInstancePrivateLinkResources.ts","../src/operations/managedInstanceTdeCertificates.ts","../src/operations/managedInstanceVulnerabilityAssessments.ts","../src/operations/managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies.ts","../src/operations/managedServerSecurityAlertPolicies.ts","../src/operations/operations.ts","../src/operations/operationsHealthOperations.ts","../src/operations/privateEndpointConnections.ts","../src/operations/privateLinkResources.ts","../src/operations/recoverableManagedDatabases.ts","../src/operations/restorePoints.ts","../src/operations/sensitivityLabels.ts","../src/operations/recommendedSensitivityLabels.ts","../src/operations/serverAdvisors.ts","../src/operations/serverAutomaticTuningOperations.ts","../src/operations/serverAzureADAdministrators.ts","../src/operations/serverAzureADOnlyAuthentications.ts","../src/operations/serverDevOpsAuditSettings.ts","../src/operations/serverDnsAliases.ts","../src/operations/serverKeys.ts","../src/operations/serverOperations.ts","../src/operations/serverSecurityAlertPolicies.ts","../src/operations/serverTrustGroups.ts","../src/operations/serverVulnerabilityAssessments.ts","../src/operations/sqlAgent.ts","../src/operations/subscriptionUsages.ts","../src/operations/syncAgents.ts","../src/operations/syncGroups.ts","../src/operations/syncMembers.ts","../src/operations/tdeCertificates.ts","../src/operations/timeZones.ts","../src/operations/virtualClusters.ts","../src/operations/virtualNetworkRules.ts","../src/operations/workloadClassifiers.ts","../src/operations/workloadGroups.ts","../src/operations/transparentDataEncryptions.ts","../src/operations/backupShortTermRetentionPolicies.ts","../src/operations/databaseExtensionsOperations.ts","../src/operations/databaseOperations.ts","../src/operations/databaseUsages.ts","../src/operations/ledgerDigestUploadsOperations.ts","../src/operations/outboundFirewallRules.ts","../src/operations/servers.ts","../src/operations/usages.ts","../src/operations/longTermRetentionBackups.ts","../src/operations/longTermRetentionManagedInstanceBackups.ts","../src/operations/managedInstances.ts","../src/operations/restorableDroppedDatabases.ts","../src/operations/restorableDroppedManagedDatabases.ts","../src/operations/serverConnectionPolicies.ts","../src/sqlManagementClient.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport interface PageInfo {\n  continuationToken?: string;\n}\n\nconst pageMap = new WeakMap<object, PageInfo>();\n\n/**\n * Given the last `.value` produced by the `byPage` iterator,\n * returns a continuation token that can be used to begin paging from\n * that point later.\n * @param page An object from accessing `value` on the IteratorResult from a `byPage` iterator.\n * @returns The continuation token that can be passed into byPage() during future calls.\n */\nexport function getContinuationToken(page: unknown): string | undefined {\n  if (typeof page !== \"object\" || page === null) {\n    return undefined;\n  }\n  return pageMap.get(page)?.continuationToken;\n}\n\nexport function setContinuationToken(\n  page: unknown,\n  continuationToken: string | undefined\n): void {\n  if (typeof page !== \"object\" || page === null || !continuationToken) {\n    return;\n  }\n  const pageInfo = pageMap.get(page) ?? {};\n  pageInfo.continuationToken = continuationToken;\n  pageMap.set(page, pageInfo);\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\n/** ARM resource. */\nexport interface Resource {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The response to a list recoverable databases request */\nexport interface RecoverableDatabaseListResult {\n  /** A list of recoverable databases */\n  value: RecoverableDatabase[];\n}\n\n/** The response to a list data masking rules request. */\nexport interface DataMaskingRuleListResult {\n  /** The list of database data masking rules. */\n  value?: DataMaskingRule[];\n}\n\n/** The response to a list geo backup policies request. */\nexport interface GeoBackupPolicyListResult {\n  /** The list of geo backup policies. */\n  value?: GeoBackupPolicy[];\n}\n\n/** The response to a list database metrics request. */\nexport interface MetricListResult {\n  /** The list of metrics for the database. */\n  value: Metric[];\n}\n\n/** Database metrics. */\nexport interface Metric {\n  /**\n   * The start time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The end time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The time step to be used to summarize the metric values.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeGrain?: string;\n  /**\n   * The unit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UnitType;\n  /**\n   * The name information for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: MetricName;\n  /**\n   * The metric values for the specified time window and timestep.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metricValues?: MetricValue[];\n}\n\n/** A database metric name. */\nexport interface MetricName {\n  /**\n   * The name of the database metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n  /**\n   * The friendly name of the database metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly localizedValue?: string;\n}\n\n/** Represents database metrics. */\nexport interface MetricValue {\n  /**\n   * The number of values for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly count?: number;\n  /**\n   * The average value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly average?: number;\n  /**\n   * The max value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maximum?: number;\n  /**\n   * The min value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minimum?: number;\n  /**\n   * The metric timestamp (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * The total value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly total?: number;\n}\n\n/** The response to a list database metric definitions request. */\nexport interface MetricDefinitionListResult {\n  /** The list of metric definitions for the database. */\n  value: MetricDefinition[];\n}\n\n/** A database metric definition. */\nexport interface MetricDefinition {\n  /**\n   * The name information for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: MetricName;\n  /**\n   * The primary aggregation type defining how metric values are displayed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly primaryAggregationType?: PrimaryAggregationType;\n  /**\n   * The resource uri of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceUri?: string;\n  /**\n   * The unit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: UnitDefinitionType;\n  /**\n   * The list of database metric availabilities for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metricAvailabilities?: MetricAvailability[];\n}\n\n/** A metric availability value. */\nexport interface MetricAvailability {\n  /**\n   * The length of retention for the database metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly retention?: string;\n  /**\n   * The granularity of the database metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeGrain?: string;\n}\n\n/** Represents the parameters for Unlink Replication Link request. */\nexport interface UnlinkParameters {\n  /** Determines whether link will be terminated in a forced or a friendly way. */\n  forcedTermination?: boolean;\n}\n\n/** A list of server communication links. */\nexport interface ServerCommunicationLinkListResult {\n  /** The list of server communication links. */\n  value?: ServerCommunicationLink[];\n}\n\n/** Represents the response to a get database service objectives request. */\nexport interface ServiceObjectiveListResult {\n  /** The list of database service objectives. */\n  value: ServiceObjective[];\n}\n\n/** Represents the response to a list elastic pool activity request. */\nexport interface ElasticPoolActivityListResult {\n  /** The list of elastic pool activities. */\n  value: ElasticPoolActivity[];\n}\n\n/** Represents the response to a list elastic pool database activity request. */\nexport interface ElasticPoolDatabaseActivityListResult {\n  /** The list of elastic pool database activities. */\n  value: ElasticPoolDatabaseActivity[];\n}\n\n/** Represents the response to a list server metrics request. */\nexport interface ServerUsageListResult {\n  /** The list of server metrics for the server. */\n  value: ServerUsage[];\n}\n\n/** Represents server metrics. */\nexport interface ServerUsage {\n  /**\n   * Name of the server usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The name of the resource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resourceName?: string;\n  /**\n   * The metric display name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The current value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * The current limit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The units of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * The next reset time for the metric (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextResetTime?: Date;\n}\n\n/** A list of database extended auditing settings. */\nexport interface ExtendedDatabaseBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ExtendedDatabaseBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server extended auditing settings. */\nexport interface ExtendedServerBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ExtendedServerBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server auditing settings. */\nexport interface ServerBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of database auditing settings. */\nexport interface DatabaseBlobAuditingPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseBlobAuditingPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Contains information of current state for an Azure SQL Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedActionStateInfo {\n  /** Current state the recommended action is in. Some commonly used states are: Active      -> recommended action is active and no action has been taken yet. Pending     -> recommended action is approved for and is awaiting execution. Executing   -> recommended action is being applied on the user database. Verifying   -> recommended action was applied and is being verified of its usefulness by the system. Success     -> recommended action was applied and improvement found during verification. Pending Revert  -> verification found little or no improvement so recommended action is queued for revert or user has manually reverted. Reverting   -> changes made while applying recommended action are being reverted on the user database. Reverted    -> successfully reverted the changes made by recommended action on user database. Ignored     -> user explicitly ignored/discarded the recommended action. */\n  currentValue: RecommendedActionCurrentState;\n  /**\n   * Gets who initiated the execution of this recommended action. Possible Value are: User    -> When user explicity notified system to apply the recommended action. System  -> When auto-execute status of this advisor was set to 'Enabled', in which case the system applied it.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionInitiatedBy?: RecommendedActionInitiatedBy;\n  /**\n   * Gets the time when the state was last modified\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModified?: Date;\n}\n\n/** Contains information for manual implementation for an Azure SQL Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedActionImplementationInfo {\n  /**\n   * Gets the method in which this recommended action can be manually implemented. e.g., TSql, AzurePowerShell.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly method?: ImplementationMethod;\n  /**\n   * Gets the manual implementation script. e.g., T-SQL script that could be executed on the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly script?: string;\n}\n\n/** Contains error information for an Azure SQL Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedActionErrorInfo {\n  /**\n   * Gets the reason why the recommended action was put to error state. e.g., DatabaseHasQdsOff, IndexAlreadyExists\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: string;\n  /**\n   * Gets whether the error could be ignored and recommended action could be retried. Possible values are: Yes/No\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isRetryable?: IsRetryable;\n}\n\n/** Contains information of estimated or observed impact on various metrics for an Azure SQL Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedActionImpactRecord {\n  /**\n   * Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange, NumberOfQueriesAffected.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dimensionName?: string;\n  /**\n   * Gets the name of the impact dimension. e.g., CPUChange, DiskSpaceChange, NumberOfQueriesAffected.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * Gets the absolute value of this dimension if applicable. e.g., Number of Queries affected\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly absoluteValue?: number;\n  /**\n   * Gets the absolute change in the value of this dimension. e.g., Absolute Disk space change in Megabytes\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeValueAbsolute?: number;\n  /**\n   * Gets the relative change in the value of this dimension. e.g., Relative Disk space change in Percentage\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeValueRelative?: number;\n}\n\n/** Contains time series of various impacted metrics for an Azure SQL Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedActionMetricInfo {\n  /**\n   * Gets the name of the metric. e.g., CPU, Number of Queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly metricName?: string;\n  /**\n   * Gets the unit in which metric is measured. e.g., DTU, Frequency\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * Gets the duration of time interval for the value given by this MetricInfo. e.g., PT1H (1 hour)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeGrain?: string;\n  /**\n   * Gets the start time of time interval given by this MetricInfo.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * Gets the value of the metric in the time interval given by this MetricInfo.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n}\n\n/** Automatic tuning properties for individual advisors. */\nexport interface AutomaticTuningOptions {\n  /** Automatic tuning option desired state. */\n  desiredState?: AutomaticTuningOptionModeDesired;\n  /**\n   * Automatic tuning option actual state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actualState?: AutomaticTuningOptionModeActual;\n  /**\n   * Reason code if desired and actual state are different.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reasonCode?: number;\n  /**\n   * Reason description if desired and actual state are different.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reasonDesc?: AutomaticTuningDisabledReason;\n}\n\n/** A list of database columns. */\nexport interface DatabaseColumnListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseColumn[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of database schemas. */\nexport interface DatabaseSchemaListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseSchema[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Metadata pertaining to creation and last modification of the resource. */\nexport interface SystemData {\n  /** The identity that created the resource. */\n  createdBy?: string;\n  /** The type of identity that created the resource. */\n  createdByType?: CreatedByType;\n  /** The timestamp of resource creation (UTC). */\n  createdAt?: Date;\n  /** The identity that last modified the resource. */\n  lastModifiedBy?: string;\n  /** The type of identity that last modified the resource. */\n  lastModifiedByType?: CreatedByType;\n  /** The timestamp of resource last modification (UTC) */\n  lastModifiedAt?: Date;\n}\n\n/** A list of the database's security alert policies. */\nexport interface DatabaseSecurityAlertListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of database tables. */\nexport interface DatabaseTableListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseTable[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties for an Azure SQL Database Vulnerability Assessment rule baseline's result. */\nexport interface DatabaseVulnerabilityAssessmentRuleBaselineItem {\n  /** The rule baseline result */\n  result: string[];\n}\n\n/** Properties of a Vulnerability Assessment recurring scans. */\nexport interface VulnerabilityAssessmentRecurringScansProperties {\n  /** Recurring scans state. */\n  isEnabled?: boolean;\n  /** Specifies that the schedule scan notification will be is sent to the subscription administrators. */\n  emailSubscriptionAdmins?: boolean;\n  /** Specifies an array of e-mail addresses to which the scan notification is sent. */\n  emails?: string[];\n}\n\n/** A list of the database's vulnerability assessments. */\nexport interface DatabaseVulnerabilityAssessmentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseVulnerabilityAssessment[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of vulnerability assessment scan records. */\nexport interface VulnerabilityAssessmentScanRecordListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: VulnerabilityAssessmentScanRecord[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a vulnerability assessment scan error. */\nexport interface VulnerabilityAssessmentScanError {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** User activities of a data warehouse */\nexport interface DataWarehouseUserActivitiesListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DataWarehouseUserActivities[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of deleted servers. */\nexport interface DeletedServerListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DeletedServer[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list elastic pool operations request */\nexport interface ElasticPoolOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ElasticPoolOperation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The result of an elastic pool list request. */\nexport interface ElasticPoolListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ElasticPool[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An ARM Resource SKU. */\nexport interface Sku {\n  /** The name of the SKU, typically, a letter + Number code, e.g. P3. */\n  name: string;\n  /** The tier or edition of the particular SKU, e.g. Basic, Premium. */\n  tier?: string;\n  /** Size of the particular SKU */\n  size?: string;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /** Capacity of the particular SKU. */\n  capacity?: number;\n}\n\n/** Per database settings of an elastic pool. */\nexport interface ElasticPoolPerDatabaseSettings {\n  /** The minimum capacity all databases are guaranteed. */\n  minCapacity?: number;\n  /** The maximum capacity any one database can consume. */\n  maxCapacity?: number;\n}\n\n/** An elastic pool update. */\nexport interface ElasticPoolUpdate {\n  /** An ARM Resource SKU. */\n  sku?: Sku;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** The storage limit for the database elastic pool in bytes. */\n  maxSizeBytes?: number;\n  /** The per database settings for the elastic pool. */\n  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;\n  /** Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones. */\n  zoneRedundant?: boolean;\n  /** The license type to apply for this elastic pool. */\n  licenseType?: ElasticPoolLicenseType;\n  /** Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur. */\n  maintenanceConfigurationId?: string;\n}\n\n/** A list of server encryption protectors. */\nexport interface EncryptionProtectorListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: EncryptionProtector[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Read-write endpoint of the failover group instance. */\nexport interface FailoverGroupReadWriteEndpoint {\n  /** Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required. */\n  failoverPolicy: ReadWriteEndpointFailoverPolicy;\n  /** Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required. */\n  failoverWithDataLossGracePeriodMinutes?: number;\n}\n\n/** Read-only endpoint of the failover group instance. */\nexport interface FailoverGroupReadOnlyEndpoint {\n  /** Failover policy of the read-only endpoint for the failover group. */\n  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;\n}\n\n/** Partner server information for the failover group. */\nexport interface PartnerInfo {\n  /** Resource identifier of the partner server. */\n  id: string;\n  /**\n   * Geo location of the partner server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Replication role of the partner server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationRole?: FailoverGroupReplicationRole;\n}\n\n/** A failover group update request. */\nexport interface FailoverGroupUpdate {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Read-write endpoint of the failover group instance. */\n  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;\n  /** Read-only endpoint of the failover group instance. */\n  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;\n  /** List of databases in the failover group. */\n  databases?: string[];\n}\n\n/** A list of failover groups. */\nexport interface FailoverGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FailoverGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** ARM resource. */\nexport interface ResourceWithWritableName {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Resource name. */\n  name?: string;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n}\n\n/** The response to a list firewall rules request */\nexport interface FirewallRuleListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: FirewallRule[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server firewall rules. */\nexport interface FirewallRuleList {\n  values?: FirewallRule[];\n}\n\n/** Read-write endpoint of the failover group instance. */\nexport interface InstanceFailoverGroupReadWriteEndpoint {\n  /** Failover policy of the read-write endpoint for the failover group. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required. */\n  failoverPolicy: ReadWriteEndpointFailoverPolicy;\n  /** Grace period before failover with data loss is attempted for the read-write endpoint. If failoverPolicy is Automatic then failoverWithDataLossGracePeriodMinutes is required. */\n  failoverWithDataLossGracePeriodMinutes?: number;\n}\n\n/** Read-only endpoint of the failover group instance. */\nexport interface InstanceFailoverGroupReadOnlyEndpoint {\n  /** Failover policy of the read-only endpoint for the failover group. */\n  failoverPolicy?: ReadOnlyEndpointFailoverPolicy;\n}\n\n/** Partner region information for the failover group. */\nexport interface PartnerRegionInfo {\n  /** Geo location of the partner managed instances. */\n  location?: string;\n  /**\n   * Replication role of the partner managed instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationRole?: InstanceFailoverGroupReplicationRole;\n}\n\n/** Pairs of Managed Instances in the failover group. */\nexport interface ManagedInstancePairInfo {\n  /** Id of Primary Managed Instance in pair. */\n  primaryManagedInstanceId?: string;\n  /** Id of Partner Managed Instance in pair. */\n  partnerManagedInstanceId?: string;\n}\n\n/** A list of instance failover groups. */\nexport interface InstanceFailoverGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: InstanceFailoverGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An update to an Instance pool. */\nexport interface InstancePoolUpdate {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** A list of Azure SQL instance pools. */\nexport interface InstancePoolListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: InstancePool[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of Azure SQL job agents. */\nexport interface JobAgentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobAgent[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An update to an Azure SQL job agent. */\nexport interface JobAgentUpdate {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** A list of job credentials. */\nexport interface JobCredentialListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobCredential[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of job executions. */\nexport interface JobExecutionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobExecution[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The target that a job execution is executed on. */\nexport interface JobExecutionTarget {\n  /**\n   * The type of the target.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: JobTargetType;\n  /**\n   * The server name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The database name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n}\n\n/** A list of jobs. */\nexport interface JobListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Job[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Scheduling properties of a job. */\nexport interface JobSchedule {\n  /** Schedule start time. */\n  startTime?: Date;\n  /** Schedule end time. */\n  endTime?: Date;\n  /** Schedule interval type */\n  type?: JobScheduleType;\n  /** Whether or not the schedule is enabled. */\n  enabled?: boolean;\n  /** Value of the schedule's recurring interval, if the ScheduleType is recurring. ISO8601 duration format. */\n  interval?: string;\n}\n\n/** A list of job steps. */\nexport interface JobStepListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobStep[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The action to be executed by a job step. */\nexport interface JobStepAction {\n  /** Type of action being executed by the job step. */\n  type?: JobStepActionType;\n  /** The source of the action to execute. */\n  source?: JobStepActionSource;\n  /** The action value, for example the text of the T-SQL script to execute. */\n  value: string;\n}\n\n/** The output configuration of a job step. */\nexport interface JobStepOutput {\n  /** The output destination type. */\n  type?: JobStepOutputType;\n  /** The output destination subscription id. */\n  subscriptionId?: string;\n  /** The output destination resource group. */\n  resourceGroupName?: string;\n  /** The output destination server name. */\n  serverName: string;\n  /** The output destination database. */\n  databaseName: string;\n  /** The output destination schema. */\n  schemaName?: string;\n  /** The output destination table. */\n  tableName: string;\n  /** The resource ID of the credential to use to connect to the output destination. */\n  credential: string;\n}\n\n/** The execution options of a job step. */\nexport interface JobStepExecutionOptions {\n  /** Execution timeout for the job step. */\n  timeoutSeconds?: number;\n  /** Maximum number of times the job step will be reattempted if the first attempt fails. */\n  retryAttempts?: number;\n  /** Initial delay between retries for job step execution. */\n  initialRetryIntervalSeconds?: number;\n  /** The maximum amount of time to wait between retries for job step execution. */\n  maximumRetryIntervalSeconds?: number;\n  /** The backoff multiplier for the time between retries. */\n  retryIntervalBackoffMultiplier?: number;\n}\n\n/** A list of target groups. */\nexport interface JobTargetGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobTargetGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A job target, for example a specific database or a container of databases that is evaluated during job execution. */\nexport interface JobTarget {\n  /** Whether the target is included or excluded from the group. */\n  membershipType?: JobTargetGroupMembershipType;\n  /** The target type. */\n  type: JobTargetType;\n  /** The target server name. */\n  serverName?: string;\n  /** The target database name. */\n  databaseName?: string;\n  /** The target elastic pool name. */\n  elasticPoolName?: string;\n  /** The target shard map. */\n  shardMapName?: string;\n  /** The resource ID of the credential that is used during job execution to connect to the target and determine the list of databases inside the target. */\n  refreshCredential?: string;\n}\n\n/** A list of job versions. */\nexport interface JobVersionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: JobVersion[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The location capability. */\nexport interface LocationCapabilities {\n  /**\n   * The location name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported server versions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedServerVersions?: ServerVersionCapability[];\n  /**\n   * The list of supported managed instance versions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedManagedInstanceVersions?: ManagedInstanceVersionCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The server capability */\nexport interface ServerVersionCapability {\n  /**\n   * The server version name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported database editions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedEditions?: EditionCapability[];\n  /**\n   * The list of supported elastic pool editions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedElasticPoolEditions?: ElasticPoolEditionCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The edition capability. */\nexport interface EditionCapability {\n  /**\n   * The database edition name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported service objectives for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedServiceLevelObjectives?: ServiceObjectiveCapability[];\n  /**\n   * Whether or not zone redundancy is supported for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * The read scale capability for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly readScale?: ReadScaleCapability;\n  /**\n   * The list of supported storage capabilities for this edition\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedStorageCapabilities?: StorageCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The service objectives capability. */\nexport interface ServiceObjectiveCapability {\n  /**\n   * The unique ID of the service objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * The service objective name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported maximum database sizes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMaxSizes?: MaxSizeRangeCapability[];\n  /**\n   * The performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly performanceLevel?: PerformanceLevelCapability;\n  /**\n   * The sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /**\n   * List of supported license types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedLicenseTypes?: LicenseTypeCapability[];\n  /**\n   * The included (free) max size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedMaxSize?: MaxSizeCapability;\n  /**\n   * Whether or not zone redundancy is supported for the service objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * Supported time range for auto pause delay\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedAutoPauseDelay?: AutoPauseDelayTimeRange;\n  /**\n   * List of supported min capacities\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMinCapacities?: MinCapacityCapability[];\n  /**\n   * The compute model\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly computeModel?: string;\n  /**\n   * List of supported maintenance configurations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMaintenanceConfigurations?: MaintenanceConfigurationCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The maximum size range capability. */\nexport interface MaxSizeRangeCapability {\n  /**\n   * Minimum value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minValue?: MaxSizeCapability;\n  /**\n   * Maximum value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxValue?: MaxSizeCapability;\n  /**\n   * Scale/step size for discrete values between the minimum value and the maximum value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scaleSize?: MaxSizeCapability;\n  /**\n   * Size of transaction log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly logSize?: LogSizeCapability;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The maximum size capability. */\nexport interface MaxSizeCapability {\n  /**\n   * The maximum size limit (see 'unit' for the units).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The units that the limit is expressed in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: MaxSizeUnit;\n}\n\n/** The log size capability. */\nexport interface LogSizeCapability {\n  /**\n   * The log size limit (see 'unit' for the units).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * The units that the limit is expressed in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: LogSizeUnit;\n}\n\n/** The performance level capability. */\nexport interface PerformanceLevelCapability {\n  /**\n   * Performance level value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * Unit type used to measure performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: PerformanceLevelUnit;\n}\n\n/** The license type capability */\nexport interface LicenseTypeCapability {\n  /**\n   * License type identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** Supported auto pause delay time range */\nexport interface AutoPauseDelayTimeRange {\n  /**\n   * Minimum value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly minValue?: number;\n  /**\n   * Maximum value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxValue?: number;\n  /**\n   * Step value for discrete values between the minimum value and the maximum value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stepSize?: number;\n  /**\n   * Default value is no value is provided\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly default?: number;\n  /**\n   * Unit of time that delay is expressed in\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: PauseDelayTimeUnit;\n  /**\n   * Value that is used to not pause (infinite delay before pause)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly doNotPauseValue?: number;\n}\n\n/** The min capacity capability */\nexport interface MinCapacityCapability {\n  /**\n   * Min capacity value\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The maintenance configuration capability */\nexport interface MaintenanceConfigurationCapability {\n  /**\n   * Maintenance configuration name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Whether or not zone redundancy is supported for the maintenance configuration.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The read scale capability. */\nexport interface ReadScaleCapability {\n  /**\n   * The maximum number of read scale replicas.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxNumberOfReplicas?: number;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The storage account type capability. */\nexport interface StorageCapability {\n  /**\n   * The storage account type for the database's backups.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageAccountType?: StorageCapabilityStorageAccountType;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The elastic pool edition capability. */\nexport interface ElasticPoolEditionCapability {\n  /**\n   * The elastic pool edition name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported elastic pool DTU levels for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedElasticPoolPerformanceLevels?: ElasticPoolPerformanceLevelCapability[];\n  /**\n   * Whether or not zone redundancy is supported for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The Elastic Pool performance level capability. */\nexport interface ElasticPoolPerformanceLevelCapability {\n  /**\n   * The performance level for the pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly performanceLevel?: PerformanceLevelCapability;\n  /**\n   * The sku.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: Sku;\n  /**\n   * List of supported license types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedLicenseTypes?: LicenseTypeCapability[];\n  /**\n   * The maximum number of databases supported.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxDatabaseCount?: number;\n  /**\n   * The included (free) max size for this performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedMaxSize?: MaxSizeCapability;\n  /**\n   * The list of supported max sizes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMaxSizes?: MaxSizeRangeCapability[];\n  /**\n   * The list of supported per database max sizes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedPerDatabaseMaxSizes?: MaxSizeRangeCapability[];\n  /**\n   * The list of supported per database max performance levels.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedPerDatabaseMaxPerformanceLevels?: ElasticPoolPerDatabaseMaxPerformanceLevelCapability[];\n  /**\n   * Whether or not zone redundancy is supported for the performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * List of supported maintenance configurations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMaintenanceConfigurations?: MaintenanceConfigurationCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The max per-database performance level capability. */\nexport interface ElasticPoolPerDatabaseMaxPerformanceLevelCapability {\n  /**\n   * The maximum performance level per database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Unit type used to measure performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: PerformanceLevelUnit;\n  /**\n   * The list of supported min database performance levels.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedPerDatabaseMinPerformanceLevels?: ElasticPoolPerDatabaseMinPerformanceLevelCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The minimum per-database performance level capability. */\nexport interface ElasticPoolPerDatabaseMinPerformanceLevelCapability {\n  /**\n   * The minimum performance level per database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Unit type used to measure performance level.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: PerformanceLevelUnit;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The managed instance capability */\nexport interface ManagedInstanceVersionCapability {\n  /**\n   * The server version name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The list of supported managed instance editions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedEditions?: ManagedInstanceEditionCapability[];\n  /**\n   * The list of supported instance pool editions.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedInstancePoolEditions?: InstancePoolEditionCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The managed server capability */\nexport interface ManagedInstanceEditionCapability {\n  /**\n   * The managed server version name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The supported families.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedFamilies?: ManagedInstanceFamilyCapability[];\n  /**\n   * The list of supported storage capabilities for this edition\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedStorageCapabilities?: StorageCapability[];\n  /**\n   * Whether or not zone redundancy is supported for the edition.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly zoneRedundant?: boolean;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The managed server family capability. */\nexport interface ManagedInstanceFamilyCapability {\n  /**\n   * Family name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * SKU name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sku?: string;\n  /**\n   * List of supported license types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedLicenseTypes?: LicenseTypeCapability[];\n  /**\n   * List of supported virtual cores values.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedVcoresValues?: ManagedInstanceVcoresCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The managed instance virtual cores capability. */\nexport interface ManagedInstanceVcoresCapability {\n  /**\n   * The virtual cores identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The virtual cores value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * Included size.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly includedMaxSize?: MaxSizeCapability;\n  /**\n   * Storage size ranges.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedStorageSizes?: MaxSizeRangeCapability[];\n  /**\n   * True if this service objective is supported for managed instances in an instance pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly instancePoolSupported?: boolean;\n  /**\n   * True if this service objective is supported for standalone managed instances.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly standaloneSupported?: boolean;\n  /**\n   * List of supported maintenance configurations\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedMaintenanceConfigurations?: ManagedInstanceMaintenanceConfigurationCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The maintenance configuration capability */\nexport interface ManagedInstanceMaintenanceConfigurationCapability {\n  /**\n   * Maintenance configuration name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The instance pool capability */\nexport interface InstancePoolEditionCapability {\n  /**\n   * The instance pool version name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The supported families.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedFamilies?: InstancePoolFamilyCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The instance pool family capability. */\nexport interface InstancePoolFamilyCapability {\n  /**\n   * Family name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * List of supported license types.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedLicenseTypes?: LicenseTypeCapability[];\n  /**\n   * List of supported virtual cores values.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly supportedVcoresValues?: InstancePoolVcoresCapability[];\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** The managed instance virtual cores capability. */\nexport interface InstancePoolVcoresCapability {\n  /**\n   * The virtual cores identifier.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The virtual cores value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * Storage limit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageLimit?: MaxSizeCapability;\n  /**\n   * The status of the capability.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: CapabilityStatus;\n  /** The reason for the capability not being available. */\n  reason?: string;\n}\n\n/** A list of long term retention policies. */\nexport interface LongTermRetentionPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: LongTermRetentionPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Maintenance window time range. */\nexport interface MaintenanceWindowTimeRange {\n  /** Day of maintenance window. */\n  dayOfWeek?: DayOfWeek;\n  /** Start time minutes offset from 12am. */\n  startTime?: string;\n  /** Duration of maintenance window in minutes. */\n  duration?: string;\n}\n\n/** A list of short term retention policies. */\nexport interface ManagedBackupShortTermRetentionPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedBackupShortTermRetentionPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Execution statistics for one particular query */\nexport interface ManagedInstanceQueryStatistics {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: QueryStatistics[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a query execution statistics. */\nexport interface QueryStatisticsProperties {\n  /**\n   * Database name of the database in which this query was executed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * Unique query id (unique within one database).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queryId?: string;\n  /**\n   * The start time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * The end time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: string;\n  /** List of intervals with appropriate metric data */\n  intervals?: QueryMetricInterval[];\n}\n\n/** Properties of a query metrics interval. */\nexport interface QueryMetricInterval {\n  /**\n   * The start time for the metric interval (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervalStartTime?: string;\n  /**\n   * Interval type (length).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervalType?: QueryTimeGrainType;\n  /**\n   * Execution count of a query in this interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executionCount?: number;\n  /** List of metric objects for this interval */\n  metrics?: QueryMetricProperties[];\n}\n\n/** Properties of a topquery metric in one interval. */\nexport interface QueryMetricProperties {\n  /**\n   * The name information for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The UI appropriate name for the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * The unit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: QueryMetricUnitType;\n  /**\n   * The value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: number;\n  /**\n   * Metric value when min() aggregate function is used over the interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly min?: number;\n  /**\n   * Metric value when max() aggregate function is used over the interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly max?: number;\n  /**\n   * Metric value when avg() aggregate function is used over the interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly avg?: number;\n  /**\n   * Metric value when sum() aggregate function is used over the interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly sum?: number;\n  /**\n   * Metric value when stdev aggregate function is used over the interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stdev?: number;\n}\n\n/** A list of managed databases. */\nexport interface ManagedDatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedDatabase[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An managed database update. */\nexport interface ManagedDatabaseUpdate {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Collation of the managed database. */\n  collation?: string;\n  /**\n   * Status of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: ManagedDatabaseStatus;\n  /**\n   * Creation date of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * Earliest restore point in time for point in time restore.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestorePoint?: Date;\n  /** Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /**\n   * Geo paired region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultSecondaryLocation?: string;\n  /** Collation of the metadata catalog. */\n  catalogCollation?: CatalogCollationType;\n  /** Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required). */\n  createMode?: ManagedDatabaseCreateMode;\n  /** Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored. */\n  storageContainerUri?: string;\n  /** The resource identifier of the source database associated with create operation of this database. */\n  sourceDatabaseId?: string;\n  /** The restorable dropped database resource id to restore when creating this database. */\n  restorableDroppedDatabaseId?: string;\n  /** Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token. */\n  storageContainerSasToken?: string;\n  /**\n   * Instance Failover Group resource identifier that this managed database belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverGroupId?: string;\n  /** The resource identifier of the recoverable database associated with create operation of this database. */\n  recoverableDatabaseId?: string;\n  /** The name of the Long Term Retention backup to be used for restore of this managed database. */\n  longTermRetentionBackupResourceId?: string;\n  /** Whether to auto complete restore of this managed database. */\n  autoCompleteRestore?: boolean;\n  /** Last backup file name for restore of this managed database. */\n  lastBackupName?: string;\n}\n\n/** Contains the information necessary to perform a complete database restore operation. */\nexport interface CompleteDatabaseRestoreDefinition {\n  /** The last backup name to apply */\n  lastBackupName: string;\n}\n\n/** A list of the managed database's security alert policies. */\nexport interface ManagedDatabaseSecurityAlertPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedDatabaseSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of security events. */\nexport interface SecurityEventCollection {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SecurityEvent[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The properties of a security event sql injection additional properties. */\nexport interface SecurityEventSqlInjectionAdditionalProperties {\n  /**\n   * The threat ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly threatId?: string;\n  /**\n   * The statement\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statement?: string;\n  /**\n   * The statement highlight offset\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statementHighlightOffset?: number;\n  /**\n   * The statement highlight length\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly statementHighlightLength?: number;\n  /**\n   * The sql error code\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The sql error severity\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * The sql error message\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n}\n\n/** A list of sensitivity labels. */\nexport interface SensitivityLabelListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SensitivityLabel[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of sensitivity label update operations. */\nexport interface SensitivityLabelUpdateList {\n  operations?: SensitivityLabelUpdate[];\n}\n\n/** A list of recommended sensitivity label update operations. */\nexport interface RecommendedSensitivityLabelUpdateList {\n  operations?: RecommendedSensitivityLabelUpdate[];\n}\n\n/** A list of managed transparent data encryptions */\nexport interface ManagedTransparentDataEncryptionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedTransparentDataEncryption[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of managed instance administrators. */\nexport interface ManagedInstanceAdministratorListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceAdministrator[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of active directory only authentications. */\nexport interface ManagedInstanceAzureADOnlyAuthListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceAzureADOnlyAuthentication[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of managed instance encryption protectors. */\nexport interface ManagedInstanceEncryptionProtectorListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceEncryptionProtector[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of managed instance keys. */\nexport interface ManagedInstanceKeyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceKey[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of long term retention policies. */\nexport interface ManagedInstanceLongTermRetentionPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceLongTermRetentionPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list managed instance operations request */\nexport interface ManagedInstanceOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceOperation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The parameters of a managed instance operation. */\nexport interface ManagedInstanceOperationParametersPair {\n  /**\n   * The current parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentParameters?: UpsertManagedServerOperationParameters;\n  /**\n   * The requested parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedParameters?: UpsertManagedServerOperationParameters;\n}\n\nexport interface UpsertManagedServerOperationParameters {\n  family?: string;\n  tier?: string;\n  vCores?: number;\n  storageSizeInGB?: number;\n}\n\n/** The steps of a managed instance operation. */\nexport interface ManagedInstanceOperationSteps {\n  /**\n   * The total number of operation steps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly totalSteps?: string;\n  /**\n   * The number of current operation steps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentStep?: number;\n  /**\n   * The operation steps list.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stepsList?: UpsertManagedServerOperationStep[];\n}\n\nexport interface UpsertManagedServerOperationStep {\n  order?: number;\n  name?: string;\n  status?: UpsertManagedServerOperationStepStatus;\n}\n\n/** Properties of a private endpoint connection. */\nexport interface ManagedInstancePrivateEndpointConnectionProperties {\n  /** Private endpoint which the connection belongs to. */\n  privateEndpoint?: ManagedInstancePrivateEndpointProperty;\n  /** Connection State of the Private Endpoint Connection. */\n  privateLinkServiceConnectionState?: ManagedInstancePrivateLinkServiceConnectionStateProperty;\n  /**\n   * State of the Private Endpoint Connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\nexport interface ManagedInstancePrivateEndpointProperty {\n  /** Resource id of the private endpoint. */\n  id?: string;\n}\n\nexport interface ManagedInstancePrivateLinkServiceConnectionStateProperty {\n  /** The private link service connection status. */\n  status: string;\n  /** The private link service connection description. */\n  description: string;\n  /**\n   * The private link service connection description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionsRequired?: string;\n}\n\n/** A list of private endpoint connections. */\nexport interface ManagedInstancePrivateEndpointConnectionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstancePrivateEndpointConnection[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of private link resources */\nexport interface ManagedInstancePrivateLinkListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstancePrivateLink[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a private link resource. */\nexport interface ManagedInstancePrivateLinkProperties {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n}\n\n/** A list of the ManagedInstance's vulnerability assessments. */\nexport interface ManagedInstanceVulnerabilityAssessmentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceVulnerabilityAssessment[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the managed Server's security alert policies. */\nexport interface ManagedServerSecurityAlertPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedServerSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Result of the request to list SQL operations. */\nexport interface OperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Operation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** SQL REST API operation definition. */\nexport interface Operation {\n  /**\n   * The name of the operation being performed on this particular object.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The localized display information for this particular operation / action.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly display?: OperationDisplay;\n  /**\n   * The intended executor of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly origin?: OperationOrigin;\n  /**\n   * Additional descriptions for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: { [propertyName: string]: Record<string, unknown> };\n}\n\n/** Display metadata associated with the operation. */\nexport interface OperationDisplay {\n  /**\n   * The localized friendly form of the resource provider name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provider?: string;\n  /**\n   * The localized friendly form of the resource type related to this action/operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resource?: string;\n  /**\n   * The localized friendly name for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The localized friendly description for the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** A list of service health statuses in a location. */\nexport interface OperationsHealthListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: OperationsHealth[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a private endpoint connection. */\nexport interface PrivateEndpointConnectionProperties {\n  /** Private endpoint which the connection belongs to. */\n  privateEndpoint?: PrivateEndpointProperty;\n  /** Connection state of the private endpoint connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;\n  /**\n   * State of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointProvisioningState;\n}\n\nexport interface PrivateEndpointProperty {\n  /** Resource id of the private endpoint. */\n  id?: string;\n}\n\nexport interface PrivateLinkServiceConnectionStateProperty {\n  /** The private link service connection status. */\n  status: PrivateLinkServiceConnectionStateStatus;\n  /** The private link service connection description. */\n  description: string;\n  /**\n   * The actions required for private link service connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actionsRequired?: PrivateLinkServiceConnectionStateActionsRequire;\n}\n\n/** A list of private endpoint connections. */\nexport interface PrivateEndpointConnectionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PrivateEndpointConnection[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of private link resources */\nexport interface PrivateLinkResourceListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: PrivateLinkResource[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of a private link resource. */\nexport interface PrivateLinkResourceProperties {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly groupId?: string;\n  /**\n   * The private link resource required member names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredMembers?: string[];\n  /**\n   * The private link resource required zone names.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requiredZoneNames?: string[];\n}\n\n/** A list of recoverable managed databases. */\nexport interface RecoverableManagedDatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RecoverableManagedDatabase[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of long term retention backups. */\nexport interface RestorePointListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RestorePoint[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Contains the information necessary to perform a create database restore point operation. */\nexport interface CreateDatabaseRestorePointDefinition {\n  /** The restore point label to apply */\n  restorePointLabel: string;\n}\n\n/** Automatic tuning properties for individual advisors. */\nexport interface AutomaticTuningServerOptions {\n  /** Automatic tuning option desired state. */\n  desiredState?: AutomaticTuningOptionModeDesired;\n  /**\n   * Automatic tuning option actual state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actualState?: AutomaticTuningOptionModeActual;\n  /**\n   * Reason code if desired and actual state are different.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reasonCode?: number;\n  /**\n   * Reason description if desired and actual state are different.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reasonDesc?: AutomaticTuningServerReason;\n}\n\n/** A list of active directory administrators. */\nexport interface AdministratorListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerAzureADAdministrator[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of active directory only authentications. */\nexport interface AzureADOnlyAuthListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerAzureADOnlyAuthentication[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server DevOps audit settings. */\nexport interface ServerDevOpsAuditSettingsListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerDevOpsAuditingSettings[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server DNS aliases. */\nexport interface ServerDnsAliasListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerDnsAlias[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A server dns alias acquisition request. */\nexport interface ServerDnsAliasAcquisition {\n  /** The id of the server alias that will be acquired to point to this server instead. */\n  oldServerDnsAliasId: string;\n}\n\n/** A list of server keys. */\nexport interface ServerKeyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerKey[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list server operations request */\nexport interface ServerOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerOperation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the server's security alert policies. */\nexport interface LogicalServerSecurityAlertPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerSecurityAlertPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Server info for the server trust group. */\nexport interface ServerInfo {\n  /** Server Id. */\n  serverId: string;\n}\n\n/** A list of server trust groups. */\nexport interface ServerTrustGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerTrustGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of the server's vulnerability assessments. */\nexport interface ServerVulnerabilityAssessmentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerVulnerabilityAssessment[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of subscription usage metrics in a location. */\nexport interface SubscriptionUsageListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SubscriptionUsage[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of sync agents. */\nexport interface SyncAgentListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncAgent[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of an Azure SQL Database sync agent key. */\nexport interface SyncAgentKeyProperties {\n  /**\n   * Key of sync agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly syncAgentKey?: string;\n}\n\n/** A list of sync agent linked databases. */\nexport interface SyncAgentLinkedDatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncAgentLinkedDatabase[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of sync database ID properties. */\nexport interface SyncDatabaseIdListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncDatabaseIdProperties[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of the sync database id. */\nexport interface SyncDatabaseIdProperties {\n  /**\n   * ARM resource id of sync database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n}\n\n/** A list of sync schema properties. */\nexport interface SyncFullSchemaPropertiesListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncFullSchemaProperties[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of the database full schema. */\nexport interface SyncFullSchemaProperties {\n  /**\n   * List of tables in the database full schema.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tables?: SyncFullSchemaTable[];\n  /**\n   * Last update time of the database schema.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUpdateTime?: Date;\n}\n\n/** Properties of the table in the database full schema. */\nexport interface SyncFullSchemaTable {\n  /**\n   * List of columns in the table of database full schema.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly columns?: SyncFullSchemaTableColumn[];\n  /**\n   * Error id of the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorId?: string;\n  /**\n   * If there is error in the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasError?: boolean;\n  /**\n   * Name of the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Quoted name of the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quotedName?: string;\n}\n\n/** Properties of the column in the table of database full schema. */\nexport interface SyncFullSchemaTableColumn {\n  /**\n   * Data size of the column.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataSize?: string;\n  /**\n   * Data type of the column.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dataType?: string;\n  /**\n   * Error id of the column.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorId?: string;\n  /**\n   * If there is error in the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hasError?: boolean;\n  /**\n   * If it is the primary key of the table.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isPrimaryKey?: boolean;\n  /**\n   * Name of the column.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * Quoted name of the column.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly quotedName?: string;\n}\n\n/** A list of sync group log properties. */\nexport interface SyncGroupLogListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncGroupLogProperties[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Properties of an Azure SQL Database sync group log. */\nexport interface SyncGroupLogProperties {\n  /**\n   * Timestamp of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timestamp?: Date;\n  /**\n   * Type of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: SyncGroupLogType;\n  /**\n   * Source of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly source?: string;\n  /**\n   * Details of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: string;\n  /**\n   * TracingId of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tracingId?: string;\n  /**\n   * OperationStatus of the sync group log.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationStatus?: string;\n}\n\n/** Properties of sync group schema. */\nexport interface SyncGroupSchema {\n  /** List of tables in sync group schema. */\n  tables?: SyncGroupSchemaTable[];\n  /** Name of master sync member where the schema is from. */\n  masterSyncMemberName?: string;\n}\n\n/** Properties of table in sync group schema. */\nexport interface SyncGroupSchemaTable {\n  /** List of columns in sync group schema. */\n  columns?: SyncGroupSchemaTableColumn[];\n  /** Quoted name of sync group schema table. */\n  quotedName?: string;\n}\n\n/** Properties of column in sync group table. */\nexport interface SyncGroupSchemaTableColumn {\n  /** Quoted name of sync group table column. */\n  quotedName?: string;\n  /** Data size of the column. */\n  dataSize?: string;\n  /** Data type of the column. */\n  dataType?: string;\n}\n\n/** A list of sync groups. */\nexport interface SyncGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of Azure SQL Database sync members. */\nexport interface SyncMemberListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: SyncMember[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of time zones. */\nexport interface TimeZoneListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TimeZone[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of virtual clusters. */\nexport interface VirtualClusterListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: VirtualCluster[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** An update request for an Azure SQL Database virtual cluster. */\nexport interface VirtualClusterUpdate {\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Subnet resource ID for the virtual cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnetId?: string;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /**\n   * List of resources in this virtual cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly childResources?: string[];\n  /** Specifies maintenance configuration id to apply to this virtual cluster. */\n  maintenanceConfigurationId?: string;\n}\n\n/** A list of virtual network rules. */\nexport interface VirtualNetworkRuleListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: VirtualNetworkRule[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of workload classifiers for a workload group. */\nexport interface WorkloadClassifierListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: WorkloadClassifier[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of workload groups. */\nexport interface WorkloadGroupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: WorkloadGroup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of transparent data encryptions */\nexport interface LogicalDatabaseTransparentDataEncryptionListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: LogicalDatabaseTransparentDataEncryption[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of short term retention policies. */\nexport interface BackupShortTermRetentionPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: BackupShortTermRetentionPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Import export operation extensions list. */\nexport interface ImportExportExtensionsOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ImportExportExtensionsOperationResult[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The response to a list database operations request */\nexport interface DatabaseOperationListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseOperation[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of database usage metrics. */\nexport interface DatabaseUsageListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DatabaseUsage[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of ledger digest upload settings. */\nexport interface LedgerDigestUploadsListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: LedgerDigestUploads[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of outbound rules. */\nexport interface OutboundFirewallRuleListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: OutboundFirewallRule[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of replication links. */\nexport interface ReplicationLinkListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ReplicationLink[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of servers. */\nexport interface ServerListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Server[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Azure Active Directory identity configuration for a resource. */\nexport interface ResourceIdentity {\n  /** The resource ids of the user assigned identities to use */\n  userAssignedIdentities?: { [propertyName: string]: UserIdentity };\n  /**\n   * The Azure Active Directory principal id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /** The identity type. Set this to 'SystemAssigned' in order to automatically create and assign an Azure Active Directory principal for the resource. */\n  type?: IdentityType;\n  /**\n   * The Azure Active Directory tenant id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** Azure Active Directory identity configuration for a resource. */\nexport interface UserIdentity {\n  /**\n   * The Azure Active Directory principal id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The Azure Active Directory client id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** A private endpoint connection under a server */\nexport interface ServerPrivateEndpointConnection {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Private endpoint connection properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: PrivateEndpointConnectionProperties;\n}\n\n/** Properties of a active directory administrator. */\nexport interface ServerExternalAdministrator {\n  /** Type of the sever administrator. */\n  administratorType?: AdministratorType;\n  /** Principal Type of the sever administrator. */\n  principalType?: PrincipalType;\n  /** Login name of the server administrator. */\n  login?: string;\n  /** SID (object ID) of the server administrator. */\n  sid?: string;\n  /** Tenant ID of the administrator. */\n  tenantId?: string;\n  /** Azure Active Directory only Authentication enabled. */\n  azureADOnlyAuthentication?: boolean;\n}\n\n/** An update request for an Azure SQL Database server. */\nexport interface ServerUpdate {\n  /** Server identity */\n  identity?: ResourceIdentity;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Administrator username for the server. Once created it cannot be changed. */\n  administratorLogin?: string;\n  /** The administrator login password (required for server creation). */\n  administratorLoginPassword?: string;\n  /** The version of the server. */\n  version?: string;\n  /**\n   * The state of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /**\n   * The fully qualified domain name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainName?: string;\n  /**\n   * List of private endpoint connections on a server\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: ServerPrivateEndpointConnection[];\n  /** Minimal TLS version. Allowed values: '1.0', '1.1', '1.2' */\n  minimalTlsVersion?: string;\n  /** Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */\n  publicNetworkAccess?: ServerNetworkAccessFlag;\n  /**\n   * Whether or not existing server has a workspace created and if it allows connection from workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceFeature?: ServerWorkspaceFeature;\n  /** The resource id of a user assigned identity to be used by default. */\n  primaryUserAssignedIdentityId?: string;\n  /** The Client id used for cross tenant CMK scenario */\n  federatedClientId?: string;\n  /** A CMK URI of the key to use for encryption. */\n  keyId?: string;\n  /** The Azure Active Directory identity of the server. */\n  administrators?: ServerExternalAdministrator;\n  /** Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */\n  restrictOutboundNetworkAccess?: ServerNetworkAccessFlag;\n}\n\n/** Contains the information necessary to perform import operation for new database. */\nexport interface ImportNewDatabaseDefinition {\n  /** Name of the import database. */\n  databaseName?: string;\n  /** Edition of the import database. */\n  edition?: string;\n  /** Service level objective name of the import database. */\n  serviceObjectiveName?: string;\n  /** Max size in bytes for the import database. */\n  maxSizeBytes?: string;\n  /** Storage key type. */\n  storageKeyType: StorageKeyType;\n  /** Storage key. */\n  storageKey: string;\n  /** Storage Uri. */\n  storageUri: string;\n  /** Administrator login name. */\n  administratorLogin: string;\n  /** Administrator login password. */\n  administratorLoginPassword: string;\n  /** Authentication type. */\n  authenticationType?: string;\n  /** Optional resource information to enable network isolation for request. */\n  networkIsolation?: NetworkIsolationSettings;\n}\n\n/** Contains the ARM resources for which to create private endpoint connection. */\nexport interface NetworkIsolationSettings {\n  /** The resource id for the storage account used to store BACPAC file. If set, private endpoint connection will be created for the storage account. Must match storage account used for StorageUri parameter. */\n  storageAccountResourceId?: string;\n  /** The resource id for the SQL server which is the target of this request. If set, private endpoint connection will be created for the SQL server. Must match server which is target of the operation. */\n  sqlServerResourceId?: string;\n}\n\n/** Contains the private endpoint connection requests status. */\nexport interface PrivateEndpointConnectionRequestStatus {\n  /**\n   * Resource id for which the private endpoint is created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateLinkServiceId?: string;\n  /**\n   * The connection name for the private endpoint.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnectionName?: string;\n  /**\n   * Status of this private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n}\n\n/** A request to check whether the specified name for a resource is available. */\nexport interface CheckNameAvailabilityRequest {\n  name: string;\n  type: \"Microsoft.Sql/servers\";\n}\n\n/** The result of a name availability check. */\nexport interface CheckNameAvailabilityResponse {\n  /**\n   * The name whose availability was checked.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * True if the name is available, otherwise false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly available?: boolean;\n  /**\n   * The reason code explaining why the name is unavailable. Will be undefined if the name is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly reason?: CheckNameAvailabilityReason;\n  /**\n   * A message explaining why the name is unavailable. Will be undefined if the name is available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** A list of usages. */\nexport interface UsageListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Usage[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** ARM usage. */\nexport interface Usage {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Resource name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: Name;\n  /**\n   * Resource type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly type?: string;\n  /**\n   * Usage unit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * Usage current value.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Usage limit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Usage requested limit.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedLimit?: number;\n}\n\n/** ARM Usage Name */\nexport interface Name {\n  /** Usage name value */\n  value?: string;\n  /** Usage name localized value. */\n  localizedValue?: string;\n}\n\n/** A list of databases. */\nexport interface DatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Database[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Azure Active Directory identity configuration for a resource. */\nexport interface DatabaseIdentity {\n  /** The identity type */\n  type?: DatabaseIdentityType;\n  /**\n   * The Azure Active Directory tenant id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** The resource ids of the user assigned identities to use */\n  userAssignedIdentities?: { [propertyName: string]: DatabaseUserIdentity };\n  /** Resources delegated to the database - Internal Use Only */\n  delegatedResources?: { [propertyName: string]: Delegation };\n}\n\n/** Azure Active Directory identity configuration for a resource. */\nexport interface DatabaseUserIdentity {\n  /**\n   * The Azure Active Directory principal id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The Azure Active Directory client id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n}\n\n/** Delegated Resource Properties - Internal Use Only */\nexport interface Delegation {\n  /** The resource id of the source resource - Internal Use Only */\n  resourceId?: string;\n  /**\n   * AAD tenant guid of the source resource identity - Internal Use Only.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n}\n\n/** A database resource. */\nexport interface DatabaseUpdate {\n  /** The name and tier of the SKU. */\n  sku?: Sku;\n  /** Database identity */\n  identity?: DatabaseIdentity;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * Specifies the mode of database creation.\n   *\n   * Default: regular database creation.\n   *\n   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\n   *\n   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\n   *\n   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\n   *\n   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\n   *\n   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\n   *\n   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\n   *\n   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\n   */\n  createMode?: CreateMode;\n  /** The collation of the database. */\n  collation?: string;\n  /** The max size of the database expressed in bytes. */\n  maxSizeBytes?: number;\n  /** The name of the sample schema to apply when creating this database. */\n  sampleName?: SampleName;\n  /** The resource identifier of the elastic pool containing this database. */\n  elasticPoolId?: string;\n  /** The resource identifier of the source database associated with create operation of this database. */\n  sourceDatabaseId?: string;\n  /**\n   * The status of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: DatabaseStatus;\n  /**\n   * The ID of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseId?: string;\n  /**\n   * The creation date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * The current service level objective name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentServiceObjectiveName?: string;\n  /**\n   * The requested service level objective name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedServiceObjectiveName?: string;\n  /**\n   * The default secondary region for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultSecondaryLocation?: string;\n  /**\n   * Failover Group resource identifier that this database belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverGroupId?: string;\n  /** Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /** Specifies the time that the database was deleted. */\n  sourceDatabaseDeletionDate?: Date;\n  /** The resource identifier of the recovery point associated with create operation of this database. */\n  recoveryServicesRecoveryPointId?: string;\n  /** The resource identifier of the long term retention backup associated with create operation of this database. */\n  longTermRetentionBackupResourceId?: string;\n  /** The resource identifier of the recoverable database associated with create operation of this database. */\n  recoverableDatabaseId?: string;\n  /** The resource identifier of the restorable dropped database associated with create operation of this database. */\n  restorableDroppedDatabaseId?: string;\n  /** Collation of the metadata catalog. */\n  catalogCollation?: CatalogCollationType;\n  /** Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones. */\n  zoneRedundant?: boolean;\n  /** The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit. */\n  licenseType?: DatabaseLicenseType;\n  /**\n   * The max log size for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxLogSizeBytes?: number;\n  /**\n   * This records the earliest start date and time that restore is available for this database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n  /** The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. */\n  readScale?: DatabaseReadScale;\n  /** The number of secondary replicas associated with the database that are used to provide high availability. */\n  highAvailabilityReplicaCount?: number;\n  /** The secondary type of the database if it is a secondary.  Valid values are Geo and Named. */\n  secondaryType?: SecondaryType;\n  /**\n   * The name and tier of the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentSku?: Sku;\n  /** Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled */\n  autoPauseDelay?: number;\n  /**\n   * The storage account type used to store backups for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** The storage account type to be used to store backups for this database. */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** Minimal capacity that database will always have allocated, if not paused */\n  minCapacity?: number;\n  /**\n   * The date when database was paused by user configuration or action(ISO8601 format). Null if the database is ready.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pausedDate?: Date;\n  /**\n   * The date when database was resumed by user action or database login (ISO8601 format). Null if the database is paused.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resumedDate?: Date;\n  /** Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur. */\n  maintenanceConfigurationId?: string;\n  /** Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created. */\n  isLedgerOn?: boolean;\n  /**\n   * Infra encryption is enabled for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isInfraEncryptionEnabled?: boolean;\n  /** The Client id used for cross tenant per database CMK scenario */\n  federatedClientId?: string;\n  /** The Primary Delegated Identity Client id used for per database CMK - for internal use only */\n  primaryDelegatedIdentityClientId?: string;\n}\n\n/** Contains the information necessary to perform a resource move (rename). */\nexport interface ResourceMoveDefinition {\n  /** The target ID for the resource */\n  id: string;\n}\n\n/** Contains the information necessary to perform import operation for existing database. */\nexport interface ImportExistingDatabaseDefinition {\n  /** Storage key type. */\n  storageKeyType: StorageKeyType;\n  /** Storage key. */\n  storageKey: string;\n  /** Storage Uri. */\n  storageUri: string;\n  /** Administrator login name. */\n  administratorLogin: string;\n  /** Administrator login password. */\n  administratorLoginPassword: string;\n  /** Authentication type. */\n  authenticationType?: string;\n  /** Optional resource information to enable network isolation for request. */\n  networkIsolation?: NetworkIsolationSettings;\n}\n\n/** Contains the information necessary to perform export database operation. */\nexport interface ExportDatabaseDefinition {\n  /** Storage key type. */\n  storageKeyType: StorageKeyType;\n  /** Storage key. */\n  storageKey: string;\n  /** Storage Uri. */\n  storageUri: string;\n  /** Administrator login name. */\n  administratorLogin: string;\n  /** Administrator login password. */\n  administratorLoginPassword: string;\n  /** Authentication type. */\n  authenticationType?: string;\n  /** Optional resource information to enable network isolation for request. */\n  networkIsolation?: NetworkIsolationSettings;\n}\n\n/** Contains the information necessary to perform long term retention backup copy operation. */\nexport interface CopyLongTermRetentionBackupParameters {\n  /** The subscription that owns the target server */\n  targetSubscriptionId?: string;\n  /** The resource group that owns the target server */\n  targetResourceGroup?: string;\n  /** The resource Id of the target server that owns the database */\n  targetServerResourceId?: string;\n  /** The fully qualified domain name of the target server */\n  targetServerFullyQualifiedDomainName?: string;\n  /** The name of the database owns the copied backup. */\n  targetDatabaseName?: string;\n  /** The storage redundancy type of the copied backup */\n  targetBackupStorageRedundancy?: BackupStorageRedundancy;\n}\n\n/** Contains the information necessary to perform long term retention backup update operation. */\nexport interface UpdateLongTermRetentionBackupParameters {\n  /** The storage redundancy type of the copied backup */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n}\n\n/** A list of long term retention backups. */\nexport interface LongTermRetentionBackupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: LongTermRetentionBackup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of long term retention backups for managed database(s). */\nexport interface ManagedInstanceLongTermRetentionBackupListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstanceLongTermRetentionBackup[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of managed instances. */\nexport interface ManagedInstanceListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ManagedInstance[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A private endpoint connection under a managed instance */\nexport interface ManagedInstancePecProperty {\n  /**\n   * Resource ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /**\n   * Private endpoint connection properties\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: ManagedInstancePrivateEndpointConnectionProperties;\n}\n\n/** Properties of a active directory administrator. */\nexport interface ManagedInstanceExternalAdministrator {\n  /** Type of the sever administrator. */\n  administratorType?: AdministratorType;\n  /** Principal Type of the sever administrator. */\n  principalType?: PrincipalType;\n  /** Login name of the server administrator. */\n  login?: string;\n  /** SID (object ID) of the server administrator. */\n  sid?: string;\n  /** Tenant ID of the administrator. */\n  tenantId?: string;\n  /** Azure Active Directory only Authentication enabled. */\n  azureADOnlyAuthentication?: boolean;\n}\n\n/** The managed instance's service principal configuration for a resource. */\nexport interface ServicePrincipal {\n  /**\n   * The Azure Active Directory application object id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalId?: string;\n  /**\n   * The Azure Active Directory application client id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientId?: string;\n  /**\n   * The Azure Active Directory tenant id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tenantId?: string;\n  /** Service principal type. */\n  type?: ServicePrincipalType;\n}\n\n/** An update request for an Azure SQL Database managed instance. */\nexport interface ManagedInstanceUpdate {\n  /** Managed instance sku */\n  sku?: Sku;\n  /** Managed instance identity */\n  identity?: ResourceIdentity;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly provisioningState?: ManagedInstancePropertiesProvisioningState;\n  /**\n   * Specifies the mode of database creation.\n   *\n   * Default: Regular instance creation.\n   *\n   * Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.\n   */\n  managedInstanceCreateMode?: ManagedServerCreateMode;\n  /**\n   * The fully qualified domain name of the managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainName?: string;\n  /** Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation). */\n  administratorLogin?: string;\n  /** The administrator login password (required for managed instance creation). */\n  administratorLoginPassword?: string;\n  /** Subnet resource ID for the managed instance. */\n  subnetId?: string;\n  /**\n   * The state of the managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /** The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). */\n  licenseType?: ManagedInstanceLicenseType;\n  /** The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80. */\n  vCores?: number;\n  /** Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only. */\n  storageSizeInGB?: number;\n  /** Collation of the managed instance. */\n  collation?: string;\n  /**\n   * The Dns Zone that the managed instance is in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dnsZone?: string;\n  /** The resource id of another managed instance whose DNS zone this managed instance will share after creation. */\n  dnsZonePartner?: string;\n  /** Whether or not the public data endpoint is enabled. */\n  publicDataEndpointEnabled?: boolean;\n  /** The resource identifier of the source managed instance associated with create operation of this instance. */\n  sourceManagedInstanceId?: string;\n  /** Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /** Connection type used for connecting to the instance. */\n  proxyOverride?: ManagedInstanceProxyOverride;\n  /**\n   * Id of the timezone. Allowed values are timezones supported by Windows.\n   * Windows keeps details on supported timezones, including the id, in registry under\n   * KEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones.\n   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.\n   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.\n   * An example of valid timezone id is \"Pacific Standard Time\" or \"W. Europe Standard Time\".\n   */\n  timezoneId?: string;\n  /** The Id of the instance pool this managed server belongs to. */\n  instancePoolId?: string;\n  /** Specifies maintenance configuration id to apply to this managed instance. */\n  maintenanceConfigurationId?: string;\n  /**\n   * List of private endpoint connections on a managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: ManagedInstancePecProperty[];\n  /** Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2' */\n  minimalTlsVersion?: string;\n  /**\n   * The storage account type used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** The storage account type to be used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage) */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** Whether or not the multi-az is enabled. */\n  zoneRedundant?: boolean;\n  /** The resource id of a user assigned identity to be used by default. */\n  primaryUserAssignedIdentityId?: string;\n  /** A CMK URI of the key to use for encryption. */\n  keyId?: string;\n  /** The Azure Active Directory administrator of the server. */\n  administrators?: ManagedInstanceExternalAdministrator;\n  /** The managed instance's service principal. */\n  servicePrincipal?: ServicePrincipal;\n}\n\n/** A list of top resource consuming queries on managed instance */\nexport interface TopQueriesListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: TopQueries[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\nexport interface TopQueries {\n  /**\n   * Requested number of top queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfQueries?: number;\n  /**\n   * Aggregation function used to calculate query metrics.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly aggregationFunction?: string;\n  /**\n   * Metric used to rank queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly observationMetric?: string;\n  /**\n   * Interval type (length).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly intervalType?: QueryTimeGrainType;\n  /**\n   * The start time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * The end time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: string;\n  /** List of top resource consuming queries with appropriate metric data */\n  queries?: QueryStatisticsProperties[];\n}\n\n/** A list of restorable dropped databases. */\nexport interface RestorableDroppedDatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RestorableDroppedDatabase[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of restorable dropped managed databases. */\nexport interface RestorableDroppedManagedDatabaseListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: RestorableDroppedManagedDatabase[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A list of server connection policy objects. */\nexport interface ServerConnectionPolicyListResult {\n  /**\n   * Array of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: ServerConnectionPolicy[];\n  /**\n   * Link to retrieve next page of results.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** A Slo Usage Metric. */\nexport interface SloUsageMetric {\n  /**\n   * The serviceLevelObjective for SLO usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceLevelObjective?: ServiceObjectiveName;\n  /**\n   * The serviceLevelObjectiveId for SLO usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceLevelObjectiveId?: string;\n  /**\n   * Gets or sets inRangeTimeRatio for SLO usage metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly inRangeTimeRatio?: number;\n}\n\n/** The impact of an operation, both in absolute and relative terms. */\nexport interface OperationImpact {\n  /**\n   * The name of the impact dimension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly name?: string;\n  /**\n   * The unit in which estimated impact to dimension is measured.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n  /**\n   * The absolute impact to dimension.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeValueAbsolute?: number;\n  /**\n   * The relative impact to dimension (null if not applicable)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly changeValueRelative?: number;\n}\n\n/** The properties that are supported in the $filter operation. */\nexport interface SecurityEventsFilterParameters {\n  /** Filter on the event time. */\n  eventTime?: Date;\n  /** Whether to show server records or not. */\n  showServerRecords?: boolean;\n}\n\n/** ARM proxy resource. */\nexport interface ProxyResource extends Resource {}\n\n/** ARM tracked top level resource. */\nexport interface TrackedResource extends Resource {\n  /** Resource location. */\n  location: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n}\n\n/** ARM proxy resource. */\nexport interface ProxyResourceWithWritableName\n  extends ResourceWithWritableName {}\n\n/** A recoverable database */\nexport interface RecoverableDatabase extends ProxyResource {\n  /**\n   * The edition of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly edition?: string;\n  /**\n   * The service level objective name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceLevelObjective?: string;\n  /**\n   * The elastic pool name of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly elasticPoolName?: string;\n  /**\n   * The last available backup date of the database (ISO8601 format)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastAvailableBackupDate?: Date;\n}\n\n/** Represents a database data masking policy. */\nexport interface DataMaskingPolicy extends ProxyResource {\n  /**\n   * The location of the data masking policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The kind of data masking policy. Metadata, used for Azure portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** The state of the data masking policy. */\n  dataMaskingState?: DataMaskingState;\n  /** The list of the exempt principals. Specifies the semicolon-separated list of database users for which the data masking policy does not apply. The specified users receive data results without masking for all of the database queries. */\n  exemptPrincipals?: string;\n  /**\n   * The list of the application principals. This is a legacy parameter and is no longer used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applicationPrincipals?: string;\n  /**\n   * The masking level. This is a legacy parameter and is no longer used.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maskingLevel?: string;\n}\n\n/** Represents a database data masking rule. */\nexport interface DataMaskingRule extends ProxyResource {\n  /**\n   * The location of the data masking rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The kind of Data Masking Rule. Metadata, used for Azure portal.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The rule Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly idPropertiesId?: string;\n  /** The alias name. This is a legacy parameter and is no longer used. */\n  aliasName?: string;\n  /** The rule state. Used to delete a rule. To delete an existing rule, specify the schemaName, tableName, columnName, maskingFunction, and specify ruleState as disabled. However, if the rule doesn't already exist, the rule will be created with ruleState set to enabled, regardless of the provided value of ruleState. */\n  ruleState?: DataMaskingRuleState;\n  /** The schema name on which the data masking rule is applied. */\n  schemaName?: string;\n  /** The table name on which the data masking rule is applied. */\n  tableName?: string;\n  /** The column name on which the data masking rule is applied. */\n  columnName?: string;\n  /** The masking function that is used for the data masking rule. */\n  maskingFunction?: DataMaskingFunction;\n  /** The numberFrom property of the masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. */\n  numberFrom?: string;\n  /** The numberTo property of the data masking rule. Required if maskingFunction is set to Number, otherwise this parameter will be ignored. */\n  numberTo?: string;\n  /** If maskingFunction is set to Text, the number of characters to show unmasked in the beginning of the string. Otherwise, this parameter will be ignored. */\n  prefixSize?: string;\n  /** If maskingFunction is set to Text, the number of characters to show unmasked at the end of the string. Otherwise, this parameter will be ignored. */\n  suffixSize?: string;\n  /** If maskingFunction is set to Text, the character to use for masking the unexposed part of the string. Otherwise, this parameter will be ignored. */\n  replacementString?: string;\n}\n\n/** A database geo backup policy. */\nexport interface GeoBackupPolicy extends ProxyResource {\n  /**\n   * Kind of geo backup policy.  This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Backup policy location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** The state of the geo backup policy. */\n  state: GeoBackupPolicyState;\n  /**\n   * The storage type of the geo backup policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageType?: string;\n}\n\n/** Server communication link. */\nexport interface ServerCommunicationLink extends ProxyResource {\n  /**\n   * Communication link location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Communication link kind.  This property is used for Azure Portal metadata.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /** The name of the partner server. */\n  partnerServer?: string;\n}\n\n/** Represents a database service objective. */\nexport interface ServiceObjective extends ProxyResource {\n  /**\n   * The name for the service objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serviceObjectiveName?: string;\n  /**\n   * Gets whether the service level objective is the default service objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDefault?: boolean;\n  /**\n   * Gets whether the service level objective is a system service objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isSystem?: boolean;\n  /**\n   * The description for the service level objective.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Gets whether the service level objective is enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly enabled?: boolean;\n}\n\n/** Represents the activity on an elastic pool. */\nexport interface ElasticPoolActivity extends ProxyResource {\n  /** The geo-location where the resource lives */\n  location?: string;\n  /**\n   * The time the operation finished (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The error code if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The error message if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n  /**\n   * The error severity if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * The operation name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The unique operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /**\n   * The percentage complete if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The requested max DTU per database if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDatabaseDtuMax?: number;\n  /**\n   * The requested min DTU per database if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDatabaseDtuMin?: number;\n  /**\n   * The requested DTU for the pool if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDtu?: number;\n  /**\n   * The requested name for the elastic pool if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedElasticPoolName?: string;\n  /**\n   * The requested storage limit for the pool in GB if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedStorageLimitInGB?: number;\n  /**\n   * The name of the elastic pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly elasticPoolName?: string;\n  /**\n   * The name of the server the elastic pool is in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The time the operation started (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The current state of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /**\n   * The requested storage limit in MB.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedStorageLimitInMB?: number;\n  /**\n   * The requested per database DTU guarantee.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDatabaseDtuGuarantee?: number;\n  /**\n   * The requested per database DTU cap.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDatabaseDtuCap?: number;\n  /**\n   * The requested DTU guarantee.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedDtuGuarantee?: number;\n}\n\n/** Represents the activity on an elastic pool. */\nexport interface ElasticPoolDatabaseActivity extends ProxyResource {\n  /** The geo-location where the resource lives */\n  location?: string;\n  /**\n   * The database name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The time the operation finished (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The error code if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The error message if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n  /**\n   * The error severity if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * The operation name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The unique operation ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationId?: string;\n  /**\n   * The percentage complete if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The name for the elastic pool the database is moving into if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedElasticPoolName?: string;\n  /**\n   * The name of the current elastic pool the database is in if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentElasticPoolName?: string;\n  /**\n   * The name of the current service objective if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentServiceObjective?: string;\n  /**\n   * The name of the requested service objective if available.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedServiceObjective?: string;\n  /**\n   * The name of the server the elastic pool is in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The time the operation started (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The current state of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n}\n\n/** An extended database blob auditing policy. */\nexport interface ExtendedDatabaseBlobAuditingPolicy extends ProxyResource {\n  /** Specifies condition of where clause when creating an audit. */\n  predicateExpression?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /** Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n}\n\n/** An extended server blob auditing policy. */\nexport interface ExtendedServerBlobAuditingPolicy extends ProxyResource {\n  /**\n   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isDevopsAuditEnabled?: boolean;\n  /** Specifies condition of where clause when creating an audit. */\n  predicateExpression?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /** Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n}\n\n/** A server blob auditing policy. */\nexport interface ServerBlobAuditingPolicy extends ProxyResource {\n  /**\n   * Specifies the state of devops audit. If state is Enabled, devops logs will be sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled', 'IsAzureMonitorTargetEnabled' as true and 'IsDevopsAuditEnabled' as true\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should also be created.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isDevopsAuditEnabled?: boolean;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /** Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n}\n\n/** A database blob auditing policy. */\nexport interface DatabaseBlobAuditingPolicy extends ProxyResource {\n  /**\n   * Resource kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** Specifies the number of days to keep in the audit logs in the storage account. */\n  retentionDays?: number;\n  /**\n   * Specifies the Actions-Groups and Actions to audit.\n   *\n   * The recommended set of action groups to use is the following combination - this will audit all the queries and stored procedures executed against the database, as well as successful and failed logins:\n   *\n   * BATCH_COMPLETED_GROUP,\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP,\n   * FAILED_DATABASE_AUTHENTICATION_GROUP.\n   *\n   * This above combination is also the set that is configured by default when enabling auditing from the Azure portal.\n   *\n   * The supported action groups to audit are (note: choose only specific groups that cover your auditing needs. Using unnecessary groups could lead to very large quantities of audit records):\n   *\n   * APPLICATION_ROLE_CHANGE_PASSWORD_GROUP\n   * BACKUP_RESTORE_GROUP\n   * DATABASE_LOGOUT_GROUP\n   * DATABASE_OBJECT_CHANGE_GROUP\n   * DATABASE_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * DATABASE_OBJECT_PERMISSION_CHANGE_GROUP\n   * DATABASE_OPERATION_GROUP\n   * DATABASE_PERMISSION_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_CHANGE_GROUP\n   * DATABASE_PRINCIPAL_IMPERSONATION_GROUP\n   * DATABASE_ROLE_MEMBER_CHANGE_GROUP\n   * FAILED_DATABASE_AUTHENTICATION_GROUP\n   * SCHEMA_OBJECT_ACCESS_GROUP\n   * SCHEMA_OBJECT_CHANGE_GROUP\n   * SCHEMA_OBJECT_OWNERSHIP_CHANGE_GROUP\n   * SCHEMA_OBJECT_PERMISSION_CHANGE_GROUP\n   * SUCCESSFUL_DATABASE_AUTHENTICATION_GROUP\n   * USER_CHANGE_PASSWORD_GROUP\n   * BATCH_STARTED_GROUP\n   * BATCH_COMPLETED_GROUP\n   *\n   * These are groups that cover all sql statements and stored procedures executed against the database, and should not be used in combination with other groups as this will result in duplicate audit logs.\n   *\n   * For more information, see [Database-Level Audit Action Groups](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-action-groups).\n   *\n   * For Database auditing policy, specific Actions can also be specified (note that Actions cannot be specified for Server auditing policy). The supported actions to audit are:\n   * SELECT\n   * UPDATE\n   * INSERT\n   * DELETE\n   * EXECUTE\n   * RECEIVE\n   * REFERENCES\n   *\n   * The general form for defining an action to be audited is:\n   * {action} ON {object} BY {principal}\n   *\n   * Note that <object> in the above format can refer to an object like a table, view, or stored procedure, or an entire database or schema. For the latter cases, the forms DATABASE::{db_name} and SCHEMA::{schema_name} are used, respectively.\n   *\n   * For example:\n   * SELECT on dbo.myTable by public\n   * SELECT on DATABASE::myDatabase by public\n   * SELECT on SCHEMA::mySchema by public\n   *\n   * For more information, see [Database-Level Audit Actions](https://docs.microsoft.com/en-us/sql/relational-databases/security/auditing/sql-server-audit-action-groups-and-actions#database-level-audit-actions)\n   */\n  auditActionsAndGroups?: string[];\n  /** Specifies whether storageAccountAccessKey value is the storage's secondary key. */\n  isStorageSecondaryKeyInUse?: boolean;\n  /**\n   * Specifies whether audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure auditing, Diagnostic Settings with 'SQLSecurityAuditEvents' diagnostic logs category on the database should be also created.\n   * Note that for server level audit you should use the 'master' database as {databaseName}.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /**\n   * Specifies the amount of time in milliseconds that can elapse before audit actions are forced to be processed.\n   * The default minimum value is 1000 (1 second). The maximum is 2,147,483,647.\n   */\n  queueDelayMs?: number;\n  /** Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n}\n\n/** Database, Server or Elastic Pool Recommended Action. */\nexport interface RecommendedAction extends ProxyResource {\n  /**\n   * Resource kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Gets the reason for recommending this action. e.g., DuplicateIndex\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendationReason?: string;\n  /**\n   * Gets the time since when this recommended action is valid.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly validSince?: Date;\n  /**\n   * Gets time when this recommended action was last refreshed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastRefresh?: Date;\n  /** Gets the info of the current state the recommended action is in. */\n  state?: RecommendedActionStateInfo;\n  /**\n   * Gets if this recommended action is actionable by user\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isExecutableAction?: boolean;\n  /**\n   * Gets if changes applied by this recommended action can be reverted by user\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isRevertableAction?: boolean;\n  /**\n   * Gets if this recommended action was suggested some time ago but user chose to ignore this and system added a new recommended action again.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isArchivedAction?: boolean;\n  /**\n   * Gets the time when system started applying this recommended action on the user resource. e.g., index creation start time\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executeActionStartTime?: Date;\n  /**\n   * Gets the time taken for applying this recommended action on user resource. e.g., time taken for index creation\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executeActionDuration?: string;\n  /**\n   * Gets the time when system started reverting changes of this recommended action on user resource. e.g., time when index drop is executed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revertActionStartTime?: Date;\n  /**\n   * Gets the time taken for reverting changes of this recommended action on user resource. e.g., time taken for dropping the created index.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revertActionDuration?: string;\n  /**\n   * Gets if approval for applying this recommended action was given by user/system.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executeActionInitiatedBy?: RecommendedActionInitiatedBy;\n  /**\n   * Gets the time when this recommended action was approved for execution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly executeActionInitiatedTime?: Date;\n  /**\n   * Gets if approval for reverting this recommended action was given by user/system.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revertActionInitiatedBy?: RecommendedActionInitiatedBy;\n  /**\n   * Gets the time when this recommended action was approved for revert.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly revertActionInitiatedTime?: Date;\n  /**\n   * Gets the impact of this recommended action. Possible values are 1 - Low impact, 2 - Medium Impact and 3 - High Impact\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly score?: number;\n  /**\n   * Gets the implementation details of this recommended action for user to apply it manually.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly implementationDetails?: RecommendedActionImplementationInfo;\n  /**\n   * Gets the error details if and why this recommended action is put to error state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDetails?: RecommendedActionErrorInfo;\n  /**\n   * Gets the estimated impact info for this recommended action e.g., Estimated CPU gain, Estimated Disk Space change\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedImpact?: RecommendedActionImpactRecord[];\n  /**\n   * Gets the observed/actual impact info for this recommended action e.g., Actual CPU gain, Actual Disk Space change\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly observedImpact?: RecommendedActionImpactRecord[];\n  /**\n   * Gets the time series info of metrics for this recommended action e.g., CPU consumption time series\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeSeries?: RecommendedActionMetricInfo[];\n  /**\n   * Gets the linked objects, if any.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkedObjects?: string[];\n  /**\n   * Gets additional details specific to this recommended action.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly details?: { [propertyName: string]: Record<string, unknown> };\n}\n\n/** Database, Server or Elastic Pool Advisor. */\nexport interface Advisor extends ProxyResource {\n  /**\n   * Resource kind.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Gets the status of availability of this advisor to customers. Possible values are 'GA', 'PublicPreview', 'LimitedPublicPreview' and 'PrivatePreview'.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly advisorStatus?: AdvisorStatus;\n  /** Gets the auto-execute status (whether to let the system execute the recommendations) of this advisor. Possible values are 'Enabled' and 'Disabled' */\n  autoExecuteStatus?: AutoExecuteStatus;\n  /**\n   * Gets the resource from which current value of auto-execute status is inherited. Auto-execute status can be set on (and inherited from) different levels in the resource hierarchy. Possible values are 'Subscription', 'Server', 'ElasticPool', 'Database' and 'Default' (when status is not explicitly set on any level).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoExecuteStatusInheritedFrom?: AutoExecuteStatusInheritedFrom;\n  /**\n   * Gets that status of recommendations for this advisor and reason for not having any recommendations. Possible values include, but are not limited to, 'Ok' (Recommendations available),LowActivity (not enough workload to analyze), 'DbSeemsTuned' (Database is doing well), etc.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendationsStatus?: string;\n  /**\n   * Gets the time when the current resource was analyzed for recommendations by this advisor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastChecked?: Date;\n  /**\n   * Gets the recommended actions for this advisor.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recommendedActions?: RecommendedAction[];\n}\n\n/** Database-level Automatic Tuning. */\nexport interface DatabaseAutomaticTuning extends ProxyResource {\n  /** Automatic tuning desired state. */\n  desiredState?: AutomaticTuningMode;\n  /**\n   * Automatic tuning actual state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actualState?: AutomaticTuningMode;\n  /** Automatic tuning options definition. */\n  options?: { [propertyName: string]: AutomaticTuningOptions };\n}\n\n/** A database column resource. */\nexport interface DatabaseColumn extends ProxyResource {\n  /** The column data type. */\n  columnType?: ColumnDataType;\n  /** The table temporal type. */\n  temporalType?: TableTemporalType;\n  /** Whether or not the column belongs to a memory optimized table. */\n  memoryOptimized?: boolean;\n  /** Whether or not the column is computed. */\n  isComputed?: boolean;\n}\n\n/** A database schema resource. */\nexport interface DatabaseSchema extends ProxyResource {}\n\n/** A database security alert policy. */\nexport interface DatabaseSecurityAlertPolicy extends ProxyResource {\n  /**\n   * SystemData of SecurityAlertPolicyResource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database. */\n  state?: SecurityAlertsPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** A database table resource. */\nexport interface DatabaseTable extends ProxyResource {\n  /** The table temporal type. */\n  temporalType?: TableTemporalType;\n  /** Whether or not the table is memory optimized. */\n  memoryOptimized?: boolean;\n}\n\n/** A database vulnerability assessment rule baseline. */\nexport interface DatabaseVulnerabilityAssessmentRuleBaseline\n  extends ProxyResource {\n  /** The rule baseline result */\n  baselineResults?: DatabaseVulnerabilityAssessmentRuleBaselineItem[];\n}\n\n/** A database vulnerability assessment. */\nexport interface DatabaseVulnerabilityAssessment extends ProxyResource {\n  /** A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/).  It is required if server level vulnerability assessment policy doesn't set */\n  storageContainerPath?: string;\n  /** A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. */\n  storageContainerSasKey?: string;\n  /** Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. */\n  storageAccountAccessKey?: string;\n  /** The recurring scans settings */\n  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;\n}\n\n/** A vulnerability assessment scan record. */\nexport interface VulnerabilityAssessmentScanRecord extends ProxyResource {\n  /**\n   * The scan ID.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scanId?: string;\n  /**\n   * The scan trigger type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly triggerType?: VulnerabilityAssessmentScanTriggerType;\n  /**\n   * The scan status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: VulnerabilityAssessmentScanState;\n  /**\n   * The scan start time (UTC).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The scan end time (UTC).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /**\n   * The scan errors.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errors?: VulnerabilityAssessmentScanError[];\n  /**\n   * The scan results storage container path.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly storageContainerPath?: string;\n  /**\n   * The number of failed security checks.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfFailedSecurityChecks?: number;\n}\n\n/** A database Vulnerability Assessment scan export resource. */\nexport interface DatabaseVulnerabilityAssessmentScansExport\n  extends ProxyResource {\n  /**\n   * Location of the exported report (e.g. https://myStorage.blob.core.windows.net/VaScans/scans/serverName/databaseName/scan_scanId.xlsx).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly exportedReportLocation?: string;\n}\n\n/** User activities of a data warehouse */\nexport interface DataWarehouseUserActivities extends ProxyResource {\n  /**\n   * Count of running and suspended queries.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly activeQueriesCount?: number;\n}\n\n/** A deleted server. */\nexport interface DeletedServer extends ProxyResource {\n  /**\n   * The version of the deleted server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n  /**\n   * The deletion time of the deleted server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionTime?: Date;\n  /**\n   * The original ID of the server before deletion.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly originalId?: string;\n  /**\n   * The fully qualified domain name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainName?: string;\n}\n\n/** A elastic pool operation. */\nexport interface ElasticPoolOperation extends ProxyResource {\n  /**\n   * The name of the elastic pool the operation is being performed on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly elasticPoolName?: string;\n  /**\n   * The name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The friendly name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationFriendlyName?: string;\n  /**\n   * The percentage of the operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The operation start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /**\n   * The operation error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The operation error description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDescription?: string;\n  /**\n   * The operation error severity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * Whether or not the error is a user error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUserError?: boolean;\n  /**\n   * The estimated completion time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedCompletionTime?: Date;\n  /**\n   * The operation description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Whether the operation can be cancelled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isCancellable?: boolean;\n}\n\n/** The server encryption protector. */\nexport interface EncryptionProtector extends ProxyResource {\n  /**\n   * Kind of encryption protector. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Subregion of the encryption protector.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subregion?: string;\n  /** The name of the server key. */\n  serverKeyName?: string;\n  /** The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. */\n  serverKeyType?: ServerKeyType;\n  /**\n   * The URI of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uri?: string;\n  /**\n   * Thumbprint of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /** Key auto rotation opt-in flag. Either true or false. */\n  autoRotationEnabled?: boolean;\n}\n\n/** A failover group. */\nexport interface FailoverGroup extends ProxyResource {\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /** Read-write endpoint of the failover group instance. */\n  readWriteEndpoint?: FailoverGroupReadWriteEndpoint;\n  /** Read-only endpoint of the failover group instance. */\n  readOnlyEndpoint?: FailoverGroupReadOnlyEndpoint;\n  /**\n   * Local replication role of the failover group instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationRole?: FailoverGroupReplicationRole;\n  /**\n   * Replication state of the failover group instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationState?: string;\n  /** List of partner server information for the failover group. */\n  partnerServers?: PartnerInfo[];\n  /** List of databases in the failover group. */\n  databases?: string[];\n}\n\n/** An instance failover group. */\nexport interface InstanceFailoverGroup extends ProxyResource {\n  /** Read-write endpoint of the failover group instance. */\n  readWriteEndpoint?: InstanceFailoverGroupReadWriteEndpoint;\n  /** Read-only endpoint of the failover group instance. */\n  readOnlyEndpoint?: InstanceFailoverGroupReadOnlyEndpoint;\n  /**\n   * Local replication role of the failover group instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationRole?: InstanceFailoverGroupReplicationRole;\n  /**\n   * Replication state of the failover group instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationState?: string;\n  /** Partner region information for the failover group. */\n  partnerRegions?: PartnerRegionInfo[];\n  /** List of managed instance pairs in the failover group. */\n  managedInstancePairs?: ManagedInstancePairInfo[];\n}\n\n/** A stored credential that can be used by a job to connect to target databases. */\nexport interface JobCredential extends ProxyResource {\n  /** The credential user name. */\n  username?: string;\n  /** The credential password. */\n  password?: string;\n}\n\n/** An execution of a job */\nexport interface JobExecution extends ProxyResource {\n  /**\n   * The job version number.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobVersion?: number;\n  /**\n   * The job step name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stepName?: string;\n  /**\n   * The job step id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly stepId?: number;\n  /**\n   * The unique identifier of the job execution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly jobExecutionId?: string;\n  /**\n   * The detailed state of the job execution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lifecycle?: JobExecutionLifecycle;\n  /**\n   * The ARM provisioning state of the job execution.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: ProvisioningState;\n  /**\n   * The time that the job execution was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly createTime?: Date;\n  /**\n   * The time that the job execution started.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The time that the job execution completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: Date;\n  /** Number of times the job execution has been attempted. */\n  currentAttempts?: number;\n  /**\n   * Start time of the current attempt.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentAttemptStartTime?: Date;\n  /**\n   * The last status or error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastMessage?: string;\n  /**\n   * The target that this execution is executed on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly target?: JobExecutionTarget;\n}\n\n/** A job. */\nexport interface Job extends ProxyResource {\n  /** User-defined description of the job. */\n  description?: string;\n  /**\n   * The job version number.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: number;\n  /** Schedule properties of the job. */\n  schedule?: JobSchedule;\n}\n\n/** A job step. */\nexport interface JobStep extends ProxyResource {\n  /** The job step's index within the job. If not specified when creating the job step, it will be created as the last step. If not specified when updating the job step, the step id is not modified. */\n  stepId?: number;\n  /** The resource ID of the target group that the job step will be executed on. */\n  targetGroup?: string;\n  /** The resource ID of the job credential that will be used to connect to the targets. */\n  credential?: string;\n  /** The action payload of the job step. */\n  action?: JobStepAction;\n  /** Output destination properties of the job step. */\n  output?: JobStepOutput;\n  /** Execution options for the job step. */\n  executionOptions?: JobStepExecutionOptions;\n}\n\n/** A group of job targets. */\nexport interface JobTargetGroup extends ProxyResource {\n  /** Members of the target group. */\n  members?: JobTarget[];\n}\n\n/** A job version. */\nexport interface JobVersion extends ProxyResource {}\n\n/** A long term retention policy. */\nexport interface LongTermRetentionPolicy extends ProxyResource {\n  /** The weekly retention policy for an LTR backup in an ISO 8601 format. */\n  weeklyRetention?: string;\n  /** The monthly retention policy for an LTR backup in an ISO 8601 format. */\n  monthlyRetention?: string;\n  /** The yearly retention policy for an LTR backup in an ISO 8601 format. */\n  yearlyRetention?: string;\n  /** The week of year to take the yearly backup in an ISO 8601 format. */\n  weekOfYear?: number;\n}\n\n/** Maintenance window options. */\nexport interface MaintenanceWindowOptions extends ProxyResource {\n  /** Whether maintenance windows are enabled for the database. */\n  isEnabled?: boolean;\n  /** Available maintenance cycles e.g. {Saturday, 0, 48*60}, {Wednesday, 0, 24*60}. */\n  maintenanceWindowCycles?: MaintenanceWindowTimeRange[];\n  /** Minimum duration of maintenance window. */\n  minDurationInMinutes?: number;\n  /** Default duration for maintenance window. */\n  defaultDurationInMinutes?: number;\n  /** Minimum number of maintenance windows cycles to be set on the database. */\n  minCycles?: number;\n  /** Time granularity in minutes for maintenance windows. */\n  timeGranularityInMinutes?: number;\n  /** Whether we allow multiple maintenance windows per cycle. */\n  allowMultipleMaintenanceWindowsPerCycle?: boolean;\n}\n\n/** Maintenance windows. */\nexport interface MaintenanceWindows extends ProxyResource {\n  timeRanges?: MaintenanceWindowTimeRange[];\n}\n\n/** A short term retention policy. */\nexport interface ManagedBackupShortTermRetentionPolicy extends ProxyResource {\n  /** The backup retention period in days. This is how many days Point-in-Time Restore will be supported. */\n  retentionDays?: number;\n}\n\n/** Database query. */\nexport interface ManagedInstanceQuery extends ProxyResource {\n  /** Query text. */\n  queryText?: string;\n}\n\nexport interface QueryStatistics extends ProxyResource {\n  /**\n   * Database name of the database in which this query was executed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * Unique query id (unique within one database).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queryId?: string;\n  /**\n   * The start time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: string;\n  /**\n   * The end time for the metric (ISO-8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly endTime?: string;\n  /** List of intervals with appropriate metric data */\n  intervals?: QueryMetricInterval[];\n}\n\n/** A managed database restore details. */\nexport interface ManagedDatabaseRestoreDetailsResult extends ProxyResource {\n  /**\n   * Restore status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Current restoring file name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentRestoringFileName?: string;\n  /**\n   * Last restored file name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastRestoredFileName?: string;\n  /**\n   * Last restored file time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastRestoredFileTime?: Date;\n  /**\n   * Percent completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentCompleted?: number;\n  /**\n   * List of unrestorable files.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unrestorableFiles?: string[];\n  /**\n   * Number of files detected.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly numberOfFilesDetected?: number;\n  /**\n   * Last uploaded file name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUploadedFileName?: string;\n  /**\n   * Last uploaded file time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastUploadedFileTime?: Date;\n  /**\n   * The reason why restore is in Blocked state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blockReason?: string;\n}\n\n/** A managed database security alert policy. */\nexport interface ManagedDatabaseSecurityAlertPolicy extends ProxyResource {\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database. */\n  state?: SecurityAlertPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** A security event. */\nexport interface SecurityEvent extends ProxyResource {\n  /**\n   * The time when the security event occurred.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly eventTime?: Date;\n  /**\n   * The type of the security event.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly securityEventType?: SecurityEventType;\n  /**\n   * The subscription name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subscription?: string;\n  /**\n   * The server name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly server?: string;\n  /**\n   * The database name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly database?: string;\n  /**\n   * The IP address of the client who executed the statement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly clientIp?: string;\n  /**\n   * The application used to execute the statement.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly applicationName?: string;\n  /**\n   * The principal user who executed the statement\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly principalName?: string;\n  /**\n   * The sql injection additional properties, populated only if the type of the security event is sql injection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly securityEventSqlInjectionAdditionalProperties?: SecurityEventSqlInjectionAdditionalProperties;\n}\n\n/** A sensitivity label. */\nexport interface SensitivityLabel extends ProxyResource {\n  /**\n   * Resource that manages the sensitivity label.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /**\n   * The schema name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly schemaName?: string;\n  /**\n   * The table name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly tableName?: string;\n  /**\n   * The column name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly columnName?: string;\n  /** The label name. */\n  labelName?: string;\n  /** The label ID. */\n  labelId?: string;\n  /** The information type. */\n  informationType?: string;\n  /** The information type ID. */\n  informationTypeId?: string;\n  /**\n   * Is sensitivity recommendation disabled. Applicable for recommended sensitivity label only. Specifies whether the sensitivity recommendation on this column is disabled (dismissed) or not.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isDisabled?: boolean;\n  rank?: SensitivityLabelRank;\n}\n\n/** A sensitivity label update operation. */\nexport interface SensitivityLabelUpdate extends ProxyResource {\n  op?: SensitivityLabelUpdateKind;\n  /** Schema name of the column to update. */\n  schema?: string;\n  /** Table name of the column to update. */\n  table?: string;\n  /** Column name to update. */\n  column?: string;\n  /** The sensitivity label information to apply on a column. */\n  sensitivityLabel?: SensitivityLabel;\n}\n\n/** A recommended sensitivity label update operation. */\nexport interface RecommendedSensitivityLabelUpdate extends ProxyResource {\n  op?: RecommendedSensitivityLabelUpdateKind;\n  /** Schema name of the column to update. */\n  schema?: string;\n  /** Table name of the column to update. */\n  table?: string;\n  /** Column name to update. */\n  column?: string;\n}\n\n/** A managed database transparent data encryption state. */\nexport interface ManagedTransparentDataEncryption extends ProxyResource {\n  /** Specifies the state of the transparent data encryption. */\n  state?: TransparentDataEncryptionState;\n}\n\n/** An Azure SQL managed instance administrator. */\nexport interface ManagedInstanceAdministrator extends ProxyResource {\n  /** Type of the managed instance administrator. */\n  administratorType?: ManagedInstanceAdministratorType;\n  /** Login name of the managed instance administrator. */\n  login?: string;\n  /** SID (object ID) of the managed instance administrator. */\n  sid?: string;\n  /** Tenant ID of the managed instance administrator. */\n  tenantId?: string;\n}\n\n/** Azure Active Directory only authentication. */\nexport interface ManagedInstanceAzureADOnlyAuthentication\n  extends ProxyResource {\n  /** Azure Active Directory only Authentication enabled. */\n  azureADOnlyAuthentication?: boolean;\n}\n\n/** The managed instance encryption protector. */\nexport interface ManagedInstanceEncryptionProtector extends ProxyResource {\n  /**\n   * Kind of encryption protector. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** The name of the managed instance key. */\n  serverKeyName?: string;\n  /** The encryption protector type like 'ServiceManaged', 'AzureKeyVault'. */\n  serverKeyType?: ServerKeyType;\n  /**\n   * The URI of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly uri?: string;\n  /**\n   * Thumbprint of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /** Key auto rotation opt-in flag. Either true or false. */\n  autoRotationEnabled?: boolean;\n}\n\n/** A managed instance key. */\nexport interface ManagedInstanceKey extends ProxyResource {\n  /**\n   * Kind of encryption protector. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** The key type like 'ServiceManaged', 'AzureKeyVault'. */\n  serverKeyType?: ServerKeyType;\n  /** The URI of the key. If the ServerKeyType is AzureKeyVault, then the URI is required. */\n  uri?: string;\n  /**\n   * Thumbprint of the key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /**\n   * The key creation date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * Key auto rotation opt-in flag. Either true or false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoRotationEnabled?: boolean;\n}\n\n/** A long term retention policy. */\nexport interface ManagedInstanceLongTermRetentionPolicy extends ProxyResource {\n  /** The weekly retention policy for an LTR backup in an ISO 8601 format. */\n  weeklyRetention?: string;\n  /** The monthly retention policy for an LTR backup in an ISO 8601 format. */\n  monthlyRetention?: string;\n  /** The yearly retention policy for an LTR backup in an ISO 8601 format. */\n  yearlyRetention?: string;\n  /** The week of year to take the yearly backup in an ISO 8601 format. */\n  weekOfYear?: number;\n}\n\n/** A managed instance operation. */\nexport interface ManagedInstanceOperation extends ProxyResource {\n  /**\n   * The name of the managed instance the operation is being performed on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedInstanceName?: string;\n  /**\n   * The name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The friendly name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationFriendlyName?: string;\n  /**\n   * The percentage of the operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The operation start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ManagementOperationState;\n  /**\n   * The operation error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The operation error description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDescription?: string;\n  /**\n   * The operation error severity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * Whether or not the error is a user error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUserError?: boolean;\n  /**\n   * The estimated completion time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedCompletionTime?: Date;\n  /**\n   * The operation description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Whether the operation can be cancelled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isCancellable?: boolean;\n  /**\n   * The operation parameters.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationParameters?: ManagedInstanceOperationParametersPair;\n  /**\n   * The operation steps.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationSteps?: ManagedInstanceOperationSteps;\n}\n\n/** A private endpoint connection */\nexport interface ManagedInstancePrivateEndpointConnection\n  extends ProxyResource {\n  /** Private endpoint which the connection belongs to. */\n  privateEndpoint?: ManagedInstancePrivateEndpointProperty;\n  /** Connection State of the Private Endpoint Connection. */\n  privateLinkServiceConnectionState?: ManagedInstancePrivateLinkServiceConnectionStateProperty;\n  /**\n   * State of the Private Endpoint Connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** A private link resource */\nexport interface ManagedInstancePrivateLink extends ProxyResource {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: ManagedInstancePrivateLinkProperties;\n}\n\n/** A TDE certificate that can be uploaded into a server. */\nexport interface TdeCertificate extends ProxyResource {\n  /** The base64 encoded certificate private blob. */\n  privateBlob?: string;\n  /** The certificate password. */\n  certPassword?: string;\n}\n\n/** A managed instance vulnerability assessment. */\nexport interface ManagedInstanceVulnerabilityAssessment extends ProxyResource {\n  /** A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/). */\n  storageContainerPath?: string;\n  /** A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall */\n  storageContainerSasKey?: string;\n  /** Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall */\n  storageAccountAccessKey?: string;\n  /** The recurring scans settings */\n  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;\n}\n\n/** A managed server security alert policy. */\nexport interface ManagedServerSecurityAlertPolicy extends ProxyResource {\n  /**\n   * SystemData of SecurityAlertPolicyResource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database. */\n  state?: SecurityAlertsPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** Operations health status in a location. */\nexport interface OperationsHealth extends ProxyResource {\n  /**\n   * Operation name for the service\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly namePropertiesName?: string;\n  /**\n   * Operation health status of the service.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly health?: string;\n  /**\n   * Health status description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n}\n\n/** A private endpoint connection */\nexport interface PrivateEndpointConnection extends ProxyResource {\n  /** Private endpoint which the connection belongs to. */\n  privateEndpoint?: PrivateEndpointProperty;\n  /** Connection state of the private endpoint connection. */\n  privateLinkServiceConnectionState?: PrivateLinkServiceConnectionStateProperty;\n  /**\n   * State of the private endpoint connection.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: PrivateEndpointProvisioningState;\n}\n\n/** A private link resource */\nexport interface PrivateLinkResource extends ProxyResource {\n  /**\n   * The private link resource group id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly properties?: PrivateLinkResourceProperties;\n}\n\n/** A recoverable managed database resource. */\nexport interface RecoverableManagedDatabase extends ProxyResource {\n  /**\n   * The last available backup date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastAvailableBackupDate?: string;\n}\n\n/** Database restore points. */\nexport interface RestorePoint extends ProxyResource {\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * The type of restore point\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointType?: RestorePointType;\n  /**\n   * The earliest time to which this database can be restored\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n  /**\n   * The time the backup was taken\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointCreationDate?: Date;\n  /**\n   * The label of restore point for backup request by user\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly restorePointLabel?: string;\n}\n\n/** Server-level Automatic Tuning. */\nexport interface ServerAutomaticTuning extends ProxyResource {\n  /** Automatic tuning desired state. */\n  desiredState?: AutomaticTuningServerMode;\n  /**\n   * Automatic tuning actual state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly actualState?: AutomaticTuningServerMode;\n  /** Automatic tuning options definition. */\n  options?: { [propertyName: string]: AutomaticTuningServerOptions };\n}\n\n/** Azure Active Directory administrator. */\nexport interface ServerAzureADAdministrator extends ProxyResource {\n  /** Type of the sever administrator. */\n  administratorType?: AdministratorType;\n  /** Login name of the server administrator. */\n  login?: string;\n  /** SID (object ID) of the server administrator. */\n  sid?: string;\n  /** Tenant ID of the administrator. */\n  tenantId?: string;\n  /**\n   * Azure Active Directory only Authentication enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureADOnlyAuthentication?: boolean;\n}\n\n/** Azure Active Directory only authentication. */\nexport interface ServerAzureADOnlyAuthentication extends ProxyResource {\n  /** Azure Active Directory only Authentication enabled. */\n  azureADOnlyAuthentication?: boolean;\n}\n\n/** A server DevOps auditing settings. */\nexport interface ServerDevOpsAuditingSettings extends ProxyResource {\n  /**\n   * SystemData of ServerDevOpsAuditSettingsResource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /**\n   * Specifies whether DevOps audit events are sent to Azure Monitor.\n   * In order to send the events to Azure Monitor, specify 'State' as 'Enabled' and 'IsAzureMonitorTargetEnabled' as true.\n   *\n   * When using REST API to configure DevOps audit, Diagnostic Settings with 'DevOpsOperationsAudit' diagnostic logs category on the master database should be also created.\n   *\n   * Diagnostic Settings URI format:\n   * PUT https://management.azure.com/subscriptions/{subscriptionId}/resourceGroups/{resourceGroup}/providers/Microsoft.Sql/servers/{serverName}/databases/master/providers/microsoft.insights/diagnosticSettings/{settingsName}?api-version=2017-05-01-preview\n   *\n   * For more information, see [Diagnostic Settings REST API](https://go.microsoft.com/fwlink/?linkid=2033207)\n   * or [Diagnostic Settings PowerShell](https://go.microsoft.com/fwlink/?linkid=2033043)\n   *\n   */\n  isAzureMonitorTargetEnabled?: boolean;\n  /** Specifies the state of the audit. If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled are required. */\n  state?: BlobAuditingPolicyState;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). If state is Enabled, storageEndpoint or isAzureMonitorTargetEnabled is required. */\n  storageEndpoint?: string;\n  /**\n   * Specifies the identifier key of the auditing storage account.\n   * If state is Enabled and storageEndpoint is specified, not specifying the storageAccountAccessKey will use SQL server system-assigned managed identity to access the storage.\n   * Prerequisites for using managed identity authentication:\n   * 1. Assign SQL Server a system-assigned managed identity in Azure Active Directory (AAD).\n   * 2. Grant SQL Server identity access to the storage account by adding 'Storage Blob Data Contributor' RBAC role to the server identity.\n   * For more information, see [Auditing to storage using Managed Identity authentication](https://go.microsoft.com/fwlink/?linkid=2114355)\n   */\n  storageAccountAccessKey?: string;\n  /** Specifies the blob storage subscription Id. */\n  storageAccountSubscriptionId?: string;\n}\n\n/** A server DNS alias. */\nexport interface ServerDnsAlias extends ProxyResource {\n  /**\n   * The fully qualified DNS record for alias\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly azureDnsRecord?: string;\n}\n\n/** A server key. */\nexport interface ServerKey extends ProxyResource {\n  /**\n   * Kind of encryption protector. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Subregion of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subregion?: string;\n  /** The server key type like 'ServiceManaged', 'AzureKeyVault'. */\n  serverKeyType?: ServerKeyType;\n  /** The URI of the server key. If the ServerKeyType is AzureKeyVault, then the URI is required. */\n  uri?: string;\n  /**\n   * Thumbprint of the server key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly thumbprint?: string;\n  /**\n   * The server key creation date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * Key auto rotation opt-in flag. Either true or false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly autoRotationEnabled?: boolean;\n}\n\n/** A server operation. */\nexport interface ServerOperation extends ProxyResource {\n  /**\n   * The name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The friendly name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationFriendlyName?: string;\n  /**\n   * The percentage of the operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The operation start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ManagementOperationState;\n  /**\n   * The operation error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The operation error description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDescription?: string;\n  /**\n   * The operation error severity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * Whether or not the error is a user error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUserError?: boolean;\n  /**\n   * The estimated completion time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedCompletionTime?: Date;\n  /**\n   * The operation description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Whether the operation can be cancelled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isCancellable?: boolean;\n}\n\n/** A server security alert policy. */\nexport interface ServerSecurityAlertPolicy extends ProxyResource {\n  /**\n   * SystemData of SecurityAlertPolicyResource.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly systemData?: SystemData;\n  /** Specifies the state of the policy, whether it is enabled or disabled or a policy has not been applied yet on the specific database. */\n  state?: SecurityAlertsPolicyState;\n  /** Specifies an array of alerts that are disabled. Allowed values are: Sql_Injection, Sql_Injection_Vulnerability, Access_Anomaly, Data_Exfiltration, Unsafe_Action, Brute_Force */\n  disabledAlerts?: string[];\n  /** Specifies an array of e-mail addresses to which the alert is sent. */\n  emailAddresses?: string[];\n  /** Specifies that the alert is sent to the account administrators. */\n  emailAccountAdmins?: boolean;\n  /** Specifies the blob storage endpoint (e.g. https://MyAccount.blob.core.windows.net). This blob storage will hold all Threat Detection audit logs. */\n  storageEndpoint?: string;\n  /** Specifies the identifier key of the Threat Detection audit storage account. */\n  storageAccountAccessKey?: string;\n  /** Specifies the number of days to keep in the Threat Detection audit logs. */\n  retentionDays?: number;\n  /**\n   * Specifies the UTC creation time of the policy.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationTime?: Date;\n}\n\n/** A server trust group. */\nexport interface ServerTrustGroup extends ProxyResource {\n  /** Group members information for the server trust group. */\n  groupMembers?: ServerInfo[];\n  /** Trust scope of the server trust group. */\n  trustScopes?: ServerTrustGroupPropertiesTrustScopesItem[];\n}\n\n/** A server vulnerability assessment. */\nexport interface ServerVulnerabilityAssessment extends ProxyResource {\n  /** A blob storage container path to hold the scan results (e.g. https://myStorage.blob.core.windows.net/VaScans/). */\n  storageContainerPath?: string;\n  /** A shared access signature (SAS Key) that has write access to the blob container specified in 'storageContainerPath' parameter. If 'storageAccountAccessKey' isn't specified, StorageContainerSasKey is required. Applies only if the storage account is not behind a Vnet or a firewall */\n  storageContainerSasKey?: string;\n  /** Specifies the identifier key of the storage account for vulnerability assessment scan results. If 'StorageContainerSasKey' isn't specified, storageAccountAccessKey is required. Applies only if the storage account is not behind a Vnet or a firewall */\n  storageAccountAccessKey?: string;\n  /** The recurring scans settings */\n  recurringScans?: VulnerabilityAssessmentRecurringScansProperties;\n}\n\n/** A recoverable managed database resource. */\nexport interface SqlAgentConfiguration extends ProxyResource {\n  /** The state of Sql Agent. */\n  state?: SqlAgentConfigurationPropertiesState;\n}\n\n/** Usage Metric of a Subscription in a Location. */\nexport interface SubscriptionUsage extends ProxyResource {\n  /**\n   * User-readable name of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * Current value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Boundary value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Unit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n}\n\n/** An Azure SQL Database sync agent. */\nexport interface SyncAgent extends ProxyResource {\n  /**\n   * Name of the sync agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly namePropertiesName?: string;\n  /** ARM resource id of the sync database in the sync agent. */\n  syncDatabaseId?: string;\n  /**\n   * Last alive time of the sync agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastAliveTime?: Date;\n  /**\n   * State of the sync agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: SyncAgentState;\n  /**\n   * If the sync agent version is up to date.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUpToDate?: boolean;\n  /**\n   * Expiration time of the sync agent version.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly expiryTime?: Date;\n  /**\n   * Version of the sync agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly version?: string;\n}\n\n/** An Azure SQL Database sync agent linked database. */\nexport interface SyncAgentLinkedDatabase extends ProxyResource {\n  /**\n   * Type of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseType?: SyncMemberDbType;\n  /**\n   * Id of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseId?: string;\n  /**\n   * Description of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Server name of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * Database name of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * User name of the sync agent linked database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly userName?: string;\n}\n\n/** An Azure SQL Database sync group. */\nexport interface SyncGroup extends ProxyResource {\n  /** The name and capacity of the SKU. */\n  sku?: Sku;\n  /** Sync interval of the sync group. */\n  interval?: number;\n  /**\n   * Last sync time of the sync group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastSyncTime?: Date;\n  /** Conflict resolution policy of the sync group. */\n  conflictResolutionPolicy?: SyncConflictResolutionPolicy;\n  /** ARM resource id of the sync database in the sync group. */\n  syncDatabaseId?: string;\n  /** User name for the sync group hub database credential. */\n  hubDatabaseUserName?: string;\n  /** Password for the sync group hub database credential. */\n  hubDatabasePassword?: string;\n  /**\n   * Sync state of the sync group.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly syncState?: SyncGroupState;\n  /** Sync schema of the sync group. */\n  schema?: SyncGroupSchema;\n  /** If conflict logging is enabled. */\n  enableConflictLogging?: boolean;\n  /** Conflict logging retention period. */\n  conflictLoggingRetentionInDays?: number;\n  /** If use private link connection is enabled. */\n  usePrivateLinkConnection?: boolean;\n  /**\n   * Private endpoint name of the sync group if use private link connection is enabled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointName?: string;\n}\n\n/** An Azure SQL Database sync member. */\nexport interface SyncMember extends ProxyResource {\n  /** Database type of the sync member. */\n  databaseType?: SyncMemberDbType;\n  /** ARM resource id of the sync agent in the sync member. */\n  syncAgentId?: string;\n  /** SQL Server database id of the sync member. */\n  sqlServerDatabaseId?: string;\n  /** ARM resource id of the sync member logical database, for sync members in Azure. */\n  syncMemberAzureDatabaseResourceId?: string;\n  /** Whether to use private link connection. */\n  usePrivateLinkConnection?: boolean;\n  /**\n   * Private endpoint name of the sync member if use private link connection is enabled, for sync members in Azure.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointName?: string;\n  /** Server name of the member database in the sync member */\n  serverName?: string;\n  /** Database name of the member database in the sync member. */\n  databaseName?: string;\n  /** User name of the member database in the sync member. */\n  userName?: string;\n  /** Password of the member database in the sync member. */\n  password?: string;\n  /** Sync direction of the sync member. */\n  syncDirection?: SyncDirection;\n  /**\n   * Sync state of the sync member.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly syncState?: SyncMemberState;\n}\n\n/** Time Zone. */\nexport interface TimeZone extends ProxyResource {\n  /**\n   * The time zone id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly timeZoneId?: string;\n  /**\n   * The time zone display name\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n}\n\n/** A recoverable managed database resource. */\nexport interface UpdateManagedInstanceDnsServersOperation\n  extends ProxyResource {\n  /**\n   * The status of the DNS refresh operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: DnsRefreshConfigurationPropertiesStatus;\n}\n\n/** A virtual network rule. */\nexport interface VirtualNetworkRule extends ProxyResource {\n  /** The ARM resource id of the virtual network subnet. */\n  virtualNetworkSubnetId?: string;\n  /** Create firewall rule before the virtual network has vnet service endpoint enabled. */\n  ignoreMissingVnetServiceEndpoint?: boolean;\n  /**\n   * Virtual Network Rule State\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: VirtualNetworkRuleState;\n}\n\n/** Workload classifier operations for a data warehouse */\nexport interface WorkloadClassifier extends ProxyResource {\n  /** The workload classifier member name. */\n  memberName?: string;\n  /** The workload classifier label. */\n  label?: string;\n  /** The workload classifier context. */\n  context?: string;\n  /** The workload classifier start time for classification. */\n  startTime?: string;\n  /** The workload classifier end time for classification. */\n  endTime?: string;\n  /** The workload classifier importance. */\n  importance?: string;\n}\n\n/** Workload group operations for a data warehouse */\nexport interface WorkloadGroup extends ProxyResource {\n  /** The workload group minimum percentage resource. */\n  minResourcePercent?: number;\n  /** The workload group cap percentage resource. */\n  maxResourcePercent?: number;\n  /** The workload group request minimum grant percentage. */\n  minResourcePercentPerRequest?: number;\n  /** The workload group request maximum grant percentage. */\n  maxResourcePercentPerRequest?: number;\n  /** The workload group importance level. */\n  importance?: string;\n  /** The workload group query execution timeout. */\n  queryExecutionTimeout?: number;\n}\n\n/** A logical database transparent data encryption state. */\nexport interface LogicalDatabaseTransparentDataEncryption\n  extends ProxyResource {\n  /** Specifies the state of the transparent data encryption. */\n  state?: TransparentDataEncryptionState;\n}\n\n/** A short term retention policy. */\nexport interface BackupShortTermRetentionPolicy extends ProxyResource {\n  /** The backup retention period in days. This is how many days Point-in-Time Restore will be supported. */\n  retentionDays?: number;\n  /** The differential backup interval in hours. This is how many interval hours between each differential backup will be supported. This is only applicable to live databases but not dropped databases. */\n  diffBackupIntervalInHours?: DiffBackupIntervalInHours;\n}\n\n/** An export managed database operation result resource. */\nexport interface DatabaseExtensions extends ProxyResource {\n  /** Operation Mode. */\n  operationMode?: OperationMode;\n  /** Storage key type. */\n  storageKeyType?: StorageKeyType;\n  /** Storage key. */\n  storageKey?: string;\n  /** Storage Uri. */\n  storageUri?: string;\n}\n\n/** An Extension operation result resource. */\nexport interface ImportExportExtensionsOperationResult extends ProxyResource {\n  /**\n   * Request Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestId?: string;\n  /**\n   * Request type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestType?: string;\n  /**\n   * Last modified time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: string;\n  /**\n   * Server name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * Database name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * Operation status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n}\n\n/** A database operation. */\nexport interface DatabaseOperation extends ProxyResource {\n  /**\n   * The name of the database the operation is being performed on.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operation?: string;\n  /**\n   * The friendly name of operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationFriendlyName?: string;\n  /**\n   * The percentage of the operation completed.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * The name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The operation start time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * The operation state.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ManagementOperationState;\n  /**\n   * The operation error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorCode?: number;\n  /**\n   * The operation error description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorDescription?: string;\n  /**\n   * The operation error severity.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorSeverity?: number;\n  /**\n   * Whether or not the error is a user error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isUserError?: boolean;\n  /**\n   * The estimated completion time of the operation.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly estimatedCompletionTime?: Date;\n  /**\n   * The operation description.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly description?: string;\n  /**\n   * Whether the operation can be cancelled.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isCancellable?: boolean;\n}\n\n/** Usage metric of a database. */\nexport interface DatabaseUsage extends ProxyResource {\n  /**\n   * User-readable name of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly displayName?: string;\n  /**\n   * Current value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentValue?: number;\n  /**\n   * Boundary value of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly limit?: number;\n  /**\n   * Unit of the metric.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly unit?: string;\n}\n\n/** Azure SQL Database ledger digest upload settings. */\nexport interface LedgerDigestUploads extends ProxyResource {\n  /** The digest storage endpoint, which must be either an Azure blob storage endpoint or an URI for Azure Confidential Ledger. */\n  digestStorageEndpoint?: string;\n  /**\n   * Specifies the state of ledger digest upload.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: LedgerDigestUploadsState;\n}\n\n/** An Azure SQL DB Server Outbound Firewall Rule. */\nexport interface OutboundFirewallRule extends ProxyResource {\n  /**\n   * The state of the outbound rule.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly provisioningState?: string;\n}\n\n/** A replication link. */\nexport interface ReplicationLink extends ProxyResource {\n  /**\n   * Resource partner server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerServer?: string;\n  /**\n   * Resource partner database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerDatabase?: string;\n  /**\n   * Resource partner location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerLocation?: string;\n  /**\n   * Local replication role.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly role?: ReplicationRole;\n  /**\n   * Partner replication role.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly partnerRole?: ReplicationRole;\n  /**\n   * Replication mode.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationMode?: string;\n  /**\n   * Time at which the link was created.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly startTime?: Date;\n  /**\n   * Seeding completion percentage for the link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly percentComplete?: number;\n  /**\n   * Replication state (PENDING, SEEDING, CATCHUP, SUSPENDED).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly replicationState?: ReplicationState;\n  /**\n   * Whether the user is currently allowed to terminate the link.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isTerminationAllowed?: boolean;\n  /**\n   * Link type (GEO, NAMED).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly linkType?: ReplicationLinkType;\n}\n\n/** An ImportExport operation result resource. */\nexport interface ImportExportOperationResult extends ProxyResource {\n  /**\n   * Request Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestId?: string;\n  /**\n   * Request type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestType?: string;\n  /**\n   * Queued time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly queuedTime?: string;\n  /**\n   * Last modified time.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly lastModifiedTime?: string;\n  /**\n   * Blob Uri.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly blobUri?: string;\n  /**\n   * Server name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * Database name.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * Operation status.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly errorMessage?: string;\n  /**\n   * Gets the status of private endpoints associated with this request.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: PrivateEndpointConnectionRequestStatus[];\n}\n\n/** A LongTermRetentionBackup operation result resource. */\nexport interface LongTermRetentionBackupOperationResult extends ProxyResource {\n  /**\n   * Request Id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestId?: string;\n  /**\n   * Operation type.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly operationType?: string;\n  /**\n   * Source backup resource id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fromBackupResourceId?: string;\n  /**\n   * Target backup resource id\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly toBackupResourceId?: string;\n  /**\n   * The storage redundancy type of the copied backup\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly targetBackupStorageRedundancy?: BackupStorageRedundancy;\n  /**\n   * Operation status\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: string;\n  /**\n   * Progress message\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n}\n\n/** A long term retention backup. */\nexport interface LongTermRetentionBackup extends ProxyResource {\n  /**\n   * The server name that the backup database belong to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverName?: string;\n  /**\n   * The create time of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly serverCreateTime?: Date;\n  /**\n   * The name of the database the backup belong to\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The delete time of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseDeletionTime?: Date;\n  /**\n   * The time the backup was taken\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupTime?: Date;\n  /**\n   * The time the long term retention backup will expire.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupExpirationTime?: Date;\n  /**\n   * The storage redundancy type of the backup\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupStorageRedundancy?: BackupStorageRedundancy;\n  /** The storage redundancy type of the backup */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n}\n\n/** A long term retention backup for a managed database. */\nexport interface ManagedInstanceLongTermRetentionBackup extends ProxyResource {\n  /**\n   * The managed instance that the backup database belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedInstanceName?: string;\n  /**\n   * The create time of the instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedInstanceCreateTime?: Date;\n  /**\n   * The name of the database the backup belong to\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The delete time of the database\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseDeletionTime?: Date;\n  /**\n   * The time the backup was taken\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupTime?: Date;\n  /**\n   * The time the long term retention backup will expire.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupExpirationTime?: Date;\n  /**\n   * The storage redundancy type of the backup\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupStorageRedundancy?: BackupStorageRedundancy;\n}\n\n/** A restorable dropped database resource. */\nexport interface RestorableDroppedDatabase extends ProxyResource {\n  /** The name and tier of the SKU. */\n  sku?: Sku;\n  /** Resource location. */\n  location?: string;\n  /** Resource tags. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * The name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The max size of the database expressed in bytes.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxSizeBytes?: number;\n  /**\n   * The creation date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * The deletion date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionDate?: Date;\n  /**\n   * The earliest restore date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n  /**\n   * The storage account type used to store backups for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly backupStorageRedundancy?: BackupStorageRedundancy;\n}\n\n/** A server connection policy */\nexport interface ServerConnectionPolicy extends ProxyResource {\n  /**\n   * Resource location.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly location?: string;\n  /**\n   * Metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** The server connection type. */\n  connectionType?: ServerConnectionType;\n}\n\n/** An elastic pool. */\nexport interface ElasticPool extends TrackedResource {\n  /**\n   * The elastic pool SKU.\n   *\n   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or the following command:\n   *\n   * ```azurecli\n   * az sql elastic-pool list-editions -l <location> -o table\n   * ````\n   *\n   */\n  sku?: Sku;\n  /**\n   * Kind of elastic pool. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * The state of the elastic pool.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: ElasticPoolState;\n  /**\n   * The creation date of the elastic pool (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /** The storage limit for the database elastic pool in bytes. */\n  maxSizeBytes?: number;\n  /** The per database settings for the elastic pool. */\n  perDatabaseSettings?: ElasticPoolPerDatabaseSettings;\n  /** Whether or not this elastic pool is zone redundant, which means the replicas of this elastic pool will be spread across multiple availability zones. */\n  zoneRedundant?: boolean;\n  /** The license type to apply for this elastic pool. */\n  licenseType?: ElasticPoolLicenseType;\n  /** Maintenance configuration id assigned to the elastic pool. This configuration defines the period when the maintenance updates will will occur. */\n  maintenanceConfigurationId?: string;\n}\n\n/** An Azure SQL instance pool. */\nexport interface InstancePool extends TrackedResource {\n  /** The name and tier of the SKU. */\n  sku?: Sku;\n  /** Resource ID of the subnet to place this instance pool in. */\n  subnetId?: string;\n  /** Count of vCores belonging to this instance pool. */\n  vCores?: number;\n  /** The license type. Possible values are 'LicenseIncluded' (price for SQL license is included) and 'BasePrice' (without SQL license price). */\n  licenseType?: InstancePoolLicenseType;\n}\n\n/** An Azure SQL job agent. */\nexport interface JobAgent extends TrackedResource {\n  /** The name and tier of the SKU. */\n  sku?: Sku;\n  /** Resource ID of the database to store job metadata in. */\n  databaseId?: string;\n  /**\n   * The state of the job agent.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: JobAgentState;\n}\n\n/** A managed database resource. */\nexport interface ManagedDatabase extends TrackedResource {\n  /** Collation of the managed database. */\n  collation?: string;\n  /**\n   * Status of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: ManagedDatabaseStatus;\n  /**\n   * Creation date of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * Earliest restore point in time for point in time restore.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestorePoint?: Date;\n  /** Conditional. If createMode is PointInTimeRestore, this value is required. Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /**\n   * Geo paired region.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultSecondaryLocation?: string;\n  /** Collation of the metadata catalog. */\n  catalogCollation?: CatalogCollationType;\n  /** Managed database create mode. PointInTimeRestore: Create a database by restoring a point in time backup of an existing database. SourceDatabaseName, SourceManagedInstanceName and PointInTime must be specified. RestoreExternalBackup: Create a database by restoring from external backup files. Collation, StorageContainerUri and StorageContainerSasToken must be specified. Recovery: Creates a database by restoring a geo-replicated backup. RecoverableDatabaseId must be specified as the recoverable database resource ID to restore. RestoreLongTermRetentionBackup: Create a database by restoring from a long term retention backup (longTermRetentionBackupResourceId required). */\n  createMode?: ManagedDatabaseCreateMode;\n  /** Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the uri of the storage container where backups for this restore are stored. */\n  storageContainerUri?: string;\n  /** The resource identifier of the source database associated with create operation of this database. */\n  sourceDatabaseId?: string;\n  /** The restorable dropped database resource id to restore when creating this database. */\n  restorableDroppedDatabaseId?: string;\n  /** Conditional. If createMode is RestoreExternalBackup, this value is required. Specifies the storage container sas token. */\n  storageContainerSasToken?: string;\n  /**\n   * Instance Failover Group resource identifier that this managed database belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverGroupId?: string;\n  /** The resource identifier of the recoverable database associated with create operation of this database. */\n  recoverableDatabaseId?: string;\n  /** The name of the Long Term Retention backup to be used for restore of this managed database. */\n  longTermRetentionBackupResourceId?: string;\n  /** Whether to auto complete restore of this managed database. */\n  autoCompleteRestore?: boolean;\n  /** Last backup file name for restore of this managed database. */\n  lastBackupName?: string;\n}\n\n/** An Azure SQL virtual cluster. */\nexport interface VirtualCluster extends TrackedResource {\n  /**\n   * Subnet resource ID for the virtual cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly subnetId?: string;\n  /** If the service has different generations of hardware, for the same SKU, then that can be captured here. */\n  family?: string;\n  /**\n   * List of resources in this virtual cluster.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly childResources?: string[];\n  /** Specifies maintenance configuration id to apply to this virtual cluster. */\n  maintenanceConfigurationId?: string;\n}\n\n/** An Azure SQL Database server. */\nexport interface Server extends TrackedResource {\n  /** The Azure Active Directory identity of the server. */\n  identity?: ResourceIdentity;\n  /**\n   * Kind of sql server. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /** Administrator username for the server. Once created it cannot be changed. */\n  administratorLogin?: string;\n  /** The administrator login password (required for server creation). */\n  administratorLoginPassword?: string;\n  /** The version of the server. */\n  version?: string;\n  /**\n   * The state of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /**\n   * The fully qualified domain name of the server.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainName?: string;\n  /**\n   * List of private endpoint connections on a server\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: ServerPrivateEndpointConnection[];\n  /** Minimal TLS version. Allowed values: '1.0', '1.1', '1.2' */\n  minimalTlsVersion?: string;\n  /** Whether or not public endpoint access is allowed for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */\n  publicNetworkAccess?: ServerNetworkAccessFlag;\n  /**\n   * Whether or not existing server has a workspace created and if it allows connection from workspace\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly workspaceFeature?: ServerWorkspaceFeature;\n  /** The resource id of a user assigned identity to be used by default. */\n  primaryUserAssignedIdentityId?: string;\n  /** The Client id used for cross tenant CMK scenario */\n  federatedClientId?: string;\n  /** A CMK URI of the key to use for encryption. */\n  keyId?: string;\n  /** The Azure Active Directory identity of the server. */\n  administrators?: ServerExternalAdministrator;\n  /** Whether or not to restrict outbound network access for this server.  Value is optional but if passed in, must be 'Enabled' or 'Disabled' */\n  restrictOutboundNetworkAccess?: ServerNetworkAccessFlag;\n}\n\n/** A database resource. */\nexport interface Database extends TrackedResource {\n  /**\n   * The database SKU.\n   *\n   * The list of SKUs may vary by region and support offer. To determine the SKUs (including the SKU name, tier/edition, family, and capacity) that are available to your subscription in an Azure region, use the `Capabilities_ListByLocation` REST API or one of the following commands:\n   *\n   * ```azurecli\n   * az sql db list-editions -l <location> -o table\n   * ````\n   *\n   * ```powershell\n   * Get-AzSqlServerServiceObjective -Location <location>\n   * ````\n   *\n   */\n  sku?: Sku;\n  /**\n   * Kind of database. This is metadata used for the Azure portal experience.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kind?: string;\n  /**\n   * Resource that manages the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managedBy?: string;\n  /** The Azure Active Directory identity of the database. */\n  identity?: DatabaseIdentity;\n  /**\n   * Specifies the mode of database creation.\n   *\n   * Default: regular database creation.\n   *\n   * Copy: creates a database as a copy of an existing database. sourceDatabaseId must be specified as the resource ID of the source database.\n   *\n   * Secondary: creates a database as a secondary replica of an existing database. sourceDatabaseId must be specified as the resource ID of the existing primary database.\n   *\n   * PointInTimeRestore: Creates a database by restoring a point in time backup of an existing database. sourceDatabaseId must be specified as the resource ID of the existing database, and restorePointInTime must be specified.\n   *\n   * Recovery: Creates a database by restoring a geo-replicated backup. sourceDatabaseId must be specified as the recoverable database resource ID to restore.\n   *\n   * Restore: Creates a database by restoring a backup of a deleted database. sourceDatabaseId must be specified. If sourceDatabaseId is the database's original resource ID, then sourceDatabaseDeletionDate must be specified. Otherwise sourceDatabaseId must be the restorable dropped database resource ID and sourceDatabaseDeletionDate is ignored. restorePointInTime may also be specified to restore from an earlier point in time.\n   *\n   * RestoreLongTermRetentionBackup: Creates a database by restoring from a long term retention vault. recoveryServicesRecoveryPointResourceId must be specified as the recovery point resource ID.\n   *\n   * Copy, Secondary, and RestoreLongTermRetentionBackup are not supported for DataWarehouse edition.\n   */\n  createMode?: CreateMode;\n  /** The collation of the database. */\n  collation?: string;\n  /** The max size of the database expressed in bytes. */\n  maxSizeBytes?: number;\n  /** The name of the sample schema to apply when creating this database. */\n  sampleName?: SampleName;\n  /** The resource identifier of the elastic pool containing this database. */\n  elasticPoolId?: string;\n  /** The resource identifier of the source database associated with create operation of this database. */\n  sourceDatabaseId?: string;\n  /**\n   * The status of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly status?: DatabaseStatus;\n  /**\n   * The ID of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseId?: string;\n  /**\n   * The creation date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * The current service level objective name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentServiceObjectiveName?: string;\n  /**\n   * The requested service level objective name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly requestedServiceObjectiveName?: string;\n  /**\n   * The default secondary region for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly defaultSecondaryLocation?: string;\n  /**\n   * Failover Group resource identifier that this database belongs to.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly failoverGroupId?: string;\n  /** Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /** Specifies the time that the database was deleted. */\n  sourceDatabaseDeletionDate?: Date;\n  /** The resource identifier of the recovery point associated with create operation of this database. */\n  recoveryServicesRecoveryPointId?: string;\n  /** The resource identifier of the long term retention backup associated with create operation of this database. */\n  longTermRetentionBackupResourceId?: string;\n  /** The resource identifier of the recoverable database associated with create operation of this database. */\n  recoverableDatabaseId?: string;\n  /** The resource identifier of the restorable dropped database associated with create operation of this database. */\n  restorableDroppedDatabaseId?: string;\n  /** Collation of the metadata catalog. */\n  catalogCollation?: CatalogCollationType;\n  /** Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones. */\n  zoneRedundant?: boolean;\n  /** The license type to apply for this database. `LicenseIncluded` if you need a license, or `BasePrice` if you have a license and are eligible for the Azure Hybrid Benefit. */\n  licenseType?: DatabaseLicenseType;\n  /**\n   * The max log size for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly maxLogSizeBytes?: number;\n  /**\n   * This records the earliest start date and time that restore is available for this database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n  /** The state of read-only routing. If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica in the same region. */\n  readScale?: DatabaseReadScale;\n  /** The number of secondary replicas associated with the database that are used to provide high availability. */\n  highAvailabilityReplicaCount?: number;\n  /** The secondary type of the database if it is a secondary.  Valid values are Geo and Named. */\n  secondaryType?: SecondaryType;\n  /**\n   * The name and tier of the SKU.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentSku?: Sku;\n  /** Time in minutes after which database is automatically paused. A value of -1 means that automatic pause is disabled */\n  autoPauseDelay?: number;\n  /**\n   * The storage account type used to store backups for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** The storage account type to be used to store backups for this database. */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** Minimal capacity that database will always have allocated, if not paused */\n  minCapacity?: number;\n  /**\n   * The date when database was paused by user configuration or action(ISO8601 format). Null if the database is ready.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly pausedDate?: Date;\n  /**\n   * The date when database was resumed by user action or database login (ISO8601 format). Null if the database is paused.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly resumedDate?: Date;\n  /** Maintenance configuration id assigned to the database. This configuration defines the period when the maintenance updates will occur. */\n  maintenanceConfigurationId?: string;\n  /** Whether or not this database is a ledger database, which means all tables in the database are ledger tables. Note: the value of this property cannot be changed after the database has been created. */\n  isLedgerOn?: boolean;\n  /**\n   * Infra encryption is enabled for this database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly isInfraEncryptionEnabled?: boolean;\n  /** The Client id used for cross tenant per database CMK scenario */\n  federatedClientId?: string;\n  /** The Primary Delegated Identity Client id used for per database CMK - for internal use only */\n  primaryDelegatedIdentityClientId?: string;\n}\n\n/** An Azure SQL managed instance. */\nexport interface ManagedInstance extends TrackedResource {\n  /** The Azure Active Directory identity of the managed instance. */\n  identity?: ResourceIdentity;\n  /** Managed instance SKU. Allowed values for sku.name: GP_Gen4, GP_Gen5, BC_Gen4, BC_Gen5 */\n  sku?: Sku;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly provisioningState?: ManagedInstancePropertiesProvisioningState;\n  /**\n   * Specifies the mode of database creation.\n   *\n   * Default: Regular instance creation.\n   *\n   * Restore: Creates an instance by restoring a set of backups to specific point in time. RestorePointInTime and SourceManagedInstanceId must be specified.\n   */\n  managedInstanceCreateMode?: ManagedServerCreateMode;\n  /**\n   * The fully qualified domain name of the managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly fullyQualifiedDomainName?: string;\n  /** Administrator username for the managed instance. Can only be specified when the managed instance is being created (and is required for creation). */\n  administratorLogin?: string;\n  /** The administrator login password (required for managed instance creation). */\n  administratorLoginPassword?: string;\n  /** Subnet resource ID for the managed instance. */\n  subnetId?: string;\n  /**\n   * The state of the managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly state?: string;\n  /** The license type. Possible values are 'LicenseIncluded' (regular price inclusive of a new SQL license) and 'BasePrice' (discounted AHB price for bringing your own SQL licenses). */\n  licenseType?: ManagedInstanceLicenseType;\n  /** The number of vCores. Allowed values: 8, 16, 24, 32, 40, 64, 80. */\n  vCores?: number;\n  /** Storage size in GB. Minimum value: 32. Maximum value: 8192. Increments of 32 GB allowed only. */\n  storageSizeInGB?: number;\n  /** Collation of the managed instance. */\n  collation?: string;\n  /**\n   * The Dns Zone that the managed instance is in.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly dnsZone?: string;\n  /** The resource id of another managed instance whose DNS zone this managed instance will share after creation. */\n  dnsZonePartner?: string;\n  /** Whether or not the public data endpoint is enabled. */\n  publicDataEndpointEnabled?: boolean;\n  /** The resource identifier of the source managed instance associated with create operation of this instance. */\n  sourceManagedInstanceId?: string;\n  /** Specifies the point in time (ISO8601 format) of the source database that will be restored to create the new database. */\n  restorePointInTime?: Date;\n  /** Connection type used for connecting to the instance. */\n  proxyOverride?: ManagedInstanceProxyOverride;\n  /**\n   * Id of the timezone. Allowed values are timezones supported by Windows.\n   * Windows keeps details on supported timezones, including the id, in registry under\n   * KEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Time Zones.\n   * You can get those registry values via SQL Server by querying SELECT name AS timezone_id FROM sys.time_zone_info.\n   * List of Ids can also be obtained by executing [System.TimeZoneInfo]::GetSystemTimeZones() in PowerShell.\n   * An example of valid timezone id is \"Pacific Standard Time\" or \"W. Europe Standard Time\".\n   */\n  timezoneId?: string;\n  /** The Id of the instance pool this managed server belongs to. */\n  instancePoolId?: string;\n  /** Specifies maintenance configuration id to apply to this managed instance. */\n  maintenanceConfigurationId?: string;\n  /**\n   * List of private endpoint connections on a managed instance.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly privateEndpointConnections?: ManagedInstancePecProperty[];\n  /** Minimal TLS version. Allowed values: 'None', '1.0', '1.1', '1.2' */\n  minimalTlsVersion?: string;\n  /**\n   * The storage account type used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage)\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly currentBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** The storage account type to be used to store backups for this instance. The options are Local (LocallyRedundantStorage), Zone (ZoneRedundantStorage), Geo (GeoRedundantStorage) and GeoZone(GeoZoneRedundantStorage) */\n  requestedBackupStorageRedundancy?: BackupStorageRedundancy;\n  /** Whether or not the multi-az is enabled. */\n  zoneRedundant?: boolean;\n  /** The resource id of a user assigned identity to be used by default. */\n  primaryUserAssignedIdentityId?: string;\n  /** A CMK URI of the key to use for encryption. */\n  keyId?: string;\n  /** The Azure Active Directory administrator of the server. */\n  administrators?: ManagedInstanceExternalAdministrator;\n  /** The managed instance's service principal. */\n  servicePrincipal?: ServicePrincipal;\n}\n\n/** A restorable dropped managed database resource. */\nexport interface RestorableDroppedManagedDatabase extends TrackedResource {\n  /**\n   * The name of the database.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly databaseName?: string;\n  /**\n   * The creation date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly creationDate?: Date;\n  /**\n   * The deletion date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletionDate?: Date;\n  /**\n   * The earliest restore date of the database (ISO8601 format).\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly earliestRestoreDate?: Date;\n}\n\n/** A server firewall rule. */\nexport interface FirewallRule extends ProxyResourceWithWritableName {\n  /** The start IP address of the firewall rule. Must be IPv4 format. Use value '0.0.0.0' for all Azure-internal IP addresses. */\n  startIpAddress?: string;\n  /** The end IP address of the firewall rule. Must be IPv4 format. Must be greater than or equal to startIpAddress. Use value '0.0.0.0' for all Azure-internal IP addresses. */\n  endIpAddress?: string;\n}\n\n/** Known values of {@link GeoBackupPolicyName} that the service accepts. */\nexport enum KnownGeoBackupPolicyName {\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for GeoBackupPolicyName. \\\n * {@link KnownGeoBackupPolicyName} can be used interchangeably with GeoBackupPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type GeoBackupPolicyName = string;\n\n/** Known values of {@link UnitType} that the service accepts. */\nexport enum KnownUnitType {\n  /** Count */\n  Count = \"count\",\n  /** Bytes */\n  Bytes = \"bytes\",\n  /** Seconds */\n  Seconds = \"seconds\",\n  /** Percent */\n  Percent = \"percent\",\n  /** CountPerSecond */\n  CountPerSecond = \"countPerSecond\",\n  /** BytesPerSecond */\n  BytesPerSecond = \"bytesPerSecond\"\n}\n\n/**\n * Defines values for UnitType. \\\n * {@link KnownUnitType} can be used interchangeably with UnitType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **count** \\\n * **bytes** \\\n * **seconds** \\\n * **percent** \\\n * **countPerSecond** \\\n * **bytesPerSecond**\n */\nexport type UnitType = string;\n\n/** Known values of {@link PrimaryAggregationType} that the service accepts. */\nexport enum KnownPrimaryAggregationType {\n  /** None */\n  None = \"None\",\n  /** Average */\n  Average = \"Average\",\n  /** Count */\n  Count = \"Count\",\n  /** Minimum */\n  Minimum = \"Minimum\",\n  /** Maximum */\n  Maximum = \"Maximum\",\n  /** Total */\n  Total = \"Total\"\n}\n\n/**\n * Defines values for PrimaryAggregationType. \\\n * {@link KnownPrimaryAggregationType} can be used interchangeably with PrimaryAggregationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **Average** \\\n * **Count** \\\n * **Minimum** \\\n * **Maximum** \\\n * **Total**\n */\nexport type PrimaryAggregationType = string;\n\n/** Known values of {@link UnitDefinitionType} that the service accepts. */\nexport enum KnownUnitDefinitionType {\n  /** Count */\n  Count = \"Count\",\n  /** Bytes */\n  Bytes = \"Bytes\",\n  /** Seconds */\n  Seconds = \"Seconds\",\n  /** Percent */\n  Percent = \"Percent\",\n  /** CountPerSecond */\n  CountPerSecond = \"CountPerSecond\",\n  /** BytesPerSecond */\n  BytesPerSecond = \"BytesPerSecond\"\n}\n\n/**\n * Defines values for UnitDefinitionType. \\\n * {@link KnownUnitDefinitionType} can be used interchangeably with UnitDefinitionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Count** \\\n * **Bytes** \\\n * **Seconds** \\\n * **Percent** \\\n * **CountPerSecond** \\\n * **BytesPerSecond**\n */\nexport type UnitDefinitionType = string;\n\n/** Known values of {@link RecommendedActionCurrentState} that the service accepts. */\nexport enum KnownRecommendedActionCurrentState {\n  /** Active */\n  Active = \"Active\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Executing */\n  Executing = \"Executing\",\n  /** Verifying */\n  Verifying = \"Verifying\",\n  /** PendingRevert */\n  PendingRevert = \"PendingRevert\",\n  /** RevertCancelled */\n  RevertCancelled = \"RevertCancelled\",\n  /** Reverting */\n  Reverting = \"Reverting\",\n  /** Reverted */\n  Reverted = \"Reverted\",\n  /** Ignored */\n  Ignored = \"Ignored\",\n  /** Expired */\n  Expired = \"Expired\",\n  /** Monitoring */\n  Monitoring = \"Monitoring\",\n  /** Resolved */\n  Resolved = \"Resolved\",\n  /** Success */\n  Success = \"Success\",\n  /** Error */\n  Error = \"Error\"\n}\n\n/**\n * Defines values for RecommendedActionCurrentState. \\\n * {@link KnownRecommendedActionCurrentState} can be used interchangeably with RecommendedActionCurrentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Active** \\\n * **Pending** \\\n * **Executing** \\\n * **Verifying** \\\n * **PendingRevert** \\\n * **RevertCancelled** \\\n * **Reverting** \\\n * **Reverted** \\\n * **Ignored** \\\n * **Expired** \\\n * **Monitoring** \\\n * **Resolved** \\\n * **Success** \\\n * **Error**\n */\nexport type RecommendedActionCurrentState = string;\n\n/** Known values of {@link ColumnDataType} that the service accepts. */\nexport enum KnownColumnDataType {\n  /** Image */\n  Image = \"image\",\n  /** Text */\n  Text = \"text\",\n  /** Uniqueidentifier */\n  Uniqueidentifier = \"uniqueidentifier\",\n  /** Date */\n  Date = \"date\",\n  /** Time */\n  Time = \"time\",\n  /** Datetime2 */\n  Datetime2 = \"datetime2\",\n  /** Datetimeoffset */\n  Datetimeoffset = \"datetimeoffset\",\n  /** Tinyint */\n  Tinyint = \"tinyint\",\n  /** Smallint */\n  Smallint = \"smallint\",\n  /** Int */\n  Int = \"int\",\n  /** Smalldatetime */\n  Smalldatetime = \"smalldatetime\",\n  /** Real */\n  Real = \"real\",\n  /** Money */\n  Money = \"money\",\n  /** Datetime */\n  Datetime = \"datetime\",\n  /** Float */\n  Float = \"float\",\n  /** SqlVariant */\n  SqlVariant = \"sql_variant\",\n  /** Ntext */\n  Ntext = \"ntext\",\n  /** Bit */\n  Bit = \"bit\",\n  /** Decimal */\n  Decimal = \"decimal\",\n  /** Numeric */\n  Numeric = \"numeric\",\n  /** Smallmoney */\n  Smallmoney = \"smallmoney\",\n  /** Bigint */\n  Bigint = \"bigint\",\n  /** Hierarchyid */\n  Hierarchyid = \"hierarchyid\",\n  /** Geometry */\n  Geometry = \"geometry\",\n  /** Geography */\n  Geography = \"geography\",\n  /** Varbinary */\n  Varbinary = \"varbinary\",\n  /** Varchar */\n  Varchar = \"varchar\",\n  /** Binary */\n  Binary = \"binary\",\n  /** Char */\n  Char = \"char\",\n  /** Timestamp */\n  Timestamp = \"timestamp\",\n  /** Nvarchar */\n  Nvarchar = \"nvarchar\",\n  /** Nchar */\n  Nchar = \"nchar\",\n  /** Xml */\n  Xml = \"xml\",\n  /** Sysname */\n  Sysname = \"sysname\"\n}\n\n/**\n * Defines values for ColumnDataType. \\\n * {@link KnownColumnDataType} can be used interchangeably with ColumnDataType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **image** \\\n * **text** \\\n * **uniqueidentifier** \\\n * **date** \\\n * **time** \\\n * **datetime2** \\\n * **datetimeoffset** \\\n * **tinyint** \\\n * **smallint** \\\n * **int** \\\n * **smalldatetime** \\\n * **real** \\\n * **money** \\\n * **datetime** \\\n * **float** \\\n * **sql_variant** \\\n * **ntext** \\\n * **bit** \\\n * **decimal** \\\n * **numeric** \\\n * **smallmoney** \\\n * **bigint** \\\n * **hierarchyid** \\\n * **geometry** \\\n * **geography** \\\n * **varbinary** \\\n * **varchar** \\\n * **binary** \\\n * **char** \\\n * **timestamp** \\\n * **nvarchar** \\\n * **nchar** \\\n * **xml** \\\n * **sysname**\n */\nexport type ColumnDataType = string;\n\n/** Known values of {@link TableTemporalType} that the service accepts. */\nexport enum KnownTableTemporalType {\n  /** NonTemporalTable */\n  NonTemporalTable = \"NonTemporalTable\",\n  /** HistoryTable */\n  HistoryTable = \"HistoryTable\",\n  /** SystemVersionedTemporalTable */\n  SystemVersionedTemporalTable = \"SystemVersionedTemporalTable\"\n}\n\n/**\n * Defines values for TableTemporalType. \\\n * {@link KnownTableTemporalType} can be used interchangeably with TableTemporalType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NonTemporalTable** \\\n * **HistoryTable** \\\n * **SystemVersionedTemporalTable**\n */\nexport type TableTemporalType = string;\n\n/** Known values of {@link SecurityAlertPolicyName} that the service accepts. */\nexport enum KnownSecurityAlertPolicyName {\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for SecurityAlertPolicyName. \\\n * {@link KnownSecurityAlertPolicyName} can be used interchangeably with SecurityAlertPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type SecurityAlertPolicyName = string;\n\n/** Known values of {@link CreatedByType} that the service accepts. */\nexport enum KnownCreatedByType {\n  /** User */\n  User = \"User\",\n  /** Application */\n  Application = \"Application\",\n  /** ManagedIdentity */\n  ManagedIdentity = \"ManagedIdentity\",\n  /** Key */\n  Key = \"Key\"\n}\n\n/**\n * Defines values for CreatedByType. \\\n * {@link KnownCreatedByType} can be used interchangeably with CreatedByType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Application** \\\n * **ManagedIdentity** \\\n * **Key**\n */\nexport type CreatedByType = string;\n\n/** Known values of {@link VulnerabilityAssessmentName} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentName. \\\n * {@link KnownVulnerabilityAssessmentName} can be used interchangeably with VulnerabilityAssessmentName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type VulnerabilityAssessmentName = string;\n\n/** Known values of {@link VulnerabilityAssessmentScanTriggerType} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentScanTriggerType {\n  /** OnDemand */\n  OnDemand = \"OnDemand\",\n  /** Recurring */\n  Recurring = \"Recurring\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentScanTriggerType. \\\n * {@link KnownVulnerabilityAssessmentScanTriggerType} can be used interchangeably with VulnerabilityAssessmentScanTriggerType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **OnDemand** \\\n * **Recurring**\n */\nexport type VulnerabilityAssessmentScanTriggerType = string;\n\n/** Known values of {@link VulnerabilityAssessmentScanState} that the service accepts. */\nexport enum KnownVulnerabilityAssessmentScanState {\n  /** Passed */\n  Passed = \"Passed\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** FailedToRun */\n  FailedToRun = \"FailedToRun\",\n  /** InProgress */\n  InProgress = \"InProgress\"\n}\n\n/**\n * Defines values for VulnerabilityAssessmentScanState. \\\n * {@link KnownVulnerabilityAssessmentScanState} can be used interchangeably with VulnerabilityAssessmentScanState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Passed** \\\n * **Failed** \\\n * **FailedToRun** \\\n * **InProgress**\n */\nexport type VulnerabilityAssessmentScanState = string;\n\n/** Known values of {@link DataWarehouseUserActivityName} that the service accepts. */\nexport enum KnownDataWarehouseUserActivityName {\n  /** Current */\n  Current = \"current\"\n}\n\n/**\n * Defines values for DataWarehouseUserActivityName. \\\n * {@link KnownDataWarehouseUserActivityName} can be used interchangeably with DataWarehouseUserActivityName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type DataWarehouseUserActivityName = string;\n\n/** Known values of {@link ElasticPoolState} that the service accepts. */\nexport enum KnownElasticPoolState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ElasticPoolState. \\\n * {@link KnownElasticPoolState} can be used interchangeably with ElasticPoolState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Ready** \\\n * **Disabled**\n */\nexport type ElasticPoolState = string;\n\n/** Known values of {@link ElasticPoolLicenseType} that the service accepts. */\nexport enum KnownElasticPoolLicenseType {\n  /** LicenseIncluded */\n  LicenseIncluded = \"LicenseIncluded\",\n  /** BasePrice */\n  BasePrice = \"BasePrice\"\n}\n\n/**\n * Defines values for ElasticPoolLicenseType. \\\n * {@link KnownElasticPoolLicenseType} can be used interchangeably with ElasticPoolLicenseType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LicenseIncluded** \\\n * **BasePrice**\n */\nexport type ElasticPoolLicenseType = string;\n\n/** Known values of {@link ServerKeyType} that the service accepts. */\nexport enum KnownServerKeyType {\n  /** ServiceManaged */\n  ServiceManaged = \"ServiceManaged\",\n  /** AzureKeyVault */\n  AzureKeyVault = \"AzureKeyVault\"\n}\n\n/**\n * Defines values for ServerKeyType. \\\n * {@link KnownServerKeyType} can be used interchangeably with ServerKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ServiceManaged** \\\n * **AzureKeyVault**\n */\nexport type ServerKeyType = string;\n\n/** Known values of {@link EncryptionProtectorName} that the service accepts. */\nexport enum KnownEncryptionProtectorName {\n  /** Current */\n  Current = \"current\"\n}\n\n/**\n * Defines values for EncryptionProtectorName. \\\n * {@link KnownEncryptionProtectorName} can be used interchangeably with EncryptionProtectorName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type EncryptionProtectorName = string;\n\n/** Known values of {@link ReadWriteEndpointFailoverPolicy} that the service accepts. */\nexport enum KnownReadWriteEndpointFailoverPolicy {\n  /** Manual */\n  Manual = \"Manual\",\n  /** Automatic */\n  Automatic = \"Automatic\"\n}\n\n/**\n * Defines values for ReadWriteEndpointFailoverPolicy. \\\n * {@link KnownReadWriteEndpointFailoverPolicy} can be used interchangeably with ReadWriteEndpointFailoverPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Manual** \\\n * **Automatic**\n */\nexport type ReadWriteEndpointFailoverPolicy = string;\n\n/** Known values of {@link ReadOnlyEndpointFailoverPolicy} that the service accepts. */\nexport enum KnownReadOnlyEndpointFailoverPolicy {\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Enabled */\n  Enabled = \"Enabled\"\n}\n\n/**\n * Defines values for ReadOnlyEndpointFailoverPolicy. \\\n * {@link KnownReadOnlyEndpointFailoverPolicy} can be used interchangeably with ReadOnlyEndpointFailoverPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Disabled** \\\n * **Enabled**\n */\nexport type ReadOnlyEndpointFailoverPolicy = string;\n\n/** Known values of {@link FailoverGroupReplicationRole} that the service accepts. */\nexport enum KnownFailoverGroupReplicationRole {\n  /** Primary */\n  Primary = \"Primary\",\n  /** Secondary */\n  Secondary = \"Secondary\"\n}\n\n/**\n * Defines values for FailoverGroupReplicationRole. \\\n * {@link KnownFailoverGroupReplicationRole} can be used interchangeably with FailoverGroupReplicationRole,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Primary** \\\n * **Secondary**\n */\nexport type FailoverGroupReplicationRole = string;\n\n/** Known values of {@link InstanceFailoverGroupReplicationRole} that the service accepts. */\nexport enum KnownInstanceFailoverGroupReplicationRole {\n  /** Primary */\n  Primary = \"Primary\",\n  /** Secondary */\n  Secondary = \"Secondary\"\n}\n\n/**\n * Defines values for InstanceFailoverGroupReplicationRole. \\\n * {@link KnownInstanceFailoverGroupReplicationRole} can be used interchangeably with InstanceFailoverGroupReplicationRole,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Primary** \\\n * **Secondary**\n */\nexport type InstanceFailoverGroupReplicationRole = string;\n\n/** Known values of {@link InstancePoolLicenseType} that the service accepts. */\nexport enum KnownInstancePoolLicenseType {\n  /** LicenseIncluded */\n  LicenseIncluded = \"LicenseIncluded\",\n  /** BasePrice */\n  BasePrice = \"BasePrice\"\n}\n\n/**\n * Defines values for InstancePoolLicenseType. \\\n * {@link KnownInstancePoolLicenseType} can be used interchangeably with InstancePoolLicenseType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LicenseIncluded** \\\n * **BasePrice**\n */\nexport type InstancePoolLicenseType = string;\n\n/** Known values of {@link JobAgentState} that the service accepts. */\nexport enum KnownJobAgentState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for JobAgentState. \\\n * {@link KnownJobAgentState} can be used interchangeably with JobAgentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Ready** \\\n * **Updating** \\\n * **Deleting** \\\n * **Disabled**\n */\nexport type JobAgentState = string;\n\n/** Known values of {@link JobExecutionLifecycle} that the service accepts. */\nexport enum KnownJobExecutionLifecycle {\n  /** Created */\n  Created = \"Created\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** WaitingForChildJobExecutions */\n  WaitingForChildJobExecutions = \"WaitingForChildJobExecutions\",\n  /** WaitingForRetry */\n  WaitingForRetry = \"WaitingForRetry\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** SucceededWithSkipped */\n  SucceededWithSkipped = \"SucceededWithSkipped\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** TimedOut */\n  TimedOut = \"TimedOut\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** Skipped */\n  Skipped = \"Skipped\"\n}\n\n/**\n * Defines values for JobExecutionLifecycle. \\\n * {@link KnownJobExecutionLifecycle} can be used interchangeably with JobExecutionLifecycle,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Created** \\\n * **InProgress** \\\n * **WaitingForChildJobExecutions** \\\n * **WaitingForRetry** \\\n * **Succeeded** \\\n * **SucceededWithSkipped** \\\n * **Failed** \\\n * **TimedOut** \\\n * **Canceled** \\\n * **Skipped**\n */\nexport type JobExecutionLifecycle = string;\n\n/** Known values of {@link ProvisioningState} that the service accepts. */\nexport enum KnownProvisioningState {\n  /** Created */\n  Created = \"Created\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for ProvisioningState. \\\n * {@link KnownProvisioningState} can be used interchangeably with ProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Created** \\\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type ProvisioningState = string;\n\n/** Known values of {@link JobTargetType} that the service accepts. */\nexport enum KnownJobTargetType {\n  /** TargetGroup */\n  TargetGroup = \"TargetGroup\",\n  /** SqlDatabase */\n  SqlDatabase = \"SqlDatabase\",\n  /** SqlElasticPool */\n  SqlElasticPool = \"SqlElasticPool\",\n  /** SqlShardMap */\n  SqlShardMap = \"SqlShardMap\",\n  /** SqlServer */\n  SqlServer = \"SqlServer\"\n}\n\n/**\n * Defines values for JobTargetType. \\\n * {@link KnownJobTargetType} can be used interchangeably with JobTargetType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TargetGroup** \\\n * **SqlDatabase** \\\n * **SqlElasticPool** \\\n * **SqlShardMap** \\\n * **SqlServer**\n */\nexport type JobTargetType = string;\n\n/** Known values of {@link JobStepActionType} that the service accepts. */\nexport enum KnownJobStepActionType {\n  /** TSql */\n  TSql = \"TSql\"\n}\n\n/**\n * Defines values for JobStepActionType. \\\n * {@link KnownJobStepActionType} can be used interchangeably with JobStepActionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **TSql**\n */\nexport type JobStepActionType = string;\n\n/** Known values of {@link JobStepActionSource} that the service accepts. */\nexport enum KnownJobStepActionSource {\n  /** Inline */\n  Inline = \"Inline\"\n}\n\n/**\n * Defines values for JobStepActionSource. \\\n * {@link KnownJobStepActionSource} can be used interchangeably with JobStepActionSource,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Inline**\n */\nexport type JobStepActionSource = string;\n\n/** Known values of {@link JobStepOutputType} that the service accepts. */\nexport enum KnownJobStepOutputType {\n  /** SqlDatabase */\n  SqlDatabase = \"SqlDatabase\"\n}\n\n/**\n * Defines values for JobStepOutputType. \\\n * {@link KnownJobStepOutputType} can be used interchangeably with JobStepOutputType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SqlDatabase**\n */\nexport type JobStepOutputType = string;\n\n/** Known values of {@link CapabilityGroup} that the service accepts. */\nexport enum KnownCapabilityGroup {\n  /** SupportedEditions */\n  SupportedEditions = \"supportedEditions\",\n  /** SupportedElasticPoolEditions */\n  SupportedElasticPoolEditions = \"supportedElasticPoolEditions\",\n  /** SupportedManagedInstanceVersions */\n  SupportedManagedInstanceVersions = \"supportedManagedInstanceVersions\",\n  /** SupportedInstancePoolEditions */\n  SupportedInstancePoolEditions = \"supportedInstancePoolEditions\",\n  /** SupportedManagedInstanceEditions */\n  SupportedManagedInstanceEditions = \"supportedManagedInstanceEditions\"\n}\n\n/**\n * Defines values for CapabilityGroup. \\\n * {@link KnownCapabilityGroup} can be used interchangeably with CapabilityGroup,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **supportedEditions** \\\n * **supportedElasticPoolEditions** \\\n * **supportedManagedInstanceVersions** \\\n * **supportedInstancePoolEditions** \\\n * **supportedManagedInstanceEditions**\n */\nexport type CapabilityGroup = string;\n\n/** Known values of {@link MaxSizeUnit} that the service accepts. */\nexport enum KnownMaxSizeUnit {\n  /** Megabytes */\n  Megabytes = \"Megabytes\",\n  /** Gigabytes */\n  Gigabytes = \"Gigabytes\",\n  /** Terabytes */\n  Terabytes = \"Terabytes\",\n  /** Petabytes */\n  Petabytes = \"Petabytes\"\n}\n\n/**\n * Defines values for MaxSizeUnit. \\\n * {@link KnownMaxSizeUnit} can be used interchangeably with MaxSizeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Megabytes** \\\n * **Gigabytes** \\\n * **Terabytes** \\\n * **Petabytes**\n */\nexport type MaxSizeUnit = string;\n\n/** Known values of {@link LogSizeUnit} that the service accepts. */\nexport enum KnownLogSizeUnit {\n  /** Megabytes */\n  Megabytes = \"Megabytes\",\n  /** Gigabytes */\n  Gigabytes = \"Gigabytes\",\n  /** Terabytes */\n  Terabytes = \"Terabytes\",\n  /** Petabytes */\n  Petabytes = \"Petabytes\",\n  /** Percent */\n  Percent = \"Percent\"\n}\n\n/**\n * Defines values for LogSizeUnit. \\\n * {@link KnownLogSizeUnit} can be used interchangeably with LogSizeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Megabytes** \\\n * **Gigabytes** \\\n * **Terabytes** \\\n * **Petabytes** \\\n * **Percent**\n */\nexport type LogSizeUnit = string;\n\n/** Known values of {@link PerformanceLevelUnit} that the service accepts. */\nexport enum KnownPerformanceLevelUnit {\n  /** DTU */\n  DTU = \"DTU\",\n  /** VCores */\n  VCores = \"VCores\"\n}\n\n/**\n * Defines values for PerformanceLevelUnit. \\\n * {@link KnownPerformanceLevelUnit} can be used interchangeably with PerformanceLevelUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DTU** \\\n * **VCores**\n */\nexport type PerformanceLevelUnit = string;\n\n/** Known values of {@link PauseDelayTimeUnit} that the service accepts. */\nexport enum KnownPauseDelayTimeUnit {\n  /** Minutes */\n  Minutes = \"Minutes\"\n}\n\n/**\n * Defines values for PauseDelayTimeUnit. \\\n * {@link KnownPauseDelayTimeUnit} can be used interchangeably with PauseDelayTimeUnit,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Minutes**\n */\nexport type PauseDelayTimeUnit = string;\n\n/** Known values of {@link StorageCapabilityStorageAccountType} that the service accepts. */\nexport enum KnownStorageCapabilityStorageAccountType {\n  /** GRS */\n  GRS = \"GRS\",\n  /** LRS */\n  LRS = \"LRS\",\n  /** ZRS */\n  ZRS = \"ZRS\"\n}\n\n/**\n * Defines values for StorageCapabilityStorageAccountType. \\\n * {@link KnownStorageCapabilityStorageAccountType} can be used interchangeably with StorageCapabilityStorageAccountType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GRS** \\\n * **LRS** \\\n * **ZRS**\n */\nexport type StorageCapabilityStorageAccountType = string;\n\n/** Known values of {@link LongTermRetentionPolicyName} that the service accepts. */\nexport enum KnownLongTermRetentionPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for LongTermRetentionPolicyName. \\\n * {@link KnownLongTermRetentionPolicyName} can be used interchangeably with LongTermRetentionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type LongTermRetentionPolicyName = string;\n\n/** Known values of {@link DayOfWeek} that the service accepts. */\nexport enum KnownDayOfWeek {\n  /** Sunday */\n  Sunday = \"Sunday\",\n  /** Monday */\n  Monday = \"Monday\",\n  /** Tuesday */\n  Tuesday = \"Tuesday\",\n  /** Wednesday */\n  Wednesday = \"Wednesday\",\n  /** Thursday */\n  Thursday = \"Thursday\",\n  /** Friday */\n  Friday = \"Friday\",\n  /** Saturday */\n  Saturday = \"Saturday\"\n}\n\n/**\n * Defines values for DayOfWeek. \\\n * {@link KnownDayOfWeek} can be used interchangeably with DayOfWeek,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Sunday** \\\n * **Monday** \\\n * **Tuesday** \\\n * **Wednesday** \\\n * **Thursday** \\\n * **Friday** \\\n * **Saturday**\n */\nexport type DayOfWeek = string;\n\n/** Known values of {@link ManagedShortTermRetentionPolicyName} that the service accepts. */\nexport enum KnownManagedShortTermRetentionPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for ManagedShortTermRetentionPolicyName. \\\n * {@link KnownManagedShortTermRetentionPolicyName} can be used interchangeably with ManagedShortTermRetentionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ManagedShortTermRetentionPolicyName = string;\n\n/** Known values of {@link QueryTimeGrainType} that the service accepts. */\nexport enum KnownQueryTimeGrainType {\n  /** PT1H */\n  PT1H = \"PT1H\",\n  /** P1D */\n  P1D = \"P1D\"\n}\n\n/**\n * Defines values for QueryTimeGrainType. \\\n * {@link KnownQueryTimeGrainType} can be used interchangeably with QueryTimeGrainType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PT1H** \\\n * **P1D**\n */\nexport type QueryTimeGrainType = string;\n\n/** Known values of {@link QueryMetricUnitType} that the service accepts. */\nexport enum KnownQueryMetricUnitType {\n  /** Percentage */\n  Percentage = \"percentage\",\n  /** KB */\n  KB = \"KB\",\n  /** Microseconds */\n  Microseconds = \"microseconds\",\n  /** Count */\n  Count = \"count\"\n}\n\n/**\n * Defines values for QueryMetricUnitType. \\\n * {@link KnownQueryMetricUnitType} can be used interchangeably with QueryMetricUnitType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **percentage** \\\n * **KB** \\\n * **microseconds** \\\n * **count**\n */\nexport type QueryMetricUnitType = string;\n\n/** Known values of {@link RestoreDetailsName} that the service accepts. */\nexport enum KnownRestoreDetailsName {\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for RestoreDetailsName. \\\n * {@link KnownRestoreDetailsName} can be used interchangeably with RestoreDetailsName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type RestoreDetailsName = string;\n\n/** Known values of {@link ManagedDatabaseStatus} that the service accepts. */\nexport enum KnownManagedDatabaseStatus {\n  /** Online */\n  Online = \"Online\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** Shutdown */\n  Shutdown = \"Shutdown\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Inaccessible */\n  Inaccessible = \"Inaccessible\",\n  /** Restoring */\n  Restoring = \"Restoring\",\n  /** Updating */\n  Updating = \"Updating\"\n}\n\n/**\n * Defines values for ManagedDatabaseStatus. \\\n * {@link KnownManagedDatabaseStatus} can be used interchangeably with ManagedDatabaseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Online** \\\n * **Offline** \\\n * **Shutdown** \\\n * **Creating** \\\n * **Inaccessible** \\\n * **Restoring** \\\n * **Updating**\n */\nexport type ManagedDatabaseStatus = string;\n\n/** Known values of {@link CatalogCollationType} that the service accepts. */\nexport enum KnownCatalogCollationType {\n  /** DatabaseDefault */\n  DatabaseDefault = \"DATABASE_DEFAULT\",\n  /** SQLLatin1GeneralCP1CIAS */\n  SQLLatin1GeneralCP1CIAS = \"SQL_Latin1_General_CP1_CI_AS\"\n}\n\n/**\n * Defines values for CatalogCollationType. \\\n * {@link KnownCatalogCollationType} can be used interchangeably with CatalogCollationType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **DATABASE_DEFAULT** \\\n * **SQL_Latin1_General_CP1_CI_AS**\n */\nexport type CatalogCollationType = string;\n\n/** Known values of {@link ManagedDatabaseCreateMode} that the service accepts. */\nexport enum KnownManagedDatabaseCreateMode {\n  /** Default */\n  Default = \"Default\",\n  /** RestoreExternalBackup */\n  RestoreExternalBackup = \"RestoreExternalBackup\",\n  /** PointInTimeRestore */\n  PointInTimeRestore = \"PointInTimeRestore\",\n  /** Recovery */\n  Recovery = \"Recovery\",\n  /** RestoreLongTermRetentionBackup */\n  RestoreLongTermRetentionBackup = \"RestoreLongTermRetentionBackup\"\n}\n\n/**\n * Defines values for ManagedDatabaseCreateMode. \\\n * {@link KnownManagedDatabaseCreateMode} can be used interchangeably with ManagedDatabaseCreateMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **RestoreExternalBackup** \\\n * **PointInTimeRestore** \\\n * **Recovery** \\\n * **RestoreLongTermRetentionBackup**\n */\nexport type ManagedDatabaseCreateMode = string;\n\n/** Known values of {@link TransparentDataEncryptionName} that the service accepts. */\nexport enum KnownTransparentDataEncryptionName {\n  /** Current */\n  Current = \"current\"\n}\n\n/**\n * Defines values for TransparentDataEncryptionName. \\\n * {@link KnownTransparentDataEncryptionName} can be used interchangeably with TransparentDataEncryptionName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type TransparentDataEncryptionName = string;\n\n/** Known values of {@link ManagedInstanceAdministratorType} that the service accepts. */\nexport enum KnownManagedInstanceAdministratorType {\n  /** ActiveDirectory */\n  ActiveDirectory = \"ActiveDirectory\"\n}\n\n/**\n * Defines values for ManagedInstanceAdministratorType. \\\n * {@link KnownManagedInstanceAdministratorType} can be used interchangeably with ManagedInstanceAdministratorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActiveDirectory**\n */\nexport type ManagedInstanceAdministratorType = string;\n\n/** Known values of {@link AdministratorName} that the service accepts. */\nexport enum KnownAdministratorName {\n  /** ActiveDirectory */\n  ActiveDirectory = \"ActiveDirectory\"\n}\n\n/**\n * Defines values for AdministratorName. \\\n * {@link KnownAdministratorName} can be used interchangeably with AdministratorName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActiveDirectory**\n */\nexport type AdministratorName = string;\n\n/** Known values of {@link AuthenticationName} that the service accepts. */\nexport enum KnownAuthenticationName {\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for AuthenticationName. \\\n * {@link KnownAuthenticationName} can be used interchangeably with AuthenticationName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default**\n */\nexport type AuthenticationName = string;\n\n/** Known values of {@link ManagedInstanceLongTermRetentionPolicyName} that the service accepts. */\nexport enum KnownManagedInstanceLongTermRetentionPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for ManagedInstanceLongTermRetentionPolicyName. \\\n * {@link KnownManagedInstanceLongTermRetentionPolicyName} can be used interchangeably with ManagedInstanceLongTermRetentionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ManagedInstanceLongTermRetentionPolicyName = string;\n\n/** Known values of {@link ManagementOperationState} that the service accepts. */\nexport enum KnownManagementOperationState {\n  /** Pending */\n  Pending = \"Pending\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** CancelInProgress */\n  CancelInProgress = \"CancelInProgress\",\n  /** Cancelled */\n  Cancelled = \"Cancelled\"\n}\n\n/**\n * Defines values for ManagementOperationState. \\\n * {@link KnownManagementOperationState} can be used interchangeably with ManagementOperationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Pending** \\\n * **InProgress** \\\n * **Succeeded** \\\n * **Failed** \\\n * **CancelInProgress** \\\n * **Cancelled**\n */\nexport type ManagementOperationState = string;\n\n/** Known values of {@link UpsertManagedServerOperationStepStatus} that the service accepts. */\nexport enum KnownUpsertManagedServerOperationStepStatus {\n  /** NotStarted */\n  NotStarted = \"NotStarted\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** SlowedDown */\n  SlowedDown = \"SlowedDown\",\n  /** Completed */\n  Completed = \"Completed\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Canceled */\n  Canceled = \"Canceled\"\n}\n\n/**\n * Defines values for UpsertManagedServerOperationStepStatus. \\\n * {@link KnownUpsertManagedServerOperationStepStatus} can be used interchangeably with UpsertManagedServerOperationStepStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotStarted** \\\n * **InProgress** \\\n * **SlowedDown** \\\n * **Completed** \\\n * **Failed** \\\n * **Canceled**\n */\nexport type UpsertManagedServerOperationStepStatus = string;\n\n/** Known values of {@link OperationOrigin} that the service accepts. */\nexport enum KnownOperationOrigin {\n  /** User */\n  User = \"user\",\n  /** System */\n  System = \"system\"\n}\n\n/**\n * Defines values for OperationOrigin. \\\n * {@link KnownOperationOrigin} can be used interchangeably with OperationOrigin,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **user** \\\n * **system**\n */\nexport type OperationOrigin = string;\n\n/** Known values of {@link PrivateLinkServiceConnectionStateStatus} that the service accepts. */\nexport enum KnownPrivateLinkServiceConnectionStateStatus {\n  /** Approved */\n  Approved = \"Approved\",\n  /** Pending */\n  Pending = \"Pending\",\n  /** Rejected */\n  Rejected = \"Rejected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for PrivateLinkServiceConnectionStateStatus. \\\n * {@link KnownPrivateLinkServiceConnectionStateStatus} can be used interchangeably with PrivateLinkServiceConnectionStateStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Approved** \\\n * **Pending** \\\n * **Rejected** \\\n * **Disconnected**\n */\nexport type PrivateLinkServiceConnectionStateStatus = string;\n\n/** Known values of {@link PrivateLinkServiceConnectionStateActionsRequire} that the service accepts. */\nexport enum KnownPrivateLinkServiceConnectionStateActionsRequire {\n  /** None */\n  None = \"None\"\n}\n\n/**\n * Defines values for PrivateLinkServiceConnectionStateActionsRequire. \\\n * {@link KnownPrivateLinkServiceConnectionStateActionsRequire} can be used interchangeably with PrivateLinkServiceConnectionStateActionsRequire,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None**\n */\nexport type PrivateLinkServiceConnectionStateActionsRequire = string;\n\n/** Known values of {@link PrivateEndpointProvisioningState} that the service accepts. */\nexport enum KnownPrivateEndpointProvisioningState {\n  /** Approving */\n  Approving = \"Approving\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Dropping */\n  Dropping = \"Dropping\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Rejecting */\n  Rejecting = \"Rejecting\"\n}\n\n/**\n * Defines values for PrivateEndpointProvisioningState. \\\n * {@link KnownPrivateEndpointProvisioningState} can be used interchangeably with PrivateEndpointProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Approving** \\\n * **Ready** \\\n * **Dropping** \\\n * **Failed** \\\n * **Rejecting**\n */\nexport type PrivateEndpointProvisioningState = string;\n\n/** Known values of {@link AdministratorType} that the service accepts. */\nexport enum KnownAdministratorType {\n  /** ActiveDirectory */\n  ActiveDirectory = \"ActiveDirectory\"\n}\n\n/**\n * Defines values for AdministratorType. \\\n * {@link KnownAdministratorType} can be used interchangeably with AdministratorType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **ActiveDirectory**\n */\nexport type AdministratorType = string;\n\n/** Known values of {@link ServerTrustGroupPropertiesTrustScopesItem} that the service accepts. */\nexport enum KnownServerTrustGroupPropertiesTrustScopesItem {\n  /** GlobalTransactions */\n  GlobalTransactions = \"GlobalTransactions\",\n  /** ServiceBroker */\n  ServiceBroker = \"ServiceBroker\"\n}\n\n/**\n * Defines values for ServerTrustGroupPropertiesTrustScopesItem. \\\n * {@link KnownServerTrustGroupPropertiesTrustScopesItem} can be used interchangeably with ServerTrustGroupPropertiesTrustScopesItem,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GlobalTransactions** \\\n * **ServiceBroker**\n */\nexport type ServerTrustGroupPropertiesTrustScopesItem = string;\n\n/** Known values of {@link SqlAgentConfigurationPropertiesState} that the service accepts. */\nexport enum KnownSqlAgentConfigurationPropertiesState {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for SqlAgentConfigurationPropertiesState. \\\n * {@link KnownSqlAgentConfigurationPropertiesState} can be used interchangeably with SqlAgentConfigurationPropertiesState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type SqlAgentConfigurationPropertiesState = string;\n\n/** Known values of {@link SyncAgentState} that the service accepts. */\nexport enum KnownSyncAgentState {\n  /** Online */\n  Online = \"Online\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** NeverConnected */\n  NeverConnected = \"NeverConnected\"\n}\n\n/**\n * Defines values for SyncAgentState. \\\n * {@link KnownSyncAgentState} can be used interchangeably with SyncAgentState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Online** \\\n * **Offline** \\\n * **NeverConnected**\n */\nexport type SyncAgentState = string;\n\n/** Known values of {@link SyncMemberDbType} that the service accepts. */\nexport enum KnownSyncMemberDbType {\n  /** AzureSqlDatabase */\n  AzureSqlDatabase = \"AzureSqlDatabase\",\n  /** SqlServerDatabase */\n  SqlServerDatabase = \"SqlServerDatabase\"\n}\n\n/**\n * Defines values for SyncMemberDbType. \\\n * {@link KnownSyncMemberDbType} can be used interchangeably with SyncMemberDbType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AzureSqlDatabase** \\\n * **SqlServerDatabase**\n */\nexport type SyncMemberDbType = string;\n\n/** Known values of {@link Enum60} that the service accepts. */\nexport enum KnownEnum60 {\n  /** All */\n  All = \"All\",\n  /** Error */\n  Error = \"Error\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Success */\n  Success = \"Success\"\n}\n\n/**\n * Defines values for Enum60. \\\n * {@link KnownEnum60} can be used interchangeably with Enum60,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All** \\\n * **Error** \\\n * **Warning** \\\n * **Success**\n */\nexport type Enum60 = string;\n\n/** Known values of {@link SyncGroupLogType} that the service accepts. */\nexport enum KnownSyncGroupLogType {\n  /** All */\n  All = \"All\",\n  /** Error */\n  Error = \"Error\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Success */\n  Success = \"Success\"\n}\n\n/**\n * Defines values for SyncGroupLogType. \\\n * {@link KnownSyncGroupLogType} can be used interchangeably with SyncGroupLogType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All** \\\n * **Error** \\\n * **Warning** \\\n * **Success**\n */\nexport type SyncGroupLogType = string;\n\n/** Known values of {@link SyncConflictResolutionPolicy} that the service accepts. */\nexport enum KnownSyncConflictResolutionPolicy {\n  /** HubWin */\n  HubWin = \"HubWin\",\n  /** MemberWin */\n  MemberWin = \"MemberWin\"\n}\n\n/**\n * Defines values for SyncConflictResolutionPolicy. \\\n * {@link KnownSyncConflictResolutionPolicy} can be used interchangeably with SyncConflictResolutionPolicy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **HubWin** \\\n * **MemberWin**\n */\nexport type SyncConflictResolutionPolicy = string;\n\n/** Known values of {@link SyncGroupState} that the service accepts. */\nexport enum KnownSyncGroupState {\n  /** NotReady */\n  NotReady = \"NotReady\",\n  /** Error */\n  Error = \"Error\",\n  /** Warning */\n  Warning = \"Warning\",\n  /** Progressing */\n  Progressing = \"Progressing\",\n  /** Good */\n  Good = \"Good\"\n}\n\n/**\n * Defines values for SyncGroupState. \\\n * {@link KnownSyncGroupState} can be used interchangeably with SyncGroupState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **NotReady** \\\n * **Error** \\\n * **Warning** \\\n * **Progressing** \\\n * **Good**\n */\nexport type SyncGroupState = string;\n\n/** Known values of {@link SyncDirection} that the service accepts. */\nexport enum KnownSyncDirection {\n  /** Bidirectional */\n  Bidirectional = \"Bidirectional\",\n  /** OneWayMemberToHub */\n  OneWayMemberToHub = \"OneWayMemberToHub\",\n  /** OneWayHubToMember */\n  OneWayHubToMember = \"OneWayHubToMember\"\n}\n\n/**\n * Defines values for SyncDirection. \\\n * {@link KnownSyncDirection} can be used interchangeably with SyncDirection,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Bidirectional** \\\n * **OneWayMemberToHub** \\\n * **OneWayHubToMember**\n */\nexport type SyncDirection = string;\n\n/** Known values of {@link SyncMemberState} that the service accepts. */\nexport enum KnownSyncMemberState {\n  /** SyncInProgress */\n  SyncInProgress = \"SyncInProgress\",\n  /** SyncSucceeded */\n  SyncSucceeded = \"SyncSucceeded\",\n  /** SyncFailed */\n  SyncFailed = \"SyncFailed\",\n  /** DisabledTombstoneCleanup */\n  DisabledTombstoneCleanup = \"DisabledTombstoneCleanup\",\n  /** DisabledBackupRestore */\n  DisabledBackupRestore = \"DisabledBackupRestore\",\n  /** SyncSucceededWithWarnings */\n  SyncSucceededWithWarnings = \"SyncSucceededWithWarnings\",\n  /** SyncCancelling */\n  SyncCancelling = \"SyncCancelling\",\n  /** SyncCancelled */\n  SyncCancelled = \"SyncCancelled\",\n  /** UnProvisioned */\n  UnProvisioned = \"UnProvisioned\",\n  /** Provisioning */\n  Provisioning = \"Provisioning\",\n  /** Provisioned */\n  Provisioned = \"Provisioned\",\n  /** ProvisionFailed */\n  ProvisionFailed = \"ProvisionFailed\",\n  /** DeProvisioning */\n  DeProvisioning = \"DeProvisioning\",\n  /** DeProvisioned */\n  DeProvisioned = \"DeProvisioned\",\n  /** DeProvisionFailed */\n  DeProvisionFailed = \"DeProvisionFailed\",\n  /** Reprovisioning */\n  Reprovisioning = \"Reprovisioning\",\n  /** ReprovisionFailed */\n  ReprovisionFailed = \"ReprovisionFailed\",\n  /** UnReprovisioned */\n  UnReprovisioned = \"UnReprovisioned\"\n}\n\n/**\n * Defines values for SyncMemberState. \\\n * {@link KnownSyncMemberState} can be used interchangeably with SyncMemberState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SyncInProgress** \\\n * **SyncSucceeded** \\\n * **SyncFailed** \\\n * **DisabledTombstoneCleanup** \\\n * **DisabledBackupRestore** \\\n * **SyncSucceededWithWarnings** \\\n * **SyncCancelling** \\\n * **SyncCancelled** \\\n * **UnProvisioned** \\\n * **Provisioning** \\\n * **Provisioned** \\\n * **ProvisionFailed** \\\n * **DeProvisioning** \\\n * **DeProvisioned** \\\n * **DeProvisionFailed** \\\n * **Reprovisioning** \\\n * **ReprovisionFailed** \\\n * **UnReprovisioned**\n */\nexport type SyncMemberState = string;\n\n/** Known values of {@link DnsRefreshConfigurationPropertiesStatus} that the service accepts. */\nexport enum KnownDnsRefreshConfigurationPropertiesStatus {\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\"\n}\n\n/**\n * Defines values for DnsRefreshConfigurationPropertiesStatus. \\\n * {@link KnownDnsRefreshConfigurationPropertiesStatus} can be used interchangeably with DnsRefreshConfigurationPropertiesStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Succeeded** \\\n * **Failed**\n */\nexport type DnsRefreshConfigurationPropertiesStatus = string;\n\n/** Known values of {@link VirtualNetworkRuleState} that the service accepts. */\nexport enum KnownVirtualNetworkRuleState {\n  /** Initializing */\n  Initializing = \"Initializing\",\n  /** InProgress */\n  InProgress = \"InProgress\",\n  /** Ready */\n  Ready = \"Ready\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Unknown */\n  Unknown = \"Unknown\"\n}\n\n/**\n * Defines values for VirtualNetworkRuleState. \\\n * {@link KnownVirtualNetworkRuleState} can be used interchangeably with VirtualNetworkRuleState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Initializing** \\\n * **InProgress** \\\n * **Ready** \\\n * **Failed** \\\n * **Deleting** \\\n * **Unknown**\n */\nexport type VirtualNetworkRuleState = string;\n\n/** Known values of {@link ShortTermRetentionPolicyName} that the service accepts. */\nexport enum KnownShortTermRetentionPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for ShortTermRetentionPolicyName. \\\n * {@link KnownShortTermRetentionPolicyName} can be used interchangeably with ShortTermRetentionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ShortTermRetentionPolicyName = string;\n\n/** Known values of {@link DiffBackupIntervalInHours} that the service accepts. */\nexport enum KnownDiffBackupIntervalInHours {\n  /** Twelve */\n  Twelve = 12,\n  /** TwentyFour */\n  TwentyFour = 24\n}\n\n/**\n * Defines values for DiffBackupIntervalInHours. \\\n * {@link KnownDiffBackupIntervalInHours} can be used interchangeably with DiffBackupIntervalInHours,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **12** \\\n * **24**\n */\nexport type DiffBackupIntervalInHours = number;\n\n/** Known values of {@link OperationMode} that the service accepts. */\nexport enum KnownOperationMode {\n  /** PolybaseImport */\n  PolybaseImport = \"PolybaseImport\"\n}\n\n/**\n * Defines values for OperationMode. \\\n * {@link KnownOperationMode} can be used interchangeably with OperationMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PolybaseImport**\n */\nexport type OperationMode = string;\n\n/** Known values of {@link StorageKeyType} that the service accepts. */\nexport enum KnownStorageKeyType {\n  /** SharedAccessKey */\n  SharedAccessKey = \"SharedAccessKey\",\n  /** StorageAccessKey */\n  StorageAccessKey = \"StorageAccessKey\"\n}\n\n/**\n * Defines values for StorageKeyType. \\\n * {@link KnownStorageKeyType} can be used interchangeably with StorageKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **SharedAccessKey** \\\n * **StorageAccessKey**\n */\nexport type StorageKeyType = string;\n\n/** Known values of {@link LedgerDigestUploadsName} that the service accepts. */\nexport enum KnownLedgerDigestUploadsName {\n  /** Current */\n  Current = \"current\"\n}\n\n/**\n * Defines values for LedgerDigestUploadsName. \\\n * {@link KnownLedgerDigestUploadsName} can be used interchangeably with LedgerDigestUploadsName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **current**\n */\nexport type LedgerDigestUploadsName = string;\n\n/** Known values of {@link ReplicationState} that the service accepts. */\nexport enum KnownReplicationState {\n  /** Pending */\n  Pending = \"PENDING\",\n  /** Seeding */\n  Seeding = \"SEEDING\",\n  /** CatchUP */\n  CatchUP = \"CATCH_UP\",\n  /** Suspended */\n  Suspended = \"SUSPENDED\"\n}\n\n/**\n * Defines values for ReplicationState. \\\n * {@link KnownReplicationState} can be used interchangeably with ReplicationState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PENDING** \\\n * **SEEDING** \\\n * **CATCH_UP** \\\n * **SUSPENDED**\n */\nexport type ReplicationState = string;\n\n/** Known values of {@link ReplicationLinkType} that the service accepts. */\nexport enum KnownReplicationLinkType {\n  /** GEO */\n  GEO = \"GEO\",\n  /** Named */\n  Named = \"NAMED\"\n}\n\n/**\n * Defines values for ReplicationLinkType. \\\n * {@link KnownReplicationLinkType} can be used interchangeably with ReplicationLinkType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **GEO** \\\n * **NAMED**\n */\nexport type ReplicationLinkType = string;\n\n/** Known values of {@link IdentityType} that the service accepts. */\nexport enum KnownIdentityType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\",\n  /** SystemAssignedUserAssigned */\n  SystemAssignedUserAssigned = \"SystemAssigned,UserAssigned\"\n}\n\n/**\n * Defines values for IdentityType. \\\n * {@link KnownIdentityType} can be used interchangeably with IdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned** \\\n * **UserAssigned** \\\n * **SystemAssigned,UserAssigned**\n */\nexport type IdentityType = string;\n\n/** Known values of {@link ServerNetworkAccessFlag} that the service accepts. */\nexport enum KnownServerNetworkAccessFlag {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for ServerNetworkAccessFlag. \\\n * {@link KnownServerNetworkAccessFlag} can be used interchangeably with ServerNetworkAccessFlag,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type ServerNetworkAccessFlag = string;\n\n/** Known values of {@link ServerWorkspaceFeature} that the service accepts. */\nexport enum KnownServerWorkspaceFeature {\n  /** Connected */\n  Connected = \"Connected\",\n  /** Disconnected */\n  Disconnected = \"Disconnected\"\n}\n\n/**\n * Defines values for ServerWorkspaceFeature. \\\n * {@link KnownServerWorkspaceFeature} can be used interchangeably with ServerWorkspaceFeature,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Connected** \\\n * **Disconnected**\n */\nexport type ServerWorkspaceFeature = string;\n\n/** Known values of {@link PrincipalType} that the service accepts. */\nexport enum KnownPrincipalType {\n  /** User */\n  User = \"User\",\n  /** Group */\n  Group = \"Group\",\n  /** Application */\n  Application = \"Application\"\n}\n\n/**\n * Defines values for PrincipalType. \\\n * {@link KnownPrincipalType} can be used interchangeably with PrincipalType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **User** \\\n * **Group** \\\n * **Application**\n */\nexport type PrincipalType = string;\n\n/** Known values of {@link DatabaseIdentityType} that the service accepts. */\nexport enum KnownDatabaseIdentityType {\n  /** None */\n  None = \"None\",\n  /** UserAssigned */\n  UserAssigned = \"UserAssigned\"\n}\n\n/**\n * Defines values for DatabaseIdentityType. \\\n * {@link KnownDatabaseIdentityType} can be used interchangeably with DatabaseIdentityType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **UserAssigned**\n */\nexport type DatabaseIdentityType = string;\n\n/** Known values of {@link CreateMode} that the service accepts. */\nexport enum KnownCreateMode {\n  /** Default */\n  Default = \"Default\",\n  /** Copy */\n  Copy = \"Copy\",\n  /** Secondary */\n  Secondary = \"Secondary\",\n  /** PointInTimeRestore */\n  PointInTimeRestore = \"PointInTimeRestore\",\n  /** Restore */\n  Restore = \"Restore\",\n  /** Recovery */\n  Recovery = \"Recovery\",\n  /** RestoreExternalBackup */\n  RestoreExternalBackup = \"RestoreExternalBackup\",\n  /** RestoreExternalBackupSecondary */\n  RestoreExternalBackupSecondary = \"RestoreExternalBackupSecondary\",\n  /** RestoreLongTermRetentionBackup */\n  RestoreLongTermRetentionBackup = \"RestoreLongTermRetentionBackup\",\n  /** OnlineSecondary */\n  OnlineSecondary = \"OnlineSecondary\"\n}\n\n/**\n * Defines values for CreateMode. \\\n * {@link KnownCreateMode} can be used interchangeably with CreateMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **Copy** \\\n * **Secondary** \\\n * **PointInTimeRestore** \\\n * **Restore** \\\n * **Recovery** \\\n * **RestoreExternalBackup** \\\n * **RestoreExternalBackupSecondary** \\\n * **RestoreLongTermRetentionBackup** \\\n * **OnlineSecondary**\n */\nexport type CreateMode = string;\n\n/** Known values of {@link SampleName} that the service accepts. */\nexport enum KnownSampleName {\n  /** AdventureWorksLT */\n  AdventureWorksLT = \"AdventureWorksLT\",\n  /** WideWorldImportersStd */\n  WideWorldImportersStd = \"WideWorldImportersStd\",\n  /** WideWorldImportersFull */\n  WideWorldImportersFull = \"WideWorldImportersFull\"\n}\n\n/**\n * Defines values for SampleName. \\\n * {@link KnownSampleName} can be used interchangeably with SampleName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **AdventureWorksLT** \\\n * **WideWorldImportersStd** \\\n * **WideWorldImportersFull**\n */\nexport type SampleName = string;\n\n/** Known values of {@link DatabaseStatus} that the service accepts. */\nexport enum KnownDatabaseStatus {\n  /** Online */\n  Online = \"Online\",\n  /** Restoring */\n  Restoring = \"Restoring\",\n  /** RecoveryPending */\n  RecoveryPending = \"RecoveryPending\",\n  /** Recovering */\n  Recovering = \"Recovering\",\n  /** Suspect */\n  Suspect = \"Suspect\",\n  /** Offline */\n  Offline = \"Offline\",\n  /** Standby */\n  Standby = \"Standby\",\n  /** Shutdown */\n  Shutdown = \"Shutdown\",\n  /** EmergencyMode */\n  EmergencyMode = \"EmergencyMode\",\n  /** AutoClosed */\n  AutoClosed = \"AutoClosed\",\n  /** Copying */\n  Copying = \"Copying\",\n  /** Creating */\n  Creating = \"Creating\",\n  /** Inaccessible */\n  Inaccessible = \"Inaccessible\",\n  /** OfflineSecondary */\n  OfflineSecondary = \"OfflineSecondary\",\n  /** Pausing */\n  Pausing = \"Pausing\",\n  /** Paused */\n  Paused = \"Paused\",\n  /** Resuming */\n  Resuming = \"Resuming\",\n  /** Scaling */\n  Scaling = \"Scaling\",\n  /** OfflineChangingDwPerformanceTiers */\n  OfflineChangingDwPerformanceTiers = \"OfflineChangingDwPerformanceTiers\",\n  /** OnlineChangingDwPerformanceTiers */\n  OnlineChangingDwPerformanceTiers = \"OnlineChangingDwPerformanceTiers\",\n  /** Disabled */\n  Disabled = \"Disabled\",\n  /** Stopping */\n  Stopping = \"Stopping\",\n  /** Stopped */\n  Stopped = \"Stopped\",\n  /** Starting */\n  Starting = \"Starting\"\n}\n\n/**\n * Defines values for DatabaseStatus. \\\n * {@link KnownDatabaseStatus} can be used interchangeably with DatabaseStatus,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Online** \\\n * **Restoring** \\\n * **RecoveryPending** \\\n * **Recovering** \\\n * **Suspect** \\\n * **Offline** \\\n * **Standby** \\\n * **Shutdown** \\\n * **EmergencyMode** \\\n * **AutoClosed** \\\n * **Copying** \\\n * **Creating** \\\n * **Inaccessible** \\\n * **OfflineSecondary** \\\n * **Pausing** \\\n * **Paused** \\\n * **Resuming** \\\n * **Scaling** \\\n * **OfflineChangingDwPerformanceTiers** \\\n * **OnlineChangingDwPerformanceTiers** \\\n * **Disabled** \\\n * **Stopping** \\\n * **Stopped** \\\n * **Starting**\n */\nexport type DatabaseStatus = string;\n\n/** Known values of {@link DatabaseLicenseType} that the service accepts. */\nexport enum KnownDatabaseLicenseType {\n  /** LicenseIncluded */\n  LicenseIncluded = \"LicenseIncluded\",\n  /** BasePrice */\n  BasePrice = \"BasePrice\"\n}\n\n/**\n * Defines values for DatabaseLicenseType. \\\n * {@link KnownDatabaseLicenseType} can be used interchangeably with DatabaseLicenseType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LicenseIncluded** \\\n * **BasePrice**\n */\nexport type DatabaseLicenseType = string;\n\n/** Known values of {@link DatabaseReadScale} that the service accepts. */\nexport enum KnownDatabaseReadScale {\n  /** Enabled */\n  Enabled = \"Enabled\",\n  /** Disabled */\n  Disabled = \"Disabled\"\n}\n\n/**\n * Defines values for DatabaseReadScale. \\\n * {@link KnownDatabaseReadScale} can be used interchangeably with DatabaseReadScale,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Enabled** \\\n * **Disabled**\n */\nexport type DatabaseReadScale = string;\n\n/** Known values of {@link SecondaryType} that the service accepts. */\nexport enum KnownSecondaryType {\n  /** Geo */\n  Geo = \"Geo\",\n  /** Named */\n  Named = \"Named\"\n}\n\n/**\n * Defines values for SecondaryType. \\\n * {@link KnownSecondaryType} can be used interchangeably with SecondaryType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Geo** \\\n * **Named**\n */\nexport type SecondaryType = string;\n\n/** Known values of {@link BackupStorageRedundancy} that the service accepts. */\nexport enum KnownBackupStorageRedundancy {\n  /** Geo */\n  Geo = \"Geo\",\n  /** Local */\n  Local = \"Local\",\n  /** Zone */\n  Zone = \"Zone\",\n  /** GeoZone */\n  GeoZone = \"GeoZone\"\n}\n\n/**\n * Defines values for BackupStorageRedundancy. \\\n * {@link KnownBackupStorageRedundancy} can be used interchangeably with BackupStorageRedundancy,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Geo** \\\n * **Local** \\\n * **Zone** \\\n * **GeoZone**\n */\nexport type BackupStorageRedundancy = string;\n\n/** Known values of {@link ReplicaType} that the service accepts. */\nexport enum KnownReplicaType {\n  /** Primary */\n  Primary = \"Primary\",\n  /** ReadableSecondary */\n  ReadableSecondary = \"ReadableSecondary\"\n}\n\n/**\n * Defines values for ReplicaType. \\\n * {@link KnownReplicaType} can be used interchangeably with ReplicaType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Primary** \\\n * **ReadableSecondary**\n */\nexport type ReplicaType = string;\n\n/** Known values of {@link DatabaseState} that the service accepts. */\nexport enum KnownDatabaseState {\n  /** All */\n  All = \"All\",\n  /** Live */\n  Live = \"Live\",\n  /** Deleted */\n  Deleted = \"Deleted\"\n}\n\n/**\n * Defines values for DatabaseState. \\\n * {@link KnownDatabaseState} can be used interchangeably with DatabaseState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **All** \\\n * **Live** \\\n * **Deleted**\n */\nexport type DatabaseState = string;\n\n/** Known values of {@link ManagedInstancePropertiesProvisioningState} that the service accepts. */\nexport enum KnownManagedInstancePropertiesProvisioningState {\n  /** Creating */\n  Creating = \"Creating\",\n  /** Deleting */\n  Deleting = \"Deleting\",\n  /** Updating */\n  Updating = \"Updating\",\n  /** Unknown */\n  Unknown = \"Unknown\",\n  /** Succeeded */\n  Succeeded = \"Succeeded\",\n  /** Failed */\n  Failed = \"Failed\",\n  /** Accepted */\n  Accepted = \"Accepted\",\n  /** Created */\n  Created = \"Created\",\n  /** Deleted */\n  Deleted = \"Deleted\",\n  /** Unrecognized */\n  Unrecognized = \"Unrecognized\",\n  /** Running */\n  Running = \"Running\",\n  /** Canceled */\n  Canceled = \"Canceled\",\n  /** NotSpecified */\n  NotSpecified = \"NotSpecified\",\n  /** Registering */\n  Registering = \"Registering\",\n  /** TimedOut */\n  TimedOut = \"TimedOut\"\n}\n\n/**\n * Defines values for ManagedInstancePropertiesProvisioningState. \\\n * {@link KnownManagedInstancePropertiesProvisioningState} can be used interchangeably with ManagedInstancePropertiesProvisioningState,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Creating** \\\n * **Deleting** \\\n * **Updating** \\\n * **Unknown** \\\n * **Succeeded** \\\n * **Failed** \\\n * **Accepted** \\\n * **Created** \\\n * **Deleted** \\\n * **Unrecognized** \\\n * **Running** \\\n * **Canceled** \\\n * **NotSpecified** \\\n * **Registering** \\\n * **TimedOut**\n */\nexport type ManagedInstancePropertiesProvisioningState = string;\n\n/** Known values of {@link ManagedServerCreateMode} that the service accepts. */\nexport enum KnownManagedServerCreateMode {\n  /** Default */\n  Default = \"Default\",\n  /** PointInTimeRestore */\n  PointInTimeRestore = \"PointInTimeRestore\"\n}\n\n/**\n * Defines values for ManagedServerCreateMode. \\\n * {@link KnownManagedServerCreateMode} can be used interchangeably with ManagedServerCreateMode,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **PointInTimeRestore**\n */\nexport type ManagedServerCreateMode = string;\n\n/** Known values of {@link ManagedInstanceLicenseType} that the service accepts. */\nexport enum KnownManagedInstanceLicenseType {\n  /** LicenseIncluded */\n  LicenseIncluded = \"LicenseIncluded\",\n  /** BasePrice */\n  BasePrice = \"BasePrice\"\n}\n\n/**\n * Defines values for ManagedInstanceLicenseType. \\\n * {@link KnownManagedInstanceLicenseType} can be used interchangeably with ManagedInstanceLicenseType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **LicenseIncluded** \\\n * **BasePrice**\n */\nexport type ManagedInstanceLicenseType = string;\n\n/** Known values of {@link ManagedInstanceProxyOverride} that the service accepts. */\nexport enum KnownManagedInstanceProxyOverride {\n  /** Proxy */\n  Proxy = \"Proxy\",\n  /** Redirect */\n  Redirect = \"Redirect\",\n  /** Default */\n  Default = \"Default\"\n}\n\n/**\n * Defines values for ManagedInstanceProxyOverride. \\\n * {@link KnownManagedInstanceProxyOverride} can be used interchangeably with ManagedInstanceProxyOverride,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Proxy** \\\n * **Redirect** \\\n * **Default**\n */\nexport type ManagedInstanceProxyOverride = string;\n\n/** Known values of {@link ServicePrincipalType} that the service accepts. */\nexport enum KnownServicePrincipalType {\n  /** None */\n  None = \"None\",\n  /** SystemAssigned */\n  SystemAssigned = \"SystemAssigned\"\n}\n\n/**\n * Defines values for ServicePrincipalType. \\\n * {@link KnownServicePrincipalType} can be used interchangeably with ServicePrincipalType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **None** \\\n * **SystemAssigned**\n */\nexport type ServicePrincipalType = string;\n\n/** Known values of {@link AggregationFunctionType} that the service accepts. */\nexport enum KnownAggregationFunctionType {\n  /** Avg */\n  Avg = \"avg\",\n  /** Min */\n  Min = \"min\",\n  /** Max */\n  Max = \"max\",\n  /** Stdev */\n  Stdev = \"stdev\",\n  /** Sum */\n  Sum = \"sum\"\n}\n\n/**\n * Defines values for AggregationFunctionType. \\\n * {@link KnownAggregationFunctionType} can be used interchangeably with AggregationFunctionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **avg** \\\n * **min** \\\n * **max** \\\n * **stdev** \\\n * **sum**\n */\nexport type AggregationFunctionType = string;\n\n/** Known values of {@link MetricType} that the service accepts. */\nexport enum KnownMetricType {\n  /** Cpu */\n  Cpu = \"cpu\",\n  /** Io */\n  Io = \"io\",\n  /** LogIo */\n  LogIo = \"logIo\",\n  /** Duration */\n  Duration = \"duration\",\n  /** Dtu */\n  Dtu = \"dtu\"\n}\n\n/**\n * Defines values for MetricType. \\\n * {@link KnownMetricType} can be used interchangeably with MetricType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **cpu** \\\n * **io** \\\n * **logIo** \\\n * **duration** \\\n * **dtu**\n */\nexport type MetricType = string;\n\n/** Known values of {@link ConnectionPolicyName} that the service accepts. */\nexport enum KnownConnectionPolicyName {\n  /** Default */\n  Default = \"default\"\n}\n\n/**\n * Defines values for ConnectionPolicyName. \\\n * {@link KnownConnectionPolicyName} can be used interchangeably with ConnectionPolicyName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **default**\n */\nexport type ConnectionPolicyName = string;\n\n/** Known values of {@link ServerConnectionType} that the service accepts. */\nexport enum KnownServerConnectionType {\n  /** Default */\n  Default = \"Default\",\n  /** Redirect */\n  Redirect = \"Redirect\",\n  /** Proxy */\n  Proxy = \"Proxy\"\n}\n\n/**\n * Defines values for ServerConnectionType. \\\n * {@link KnownServerConnectionType} can be used interchangeably with ServerConnectionType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Default** \\\n * **Redirect** \\\n * **Proxy**\n */\nexport type ServerConnectionType = string;\n\n/** Known values of {@link ServiceObjectiveName} that the service accepts. */\nexport enum KnownServiceObjectiveName {\n  /** System */\n  System = \"System\",\n  /** System0 */\n  System0 = \"System0\",\n  /** System1 */\n  System1 = \"System1\",\n  /** System2 */\n  System2 = \"System2\",\n  /** System3 */\n  System3 = \"System3\",\n  /** System4 */\n  System4 = \"System4\",\n  /** System2L */\n  System2L = \"System2L\",\n  /** System3L */\n  System3L = \"System3L\",\n  /** System4L */\n  System4L = \"System4L\",\n  /** Free */\n  Free = \"Free\",\n  /** Basic */\n  Basic = \"Basic\",\n  /** S0 */\n  S0 = \"S0\",\n  /** S1 */\n  S1 = \"S1\",\n  /** S2 */\n  S2 = \"S2\",\n  /** S3 */\n  S3 = \"S3\",\n  /** S4 */\n  S4 = \"S4\",\n  /** S6 */\n  S6 = \"S6\",\n  /** S7 */\n  S7 = \"S7\",\n  /** S9 */\n  S9 = \"S9\",\n  /** S12 */\n  S12 = \"S12\",\n  /** P1 */\n  P1 = \"P1\",\n  /** P2 */\n  P2 = \"P2\",\n  /** P3 */\n  P3 = \"P3\",\n  /** P4 */\n  P4 = \"P4\",\n  /** P6 */\n  P6 = \"P6\",\n  /** P11 */\n  P11 = \"P11\",\n  /** P15 */\n  P15 = \"P15\",\n  /** PRS1 */\n  PRS1 = \"PRS1\",\n  /** PRS2 */\n  PRS2 = \"PRS2\",\n  /** PRS4 */\n  PRS4 = \"PRS4\",\n  /** PRS6 */\n  PRS6 = \"PRS6\",\n  /** DW100 */\n  DW100 = \"DW100\",\n  /** DW200 */\n  DW200 = \"DW200\",\n  /** DW300 */\n  DW300 = \"DW300\",\n  /** DW400 */\n  DW400 = \"DW400\",\n  /** DW500 */\n  DW500 = \"DW500\",\n  /** DW600 */\n  DW600 = \"DW600\",\n  /** DW1000 */\n  DW1000 = \"DW1000\",\n  /** DW1200 */\n  DW1200 = \"DW1200\",\n  /** DW1000C */\n  DW1000C = \"DW1000c\",\n  /** DW1500 */\n  DW1500 = \"DW1500\",\n  /** DW1500C */\n  DW1500C = \"DW1500c\",\n  /** DW2000 */\n  DW2000 = \"DW2000\",\n  /** DW2000C */\n  DW2000C = \"DW2000c\",\n  /** DW3000 */\n  DW3000 = \"DW3000\",\n  /** DW2500C */\n  DW2500C = \"DW2500c\",\n  /** DW3000C */\n  DW3000C = \"DW3000c\",\n  /** DW6000 */\n  DW6000 = \"DW6000\",\n  /** DW5000C */\n  DW5000C = \"DW5000c\",\n  /** DW6000C */\n  DW6000C = \"DW6000c\",\n  /** DW7500C */\n  DW7500C = \"DW7500c\",\n  /** DW10000C */\n  DW10000C = \"DW10000c\",\n  /** DW15000C */\n  DW15000C = \"DW15000c\",\n  /** DW30000C */\n  DW30000C = \"DW30000c\",\n  /** DS100 */\n  DS100 = \"DS100\",\n  /** DS200 */\n  DS200 = \"DS200\",\n  /** DS300 */\n  DS300 = \"DS300\",\n  /** DS400 */\n  DS400 = \"DS400\",\n  /** DS500 */\n  DS500 = \"DS500\",\n  /** DS600 */\n  DS600 = \"DS600\",\n  /** DS1000 */\n  DS1000 = \"DS1000\",\n  /** DS1200 */\n  DS1200 = \"DS1200\",\n  /** DS1500 */\n  DS1500 = \"DS1500\",\n  /** DS2000 */\n  DS2000 = \"DS2000\",\n  /** ElasticPool */\n  ElasticPool = \"ElasticPool\"\n}\n\n/**\n * Defines values for ServiceObjectiveName. \\\n * {@link KnownServiceObjectiveName} can be used interchangeably with ServiceObjectiveName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **System** \\\n * **System0** \\\n * **System1** \\\n * **System2** \\\n * **System3** \\\n * **System4** \\\n * **System2L** \\\n * **System3L** \\\n * **System4L** \\\n * **Free** \\\n * **Basic** \\\n * **S0** \\\n * **S1** \\\n * **S2** \\\n * **S3** \\\n * **S4** \\\n * **S6** \\\n * **S7** \\\n * **S9** \\\n * **S12** \\\n * **P1** \\\n * **P2** \\\n * **P3** \\\n * **P4** \\\n * **P6** \\\n * **P11** \\\n * **P15** \\\n * **PRS1** \\\n * **PRS2** \\\n * **PRS4** \\\n * **PRS6** \\\n * **DW100** \\\n * **DW200** \\\n * **DW300** \\\n * **DW400** \\\n * **DW500** \\\n * **DW600** \\\n * **DW1000** \\\n * **DW1200** \\\n * **DW1000c** \\\n * **DW1500** \\\n * **DW1500c** \\\n * **DW2000** \\\n * **DW2000c** \\\n * **DW3000** \\\n * **DW2500c** \\\n * **DW3000c** \\\n * **DW6000** \\\n * **DW5000c** \\\n * **DW6000c** \\\n * **DW7500c** \\\n * **DW10000c** \\\n * **DW15000c** \\\n * **DW30000c** \\\n * **DS100** \\\n * **DS200** \\\n * **DS300** \\\n * **DS400** \\\n * **DS500** \\\n * **DS600** \\\n * **DS1000** \\\n * **DS1200** \\\n * **DS1500** \\\n * **DS2000** \\\n * **ElasticPool**\n */\nexport type ServiceObjectiveName = string;\n/** Defines values for DataMaskingState. */\nexport type DataMaskingState = \"Disabled\" | \"Enabled\";\n/** Defines values for DataMaskingRuleState. */\nexport type DataMaskingRuleState = \"Disabled\" | \"Enabled\";\n/** Defines values for DataMaskingFunction. */\nexport type DataMaskingFunction =\n  | \"Default\"\n  | \"CCN\"\n  | \"Email\"\n  | \"Number\"\n  | \"SSN\"\n  | \"Text\";\n/** Defines values for GeoBackupPolicyState. */\nexport type GeoBackupPolicyState = \"Disabled\" | \"Enabled\";\n/** Defines values for BlobAuditingPolicyState. */\nexport type BlobAuditingPolicyState = \"Enabled\" | \"Disabled\";\n/** Defines values for AdvisorStatus. */\nexport type AdvisorStatus =\n  | \"GA\"\n  | \"PublicPreview\"\n  | \"LimitedPublicPreview\"\n  | \"PrivatePreview\";\n/** Defines values for AutoExecuteStatus. */\nexport type AutoExecuteStatus = \"Enabled\" | \"Disabled\" | \"Default\";\n/** Defines values for AutoExecuteStatusInheritedFrom. */\nexport type AutoExecuteStatusInheritedFrom =\n  | \"Default\"\n  | \"Subscription\"\n  | \"Server\"\n  | \"ElasticPool\"\n  | \"Database\";\n/** Defines values for RecommendedActionInitiatedBy. */\nexport type RecommendedActionInitiatedBy = \"User\" | \"System\";\n/** Defines values for ImplementationMethod. */\nexport type ImplementationMethod = \"TSql\" | \"AzurePowerShell\";\n/** Defines values for IsRetryable. */\nexport type IsRetryable = \"Yes\" | \"No\";\n/** Defines values for AutomaticTuningMode. */\nexport type AutomaticTuningMode = \"Inherit\" | \"Custom\" | \"Auto\" | \"Unspecified\";\n/** Defines values for AutomaticTuningOptionModeDesired. */\nexport type AutomaticTuningOptionModeDesired = \"Off\" | \"On\" | \"Default\";\n/** Defines values for AutomaticTuningOptionModeActual. */\nexport type AutomaticTuningOptionModeActual = \"Off\" | \"On\";\n/** Defines values for AutomaticTuningDisabledReason. */\nexport type AutomaticTuningDisabledReason =\n  | \"Default\"\n  | \"Disabled\"\n  | \"AutoConfigured\"\n  | \"InheritedFromServer\"\n  | \"QueryStoreOff\"\n  | \"QueryStoreReadOnly\"\n  | \"NotSupported\";\n/** Defines values for SecurityAlertsPolicyState. */\nexport type SecurityAlertsPolicyState = \"Enabled\" | \"Disabled\";\n/** Defines values for VulnerabilityAssessmentPolicyBaselineName. */\nexport type VulnerabilityAssessmentPolicyBaselineName = \"master\" | \"default\";\n/** Defines values for JobScheduleType. */\nexport type JobScheduleType = \"Once\" | \"Recurring\";\n/** Defines values for JobTargetGroupMembershipType. */\nexport type JobTargetGroupMembershipType = \"Include\" | \"Exclude\";\n/** Defines values for CapabilityStatus. */\nexport type CapabilityStatus = \"Visible\" | \"Available\" | \"Default\" | \"Disabled\";\n/** Defines values for SecurityAlertPolicyState. */\nexport type SecurityAlertPolicyState = \"New\" | \"Enabled\" | \"Disabled\";\n/** Defines values for SecurityEventType. */\nexport type SecurityEventType =\n  | \"Undefined\"\n  | \"SqlInjectionVulnerability\"\n  | \"SqlInjectionExploit\";\n/** Defines values for SensitivityLabelSource. */\nexport type SensitivityLabelSource = \"current\" | \"recommended\";\n/** Defines values for SensitivityLabelRank. */\nexport type SensitivityLabelRank =\n  | \"None\"\n  | \"Low\"\n  | \"Medium\"\n  | \"High\"\n  | \"Critical\";\n/** Defines values for SensitivityLabelUpdateKind. */\nexport type SensitivityLabelUpdateKind = \"set\" | \"remove\";\n/** Defines values for RecommendedSensitivityLabelUpdateKind. */\nexport type RecommendedSensitivityLabelUpdateKind = \"enable\" | \"disable\";\n/** Defines values for TransparentDataEncryptionState. */\nexport type TransparentDataEncryptionState = \"Enabled\" | \"Disabled\";\n/** Defines values for RestorePointType. */\nexport type RestorePointType = \"CONTINUOUS\" | \"DISCRETE\";\n/** Defines values for AutomaticTuningServerMode. */\nexport type AutomaticTuningServerMode = \"Custom\" | \"Auto\" | \"Unspecified\";\n/** Defines values for AutomaticTuningServerReason. */\nexport type AutomaticTuningServerReason =\n  | \"Default\"\n  | \"Disabled\"\n  | \"AutoConfigured\";\n/** Defines values for LedgerDigestUploadsState. */\nexport type LedgerDigestUploadsState = \"Enabled\" | \"Disabled\";\n/** Defines values for ReplicationRole. */\nexport type ReplicationRole =\n  | \"Primary\"\n  | \"Secondary\"\n  | \"NonReadableSecondary\"\n  | \"Source\"\n  | \"Copy\";\n/** Defines values for CheckNameAvailabilityReason. */\nexport type CheckNameAvailabilityReason = \"Invalid\" | \"AlreadyExists\";\n\n/** Optional parameters. */\nexport interface RecoverableDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RecoverableDatabasesGetResponse = RecoverableDatabase;\n\n/** Optional parameters. */\nexport interface RecoverableDatabasesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type RecoverableDatabasesListByServerResponse = RecoverableDatabaseListResult;\n\n/** Optional parameters. */\nexport interface DataMaskingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataMaskingPoliciesCreateOrUpdateResponse = DataMaskingPolicy;\n\n/** Optional parameters. */\nexport interface DataMaskingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataMaskingPoliciesGetResponse = DataMaskingPolicy;\n\n/** Optional parameters. */\nexport interface DataMaskingRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DataMaskingRulesCreateOrUpdateResponse = DataMaskingRule;\n\n/** Optional parameters. */\nexport interface DataMaskingRulesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DataMaskingRulesListByDatabaseResponse = DataMaskingRuleListResult;\n\n/** Optional parameters. */\nexport interface GeoBackupPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type GeoBackupPoliciesCreateOrUpdateResponse = GeoBackupPolicy;\n\n/** Optional parameters. */\nexport interface GeoBackupPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type GeoBackupPoliciesGetResponse = GeoBackupPolicy;\n\n/** Optional parameters. */\nexport interface GeoBackupPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type GeoBackupPoliciesListByDatabaseResponse = GeoBackupPolicyListResult;\n\n/** Optional parameters. */\nexport interface DatabasesListMetricsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMetrics operation. */\nexport type DatabasesListMetricsResponse = MetricListResult;\n\n/** Optional parameters. */\nexport interface DatabasesListMetricDefinitionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMetricDefinitions operation. */\nexport type DatabasesListMetricDefinitionsResponse = MetricDefinitionListResult;\n\n/** Optional parameters. */\nexport interface DatabasesListByServerOptionalParams\n  extends coreClient.OperationOptions {\n  skipToken?: string;\n}\n\n/** Contains response data for the listByServer operation. */\nexport type DatabasesListByServerResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface DatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabasesGetResponse = Database;\n\n/** Optional parameters. */\nexport interface DatabasesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabasesCreateOrUpdateResponse = Database;\n\n/** Optional parameters. */\nexport interface DatabasesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DatabasesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type DatabasesUpdateResponse = Database;\n\n/** Optional parameters. */\nexport interface DatabasesListByElasticPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPool operation. */\nexport type DatabasesListByElasticPoolResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface DatabasesFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** The type of replica to be failed over. */\n  replicaType?: ReplicaType;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DatabasesListInaccessibleByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listInaccessibleByServer operation. */\nexport type DatabasesListInaccessibleByServerResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface DatabasesPauseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the pause operation. */\nexport type DatabasesPauseResponse = Database;\n\n/** Optional parameters. */\nexport interface DatabasesResumeOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the resume operation. */\nexport type DatabasesResumeResponse = Database;\n\n/** Optional parameters. */\nexport interface DatabasesUpgradeDataWarehouseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DatabasesRenameOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatabasesImportOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the import operation. */\nexport type DatabasesImportResponse = ImportExportOperationResult;\n\n/** Optional parameters. */\nexport interface DatabasesExportOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the export operation. */\nexport type DatabasesExportResponse = ImportExportOperationResult;\n\n/** Optional parameters. */\nexport interface DatabasesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type DatabasesListByServerNextResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface DatabasesListByElasticPoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPoolNext operation. */\nexport type DatabasesListByElasticPoolNextResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface DatabasesListInaccessibleByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listInaccessibleByServerNext operation. */\nexport type DatabasesListInaccessibleByServerNextResponse = DatabaseListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolsListMetricsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMetrics operation. */\nexport type ElasticPoolsListMetricsResponse = MetricListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolsListMetricDefinitionsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMetricDefinitions operation. */\nexport type ElasticPoolsListMetricDefinitionsResponse = MetricDefinitionListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolsListByServerOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n}\n\n/** Contains response data for the listByServer operation. */\nexport type ElasticPoolsListByServerResponse = ElasticPoolListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ElasticPoolsGetResponse = ElasticPool;\n\n/** Optional parameters. */\nexport interface ElasticPoolsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ElasticPoolsCreateOrUpdateResponse = ElasticPool;\n\n/** Optional parameters. */\nexport interface ElasticPoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ElasticPoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ElasticPoolsUpdateResponse = ElasticPool;\n\n/** Optional parameters. */\nexport interface ElasticPoolsFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ElasticPoolsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ElasticPoolsListByServerNextResponse = ElasticPoolListResult;\n\n/** Optional parameters. */\nexport interface ReplicationLinksDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ReplicationLinksFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ReplicationLinksFailoverAllowDataLossOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ReplicationLinksUnlinkOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ReplicationLinksListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ReplicationLinksListByDatabaseResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface ReplicationLinksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ReplicationLinksGetResponse = ReplicationLink;\n\n/** Optional parameters. */\nexport interface ReplicationLinksListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ReplicationLinksListByServerResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface ReplicationLinksListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ReplicationLinksListByDatabaseNextResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface ReplicationLinksListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ReplicationLinksListByServerNextResponse = ReplicationLinkListResult;\n\n/** Optional parameters. */\nexport interface ServerCommunicationLinksDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ServerCommunicationLinksGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerCommunicationLinksGetResponse = ServerCommunicationLink;\n\n/** Optional parameters. */\nexport interface ServerCommunicationLinksCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerCommunicationLinksCreateOrUpdateResponse = ServerCommunicationLink;\n\n/** Optional parameters. */\nexport interface ServerCommunicationLinksListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerCommunicationLinksListByServerResponse = ServerCommunicationLinkListResult;\n\n/** Optional parameters. */\nexport interface ServiceObjectivesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServiceObjectivesGetResponse = ServiceObjective;\n\n/** Optional parameters. */\nexport interface ServiceObjectivesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServiceObjectivesListByServerResponse = ServiceObjectiveListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolActivitiesListByElasticPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPool operation. */\nexport type ElasticPoolActivitiesListByElasticPoolResponse = ElasticPoolActivityListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPool operation. */\nexport type ElasticPoolDatabaseActivitiesListByElasticPoolResponse = ElasticPoolDatabaseActivityListResult;\n\n/** Optional parameters. */\nexport interface ServerUsagesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerUsagesListByServerResponse = ServerUsageListResult;\n\n/** Optional parameters. */\nexport interface ExtendedDatabaseBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExtendedDatabaseBlobAuditingPoliciesGetResponse = ExtendedDatabaseBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedDatabaseBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ExtendedDatabaseBlobAuditingPoliciesListByDatabaseResponse = ExtendedDatabaseBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextResponse = ExtendedDatabaseBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ExtendedServerBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ExtendedServerBlobAuditingPoliciesGetResponse = ExtendedServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse = ExtendedServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ExtendedServerBlobAuditingPoliciesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ExtendedServerBlobAuditingPoliciesListByServerResponse = ExtendedServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ExtendedServerBlobAuditingPoliciesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ExtendedServerBlobAuditingPoliciesListByServerNextResponse = ExtendedServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServerBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerBlobAuditingPoliciesGetResponse = ServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerBlobAuditingPoliciesCreateOrUpdateResponse = ServerBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface ServerBlobAuditingPoliciesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerBlobAuditingPoliciesListByServerResponse = ServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServerBlobAuditingPoliciesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerBlobAuditingPoliciesListByServerNextResponse = ServerBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface DatabaseBlobAuditingPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseBlobAuditingPoliciesGetResponse = DatabaseBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface DatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabaseBlobAuditingPoliciesCreateOrUpdateResponse = DatabaseBlobAuditingPolicy;\n\n/** Optional parameters. */\nexport interface DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseBlobAuditingPoliciesListByDatabaseResponse = DatabaseBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface DatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseBlobAuditingPoliciesListByDatabaseNextResponse = DatabaseBlobAuditingPolicyListResult;\n\n/** Optional parameters. */\nexport interface DatabaseAdvisorsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseAdvisorsListByDatabaseResponse = Advisor[];\n\n/** Optional parameters. */\nexport interface DatabaseAdvisorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseAdvisorsGetResponse = Advisor;\n\n/** Optional parameters. */\nexport interface DatabaseAdvisorsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type DatabaseAdvisorsUpdateResponse = Advisor;\n\n/** Optional parameters. */\nexport interface DatabaseAutomaticTuningGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseAutomaticTuningGetResponse = DatabaseAutomaticTuning;\n\n/** Optional parameters. */\nexport interface DatabaseAutomaticTuningUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type DatabaseAutomaticTuningUpdateResponse = DatabaseAutomaticTuning;\n\n/** Optional parameters. */\nexport interface DatabaseColumnsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of Get3ItemsItem */\n  schema?: string[];\n  /** Array of Get4ItemsItem */\n  table?: string[];\n  /** Array of Get5ItemsItem */\n  column?: string[];\n  /** Array of Get6ItemsItem */\n  orderBy?: string[];\n  /** An opaque token that identifies a starting point in the collection. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseColumnsListByDatabaseResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface DatabaseColumnsListByTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByTable operation. */\nexport type DatabaseColumnsListByTableResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface DatabaseColumnsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseColumnsGetResponse = DatabaseColumn;\n\n/** Optional parameters. */\nexport interface DatabaseColumnsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseColumnsListByDatabaseNextResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface DatabaseColumnsListByTableNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTableNext operation. */\nexport type DatabaseColumnsListByTableNextResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface DatabaseRecommendedActionsListByDatabaseAdvisorOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseAdvisor operation. */\nexport type DatabaseRecommendedActionsListByDatabaseAdvisorResponse = RecommendedAction[];\n\n/** Optional parameters. */\nexport interface DatabaseRecommendedActionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseRecommendedActionsGetResponse = RecommendedAction;\n\n/** Optional parameters. */\nexport interface DatabaseRecommendedActionsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type DatabaseRecommendedActionsUpdateResponse = RecommendedAction;\n\n/** Optional parameters. */\nexport interface DatabaseSchemasListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseSchemasListByDatabaseResponse = DatabaseSchemaListResult;\n\n/** Optional parameters. */\nexport interface DatabaseSchemasGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseSchemasGetResponse = DatabaseSchema;\n\n/** Optional parameters. */\nexport interface DatabaseSchemasListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseSchemasListByDatabaseNextResponse = DatabaseSchemaListResult;\n\n/** Optional parameters. */\nexport interface DatabaseSecurityAlertPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseSecurityAlertPoliciesGetResponse = DatabaseSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface DatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabaseSecurityAlertPoliciesCreateOrUpdateResponse = DatabaseSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseSecurityAlertPoliciesListByDatabaseResponse = DatabaseSecurityAlertListResult;\n\n/** Optional parameters. */\nexport interface DatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseSecurityAlertPoliciesListByDatabaseNextResponse = DatabaseSecurityAlertListResult;\n\n/** Optional parameters. */\nexport interface DatabaseTablesListBySchemaOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listBySchema operation. */\nexport type DatabaseTablesListBySchemaResponse = DatabaseTableListResult;\n\n/** Optional parameters. */\nexport interface DatabaseTablesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseTablesGetResponse = DatabaseTable;\n\n/** Optional parameters. */\nexport interface DatabaseTablesListBySchemaNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySchemaNext operation. */\nexport type DatabaseTablesListBySchemaNextResponse = DatabaseTableListResult;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentScansGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentScansExportOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the export operation. */\nexport type DatabaseVulnerabilityAssessmentScansExportResponse = DatabaseVulnerabilityAssessmentScansExport;\n\n/** Optional parameters. */\nexport interface DatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface DataWarehouseUserActivitiesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DataWarehouseUserActivitiesGetResponse = DataWarehouseUserActivities;\n\n/** Optional parameters. */\nexport interface DataWarehouseUserActivitiesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DataWarehouseUserActivitiesListByDatabaseResponse = DataWarehouseUserActivitiesListResult;\n\n/** Optional parameters. */\nexport interface DataWarehouseUserActivitiesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DataWarehouseUserActivitiesListByDatabaseNextResponse = DataWarehouseUserActivitiesListResult;\n\n/** Optional parameters. */\nexport interface DeletedServersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type DeletedServersListResponse = DeletedServerListResult;\n\n/** Optional parameters. */\nexport interface DeletedServersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type DeletedServersGetResponse = DeletedServer;\n\n/** Optional parameters. */\nexport interface DeletedServersListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type DeletedServersListByLocationResponse = DeletedServerListResult;\n\n/** Optional parameters. */\nexport interface DeletedServersRecoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the recover operation. */\nexport type DeletedServersRecoverResponse = DeletedServer;\n\n/** Optional parameters. */\nexport interface DeletedServersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type DeletedServersListNextResponse = DeletedServerListResult;\n\n/** Optional parameters. */\nexport interface DeletedServersListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type DeletedServersListByLocationNextResponse = DeletedServerListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolOperationsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ElasticPoolOperationsListByElasticPoolOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPool operation. */\nexport type ElasticPoolOperationsListByElasticPoolResponse = ElasticPoolOperationListResult;\n\n/** Optional parameters. */\nexport interface ElasticPoolOperationsListByElasticPoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByElasticPoolNext operation. */\nexport type ElasticPoolOperationsListByElasticPoolNextResponse = ElasticPoolOperationListResult;\n\n/** Optional parameters. */\nexport interface EncryptionProtectorsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type EncryptionProtectorsListByServerResponse = EncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface EncryptionProtectorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type EncryptionProtectorsGetResponse = EncryptionProtector;\n\n/** Optional parameters. */\nexport interface EncryptionProtectorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type EncryptionProtectorsCreateOrUpdateResponse = EncryptionProtector;\n\n/** Optional parameters. */\nexport interface EncryptionProtectorsRevalidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface EncryptionProtectorsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type EncryptionProtectorsListByServerNextResponse = EncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface FailoverGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FailoverGroupsGetResponse = FailoverGroup;\n\n/** Optional parameters. */\nexport interface FailoverGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FailoverGroupsCreateOrUpdateResponse = FailoverGroup;\n\n/** Optional parameters. */\nexport interface FailoverGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface FailoverGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type FailoverGroupsUpdateResponse = FailoverGroup;\n\n/** Optional parameters. */\nexport interface FailoverGroupsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type FailoverGroupsListByServerResponse = FailoverGroupListResult;\n\n/** Optional parameters. */\nexport interface FailoverGroupsFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the failover operation. */\nexport type FailoverGroupsFailoverResponse = FailoverGroup;\n\n/** Optional parameters. */\nexport interface FailoverGroupsForceFailoverAllowDataLossOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the forceFailoverAllowDataLoss operation. */\nexport type FailoverGroupsForceFailoverAllowDataLossResponse = FailoverGroup;\n\n/** Optional parameters. */\nexport interface FailoverGroupsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type FailoverGroupsListByServerNextResponse = FailoverGroupListResult;\n\n/** Optional parameters. */\nexport interface FirewallRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type FirewallRulesGetResponse = FirewallRule;\n\n/** Optional parameters. */\nexport interface FirewallRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type FirewallRulesCreateOrUpdateResponse = FirewallRule;\n\n/** Optional parameters. */\nexport interface FirewallRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface FirewallRulesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type FirewallRulesListByServerResponse = FirewallRuleListResult;\n\n/** Optional parameters. */\nexport interface FirewallRulesReplaceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the replace operation. */\nexport type FirewallRulesReplaceResponse = FirewallRule;\n\n/** Optional parameters. */\nexport interface FirewallRulesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type FirewallRulesListByServerNextResponse = FirewallRuleListResult;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type InstanceFailoverGroupsGetResponse = InstanceFailoverGroup;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type InstanceFailoverGroupsCreateOrUpdateResponse = InstanceFailoverGroup;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type InstanceFailoverGroupsListByLocationResponse = InstanceFailoverGroupListResult;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the failover operation. */\nexport type InstanceFailoverGroupsFailoverResponse = InstanceFailoverGroup;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsForceFailoverAllowDataLossOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the forceFailoverAllowDataLoss operation. */\nexport type InstanceFailoverGroupsForceFailoverAllowDataLossResponse = InstanceFailoverGroup;\n\n/** Optional parameters. */\nexport interface InstanceFailoverGroupsListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type InstanceFailoverGroupsListByLocationNextResponse = InstanceFailoverGroupListResult;\n\n/** Optional parameters. */\nexport interface InstancePoolsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type InstancePoolsGetResponse = InstancePool;\n\n/** Optional parameters. */\nexport interface InstancePoolsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type InstancePoolsCreateOrUpdateResponse = InstancePool;\n\n/** Optional parameters. */\nexport interface InstancePoolsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface InstancePoolsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type InstancePoolsUpdateResponse = InstancePool;\n\n/** Optional parameters. */\nexport interface InstancePoolsListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type InstancePoolsListByResourceGroupResponse = InstancePoolListResult;\n\n/** Optional parameters. */\nexport interface InstancePoolsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type InstancePoolsListResponse = InstancePoolListResult;\n\n/** Optional parameters. */\nexport interface InstancePoolsListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type InstancePoolsListByResourceGroupNextResponse = InstancePoolListResult;\n\n/** Optional parameters. */\nexport interface InstancePoolsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type InstancePoolsListNextResponse = InstancePoolListResult;\n\n/** Optional parameters. */\nexport interface JobAgentsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type JobAgentsListByServerResponse = JobAgentListResult;\n\n/** Optional parameters. */\nexport interface JobAgentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobAgentsGetResponse = JobAgent;\n\n/** Optional parameters. */\nexport interface JobAgentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobAgentsCreateOrUpdateResponse = JobAgent;\n\n/** Optional parameters. */\nexport interface JobAgentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface JobAgentsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type JobAgentsUpdateResponse = JobAgent;\n\n/** Optional parameters. */\nexport interface JobAgentsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type JobAgentsListByServerNextResponse = JobAgentListResult;\n\n/** Optional parameters. */\nexport interface JobCredentialsListByAgentOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgent operation. */\nexport type JobCredentialsListByAgentResponse = JobCredentialListResult;\n\n/** Optional parameters. */\nexport interface JobCredentialsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobCredentialsGetResponse = JobCredential;\n\n/** Optional parameters. */\nexport interface JobCredentialsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobCredentialsCreateOrUpdateResponse = JobCredential;\n\n/** Optional parameters. */\nexport interface JobCredentialsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface JobCredentialsListByAgentNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgentNext operation. */\nexport type JobCredentialsListByAgentNextResponse = JobCredentialListResult;\n\n/** Optional parameters. */\nexport interface JobExecutionsListByAgentOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** If specified, only job executions created at or after the specified time are included. */\n  createTimeMin?: Date;\n  /** If specified, only job executions created before the specified time are included. */\n  createTimeMax?: Date;\n  /** If specified, only job executions completed at or after the specified time are included. */\n  endTimeMin?: Date;\n  /** If specified, only job executions completed before the specified time are included. */\n  endTimeMax?: Date;\n  /** If specified, only active or only completed job executions are included. */\n  isActive?: boolean;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByAgent operation. */\nexport type JobExecutionsListByAgentResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobExecutionsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface JobExecutionsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type JobExecutionsCreateResponse = JobExecution;\n\n/** Optional parameters. */\nexport interface JobExecutionsListByJobOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** If specified, only job executions created at or after the specified time are included. */\n  createTimeMin?: Date;\n  /** If specified, only job executions created before the specified time are included. */\n  createTimeMax?: Date;\n  /** If specified, only job executions completed at or after the specified time are included. */\n  endTimeMin?: Date;\n  /** If specified, only job executions completed before the specified time are included. */\n  endTimeMax?: Date;\n  /** If specified, only active or only completed job executions are included. */\n  isActive?: boolean;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByJob operation. */\nexport type JobExecutionsListByJobResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobExecutionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobExecutionsGetResponse = JobExecution;\n\n/** Optional parameters. */\nexport interface JobExecutionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobExecutionsCreateOrUpdateResponse = JobExecution;\n\n/** Optional parameters. */\nexport interface JobExecutionsListByAgentNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgentNext operation. */\nexport type JobExecutionsListByAgentNextResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobExecutionsListByJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJobNext operation. */\nexport type JobExecutionsListByJobNextResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobsListByAgentOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgent operation. */\nexport type JobsListByAgentResponse = JobListResult;\n\n/** Optional parameters. */\nexport interface JobsGetOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobsGetResponse = Job;\n\n/** Optional parameters. */\nexport interface JobsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobsCreateOrUpdateResponse = Job;\n\n/** Optional parameters. */\nexport interface JobsDeleteOptionalParams extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface JobsListByAgentNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgentNext operation. */\nexport type JobsListByAgentNextResponse = JobListResult;\n\n/** Optional parameters. */\nexport interface JobStepExecutionsListByJobExecutionOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** If specified, only job executions created at or after the specified time are included. */\n  createTimeMin?: Date;\n  /** If specified, only job executions created before the specified time are included. */\n  createTimeMax?: Date;\n  /** If specified, only job executions completed at or after the specified time are included. */\n  endTimeMin?: Date;\n  /** If specified, only job executions completed before the specified time are included. */\n  endTimeMax?: Date;\n  /** If specified, only active or only completed job executions are included. */\n  isActive?: boolean;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByJobExecution operation. */\nexport type JobStepExecutionsListByJobExecutionResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobStepExecutionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobStepExecutionsGetResponse = JobExecution;\n\n/** Optional parameters. */\nexport interface JobStepExecutionsListByJobExecutionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJobExecutionNext operation. */\nexport type JobStepExecutionsListByJobExecutionNextResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobStepsListByVersionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVersion operation. */\nexport type JobStepsListByVersionResponse = JobStepListResult;\n\n/** Optional parameters. */\nexport interface JobStepsGetByVersionOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByVersion operation. */\nexport type JobStepsGetByVersionResponse = JobStep;\n\n/** Optional parameters. */\nexport interface JobStepsListByJobOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJob operation. */\nexport type JobStepsListByJobResponse = JobStepListResult;\n\n/** Optional parameters. */\nexport interface JobStepsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobStepsGetResponse = JobStep;\n\n/** Optional parameters. */\nexport interface JobStepsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobStepsCreateOrUpdateResponse = JobStep;\n\n/** Optional parameters. */\nexport interface JobStepsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface JobStepsListByVersionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByVersionNext operation. */\nexport type JobStepsListByVersionNextResponse = JobStepListResult;\n\n/** Optional parameters. */\nexport interface JobStepsListByJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJobNext operation. */\nexport type JobStepsListByJobNextResponse = JobStepListResult;\n\n/** Optional parameters. */\nexport interface JobTargetExecutionsListByJobExecutionOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** If specified, only job executions created at or after the specified time are included. */\n  createTimeMin?: Date;\n  /** If specified, only job executions created before the specified time are included. */\n  createTimeMax?: Date;\n  /** If specified, only job executions completed at or after the specified time are included. */\n  endTimeMin?: Date;\n  /** If specified, only job executions completed before the specified time are included. */\n  endTimeMax?: Date;\n  /** If specified, only active or only completed job executions are included. */\n  isActive?: boolean;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByJobExecution operation. */\nexport type JobTargetExecutionsListByJobExecutionResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobTargetExecutionsListByStepOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** If specified, only job executions created at or after the specified time are included. */\n  createTimeMin?: Date;\n  /** If specified, only job executions created before the specified time are included. */\n  createTimeMax?: Date;\n  /** If specified, only job executions completed at or after the specified time are included. */\n  endTimeMin?: Date;\n  /** If specified, only job executions completed before the specified time are included. */\n  endTimeMax?: Date;\n  /** If specified, only active or only completed job executions are included. */\n  isActive?: boolean;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByStep operation. */\nexport type JobTargetExecutionsListByStepResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobTargetExecutionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobTargetExecutionsGetResponse = JobExecution;\n\n/** Optional parameters. */\nexport interface JobTargetExecutionsListByJobExecutionNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJobExecutionNext operation. */\nexport type JobTargetExecutionsListByJobExecutionNextResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobTargetExecutionsListByStepNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByStepNext operation. */\nexport type JobTargetExecutionsListByStepNextResponse = JobExecutionListResult;\n\n/** Optional parameters. */\nexport interface JobTargetGroupsListByAgentOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgent operation. */\nexport type JobTargetGroupsListByAgentResponse = JobTargetGroupListResult;\n\n/** Optional parameters. */\nexport interface JobTargetGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobTargetGroupsGetResponse = JobTargetGroup;\n\n/** Optional parameters. */\nexport interface JobTargetGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type JobTargetGroupsCreateOrUpdateResponse = JobTargetGroup;\n\n/** Optional parameters. */\nexport interface JobTargetGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface JobTargetGroupsListByAgentNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByAgentNext operation. */\nexport type JobTargetGroupsListByAgentNextResponse = JobTargetGroupListResult;\n\n/** Optional parameters. */\nexport interface JobVersionsListByJobOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJob operation. */\nexport type JobVersionsListByJobResponse = JobVersionListResult;\n\n/** Optional parameters. */\nexport interface JobVersionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type JobVersionsGetResponse = JobVersion;\n\n/** Optional parameters. */\nexport interface JobVersionsListByJobNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByJobNext operation. */\nexport type JobVersionsListByJobNextResponse = JobVersionListResult;\n\n/** Optional parameters. */\nexport interface CapabilitiesListByLocationOptionalParams\n  extends coreClient.OperationOptions {\n  /** If specified, restricts the response to only include the selected item. */\n  include?: CapabilityGroup;\n}\n\n/** Contains response data for the listByLocation operation. */\nexport type CapabilitiesListByLocationResponse = LocationCapabilities;\n\n/** Optional parameters. */\nexport interface LongTermRetentionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LongTermRetentionPoliciesGetResponse = LongTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface LongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LongTermRetentionPoliciesCreateOrUpdateResponse = LongTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface LongTermRetentionPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type LongTermRetentionPoliciesListByDatabaseResponse = LongTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type LongTermRetentionPoliciesListByDatabaseNextResponse = LongTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface MaintenanceWindowOptionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MaintenanceWindowOptionsGetResponse = MaintenanceWindowOptions;\n\n/** Optional parameters. */\nexport interface MaintenanceWindowsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type MaintenanceWindowsGetResponse = MaintenanceWindows;\n\n/** Optional parameters. */\nexport interface MaintenanceWindowsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedBackupShortTermRetentionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedBackupShortTermRetentionPoliciesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ManagedBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedBackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedBackupShortTermRetentionPoliciesListByDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseColumnsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Array of Get3ItemsItem */\n  schema?: string[];\n  /** Array of Get4ItemsItem */\n  table?: string[];\n  /** Array of Get5ItemsItem */\n  column?: string[];\n  /** Array of Get6ItemsItem */\n  orderBy?: string[];\n  /** An opaque token that identifies a starting point in the collection. */\n  skiptoken?: string;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseColumnsListByDatabaseResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseColumnsListByTableOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByTable operation. */\nexport type ManagedDatabaseColumnsListByTableResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseColumnsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseColumnsGetResponse = DatabaseColumn;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseColumnsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseColumnsListByDatabaseNextResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseColumnsListByTableNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByTableNext operation. */\nexport type ManagedDatabaseColumnsListByTableNextResponse = DatabaseColumnListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseQueriesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseQueriesGetResponse = ManagedInstanceQuery;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseQueriesListByQueryOptionalParams\n  extends coreClient.OperationOptions {\n  /** Start time for observed period. */\n  startTime?: string;\n  /** End time for observed period. */\n  endTime?: string;\n  /** The time step to be used to summarize the metric values. */\n  interval?: QueryTimeGrainType;\n}\n\n/** Contains response data for the listByQuery operation. */\nexport type ManagedDatabaseQueriesListByQueryResponse = ManagedInstanceQueryStatistics;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseQueriesListByQueryNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByQueryNext operation. */\nexport type ManagedDatabaseQueriesListByQueryNextResponse = ManagedInstanceQueryStatistics;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseRestoreDetailsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseRestoreDetailsGetResponse = ManagedDatabaseRestoreDetailsResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedDatabasesListByInstanceResponse = ManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabasesGetResponse = ManagedDatabase;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabasesCreateOrUpdateResponse = ManagedDatabase;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedDatabasesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ManagedDatabasesUpdateResponse = ManagedDatabase;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesCompleteRestoreOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedDatabasesListInaccessibleByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listInaccessibleByInstance operation. */\nexport type ManagedDatabasesListInaccessibleByInstanceResponse = ManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedDatabasesListByInstanceNextResponse = ManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabasesListInaccessibleByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listInaccessibleByInstanceNext operation. */\nexport type ManagedDatabasesListInaccessibleByInstanceNextResponse = ManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSchemasListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseSchemasListByDatabaseResponse = DatabaseSchemaListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSchemasGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseSchemasGetResponse = DatabaseSchema;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSchemasListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseSchemasListByDatabaseNextResponse = DatabaseSchemaListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityAlertPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseSecurityAlertPoliciesGetResponse = ManagedDatabaseSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateResponse = ManagedDatabaseSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse = ManagedDatabaseSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextResponse = ManagedDatabaseSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityEventsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** The number of elements in the collection to skip. */\n  skip?: number;\n  /** An opaque token that identifies a starting point in the collection. */\n  skiptoken?: string;\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  /** The number of elements to return from the collection. */\n  top?: number;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseSecurityEventsListByDatabaseResponse = SecurityEventCollection;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseSecurityEventsListByDatabaseNextResponse = SecurityEventCollection;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseSensitivityLabelsGetResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabaseSensitivityLabelsCreateOrUpdateResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsDisableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsEnableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  skipToken?: string;\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  count?: boolean;\n}\n\n/** Contains response data for the listCurrentByDatabase operation. */\nexport type ManagedDatabaseSensitivityLabelsListCurrentByDatabaseResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  skipToken?: string;\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  /** Specifies whether to include disabled recommendations or not. */\n  includeDisabledRecommendations?: boolean;\n}\n\n/** Contains response data for the listRecommendedByDatabase operation. */\nexport type ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCurrentByDatabaseNext operation. */\nexport type ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRecommendedByDatabaseNext operation. */\nexport type ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseRecommendedSensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTablesListBySchemaOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listBySchema operation. */\nexport type ManagedDatabaseTablesListBySchemaResponse = DatabaseTableListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTablesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseTablesGetResponse = DatabaseTable;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTablesListBySchemaNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySchemaNext operation. */\nexport type ManagedDatabaseTablesListBySchemaNextResponse = DatabaseTableListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTransparentDataEncryptionGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseTransparentDataEncryptionGetResponse = ManagedTransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTransparentDataEncryptionCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabaseTransparentDataEncryptionCreateOrUpdateResponse = ManagedTransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseTransparentDataEncryptionListByDatabaseResponse = ManagedTransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseTransparentDataEncryptionListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseTransparentDataEncryptionListByDatabaseNextResponse = ManagedTransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse = DatabaseVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse = DatabaseVulnerabilityAssessmentRuleBaseline;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentsGetResponse = DatabaseVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse = DatabaseVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse = DatabaseVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse = DatabaseVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentScansExportOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the export operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentScansExportResponse = DatabaseVulnerabilityAssessmentScansExport;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentScansGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentScansGetResponse = VulnerabilityAssessmentScanRecord;\n\n/** Optional parameters. */\nexport interface ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse = VulnerabilityAssessmentScanRecordListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAdministratorsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedInstanceAdministratorsListByInstanceResponse = ManagedInstanceAdministratorListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAdministratorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceAdministratorsGetResponse = ManagedInstanceAdministrator;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAdministratorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceAdministratorsCreateOrUpdateResponse = ManagedInstanceAdministrator;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAdministratorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstanceAdministratorsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedInstanceAdministratorsListByInstanceNextResponse = ManagedInstanceAdministratorListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAzureADOnlyAuthenticationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceAzureADOnlyAuthenticationsGetResponse = ManagedInstanceAzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse = ManagedInstanceAzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAzureADOnlyAuthenticationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedInstanceAzureADOnlyAuthenticationsListByInstanceResponse = ManagedInstanceAzureADOnlyAuthListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextResponse = ManagedInstanceAzureADOnlyAuthListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceEncryptionProtectorsRevalidateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedInstanceEncryptionProtectorsListByInstanceResponse = ManagedInstanceEncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceEncryptionProtectorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceEncryptionProtectorsGetResponse = ManagedInstanceEncryptionProtector;\n\n/** Optional parameters. */\nexport interface ManagedInstanceEncryptionProtectorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse = ManagedInstanceEncryptionProtector;\n\n/** Optional parameters. */\nexport interface ManagedInstanceEncryptionProtectorsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedInstanceEncryptionProtectorsListByInstanceNextResponse = ManagedInstanceEncryptionProtectorListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceKeysListByInstanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedInstanceKeysListByInstanceResponse = ManagedInstanceKeyListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceKeysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceKeysGetResponse = ManagedInstanceKey;\n\n/** Optional parameters. */\nexport interface ManagedInstanceKeysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceKeysCreateOrUpdateResponse = ManagedInstanceKey;\n\n/** Optional parameters. */\nexport interface ManagedInstanceKeysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstanceKeysListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedInstanceKeysListByInstanceNextResponse = ManagedInstanceKeyListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceLongTermRetentionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceLongTermRetentionPoliciesGetResponse = ManagedInstanceLongTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse = ManagedInstanceLongTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type ManagedInstanceLongTermRetentionPoliciesListByDatabaseResponse = ManagedInstanceLongTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextResponse = ManagedInstanceLongTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceOperationsListByManagedInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstance operation. */\nexport type ManagedInstanceOperationsListByManagedInstanceResponse = ManagedInstanceOperationListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceOperationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceOperationsGetResponse = ManagedInstanceOperation;\n\n/** Optional parameters. */\nexport interface ManagedInstanceOperationsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedInstanceOperationsListByManagedInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstanceNext operation. */\nexport type ManagedInstanceOperationsListByManagedInstanceNextResponse = ManagedInstanceOperationListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstancePrivateEndpointConnectionsGetResponse = ManagedInstancePrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse = ManagedInstancePrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstance operation. */\nexport type ManagedInstancePrivateEndpointConnectionsListByManagedInstanceResponse = ManagedInstancePrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstanceNext operation. */\nexport type ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextResponse = ManagedInstancePrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstance operation. */\nexport type ManagedInstancePrivateLinkResourcesListByManagedInstanceResponse = ManagedInstancePrivateLinkListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstancePrivateLinkResourcesGetResponse = ManagedInstancePrivateLink;\n\n/** Optional parameters. */\nexport interface ManagedInstancePrivateLinkResourcesListByManagedInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstanceNext operation. */\nexport type ManagedInstancePrivateLinkResourcesListByManagedInstanceNextResponse = ManagedInstancePrivateLinkListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceTdeCertificatesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstanceVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstanceVulnerabilityAssessmentsGetResponse = ManagedInstanceVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse = ManagedInstanceVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ManagedInstanceVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse = ManagedInstanceVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstanceVulnerabilityAssessmentsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse = ManagedInstanceVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse = ManagedBackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRestorableDroppedDatabase operation. */\nexport type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse = ManagedBackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByRestorableDroppedDatabaseNext operation. */\nexport type ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextResponse = ManagedBackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedServerSecurityAlertPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ManagedServerSecurityAlertPoliciesGetResponse = ManagedServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ManagedServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse = ManagedServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ManagedServerSecurityAlertPoliciesListByInstanceResponse = ManagedServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface ManagedServerSecurityAlertPoliciesListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ManagedServerSecurityAlertPoliciesListByInstanceNextResponse = ManagedServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface OperationsListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type OperationsListResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type OperationsListNextResponse = OperationListResult;\n\n/** Optional parameters. */\nexport interface OperationsHealthListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type OperationsHealthListByLocationResponse = OperationsHealthListResult;\n\n/** Optional parameters. */\nexport interface OperationsHealthListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type OperationsHealthListByLocationNextResponse = OperationsHealthListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateEndpointConnectionsGetResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type PrivateEndpointConnectionsCreateOrUpdateResponse = PrivateEndpointConnection;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type PrivateEndpointConnectionsListByServerResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateEndpointConnectionsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type PrivateEndpointConnectionsListByServerNextResponse = PrivateEndpointConnectionListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type PrivateLinkResourcesListByServerResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type PrivateLinkResourcesGetResponse = PrivateLinkResource;\n\n/** Optional parameters. */\nexport interface PrivateLinkResourcesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type PrivateLinkResourcesListByServerNextResponse = PrivateLinkResourceListResult;\n\n/** Optional parameters. */\nexport interface RecoverableManagedDatabasesListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type RecoverableManagedDatabasesListByInstanceResponse = RecoverableManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface RecoverableManagedDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RecoverableManagedDatabasesGetResponse = RecoverableManagedDatabase;\n\n/** Optional parameters. */\nexport interface RecoverableManagedDatabasesListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type RecoverableManagedDatabasesListByInstanceNextResponse = RecoverableManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface RestorePointsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type RestorePointsListByDatabaseResponse = RestorePointListResult;\n\n/** Optional parameters. */\nexport interface RestorePointsCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the create operation. */\nexport type RestorePointsCreateResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface RestorePointsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RestorePointsGetResponse = RestorePoint;\n\n/** Optional parameters. */\nexport interface RestorePointsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RestorePointsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type RestorePointsListByDatabaseNextResponse = RestorePointListResult;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsListCurrentByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  skipToken?: string;\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  count?: boolean;\n}\n\n/** Contains response data for the listCurrentByDatabase operation. */\nexport type SensitivityLabelsListCurrentByDatabaseResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SensitivityLabelsListRecommendedByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  skipToken?: string;\n  /** An OData filter expression that filters elements in the collection. */\n  filter?: string;\n  /** Specifies whether to include disabled recommendations or not. */\n  includeDisabledRecommendations?: boolean;\n}\n\n/** Contains response data for the listRecommendedByDatabase operation. */\nexport type SensitivityLabelsListRecommendedByDatabaseResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsEnableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SensitivityLabelsDisableRecommendationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SensitivityLabelsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SensitivityLabelsGetResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SensitivityLabelsCreateOrUpdateResponse = SensitivityLabel;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SensitivityLabelsListCurrentByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listCurrentByDatabaseNext operation. */\nexport type SensitivityLabelsListCurrentByDatabaseNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface SensitivityLabelsListRecommendedByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listRecommendedByDatabaseNext operation. */\nexport type SensitivityLabelsListRecommendedByDatabaseNextResponse = SensitivityLabelListResult;\n\n/** Optional parameters. */\nexport interface RecommendedSensitivityLabelsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ServerAdvisorsListByServerOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerAdvisorsListByServerResponse = Advisor[];\n\n/** Optional parameters. */\nexport interface ServerAdvisorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerAdvisorsGetResponse = Advisor;\n\n/** Optional parameters. */\nexport interface ServerAdvisorsUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ServerAdvisorsUpdateResponse = Advisor;\n\n/** Optional parameters. */\nexport interface ServerAutomaticTuningGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerAutomaticTuningGetResponse = ServerAutomaticTuning;\n\n/** Optional parameters. */\nexport interface ServerAutomaticTuningUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the update operation. */\nexport type ServerAutomaticTuningUpdateResponse = ServerAutomaticTuning;\n\n/** Optional parameters. */\nexport interface ServerAzureADAdministratorsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerAzureADAdministratorsGetResponse = ServerAzureADAdministrator;\n\n/** Optional parameters. */\nexport interface ServerAzureADAdministratorsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerAzureADAdministratorsCreateOrUpdateResponse = ServerAzureADAdministrator;\n\n/** Optional parameters. */\nexport interface ServerAzureADAdministratorsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServerAzureADAdministratorsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerAzureADAdministratorsListByServerResponse = AdministratorListResult;\n\n/** Optional parameters. */\nexport interface ServerAzureADAdministratorsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerAzureADAdministratorsListByServerNextResponse = AdministratorListResult;\n\n/** Optional parameters. */\nexport interface ServerAzureADOnlyAuthenticationsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerAzureADOnlyAuthenticationsGetResponse = ServerAzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface ServerAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse = ServerAzureADOnlyAuthentication;\n\n/** Optional parameters. */\nexport interface ServerAzureADOnlyAuthenticationsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServerAzureADOnlyAuthenticationsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerAzureADOnlyAuthenticationsListByServerResponse = AzureADOnlyAuthListResult;\n\n/** Optional parameters. */\nexport interface ServerAzureADOnlyAuthenticationsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerAzureADOnlyAuthenticationsListByServerNextResponse = AzureADOnlyAuthListResult;\n\n/** Optional parameters. */\nexport interface ServerDevOpsAuditSettingsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerDevOpsAuditSettingsGetResponse = ServerDevOpsAuditingSettings;\n\n/** Optional parameters. */\nexport interface ServerDevOpsAuditSettingsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerDevOpsAuditSettingsCreateOrUpdateResponse = ServerDevOpsAuditingSettings;\n\n/** Optional parameters. */\nexport interface ServerDevOpsAuditSettingsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerDevOpsAuditSettingsListByServerResponse = ServerDevOpsAuditSettingsListResult;\n\n/** Optional parameters. */\nexport interface ServerDevOpsAuditSettingsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerDevOpsAuditSettingsListByServerNextResponse = ServerDevOpsAuditSettingsListResult;\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerDnsAliasesGetResponse = ServerDnsAlias;\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerDnsAliasesCreateOrUpdateResponse = ServerDnsAlias;\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerDnsAliasesListByServerResponse = ServerDnsAliasListResult;\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesAcquireOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the acquire operation. */\nexport type ServerDnsAliasesAcquireResponse = ServerDnsAlias;\n\n/** Optional parameters. */\nexport interface ServerDnsAliasesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerDnsAliasesListByServerNextResponse = ServerDnsAliasListResult;\n\n/** Optional parameters. */\nexport interface ServerKeysListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerKeysListByServerResponse = ServerKeyListResult;\n\n/** Optional parameters. */\nexport interface ServerKeysGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerKeysGetResponse = ServerKey;\n\n/** Optional parameters. */\nexport interface ServerKeysCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerKeysCreateOrUpdateResponse = ServerKey;\n\n/** Optional parameters. */\nexport interface ServerKeysDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServerKeysListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerKeysListByServerNextResponse = ServerKeyListResult;\n\n/** Optional parameters. */\nexport interface ServerOperationsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerOperationsListByServerResponse = ServerOperationListResult;\n\n/** Optional parameters. */\nexport interface ServerOperationsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerOperationsListByServerNextResponse = ServerOperationListResult;\n\n/** Optional parameters. */\nexport interface ServerSecurityAlertPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerSecurityAlertPoliciesGetResponse = ServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerSecurityAlertPoliciesCreateOrUpdateResponse = ServerSecurityAlertPolicy;\n\n/** Optional parameters. */\nexport interface ServerSecurityAlertPoliciesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerSecurityAlertPoliciesListByServerResponse = LogicalServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServerSecurityAlertPoliciesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerSecurityAlertPoliciesListByServerNextResponse = LogicalServerSecurityAlertPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerTrustGroupsGetResponse = ServerTrustGroup;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerTrustGroupsCreateOrUpdateResponse = ServerTrustGroup;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type ServerTrustGroupsListByLocationResponse = ServerTrustGroupListResult;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type ServerTrustGroupsListByInstanceResponse = ServerTrustGroupListResult;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type ServerTrustGroupsListByLocationNextResponse = ServerTrustGroupListResult;\n\n/** Optional parameters. */\nexport interface ServerTrustGroupsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type ServerTrustGroupsListByInstanceNextResponse = ServerTrustGroupListResult;\n\n/** Optional parameters. */\nexport interface ServerVulnerabilityAssessmentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerVulnerabilityAssessmentsGetResponse = ServerVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerVulnerabilityAssessmentsCreateOrUpdateResponse = ServerVulnerabilityAssessment;\n\n/** Optional parameters. */\nexport interface ServerVulnerabilityAssessmentsDeleteOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface ServerVulnerabilityAssessmentsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerVulnerabilityAssessmentsListByServerResponse = ServerVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface ServerVulnerabilityAssessmentsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerVulnerabilityAssessmentsListByServerNextResponse = ServerVulnerabilityAssessmentListResult;\n\n/** Optional parameters. */\nexport interface SqlAgentGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SqlAgentGetResponse = SqlAgentConfiguration;\n\n/** Optional parameters. */\nexport interface SqlAgentCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SqlAgentCreateOrUpdateResponse = SqlAgentConfiguration;\n\n/** Optional parameters. */\nexport interface SubscriptionUsagesListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type SubscriptionUsagesListByLocationResponse = SubscriptionUsageListResult;\n\n/** Optional parameters. */\nexport interface SubscriptionUsagesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SubscriptionUsagesGetResponse = SubscriptionUsage;\n\n/** Optional parameters. */\nexport interface SubscriptionUsagesListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type SubscriptionUsagesListByLocationNextResponse = SubscriptionUsageListResult;\n\n/** Optional parameters. */\nexport interface SyncAgentsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SyncAgentsGetResponse = SyncAgent;\n\n/** Optional parameters. */\nexport interface SyncAgentsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SyncAgentsCreateOrUpdateResponse = SyncAgent;\n\n/** Optional parameters. */\nexport interface SyncAgentsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SyncAgentsListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type SyncAgentsListByServerResponse = SyncAgentListResult;\n\n/** Optional parameters. */\nexport interface SyncAgentsGenerateKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the generateKey operation. */\nexport type SyncAgentsGenerateKeyResponse = SyncAgentKeyProperties;\n\n/** Optional parameters. */\nexport interface SyncAgentsListLinkedDatabasesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listLinkedDatabases operation. */\nexport type SyncAgentsListLinkedDatabasesResponse = SyncAgentLinkedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface SyncAgentsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type SyncAgentsListByServerNextResponse = SyncAgentListResult;\n\n/** Optional parameters. */\nexport interface SyncAgentsListLinkedDatabasesNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listLinkedDatabasesNext operation. */\nexport type SyncAgentsListLinkedDatabasesNextResponse = SyncAgentLinkedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListSyncDatabaseIdsOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSyncDatabaseIds operation. */\nexport type SyncGroupsListSyncDatabaseIdsResponse = SyncDatabaseIdListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsRefreshHubSchemaOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SyncGroupsListHubSchemasOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listHubSchemas operation. */\nexport type SyncGroupsListHubSchemasResponse = SyncFullSchemaPropertiesListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListLogsOptionalParams\n  extends coreClient.OperationOptions {\n  /** The continuation token for this operation. */\n  continuationToken?: string;\n}\n\n/** Contains response data for the listLogs operation. */\nexport type SyncGroupsListLogsResponse = SyncGroupLogListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsCancelSyncOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SyncGroupsTriggerSyncOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface SyncGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SyncGroupsGetResponse = SyncGroup;\n\n/** Optional parameters. */\nexport interface SyncGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SyncGroupsCreateOrUpdateResponse = SyncGroup;\n\n/** Optional parameters. */\nexport interface SyncGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SyncGroupsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type SyncGroupsUpdateResponse = SyncGroup;\n\n/** Optional parameters. */\nexport interface SyncGroupsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type SyncGroupsListByDatabaseResponse = SyncGroupListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListSyncDatabaseIdsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listSyncDatabaseIdsNext operation. */\nexport type SyncGroupsListSyncDatabaseIdsNextResponse = SyncDatabaseIdListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListHubSchemasNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listHubSchemasNext operation. */\nexport type SyncGroupsListHubSchemasNextResponse = SyncFullSchemaPropertiesListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListLogsNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listLogsNext operation. */\nexport type SyncGroupsListLogsNextResponse = SyncGroupLogListResult;\n\n/** Optional parameters. */\nexport interface SyncGroupsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type SyncGroupsListByDatabaseNextResponse = SyncGroupListResult;\n\n/** Optional parameters. */\nexport interface SyncMembersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type SyncMembersGetResponse = SyncMember;\n\n/** Optional parameters. */\nexport interface SyncMembersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type SyncMembersCreateOrUpdateResponse = SyncMember;\n\n/** Optional parameters. */\nexport interface SyncMembersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SyncMembersUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type SyncMembersUpdateResponse = SyncMember;\n\n/** Optional parameters. */\nexport interface SyncMembersListBySyncGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySyncGroup operation. */\nexport type SyncMembersListBySyncGroupResponse = SyncMemberListResult;\n\n/** Optional parameters. */\nexport interface SyncMembersListMemberSchemasOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMemberSchemas operation. */\nexport type SyncMembersListMemberSchemasResponse = SyncFullSchemaPropertiesListResult;\n\n/** Optional parameters. */\nexport interface SyncMembersRefreshMemberSchemaOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface SyncMembersListBySyncGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listBySyncGroupNext operation. */\nexport type SyncMembersListBySyncGroupNextResponse = SyncMemberListResult;\n\n/** Optional parameters. */\nexport interface SyncMembersListMemberSchemasNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listMemberSchemasNext operation. */\nexport type SyncMembersListMemberSchemasNextResponse = SyncFullSchemaPropertiesListResult;\n\n/** Optional parameters. */\nexport interface TdeCertificatesCreateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface TimeZonesListByLocationOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocation operation. */\nexport type TimeZonesListByLocationResponse = TimeZoneListResult;\n\n/** Optional parameters. */\nexport interface TimeZonesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TimeZonesGetResponse = TimeZone;\n\n/** Optional parameters. */\nexport interface TimeZonesListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type TimeZonesListByLocationNextResponse = TimeZoneListResult;\n\n/** Optional parameters. */\nexport interface VirtualClustersUpdateDnsServersOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateDnsServers operation. */\nexport type VirtualClustersUpdateDnsServersResponse = UpdateManagedInstanceDnsServersOperation;\n\n/** Optional parameters. */\nexport interface VirtualClustersListOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the list operation. */\nexport type VirtualClustersListResponse = VirtualClusterListResult;\n\n/** Optional parameters. */\nexport interface VirtualClustersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type VirtualClustersListByResourceGroupResponse = VirtualClusterListResult;\n\n/** Optional parameters. */\nexport interface VirtualClustersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualClustersGetResponse = VirtualCluster;\n\n/** Optional parameters. */\nexport interface VirtualClustersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualClustersUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type VirtualClustersUpdateResponse = VirtualCluster;\n\n/** Optional parameters. */\nexport interface VirtualClustersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type VirtualClustersListNextResponse = VirtualClusterListResult;\n\n/** Optional parameters. */\nexport interface VirtualClustersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type VirtualClustersListByResourceGroupNextResponse = VirtualClusterListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type VirtualNetworkRulesGetResponse = VirtualNetworkRule;\n\n/** Optional parameters. */\nexport interface VirtualNetworkRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type VirtualNetworkRulesCreateOrUpdateResponse = VirtualNetworkRule;\n\n/** Optional parameters. */\nexport interface VirtualNetworkRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface VirtualNetworkRulesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type VirtualNetworkRulesListByServerResponse = VirtualNetworkRuleListResult;\n\n/** Optional parameters. */\nexport interface VirtualNetworkRulesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type VirtualNetworkRulesListByServerNextResponse = VirtualNetworkRuleListResult;\n\n/** Optional parameters. */\nexport interface WorkloadClassifiersGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkloadClassifiersGetResponse = WorkloadClassifier;\n\n/** Optional parameters. */\nexport interface WorkloadClassifiersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkloadClassifiersCreateOrUpdateResponse = WorkloadClassifier;\n\n/** Optional parameters. */\nexport interface WorkloadClassifiersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkloadClassifiersListByWorkloadGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkloadGroup operation. */\nexport type WorkloadClassifiersListByWorkloadGroupResponse = WorkloadClassifierListResult;\n\n/** Optional parameters. */\nexport interface WorkloadClassifiersListByWorkloadGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByWorkloadGroupNext operation. */\nexport type WorkloadClassifiersListByWorkloadGroupNextResponse = WorkloadClassifierListResult;\n\n/** Optional parameters. */\nexport interface WorkloadGroupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type WorkloadGroupsGetResponse = WorkloadGroup;\n\n/** Optional parameters. */\nexport interface WorkloadGroupsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type WorkloadGroupsCreateOrUpdateResponse = WorkloadGroup;\n\n/** Optional parameters. */\nexport interface WorkloadGroupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface WorkloadGroupsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type WorkloadGroupsListByDatabaseResponse = WorkloadGroupListResult;\n\n/** Optional parameters. */\nexport interface WorkloadGroupsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type WorkloadGroupsListByDatabaseNextResponse = WorkloadGroupListResult;\n\n/** Optional parameters. */\nexport interface TransparentDataEncryptionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type TransparentDataEncryptionsGetResponse = LogicalDatabaseTransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface TransparentDataEncryptionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type TransparentDataEncryptionsCreateOrUpdateResponse = LogicalDatabaseTransparentDataEncryption;\n\n/** Optional parameters. */\nexport interface TransparentDataEncryptionsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type TransparentDataEncryptionsListByDatabaseResponse = LogicalDatabaseTransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface TransparentDataEncryptionsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type TransparentDataEncryptionsListByDatabaseNextResponse = LogicalDatabaseTransparentDataEncryptionListResult;\n\n/** Optional parameters. */\nexport interface BackupShortTermRetentionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type BackupShortTermRetentionPoliciesGetResponse = BackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface BackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type BackupShortTermRetentionPoliciesCreateOrUpdateResponse = BackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface BackupShortTermRetentionPoliciesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type BackupShortTermRetentionPoliciesUpdateResponse = BackupShortTermRetentionPolicy;\n\n/** Optional parameters. */\nexport interface BackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type BackupShortTermRetentionPoliciesListByDatabaseResponse = BackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface BackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type BackupShortTermRetentionPoliciesListByDatabaseNextResponse = BackupShortTermRetentionPolicyListResult;\n\n/** Optional parameters. */\nexport interface DatabaseExtensionsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatabaseExtensionsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type DatabaseExtensionsCreateOrUpdateResponse = ImportExportExtensionsOperationResult;\n\n/** Optional parameters. */\nexport interface DatabaseExtensionsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseExtensionsListByDatabaseResponse = ImportExportExtensionsOperationListResult;\n\n/** Optional parameters. */\nexport interface DatabaseExtensionsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseExtensionsListByDatabaseNextResponse = ImportExportExtensionsOperationListResult;\n\n/** Optional parameters. */\nexport interface DatabaseOperationsCancelOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface DatabaseOperationsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseOperationsListByDatabaseResponse = DatabaseOperationListResult;\n\n/** Optional parameters. */\nexport interface DatabaseOperationsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseOperationsListByDatabaseNextResponse = DatabaseOperationListResult;\n\n/** Optional parameters. */\nexport interface DatabaseUsagesListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type DatabaseUsagesListByDatabaseResponse = DatabaseUsageListResult;\n\n/** Optional parameters. */\nexport interface DatabaseUsagesListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type DatabaseUsagesListByDatabaseNextResponse = DatabaseUsageListResult;\n\n/** Optional parameters. */\nexport interface LedgerDigestUploadsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LedgerDigestUploadsGetResponse = LedgerDigestUploads;\n\n/** Optional parameters. */\nexport interface LedgerDigestUploadsCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type LedgerDigestUploadsCreateOrUpdateResponse = LedgerDigestUploads;\n\n/** Optional parameters. */\nexport interface LedgerDigestUploadsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabase operation. */\nexport type LedgerDigestUploadsListByDatabaseResponse = LedgerDigestUploadsListResult;\n\n/** Optional parameters. */\nexport interface LedgerDigestUploadsDisableOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the disable operation. */\nexport type LedgerDigestUploadsDisableResponse = LedgerDigestUploads;\n\n/** Optional parameters. */\nexport interface LedgerDigestUploadsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type LedgerDigestUploadsListByDatabaseNextResponse = LedgerDigestUploadsListResult;\n\n/** Optional parameters. */\nexport interface OutboundFirewallRulesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type OutboundFirewallRulesGetResponse = OutboundFirewallRule;\n\n/** Optional parameters. */\nexport interface OutboundFirewallRulesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type OutboundFirewallRulesCreateOrUpdateResponse = OutboundFirewallRule;\n\n/** Optional parameters. */\nexport interface OutboundFirewallRulesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface OutboundFirewallRulesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type OutboundFirewallRulesListByServerResponse = OutboundFirewallRuleListResult;\n\n/** Optional parameters. */\nexport interface OutboundFirewallRulesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type OutboundFirewallRulesListByServerNextResponse = OutboundFirewallRuleListResult;\n\n/** Optional parameters. */\nexport interface ServersListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ServersListByResourceGroupResponse = ServerListResult;\n\n/** Optional parameters. */\nexport interface ServersGetOptionalParams extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ServersGetResponse = Server;\n\n/** Optional parameters. */\nexport interface ServersCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServersCreateOrUpdateResponse = Server;\n\n/** Optional parameters. */\nexport interface ServersDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ServersUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ServersUpdateResponse = Server;\n\n/** Optional parameters. */\nexport interface ServersListOptionalParams extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ServersListResponse = ServerListResult;\n\n/** Optional parameters. */\nexport interface ServersImportDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the importDatabase operation. */\nexport type ServersImportDatabaseResponse = ImportExportOperationResult;\n\n/** Optional parameters. */\nexport interface ServersCheckNameAvailabilityOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the checkNameAvailability operation. */\nexport type ServersCheckNameAvailabilityResponse = CheckNameAvailabilityResponse;\n\n/** Optional parameters. */\nexport interface ServersListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ServersListByResourceGroupNextResponse = ServerListResult;\n\n/** Optional parameters. */\nexport interface ServersListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ServersListNextResponse = ServerListResult;\n\n/** Optional parameters. */\nexport interface UsagesListByInstancePoolOptionalParams\n  extends coreClient.OperationOptions {\n  /** Optional request parameter to include managed instance usages within the instance pool. */\n  expandChildren?: boolean;\n}\n\n/** Contains response data for the listByInstancePool operation. */\nexport type UsagesListByInstancePoolResponse = UsageListResult;\n\n/** Optional parameters. */\nexport interface UsagesListByInstancePoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstancePoolNext operation. */\nexport type UsagesListByInstancePoolNextResponse = UsageListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsCopyOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the copy operation. */\nexport type LongTermRetentionBackupsCopyResponse = LongTermRetentionBackupOperationResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type LongTermRetentionBackupsUpdateResponse = LongTermRetentionBackupOperationResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LongTermRetentionBackupsGetResponse = LongTermRetentionBackup;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type LongTermRetentionBackupsListByDatabaseResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByLocationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByLocation operation. */\nexport type LongTermRetentionBackupsListByLocationResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByServerOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByServer operation. */\nexport type LongTermRetentionBackupsListByServerResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsCopyByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the copyByResourceGroup operation. */\nexport type LongTermRetentionBackupsCopyByResourceGroupResponse = LongTermRetentionBackupOperationResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsUpdateByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the updateByResourceGroup operation. */\nexport type LongTermRetentionBackupsUpdateByResourceGroupResponse = LongTermRetentionBackupOperationResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsGetByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByResourceGroup operation. */\nexport type LongTermRetentionBackupsGetByResourceGroupResponse = LongTermRetentionBackup;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsDeleteByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupDatabase operation. */\nexport type LongTermRetentionBackupsListByResourceGroupDatabaseResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupLocationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupLocation operation. */\nexport type LongTermRetentionBackupsListByResourceGroupLocationResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupServerOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupServer operation. */\nexport type LongTermRetentionBackupsListByResourceGroupServerResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type LongTermRetentionBackupsListByDatabaseNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type LongTermRetentionBackupsListByLocationNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type LongTermRetentionBackupsListByServerNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupDatabaseNext operation. */\nexport type LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupLocationNext operation. */\nexport type LongTermRetentionBackupsListByResourceGroupLocationNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupServerNext operation. */\nexport type LongTermRetentionBackupsListByResourceGroupServerNextResponse = LongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type LongTermRetentionManagedInstanceBackupsGetResponse = ManagedInstanceLongTermRetentionBackup;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByDatabase operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByDatabaseResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByInstance operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByInstanceResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByLocation operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByLocationResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsGetByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getByResourceGroup operation. */\nexport type LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse = ManagedInstanceLongTermRetentionBackup;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsDeleteByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupDatabase operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupInstance operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams\n  extends coreClient.OperationOptions {\n  /** Whether or not to only get the latest backup for each database. */\n  onlyLatestPerDatabase?: boolean;\n  /** Whether to query against just live databases, just deleted databases, or all databases. */\n  databaseState?: DatabaseState;\n}\n\n/** Contains response data for the listByResourceGroupLocation operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByDatabaseNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByDatabaseNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByInstanceNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByLocationNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByLocationNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupDatabaseNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupInstanceNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupLocationNext operation. */\nexport type LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextResponse = ManagedInstanceLongTermRetentionBackupListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByInstancePoolOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByInstancePool operation. */\nexport type ManagedInstancesListByInstancePoolResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the list operation. */\nexport type ManagedInstancesListResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByResourceGroupOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the listByResourceGroup operation. */\nexport type ManagedInstancesListByResourceGroupResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesGetOptionalParams\n  extends coreClient.OperationOptions {\n  /** The child resources to include in the response. */\n  expand?: string;\n}\n\n/** Contains response data for the get operation. */\nexport type ManagedInstancesGetResponse = ManagedInstance;\n\n/** Optional parameters. */\nexport interface ManagedInstancesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ManagedInstancesCreateOrUpdateResponse = ManagedInstance;\n\n/** Optional parameters. */\nexport interface ManagedInstancesDeleteOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstancesUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the update operation. */\nexport type ManagedInstancesUpdateResponse = ManagedInstance;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByManagedInstanceOptionalParams\n  extends coreClient.OperationOptions {\n  /** Start time for observed period. */\n  startTime?: string;\n  /** End time for observed period. */\n  endTime?: string;\n  /** The time step to be used to summarize the metric values. Default value is PT1H */\n  interval?: QueryTimeGrainType;\n  /** How many 'top queries' to return. Default is 5. */\n  numberOfQueries?: number;\n  /** Comma separated list of databases to be included into search. All DB's are included if this parameter is not specified. */\n  databases?: string;\n  /** Aggregation function to be used, default value is 'sum' */\n  aggregationFunction?: AggregationFunctionType;\n  /** Metric to be used for ranking top queries. Default is 'cpu' */\n  observationMetric?: MetricType;\n}\n\n/** Contains response data for the listByManagedInstance operation. */\nexport type ManagedInstancesListByManagedInstanceResponse = TopQueriesListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesFailoverOptionalParams\n  extends coreClient.OperationOptions {\n  /** The type of replica to be failed over. */\n  replicaType?: ReplicaType;\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByInstancePoolNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstancePoolNext operation. */\nexport type ManagedInstancesListByInstancePoolNextResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listNext operation. */\nexport type ManagedInstancesListNextResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByResourceGroupNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByResourceGroupNext operation. */\nexport type ManagedInstancesListByResourceGroupNextResponse = ManagedInstanceListResult;\n\n/** Optional parameters. */\nexport interface ManagedInstancesListByManagedInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByManagedInstanceNext operation. */\nexport type ManagedInstancesListByManagedInstanceNextResponse = TopQueriesListResult;\n\n/** Optional parameters. */\nexport interface RestorableDroppedDatabasesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type RestorableDroppedDatabasesListByServerResponse = RestorableDroppedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface RestorableDroppedDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RestorableDroppedDatabasesGetResponse = RestorableDroppedDatabase;\n\n/** Optional parameters. */\nexport interface RestorableDroppedDatabasesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type RestorableDroppedDatabasesListByServerNextResponse = RestorableDroppedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface RestorableDroppedManagedDatabasesListByInstanceOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstance operation. */\nexport type RestorableDroppedManagedDatabasesListByInstanceResponse = RestorableDroppedManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface RestorableDroppedManagedDatabasesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type RestorableDroppedManagedDatabasesGetResponse = RestorableDroppedManagedDatabase;\n\n/** Optional parameters. */\nexport interface RestorableDroppedManagedDatabasesListByInstanceNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByInstanceNext operation. */\nexport type RestorableDroppedManagedDatabasesListByInstanceNextResponse = RestorableDroppedManagedDatabaseListResult;\n\n/** Optional parameters. */\nexport interface ServerConnectionPoliciesGetOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the get operation. */\nexport type ServerConnectionPoliciesGetResponse = ServerConnectionPolicy;\n\n/** Optional parameters. */\nexport interface ServerConnectionPoliciesCreateOrUpdateOptionalParams\n  extends coreClient.OperationOptions {\n  /** Delay to wait until next poll, in milliseconds. */\n  updateIntervalInMs?: number;\n  /** A serialized poller which can be used to resume an existing paused Long-Running-Operation. */\n  resumeFrom?: string;\n}\n\n/** Contains response data for the createOrUpdate operation. */\nexport type ServerConnectionPoliciesCreateOrUpdateResponse = ServerConnectionPolicy;\n\n/** Optional parameters. */\nexport interface ServerConnectionPoliciesListByServerOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServer operation. */\nexport type ServerConnectionPoliciesListByServerResponse = ServerConnectionPolicyListResult;\n\n/** Optional parameters. */\nexport interface ServerConnectionPoliciesListByServerNextOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the listByServerNext operation. */\nexport type ServerConnectionPoliciesListByServerNextResponse = ServerConnectionPolicyListResult;\n\n/** Optional parameters. */\nexport interface SqlManagementClientOptionalParams\n  extends coreClient.ServiceClientOptions {\n  /** server parameter */\n  $host?: string;\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\n\nexport const Resource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Resource\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecoverableDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecoverableDatabase\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataMaskingRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const GeoBackupPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoBackupPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"GeoBackupPolicy\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Metric\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Metric: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Metric\",\n    modelProperties: {\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      timeGrain: {\n        serializedName: \"timeGrain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"MetricName\"\n        }\n      },\n      metricValues: {\n        serializedName: \"metricValues\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricValue\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricName\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricValue: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricValue\",\n    modelProperties: {\n      count: {\n        serializedName: \"count\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      average: {\n        serializedName: \"average\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximum: {\n        serializedName: \"maximum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      minimum: {\n        serializedName: \"minimum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      total: {\n        serializedName: \"total\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDefinitionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDefinitionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricDefinition\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricDefinition\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"MetricName\"\n        }\n      },\n      primaryAggregationType: {\n        serializedName: \"primaryAggregationType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceUri: {\n        serializedName: \"resourceUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      metricAvailabilities: {\n        serializedName: \"metricAvailabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MetricAvailability\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const MetricAvailability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MetricAvailability\",\n    modelProperties: {\n      retention: {\n        serializedName: \"retention\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeGrain: {\n        serializedName: \"timeGrain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UnlinkParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UnlinkParameters\",\n    modelProperties: {\n      forcedTermination: {\n        serializedName: \"forcedTermination\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerCommunicationLinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerCommunicationLinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerCommunicationLink\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceObjectiveListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceObjectiveListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceObjective\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolActivityListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolActivityListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolActivity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolDatabaseActivityListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolDatabaseActivityListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolDatabaseActivity\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServerUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerUsage\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServerUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerUsage\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resourceName: {\n        serializedName: \"resourceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      nextResetTime: {\n        serializedName: \"nextResetTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedDatabaseBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedDatabaseBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExtendedDatabaseBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedServerBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedServerBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ExtendedServerBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseBlobAuditingPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseBlobAuditingPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseBlobAuditingPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedActionStateInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedActionStateInfo\",\n    modelProperties: {\n      currentValue: {\n        serializedName: \"currentValue\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionInitiatedBy: {\n        serializedName: \"actionInitiatedBy\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"User\", \"System\"]\n        }\n      },\n      lastModified: {\n        serializedName: \"lastModified\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedActionImplementationInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedActionImplementationInfo\",\n    modelProperties: {\n      method: {\n        serializedName: \"method\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"TSql\", \"AzurePowerShell\"]\n        }\n      },\n      script: {\n        serializedName: \"script\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedActionErrorInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedActionErrorInfo\",\n    modelProperties: {\n      errorCode: {\n        serializedName: \"errorCode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isRetryable: {\n        serializedName: \"isRetryable\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Yes\", \"No\"]\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedActionImpactRecord: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedActionImpactRecord\",\n    modelProperties: {\n      dimensionName: {\n        serializedName: \"dimensionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      absoluteValue: {\n        serializedName: \"absoluteValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      changeValueAbsolute: {\n        serializedName: \"changeValueAbsolute\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      changeValueRelative: {\n        serializedName: \"changeValueRelative\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedActionMetricInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedActionMetricInfo\",\n    modelProperties: {\n      metricName: {\n        serializedName: \"metricName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      timeGrain: {\n        serializedName: \"timeGrain\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutomaticTuningOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutomaticTuningOptions\",\n    modelProperties: {\n      desiredState: {\n        serializedName: \"desiredState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Off\", \"On\", \"Default\"]\n        }\n      },\n      actualState: {\n        serializedName: \"actualState\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Off\", \"On\"]\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      reasonDesc: {\n        serializedName: \"reasonDesc\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Default\",\n            \"Disabled\",\n            \"AutoConfigured\",\n            \"InheritedFromServer\",\n            \"QueryStoreOff\",\n            \"QueryStoreReadOnly\",\n            \"NotSupported\"\n          ]\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseColumnListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseColumnListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseColumn\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseSchemaListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseSchemaListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseSchema\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SystemData: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SystemData\",\n    modelProperties: {\n      createdBy: {\n        serializedName: \"createdBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdByType: {\n        serializedName: \"createdByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createdAt: {\n        serializedName: \"createdAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastModifiedBy: {\n        serializedName: \"lastModifiedBy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedByType: {\n        serializedName: \"lastModifiedByType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedAt: {\n        serializedName: \"lastModifiedAt\",\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseSecurityAlertListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseSecurityAlertListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseTableListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseTableListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseTable\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseVulnerabilityAssessmentRuleBaselineItem: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseVulnerabilityAssessmentRuleBaselineItem\",\n    modelProperties: {\n      result: {\n        serializedName: \"result\",\n        required: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentRecurringScansProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentRecurringScansProperties\",\n    modelProperties: {\n      isEnabled: {\n        serializedName: \"isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      emailSubscriptionAdmins: {\n        defaultValue: true,\n        serializedName: \"emailSubscriptionAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      emails: {\n        serializedName: \"emails\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseVulnerabilityAssessmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseVulnerabilityAssessmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseVulnerabilityAssessment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanRecordListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanRecordListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VulnerabilityAssessmentScanRecord\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanError: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanError\",\n    modelProperties: {\n      code: {\n        serializedName: \"code\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataWarehouseUserActivitiesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataWarehouseUserActivitiesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DataWarehouseUserActivities\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedServerListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedServerListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DeletedServer\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPool\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Sku: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Sku\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      size: {\n        serializedName: \"size\",\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      capacity: {\n        serializedName: \"capacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolPerDatabaseSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolPerDatabaseSettings\",\n    modelProperties: {\n      minCapacity: {\n        serializedName: \"minCapacity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxCapacity: {\n        serializedName: \"maxCapacity\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolUpdate\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      perDatabaseSettings: {\n        serializedName: \"properties.perDatabaseSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ElasticPoolPerDatabaseSettings\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProtectorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProtectorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EncryptionProtector\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverGroupReadWriteEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverGroupReadWriteEndpoint\",\n    modelProperties: {\n      failoverPolicy: {\n        serializedName: \"failoverPolicy\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverWithDataLossGracePeriodMinutes: {\n        serializedName: \"failoverWithDataLossGracePeriodMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverGroupReadOnlyEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverGroupReadOnlyEndpoint\",\n    modelProperties: {\n      failoverPolicy: {\n        serializedName: \"failoverPolicy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartnerInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartnerInfo\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationRole: {\n        serializedName: \"replicationRole\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverGroupUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverGroupUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      readWriteEndpoint: {\n        serializedName: \"properties.readWriteEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"FailoverGroupReadWriteEndpoint\"\n        }\n      },\n      readOnlyEndpoint: {\n        serializedName: \"properties.readOnlyEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"FailoverGroupReadOnlyEndpoint\"\n        }\n      },\n      databases: {\n        serializedName: \"properties.databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FailoverGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceWithWritableName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceWithWritableName\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FirewallRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FirewallRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FirewallRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const FirewallRuleList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FirewallRuleList\",\n    modelProperties: {\n      values: {\n        serializedName: \"values\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"FirewallRule\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceFailoverGroupReadWriteEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceFailoverGroupReadWriteEndpoint\",\n    modelProperties: {\n      failoverPolicy: {\n        serializedName: \"failoverPolicy\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverWithDataLossGracePeriodMinutes: {\n        serializedName: \"failoverWithDataLossGracePeriodMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceFailoverGroupReadOnlyEndpoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceFailoverGroupReadOnlyEndpoint\",\n    modelProperties: {\n      failoverPolicy: {\n        serializedName: \"failoverPolicy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PartnerRegionInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PartnerRegionInfo\",\n    modelProperties: {\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationRole: {\n        serializedName: \"replicationRole\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePairInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePairInfo\",\n    modelProperties: {\n      primaryManagedInstanceId: {\n        serializedName: \"primaryManagedInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerManagedInstanceId: {\n        serializedName: \"partnerManagedInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceFailoverGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceFailoverGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstanceFailoverGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePoolUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePoolUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePoolListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePoolListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstancePool\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobAgentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobAgentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobAgent\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobAgentUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobAgentUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const JobCredentialListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobCredentialListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobCredential\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobExecutionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobExecutionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobExecution\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobExecutionTarget: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobExecutionTarget\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Job\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobSchedule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobSchedule\",\n    modelProperties: {\n      startTime: {\n        defaultValue: \"0001-01-01T00:00:00+00:00\",\n        serializedName: \"startTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        defaultValue: \"9999-12-31T11:59:59+00:00\",\n        serializedName: \"endTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      type: {\n        defaultValue: \"Once\",\n        serializedName: \"type\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Once\", \"Recurring\"]\n        }\n      },\n      enabled: {\n        serializedName: \"enabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      interval: {\n        serializedName: \"interval\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStepListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStepListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobStep\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStepAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStepAction\",\n    modelProperties: {\n      type: {\n        defaultValue: \"TSql\",\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        defaultValue: \"Inline\",\n        serializedName: \"source\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStepOutput: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStepOutput\",\n    modelProperties: {\n      type: {\n        defaultValue: \"SqlDatabase\",\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subscriptionId: {\n        serializedName: \"subscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      resourceGroupName: {\n        serializedName: \"resourceGroupName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"serverName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        defaultValue: \"dbo\",\n        serializedName: \"schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"tableName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      credential: {\n        serializedName: \"credential\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStepExecutionOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStepExecutionOptions\",\n    modelProperties: {\n      timeoutSeconds: {\n        defaultValue: 43200,\n        serializedName: \"timeoutSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      retryAttempts: {\n        defaultValue: 10,\n        serializedName: \"retryAttempts\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      initialRetryIntervalSeconds: {\n        defaultValue: 1,\n        serializedName: \"initialRetryIntervalSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maximumRetryIntervalSeconds: {\n        defaultValue: 120,\n        serializedName: \"maximumRetryIntervalSeconds\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      retryIntervalBackoffMultiplier: {\n        defaultValue: 2,\n        serializedName: \"retryIntervalBackoffMultiplier\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobTargetGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobTargetGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobTargetGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobTarget: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobTarget\",\n    modelProperties: {\n      membershipType: {\n        defaultValue: \"Include\",\n        serializedName: \"membershipType\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Include\", \"Exclude\"]\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolName: {\n        serializedName: \"elasticPoolName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      shardMapName: {\n        serializedName: \"shardMapName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      refreshCredential: {\n        serializedName: \"refreshCredential\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobVersionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobVersionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobVersion\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LocationCapabilities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LocationCapabilities\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedServerVersions: {\n        serializedName: \"supportedServerVersions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerVersionCapability\"\n            }\n          }\n        }\n      },\n      supportedManagedInstanceVersions: {\n        serializedName: \"supportedManagedInstanceVersions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceVersionCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerVersionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerVersionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedEditions: {\n        serializedName: \"supportedEditions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"EditionCapability\"\n            }\n          }\n        }\n      },\n      supportedElasticPoolEditions: {\n        serializedName: \"supportedElasticPoolEditions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolEditionCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const EditionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EditionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedServiceLevelObjectives: {\n        serializedName: \"supportedServiceLevelObjectives\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServiceObjectiveCapability\"\n            }\n          }\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      readScale: {\n        serializedName: \"readScale\",\n        type: {\n          name: \"Composite\",\n          className: \"ReadScaleCapability\"\n        }\n      },\n      supportedStorageCapabilities: {\n        serializedName: \"supportedStorageCapabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceObjectiveCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceObjectiveCapability\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedMaxSizes: {\n        serializedName: \"supportedMaxSizes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaxSizeRangeCapability\"\n            }\n          }\n        }\n      },\n      performanceLevel: {\n        serializedName: \"performanceLevel\",\n        type: {\n          name: \"Composite\",\n          className: \"PerformanceLevelCapability\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      supportedLicenseTypes: {\n        serializedName: \"supportedLicenseTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LicenseTypeCapability\"\n            }\n          }\n        }\n      },\n      includedMaxSize: {\n        serializedName: \"includedMaxSize\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      supportedAutoPauseDelay: {\n        serializedName: \"supportedAutoPauseDelay\",\n        type: {\n          name: \"Composite\",\n          className: \"AutoPauseDelayTimeRange\"\n        }\n      },\n      supportedMinCapacities: {\n        serializedName: \"supportedMinCapacities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MinCapacityCapability\"\n            }\n          }\n        }\n      },\n      computeModel: {\n        serializedName: \"computeModel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedMaintenanceConfigurations: {\n        serializedName: \"supportedMaintenanceConfigurations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceConfigurationCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaxSizeRangeCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaxSizeRangeCapability\",\n    modelProperties: {\n      minValue: {\n        serializedName: \"minValue\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      maxValue: {\n        serializedName: \"maxValue\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      scaleSize: {\n        serializedName: \"scaleSize\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      logSize: {\n        serializedName: \"logSize\",\n        type: {\n          name: \"Composite\",\n          className: \"LogSizeCapability\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaxSizeCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaxSizeCapability\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogSizeCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogSizeCapability\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PerformanceLevelCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PerformanceLevelCapability\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LicenseTypeCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LicenseTypeCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutoPauseDelayTimeRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutoPauseDelayTimeRange\",\n    modelProperties: {\n      minValue: {\n        serializedName: \"minValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxValue: {\n        serializedName: \"maxValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stepSize: {\n        serializedName: \"stepSize\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      default: {\n        serializedName: \"default\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      doNotPauseValue: {\n        serializedName: \"doNotPauseValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MinCapacityCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MinCapacityCapability\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceConfigurationCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceConfigurationCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReadScaleCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReadScaleCapability\",\n    modelProperties: {\n      maxNumberOfReplicas: {\n        serializedName: \"maxNumberOfReplicas\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const StorageCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"StorageCapability\",\n    modelProperties: {\n      storageAccountType: {\n        serializedName: \"storageAccountType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolEditionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolEditionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedElasticPoolPerformanceLevels: {\n        serializedName: \"supportedElasticPoolPerformanceLevels\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolPerformanceLevelCapability\"\n            }\n          }\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolPerformanceLevelCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolPerformanceLevelCapability\",\n    modelProperties: {\n      performanceLevel: {\n        serializedName: \"performanceLevel\",\n        type: {\n          name: \"Composite\",\n          className: \"PerformanceLevelCapability\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      supportedLicenseTypes: {\n        serializedName: \"supportedLicenseTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LicenseTypeCapability\"\n            }\n          }\n        }\n      },\n      maxDatabaseCount: {\n        serializedName: \"maxDatabaseCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      includedMaxSize: {\n        serializedName: \"includedMaxSize\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      supportedMaxSizes: {\n        serializedName: \"supportedMaxSizes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaxSizeRangeCapability\"\n            }\n          }\n        }\n      },\n      supportedPerDatabaseMaxSizes: {\n        serializedName: \"supportedPerDatabaseMaxSizes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaxSizeRangeCapability\"\n            }\n          }\n        }\n      },\n      supportedPerDatabaseMaxPerformanceLevels: {\n        serializedName: \"supportedPerDatabaseMaxPerformanceLevels\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolPerDatabaseMaxPerformanceLevelCapability\"\n            }\n          }\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      supportedMaintenanceConfigurations: {\n        serializedName: \"supportedMaintenanceConfigurations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceConfigurationCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolPerDatabaseMaxPerformanceLevelCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolPerDatabaseMaxPerformanceLevelCapability\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedPerDatabaseMinPerformanceLevels: {\n        serializedName: \"supportedPerDatabaseMinPerformanceLevels\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ElasticPoolPerDatabaseMinPerformanceLevelCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolPerDatabaseMinPerformanceLevelCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolPerDatabaseMinPerformanceLevelCapability\",\n    modelProperties: {\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceVersionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceVersionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedEditions: {\n        serializedName: \"supportedEditions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceEditionCapability\"\n            }\n          }\n        }\n      },\n      supportedInstancePoolEditions: {\n        serializedName: \"supportedInstancePoolEditions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstancePoolEditionCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceEditionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceEditionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedFamilies: {\n        serializedName: \"supportedFamilies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceFamilyCapability\"\n            }\n          }\n        }\n      },\n      supportedStorageCapabilities: {\n        serializedName: \"supportedStorageCapabilities\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"StorageCapability\"\n            }\n          }\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"zoneRedundant\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceFamilyCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceFamilyCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedLicenseTypes: {\n        serializedName: \"supportedLicenseTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LicenseTypeCapability\"\n            }\n          }\n        }\n      },\n      supportedVcoresValues: {\n        serializedName: \"supportedVcoresValues\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceVcoresCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceVcoresCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceVcoresCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      includedMaxSize: {\n        serializedName: \"includedMaxSize\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      supportedStorageSizes: {\n        serializedName: \"supportedStorageSizes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaxSizeRangeCapability\"\n            }\n          }\n        }\n      },\n      instancePoolSupported: {\n        serializedName: \"instancePoolSupported\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      standaloneSupported: {\n        serializedName: \"standaloneSupported\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      supportedMaintenanceConfigurations: {\n        serializedName: \"supportedMaintenanceConfigurations\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceMaintenanceConfigurationCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceMaintenanceConfigurationCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceMaintenanceConfigurationCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePoolEditionCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePoolEditionCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedFamilies: {\n        serializedName: \"supportedFamilies\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstancePoolFamilyCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePoolFamilyCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePoolFamilyCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      supportedLicenseTypes: {\n        serializedName: \"supportedLicenseTypes\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LicenseTypeCapability\"\n            }\n          }\n        }\n      },\n      supportedVcoresValues: {\n        serializedName: \"supportedVcoresValues\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"InstancePoolVcoresCapability\"\n            }\n          }\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePoolVcoresCapability: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePoolVcoresCapability\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageLimit: {\n        serializedName: \"storageLimit\",\n        type: {\n          name: \"Composite\",\n          className: \"MaxSizeCapability\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Visible\", \"Available\", \"Default\", \"Disabled\"]\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LongTermRetentionPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LongTermRetentionPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LongTermRetentionPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindowTimeRange: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindowTimeRange\",\n    modelProperties: {\n      dayOfWeek: {\n        serializedName: \"dayOfWeek\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      duration: {\n        serializedName: \"duration\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedBackupShortTermRetentionPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedBackupShortTermRetentionPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedBackupShortTermRetentionPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceQueryStatistics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceQueryStatistics\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryStatistics\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryStatisticsProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryStatisticsProperties\",\n    modelProperties: {\n      databaseName: {\n        serializedName: \"databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryId: {\n        serializedName: \"queryId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervals: {\n        serializedName: \"intervals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryMetricInterval\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryMetricInterval: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryMetricInterval\",\n    modelProperties: {\n      intervalStartTime: {\n        serializedName: \"intervalStartTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervalType: {\n        serializedName: \"intervalType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      executionCount: {\n        serializedName: \"executionCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      metrics: {\n        serializedName: \"metrics\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryMetricProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const QueryMetricProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryMetricProperties\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      min: {\n        serializedName: \"min\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      max: {\n        serializedName: \"max\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      avg: {\n        serializedName: \"avg\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      sum: {\n        serializedName: \"sum\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stdev: {\n        serializedName: \"stdev\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedDatabase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabaseUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabaseUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      earliestRestorePoint: {\n        serializedName: \"properties.earliestRestorePoint\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      defaultSecondaryLocation: {\n        serializedName: \"properties.defaultSecondaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogCollation: {\n        serializedName: \"properties.catalogCollation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerUri: {\n        serializedName: \"properties.storageContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorableDroppedDatabaseId: {\n        serializedName: \"properties.restorableDroppedDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasToken: {\n        serializedName: \"properties.storageContainerSasToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverGroupId: {\n        serializedName: \"properties.failoverGroupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      longTermRetentionBackupResourceId: {\n        serializedName: \"properties.longTermRetentionBackupResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoCompleteRestore: {\n        serializedName: \"properties.autoCompleteRestore\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastBackupName: {\n        serializedName: \"properties.lastBackupName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CompleteDatabaseRestoreDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CompleteDatabaseRestoreDefinition\",\n    modelProperties: {\n      lastBackupName: {\n        serializedName: \"lastBackupName\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabaseSecurityAlertPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabaseSecurityAlertPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedDatabaseSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityEventCollection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityEventCollection\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SecurityEvent\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityEventSqlInjectionAdditionalProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityEventSqlInjectionAdditionalProperties\",\n    modelProperties: {\n      threatId: {\n        serializedName: \"threatId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statement: {\n        serializedName: \"statement\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      statementHighlightOffset: {\n        serializedName: \"statementHighlightOffset\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      statementHighlightLength: {\n        serializedName: \"statementHighlightLength\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorCode: {\n        serializedName: \"errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SensitivityLabel\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelUpdateList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelUpdateList\",\n    modelProperties: {\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SensitivityLabelUpdate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedSensitivityLabelUpdateList: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedSensitivityLabelUpdateList\",\n    modelProperties: {\n      operations: {\n        serializedName: \"operations\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedSensitivityLabelUpdate\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedTransparentDataEncryptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedTransparentDataEncryptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedTransparentDataEncryption\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceAdministratorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceAdministratorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceAdministrator\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceAzureADOnlyAuthListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceAzureADOnlyAuthListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceAzureADOnlyAuthentication\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceEncryptionProtectorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceEncryptionProtectorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceEncryptionProtector\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceKeyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceKeyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceKey\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceLongTermRetentionPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceLongTermRetentionPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceLongTermRetentionPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceOperationParametersPair: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceOperationParametersPair\",\n    modelProperties: {\n      currentParameters: {\n        serializedName: \"currentParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UpsertManagedServerOperationParameters\"\n        }\n      },\n      requestedParameters: {\n        serializedName: \"requestedParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"UpsertManagedServerOperationParameters\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpsertManagedServerOperationParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpsertManagedServerOperationParameters\",\n    modelProperties: {\n      family: {\n        serializedName: \"family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tier: {\n        serializedName: \"tier\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vCores: {\n        serializedName: \"vCores\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageSizeInGB: {\n        serializedName: \"storageSizeInGB\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceOperationSteps: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceOperationSteps\",\n    modelProperties: {\n      totalSteps: {\n        serializedName: \"totalSteps\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentStep: {\n        serializedName: \"currentStep\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stepsList: {\n        serializedName: \"stepsList\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"UpsertManagedServerOperationStep\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const UpsertManagedServerOperationStep: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpsertManagedServerOperationStep\",\n    modelProperties: {\n      order: {\n        serializedName: \"order\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateEndpointConnectionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateEndpointProperty\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateLinkServiceConnectionStateProperty\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateEndpointProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateEndpointProperty\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateLinkServiceConnectionStateProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateLinkServiceConnectionStateProperty\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstancePrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateLinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateLinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstancePrivateLink\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateLinkProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateLinkProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceVulnerabilityAssessmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceVulnerabilityAssessmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceVulnerabilityAssessment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedServerSecurityAlertPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedServerSecurityAlertPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedServerSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Operation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Operation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Operation\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      display: {\n        serializedName: \"display\",\n        type: {\n          name: \"Composite\",\n          className: \"OperationDisplay\"\n        }\n      },\n      origin: {\n        serializedName: \"origin\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const OperationDisplay: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationDisplay\",\n    modelProperties: {\n      provider: {\n        serializedName: \"provider\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      resource: {\n        serializedName: \"resource\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationsHealthListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationsHealthListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OperationsHealth\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionProperties\",\n    modelProperties: {\n      privateEndpoint: {\n        serializedName: \"privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointProperty\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionStateProperty\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointProperty\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkServiceConnectionStateProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkServiceConnectionStateProperty\",\n    modelProperties: {\n      status: {\n        serializedName: \"status\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"description\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      actionsRequired: {\n        serializedName: \"actionsRequired\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateLinkResource\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResourceProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResourceProperties\",\n    modelProperties: {\n      groupId: {\n        serializedName: \"groupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requiredMembers: {\n        serializedName: \"requiredMembers\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      requiredZoneNames: {\n        serializedName: \"requiredZoneNames\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RecoverableManagedDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableManagedDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecoverableManagedDatabase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePointListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePointListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorePoint\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreateDatabaseRestorePointDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CreateDatabaseRestorePointDefinition\",\n    modelProperties: {\n      restorePointLabel: {\n        serializedName: \"restorePointLabel\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AutomaticTuningServerOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AutomaticTuningServerOptions\",\n    modelProperties: {\n      desiredState: {\n        serializedName: \"desiredState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Off\", \"On\", \"Default\"]\n        }\n      },\n      actualState: {\n        serializedName: \"actualState\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Off\", \"On\"]\n        }\n      },\n      reasonCode: {\n        serializedName: \"reasonCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      reasonDesc: {\n        serializedName: \"reasonDesc\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Default\", \"Disabled\", \"AutoConfigured\"]\n        }\n      }\n    }\n  }\n};\n\nexport const AdministratorListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AdministratorListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerAzureADAdministrator\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AzureADOnlyAuthListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"AzureADOnlyAuthListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerAzureADOnlyAuthentication\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerDevOpsAuditSettingsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerDevOpsAuditSettingsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerDevOpsAuditingSettings\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerDnsAliasListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerDnsAliasListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerDnsAlias\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerDnsAliasAcquisition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerDnsAliasAcquisition\",\n    modelProperties: {\n      oldServerDnsAliasId: {\n        serializedName: \"oldServerDnsAliasId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerKeyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerKeyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerKey\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogicalServerSecurityAlertPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogicalServerSecurityAlertPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerSecurityAlertPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerInfo: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerInfo\",\n    modelProperties: {\n      serverId: {\n        serializedName: \"serverId\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerTrustGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerTrustGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerTrustGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerVulnerabilityAssessmentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerVulnerabilityAssessmentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerVulnerabilityAssessment\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SubscriptionUsage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncAgentListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncAgentListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncAgent\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncAgentKeyProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncAgentKeyProperties\",\n    modelProperties: {\n      syncAgentKey: {\n        serializedName: \"syncAgentKey\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncAgentLinkedDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncAgentLinkedDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncAgentLinkedDatabase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncDatabaseIdListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncDatabaseIdListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncDatabaseIdProperties\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncDatabaseIdProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncDatabaseIdProperties\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncFullSchemaPropertiesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncFullSchemaPropertiesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncFullSchemaProperties\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncFullSchemaProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncFullSchemaProperties\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncFullSchemaTable\"\n            }\n          }\n        }\n      },\n      lastUpdateTime: {\n        serializedName: \"lastUpdateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncFullSchemaTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncFullSchemaTable\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncFullSchemaTableColumn\"\n            }\n          }\n        }\n      },\n      errorId: {\n        serializedName: \"errorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hasError: {\n        serializedName: \"hasError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quotedName: {\n        serializedName: \"quotedName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncFullSchemaTableColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncFullSchemaTableColumn\",\n    modelProperties: {\n      dataSize: {\n        serializedName: \"dataSize\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorId: {\n        serializedName: \"errorId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      hasError: {\n        serializedName: \"hasError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isPrimaryKey: {\n        serializedName: \"isPrimaryKey\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      quotedName: {\n        serializedName: \"quotedName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupLogListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupLogListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncGroupLogProperties\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupLogProperties: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupLogProperties\",\n    modelProperties: {\n      timestamp: {\n        serializedName: \"timestamp\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      source: {\n        serializedName: \"source\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      details: {\n        serializedName: \"details\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tracingId: {\n        serializedName: \"tracingId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      operationStatus: {\n        serializedName: \"operationStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupSchema\",\n    modelProperties: {\n      tables: {\n        serializedName: \"tables\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncGroupSchemaTable\"\n            }\n          }\n        }\n      },\n      masterSyncMemberName: {\n        serializedName: \"masterSyncMemberName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupSchemaTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupSchemaTable\",\n    modelProperties: {\n      columns: {\n        serializedName: \"columns\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncGroupSchemaTableColumn\"\n            }\n          }\n        }\n      },\n      quotedName: {\n        serializedName: \"quotedName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupSchemaTableColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupSchemaTableColumn\",\n    modelProperties: {\n      quotedName: {\n        serializedName: \"quotedName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataSize: {\n        serializedName: \"dataSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dataType: {\n        serializedName: \"dataType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncMemberListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncMemberListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"SyncMember\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TimeZoneListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TimeZoneListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TimeZone\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualClusterListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualClusterListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualCluster\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualClusterUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualClusterUpdate\",\n    modelProperties: {\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      subnetId: {\n        serializedName: \"properties.subnetId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"properties.family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      childResources: {\n        serializedName: \"properties.childResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualNetworkRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualNetworkRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VirtualNetworkRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadClassifierListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadClassifierListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkloadClassifier\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadGroupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadGroupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"WorkloadGroup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogicalDatabaseTransparentDataEncryptionListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogicalDatabaseTransparentDataEncryptionListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LogicalDatabaseTransparentDataEncryption\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const BackupShortTermRetentionPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BackupShortTermRetentionPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"BackupShortTermRetentionPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportExportExtensionsOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportExportExtensionsOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImportExportExtensionsOperationResult\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseOperationListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseOperationListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseOperation\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseUsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseUsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseUsage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LedgerDigestUploadsListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LedgerDigestUploadsListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LedgerDigestUploads\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const OutboundFirewallRuleListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutboundFirewallRuleListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"OutboundFirewallRule\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationLinkListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationLinkListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ReplicationLink\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Server\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceIdentity\",\n    modelProperties: {\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"UserIdentity\" } }\n        }\n      },\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const UserIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UserIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerPrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerPrivateEndpointConnection\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerExternalAdministrator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerExternalAdministrator\",\n    modelProperties: {\n      administratorType: {\n        serializedName: \"administratorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sid: {\n        serializedName: \"sid\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      azureADOnlyAuthentication: {\n        serializedName: \"azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerUpdate\",\n    modelProperties: {\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      administratorLogin: {\n        serializedName: \"properties.administratorLogin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"properties.administratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerPrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      minimalTlsVersion: {\n        serializedName: \"properties.minimalTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceFeature: {\n        serializedName: \"properties.workspaceFeature\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryUserAssignedIdentityId: {\n        serializedName: \"properties.primaryUserAssignedIdentityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      federatedClientId: {\n        serializedName: \"properties.federatedClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      keyId: {\n        serializedName: \"properties.keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administrators: {\n        serializedName: \"properties.administrators\",\n        type: {\n          name: \"Composite\",\n          className: \"ServerExternalAdministrator\"\n        }\n      },\n      restrictOutboundNetworkAccess: {\n        serializedName: \"properties.restrictOutboundNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportNewDatabaseDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportNewDatabaseDefinition\",\n    modelProperties: {\n      databaseName: {\n        serializedName: \"databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      edition: {\n        serializedName: \"edition\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceObjectiveName: {\n        serializedName: \"serviceObjectiveName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"maxSizeBytes\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKeyType: {\n        serializedName: \"storageKeyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKey: {\n        serializedName: \"storageKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageUri: {\n        serializedName: \"storageUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"administratorLogin\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"administratorLoginPassword\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      networkIsolation: {\n        serializedName: \"networkIsolation\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkIsolationSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const NetworkIsolationSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"NetworkIsolationSettings\",\n    modelProperties: {\n      storageAccountResourceId: {\n        serializedName: \"storageAccountResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sqlServerResourceId: {\n        serializedName: \"sqlServerResourceId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnectionRequestStatus: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnectionRequestStatus\",\n    modelProperties: {\n      privateLinkServiceId: {\n        serializedName: \"privateLinkServiceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnectionName: {\n        serializedName: \"privateEndpointConnectionName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityRequest: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityRequest\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        defaultValue: \"Microsoft.Sql/servers\",\n        isConstant: true,\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const CheckNameAvailabilityResponse: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CheckNameAvailabilityResponse\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      available: {\n        serializedName: \"available\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      reason: {\n        serializedName: \"reason\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Invalid\", \"AlreadyExists\"]\n        }\n      },\n      message: {\n        serializedName: \"message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UsageListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UsageListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Usage\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Usage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Usage\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      name: {\n        serializedName: \"name\",\n        type: {\n          name: \"Composite\",\n          className: \"Name\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedLimit: {\n        serializedName: \"requestedLimit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Name: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Name\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      },\n      localizedValue: {\n        serializedName: \"localizedValue\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Database\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseIdentity\",\n    modelProperties: {\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      userAssignedIdentities: {\n        serializedName: \"userAssignedIdentities\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"DatabaseUserIdentity\" }\n          }\n        }\n      },\n      delegatedResources: {\n        serializedName: \"delegatedResources\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"Composite\", className: \"Delegation\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseUserIdentity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseUserIdentity\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const Delegation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Delegation\",\n    modelProperties: {\n      resourceId: {\n        serializedName: \"resourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseUpdate\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabaseIdentity\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sampleName: {\n        serializedName: \"properties.sampleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolId: {\n        serializedName: \"properties.elasticPoolId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseId: {\n        serializedName: \"properties.databaseId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      currentServiceObjectiveName: {\n        serializedName: \"properties.currentServiceObjectiveName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedServiceObjectiveName: {\n        serializedName: \"properties.requestedServiceObjectiveName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultSecondaryLocation: {\n        serializedName: \"properties.defaultSecondaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverGroupId: {\n        serializedName: \"properties.failoverGroupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceDatabaseDeletionDate: {\n        serializedName: \"properties.sourceDatabaseDeletionDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      recoveryServicesRecoveryPointId: {\n        serializedName: \"properties.recoveryServicesRecoveryPointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      longTermRetentionBackupResourceId: {\n        serializedName: \"properties.longTermRetentionBackupResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorableDroppedDatabaseId: {\n        serializedName: \"properties.restorableDroppedDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogCollation: {\n        serializedName: \"properties.catalogCollation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxLogSizeBytes: {\n        serializedName: \"properties.maxLogSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      readScale: {\n        serializedName: \"properties.readScale\",\n        type: {\n          name: \"String\"\n        }\n      },\n      highAvailabilityReplicaCount: {\n        serializedName: \"properties.highAvailabilityReplicaCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      secondaryType: {\n        serializedName: \"properties.secondaryType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentSku: {\n        serializedName: \"properties.currentSku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      autoPauseDelay: {\n        serializedName: \"properties.autoPauseDelay\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentBackupStorageRedundancy: {\n        serializedName: \"properties.currentBackupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minCapacity: {\n        serializedName: \"properties.minCapacity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pausedDate: {\n        serializedName: \"properties.pausedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resumedDate: {\n        serializedName: \"properties.resumedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isLedgerOn: {\n        serializedName: \"properties.isLedgerOn\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isInfraEncryptionEnabled: {\n        serializedName: \"properties.isInfraEncryptionEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      federatedClientId: {\n        serializedName: \"properties.federatedClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      primaryDelegatedIdentityClientId: {\n        serializedName: \"properties.primaryDelegatedIdentityClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ResourceMoveDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ResourceMoveDefinition\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportExistingDatabaseDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportExistingDatabaseDefinition\",\n    modelProperties: {\n      storageKeyType: {\n        serializedName: \"storageKeyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKey: {\n        serializedName: \"storageKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageUri: {\n        serializedName: \"storageUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"administratorLogin\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"administratorLoginPassword\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      networkIsolation: {\n        serializedName: \"networkIsolation\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkIsolationSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExportDatabaseDefinition: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExportDatabaseDefinition\",\n    modelProperties: {\n      storageKeyType: {\n        serializedName: \"storageKeyType\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKey: {\n        serializedName: \"storageKey\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      storageUri: {\n        serializedName: \"storageUri\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"administratorLogin\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"administratorLoginPassword\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      authenticationType: {\n        serializedName: \"authenticationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      networkIsolation: {\n        serializedName: \"networkIsolation\",\n        type: {\n          name: \"Composite\",\n          className: \"NetworkIsolationSettings\"\n        }\n      }\n    }\n  }\n};\n\nexport const CopyLongTermRetentionBackupParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"CopyLongTermRetentionBackupParameters\",\n    modelProperties: {\n      targetSubscriptionId: {\n        serializedName: \"properties.targetSubscriptionId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetResourceGroup: {\n        serializedName: \"properties.targetResourceGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerResourceId: {\n        serializedName: \"properties.targetServerResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetServerFullyQualifiedDomainName: {\n        serializedName: \"properties.targetServerFullyQualifiedDomainName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetDatabaseName: {\n        serializedName: \"properties.targetDatabaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      targetBackupStorageRedundancy: {\n        serializedName: \"properties.targetBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateLongTermRetentionBackupParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateLongTermRetentionBackupParameters\",\n    modelProperties: {\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LongTermRetentionBackupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LongTermRetentionBackupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"LongTermRetentionBackup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceLongTermRetentionBackupListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceLongTermRetentionBackupListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstanceLongTermRetentionBackup\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstance\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePecProperty: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePecProperty\",\n    modelProperties: {\n      id: {\n        serializedName: \"id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateEndpointConnectionProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceExternalAdministrator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceExternalAdministrator\",\n    modelProperties: {\n      administratorType: {\n        serializedName: \"administratorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      principalType: {\n        serializedName: \"principalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"login\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sid: {\n        serializedName: \"sid\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      azureADOnlyAuthentication: {\n        serializedName: \"azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServicePrincipal: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServicePrincipal\",\n    modelProperties: {\n      principalId: {\n        serializedName: \"principalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientId: {\n        serializedName: \"clientId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tenantId: {\n        serializedName: \"tenantId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      type: {\n        serializedName: \"type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceUpdate\",\n    modelProperties: {\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedInstanceCreateMode: {\n        serializedName: \"properties.managedInstanceCreateMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"properties.administratorLogin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"properties.administratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnetId: {\n        serializedName: \"properties.subnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vCores: {\n        serializedName: \"properties.vCores\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageSizeInGB: {\n        serializedName: \"properties.storageSizeInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsZone: {\n        serializedName: \"properties.dnsZone\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsZonePartner: {\n        serializedName: \"properties.dnsZonePartner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicDataEndpointEnabled: {\n        serializedName: \"properties.publicDataEndpointEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      sourceManagedInstanceId: {\n        serializedName: \"properties.sourceManagedInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      proxyOverride: {\n        serializedName: \"properties.proxyOverride\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timezoneId: {\n        serializedName: \"properties.timezoneId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instancePoolId: {\n        serializedName: \"properties.instancePoolId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstancePecProperty\"\n            }\n          }\n        }\n      },\n      minimalTlsVersion: {\n        serializedName: \"properties.minimalTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentBackupStorageRedundancy: {\n        serializedName: \"properties.currentBackupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      primaryUserAssignedIdentityId: {\n        serializedName: \"properties.primaryUserAssignedIdentityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyId: {\n        serializedName: \"properties.keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administrators: {\n        serializedName: \"properties.administrators\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstanceExternalAdministrator\"\n        }\n      },\n      servicePrincipal: {\n        serializedName: \"properties.servicePrincipal\",\n        type: {\n          name: \"Composite\",\n          className: \"ServicePrincipal\"\n        }\n      }\n    }\n  }\n};\n\nexport const TopQueriesListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TopQueriesListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"TopQueries\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TopQueries: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TopQueries\",\n    modelProperties: {\n      numberOfQueries: {\n        serializedName: \"numberOfQueries\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      aggregationFunction: {\n        serializedName: \"aggregationFunction\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      observationMetric: {\n        serializedName: \"observationMetric\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervalType: {\n        serializedName: \"intervalType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"startTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"endTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queries: {\n        serializedName: \"queries\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryStatisticsProperties\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorableDroppedDatabase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedManagedDatabaseListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedManagedDatabaseListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RestorableDroppedManagedDatabase\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerConnectionPolicyListResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerConnectionPolicyListResult\",\n    modelProperties: {\n      value: {\n        serializedName: \"value\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerConnectionPolicy\"\n            }\n          }\n        }\n      },\n      nextLink: {\n        serializedName: \"nextLink\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SloUsageMetric: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SloUsageMetric\",\n    modelProperties: {\n      serviceLevelObjective: {\n        serializedName: \"serviceLevelObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceLevelObjectiveId: {\n        serializedName: \"serviceLevelObjectiveId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      inRangeTimeRatio: {\n        serializedName: \"inRangeTimeRatio\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationImpact: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationImpact\",\n    modelProperties: {\n      name: {\n        serializedName: \"name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      unit: {\n        serializedName: \"unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      changeValueAbsolute: {\n        serializedName: \"changeValueAbsolute\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      changeValueRelative: {\n        serializedName: \"changeValueRelative\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityEventsFilterParameters: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityEventsFilterParameters\",\n    modelProperties: {\n      eventTime: {\n        serializedName: \"eventTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      showServerRecords: {\n        serializedName: \"showServerRecords\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties\n    }\n  }\n};\n\nexport const TrackedResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TrackedResource\",\n    modelProperties: {\n      ...Resource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        required: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      }\n    }\n  }\n};\n\nexport const ProxyResourceWithWritableName: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ProxyResourceWithWritableName\",\n    modelProperties: {\n      ...ResourceWithWritableName.type.modelProperties\n    }\n  }\n};\n\nexport const RecoverableDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableDatabase\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      edition: {\n        serializedName: \"properties.edition\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serviceLevelObjective: {\n        serializedName: \"properties.serviceLevelObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolName: {\n        serializedName: \"properties.elasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastAvailableBackupDate: {\n        serializedName: \"properties.lastAvailableBackupDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dataMaskingState: {\n        serializedName: \"properties.dataMaskingState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      exemptPrincipals: {\n        serializedName: \"properties.exemptPrincipals\",\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationPrincipals: {\n        serializedName: \"properties.applicationPrincipals\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maskingLevel: {\n        serializedName: \"properties.maskingLevel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataMaskingRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataMaskingRule\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      idPropertiesId: {\n        serializedName: \"properties.id\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      aliasName: {\n        serializedName: \"properties.aliasName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ruleState: {\n        serializedName: \"properties.ruleState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      schemaName: {\n        serializedName: \"properties.schemaName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      columnName: {\n        serializedName: \"properties.columnName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maskingFunction: {\n        serializedName: \"properties.maskingFunction\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Default\", \"CCN\", \"Email\", \"Number\", \"SSN\", \"Text\"]\n        }\n      },\n      numberFrom: {\n        serializedName: \"properties.numberFrom\",\n        type: {\n          name: \"String\"\n        }\n      },\n      numberTo: {\n        serializedName: \"properties.numberTo\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prefixSize: {\n        serializedName: \"properties.prefixSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      suffixSize: {\n        serializedName: \"properties.suffixSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      replacementString: {\n        serializedName: \"properties.replacementString\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const GeoBackupPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"GeoBackupPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        required: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Disabled\", \"Enabled\"]\n        }\n      },\n      storageType: {\n        serializedName: \"properties.storageType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerCommunicationLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerCommunicationLink\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerServer: {\n        serializedName: \"properties.partnerServer\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServiceObjective: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServiceObjective\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      serviceObjectiveName: {\n        serializedName: \"properties.serviceObjectiveName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isDefault: {\n        serializedName: \"properties.isDefault\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isSystem: {\n        serializedName: \"properties.isSystem\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      enabled: {\n        serializedName: \"properties.enabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolActivity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolActivity\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"properties.errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        serializedName: \"properties.operationId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDatabaseDtuMax: {\n        serializedName: \"properties.requestedDatabaseDtuMax\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDatabaseDtuMin: {\n        serializedName: \"properties.requestedDatabaseDtuMin\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDtu: {\n        serializedName: \"properties.requestedDtu\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedElasticPoolName: {\n        serializedName: \"properties.requestedElasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedStorageLimitInGB: {\n        serializedName: \"properties.requestedStorageLimitInGB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      elasticPoolName: {\n        serializedName: \"properties.elasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedStorageLimitInMB: {\n        serializedName: \"properties.requestedStorageLimitInMB\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDatabaseDtuGuarantee: {\n        serializedName: \"properties.requestedDatabaseDtuGuarantee\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDatabaseDtuCap: {\n        serializedName: \"properties.requestedDatabaseDtuCap\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedDtuGuarantee: {\n        serializedName: \"properties.requestedDtuGuarantee\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolDatabaseActivity: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolDatabaseActivity\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"properties.errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationId: {\n        serializedName: \"properties.operationId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      requestedElasticPoolName: {\n        serializedName: \"properties.requestedElasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentElasticPoolName: {\n        serializedName: \"properties.currentElasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentServiceObjective: {\n        serializedName: \"properties.currentServiceObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedServiceObjective: {\n        serializedName: \"properties.requestedServiceObjective\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedDatabaseBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedDatabaseBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      predicateExpression: {\n        serializedName: \"properties.predicateExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ExtendedServerBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ExtendedServerBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      isDevopsAuditEnabled: {\n        serializedName: \"properties.isDevopsAuditEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      predicateExpression: {\n        serializedName: \"properties.predicateExpression\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      isDevopsAuditEnabled: {\n        serializedName: \"properties.isDevopsAuditEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseBlobAuditingPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseBlobAuditingPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      auditActionsAndGroups: {\n        serializedName: \"properties.auditActionsAndGroups\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      isStorageSecondaryKeyInUse: {\n        serializedName: \"properties.isStorageSecondaryKeyInUse\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      queueDelayMs: {\n        serializedName: \"properties.queueDelayMs\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedAction: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedAction\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recommendationReason: {\n        serializedName: \"properties.recommendationReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      validSince: {\n        serializedName: \"properties.validSince\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastRefresh: {\n        serializedName: \"properties.lastRefresh\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedActionStateInfo\"\n        }\n      },\n      isExecutableAction: {\n        serializedName: \"properties.isExecutableAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isRevertableAction: {\n        serializedName: \"properties.isRevertableAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isArchivedAction: {\n        serializedName: \"properties.isArchivedAction\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      executeActionStartTime: {\n        serializedName: \"properties.executeActionStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      executeActionDuration: {\n        serializedName: \"properties.executeActionDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      revertActionStartTime: {\n        serializedName: \"properties.revertActionStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      revertActionDuration: {\n        serializedName: \"properties.revertActionDuration\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      executeActionInitiatedBy: {\n        serializedName: \"properties.executeActionInitiatedBy\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"User\", \"System\"]\n        }\n      },\n      executeActionInitiatedTime: {\n        serializedName: \"properties.executeActionInitiatedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      revertActionInitiatedBy: {\n        serializedName: \"properties.revertActionInitiatedBy\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"User\", \"System\"]\n        }\n      },\n      revertActionInitiatedTime: {\n        serializedName: \"properties.revertActionInitiatedTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      score: {\n        serializedName: \"properties.score\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      implementationDetails: {\n        serializedName: \"properties.implementationDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedActionImplementationInfo\"\n        }\n      },\n      errorDetails: {\n        serializedName: \"properties.errorDetails\",\n        type: {\n          name: \"Composite\",\n          className: \"RecommendedActionErrorInfo\"\n        }\n      },\n      estimatedImpact: {\n        serializedName: \"properties.estimatedImpact\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedActionImpactRecord\"\n            }\n          }\n        }\n      },\n      observedImpact: {\n        serializedName: \"properties.observedImpact\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedActionImpactRecord\"\n            }\n          }\n        }\n      },\n      timeSeries: {\n        serializedName: \"properties.timeSeries\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedActionMetricInfo\"\n            }\n          }\n        }\n      },\n      linkedObjects: {\n        serializedName: \"properties.linkedObjects\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      details: {\n        serializedName: \"properties.details\",\n        readOnly: true,\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Dictionary\", value: { type: { name: \"any\" } } }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Advisor: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Advisor\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      advisorStatus: {\n        serializedName: \"properties.advisorStatus\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"GA\",\n            \"PublicPreview\",\n            \"LimitedPublicPreview\",\n            \"PrivatePreview\"\n          ]\n        }\n      },\n      autoExecuteStatus: {\n        serializedName: \"properties.autoExecuteStatus\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\", \"Default\"]\n        }\n      },\n      autoExecuteStatusInheritedFrom: {\n        serializedName: \"properties.autoExecuteStatusInheritedFrom\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Default\",\n            \"Subscription\",\n            \"Server\",\n            \"ElasticPool\",\n            \"Database\"\n          ]\n        }\n      },\n      recommendationsStatus: {\n        serializedName: \"properties.recommendationsStatus\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastChecked: {\n        serializedName: \"properties.lastChecked\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      recommendedActions: {\n        serializedName: \"properties.recommendedActions\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"RecommendedAction\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseAutomaticTuning: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseAutomaticTuning\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      desiredState: {\n        serializedName: \"properties.desiredState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Inherit\", \"Custom\", \"Auto\", \"Unspecified\"]\n        }\n      },\n      actualState: {\n        serializedName: \"properties.actualState\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Inherit\", \"Custom\", \"Auto\", \"Unspecified\"]\n        }\n      },\n      options: {\n        serializedName: \"properties.options\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: { name: \"Composite\", className: \"AutomaticTuningOptions\" }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseColumn: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseColumn\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      columnType: {\n        serializedName: \"properties.columnType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      temporalType: {\n        serializedName: \"properties.temporalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memoryOptimized: {\n        serializedName: \"properties.memoryOptimized\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isComputed: {\n        serializedName: \"properties.isComputed\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseSchema: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseSchema\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties\n    }\n  }\n};\n\nexport const DatabaseSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseTable: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseTable\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      temporalType: {\n        serializedName: \"properties.temporalType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      memoryOptimized: {\n        serializedName: \"properties.memoryOptimized\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseVulnerabilityAssessmentRuleBaseline: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseVulnerabilityAssessmentRuleBaseline\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      baselineResults: {\n        serializedName: \"properties.baselineResults\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"DatabaseVulnerabilityAssessmentRuleBaselineItem\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseVulnerabilityAssessment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseVulnerabilityAssessment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasKey: {\n        serializedName: \"properties.storageContainerSasKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurringScans: {\n        serializedName: \"properties.recurringScans\",\n        type: {\n          name: \"Composite\",\n          className: \"VulnerabilityAssessmentRecurringScansProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const VulnerabilityAssessmentScanRecord: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VulnerabilityAssessmentScanRecord\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      scanId: {\n        serializedName: \"properties.scanId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      triggerType: {\n        serializedName: \"properties.triggerType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      errors: {\n        serializedName: \"properties.errors\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"VulnerabilityAssessmentScanError\"\n            }\n          }\n        }\n      },\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      numberOfFailedSecurityChecks: {\n        serializedName: \"properties.numberOfFailedSecurityChecks\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseVulnerabilityAssessmentScansExport: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseVulnerabilityAssessmentScansExport\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      exportedReportLocation: {\n        serializedName: \"properties.exportedReportLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DataWarehouseUserActivities: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DataWarehouseUserActivities\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      activeQueriesCount: {\n        serializedName: \"properties.activeQueriesCount\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DeletedServer: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DeletedServer\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      deletionTime: {\n        serializedName: \"properties.deletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      originalId: {\n        serializedName: \"properties.originalId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPoolOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPoolOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      elasticPoolName: {\n        serializedName: \"properties.elasticPoolName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationFriendlyName: {\n        serializedName: \"properties.operationFriendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorDescription: {\n        serializedName: \"properties.errorDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isUserError: {\n        serializedName: \"properties.isUserError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedCompletionTime: {\n        serializedName: \"properties.estimatedCompletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isCancellable: {\n        serializedName: \"properties.isCancellable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const EncryptionProtector: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"EncryptionProtector\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subregion: {\n        serializedName: \"properties.subregion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyName: {\n        serializedName: \"properties.serverKeyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyType: {\n        serializedName: \"properties.serverKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoRotationEnabled: {\n        serializedName: \"properties.autoRotationEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const FailoverGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FailoverGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      readWriteEndpoint: {\n        serializedName: \"properties.readWriteEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"FailoverGroupReadWriteEndpoint\"\n        }\n      },\n      readOnlyEndpoint: {\n        serializedName: \"properties.readOnlyEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"FailoverGroupReadOnlyEndpoint\"\n        }\n      },\n      replicationRole: {\n        serializedName: \"properties.replicationRole\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationState: {\n        serializedName: \"properties.replicationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerServers: {\n        serializedName: \"properties.partnerServers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PartnerInfo\"\n            }\n          }\n        }\n      },\n      databases: {\n        serializedName: \"properties.databases\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const InstanceFailoverGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstanceFailoverGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      readWriteEndpoint: {\n        serializedName: \"properties.readWriteEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceFailoverGroupReadWriteEndpoint\"\n        }\n      },\n      readOnlyEndpoint: {\n        serializedName: \"properties.readOnlyEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"InstanceFailoverGroupReadOnlyEndpoint\"\n        }\n      },\n      replicationRole: {\n        serializedName: \"properties.replicationRole\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      replicationState: {\n        serializedName: \"properties.replicationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerRegions: {\n        serializedName: \"properties.partnerRegions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PartnerRegionInfo\"\n            }\n          }\n        }\n      },\n      managedInstancePairs: {\n        serializedName: \"properties.managedInstancePairs\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstancePairInfo\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobCredential: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobCredential\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      username: {\n        serializedName: \"properties.username\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"properties.password\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobExecution: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobExecution\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      jobVersion: {\n        serializedName: \"properties.jobVersion\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      stepName: {\n        serializedName: \"properties.stepName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      stepId: {\n        serializedName: \"properties.stepId\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      jobExecutionId: {\n        serializedName: \"properties.jobExecutionId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      lifecycle: {\n        serializedName: \"properties.lifecycle\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      createTime: {\n        serializedName: \"properties.createTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      currentAttempts: {\n        serializedName: \"properties.currentAttempts\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentAttemptStartTime: {\n        serializedName: \"properties.currentAttemptStartTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      lastMessage: {\n        serializedName: \"properties.lastMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      target: {\n        serializedName: \"properties.target\",\n        type: {\n          name: \"Composite\",\n          className: \"JobExecutionTarget\"\n        }\n      }\n    }\n  }\n};\n\nexport const Job: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Job\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      description: {\n        defaultValue: \"\",\n        serializedName: \"properties.description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      schedule: {\n        serializedName: \"properties.schedule\",\n        type: {\n          name: \"Composite\",\n          className: \"JobSchedule\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobStep: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobStep\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      stepId: {\n        serializedName: \"properties.stepId\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      targetGroup: {\n        serializedName: \"properties.targetGroup\",\n        type: {\n          name: \"String\"\n        }\n      },\n      credential: {\n        serializedName: \"properties.credential\",\n        type: {\n          name: \"String\"\n        }\n      },\n      action: {\n        serializedName: \"properties.action\",\n        type: {\n          name: \"Composite\",\n          className: \"JobStepAction\"\n        }\n      },\n      output: {\n        serializedName: \"properties.output\",\n        type: {\n          name: \"Composite\",\n          className: \"JobStepOutput\"\n        }\n      },\n      executionOptions: {\n        serializedName: \"properties.executionOptions\",\n        type: {\n          name: \"Composite\",\n          className: \"JobStepExecutionOptions\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobTargetGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobTargetGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      members: {\n        serializedName: \"properties.members\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"JobTarget\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const JobVersion: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobVersion\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties\n    }\n  }\n};\n\nexport const LongTermRetentionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LongTermRetentionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      weeklyRetention: {\n        serializedName: \"properties.weeklyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      monthlyRetention: {\n        serializedName: \"properties.monthlyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      yearlyRetention: {\n        serializedName: \"properties.yearlyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      weekOfYear: {\n        serializedName: \"properties.weekOfYear\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindowOptions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindowOptions\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      isEnabled: {\n        serializedName: \"properties.isEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      maintenanceWindowCycles: {\n        serializedName: \"properties.maintenanceWindowCycles\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceWindowTimeRange\"\n            }\n          }\n        }\n      },\n      minDurationInMinutes: {\n        serializedName: \"properties.minDurationInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      defaultDurationInMinutes: {\n        serializedName: \"properties.defaultDurationInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minCycles: {\n        serializedName: \"properties.minCycles\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      timeGranularityInMinutes: {\n        serializedName: \"properties.timeGranularityInMinutes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      allowMultipleMaintenanceWindowsPerCycle: {\n        serializedName: \"properties.allowMultipleMaintenanceWindowsPerCycle\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const MaintenanceWindows: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"MaintenanceWindows\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      timeRanges: {\n        serializedName: \"properties.timeRanges\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"MaintenanceWindowTimeRange\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedBackupShortTermRetentionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedBackupShortTermRetentionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceQuery: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceQuery\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      queryText: {\n        serializedName: \"properties.queryText\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const QueryStatistics: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"QueryStatistics\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queryId: {\n        serializedName: \"properties.queryId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      intervals: {\n        serializedName: \"properties.intervals\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"QueryMetricInterval\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabaseRestoreDetailsResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabaseRestoreDetailsResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentRestoringFileName: {\n        serializedName: \"properties.currentRestoringFileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastRestoredFileName: {\n        serializedName: \"properties.lastRestoredFileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastRestoredFileTime: {\n        serializedName: \"properties.lastRestoredFileTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      percentCompleted: {\n        serializedName: \"properties.percentCompleted\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unrestorableFiles: {\n        serializedName: \"properties.unrestorableFiles\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      numberOfFilesDetected: {\n        serializedName: \"properties.numberOfFilesDetected\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastUploadedFileName: {\n        serializedName: \"properties.lastUploadedFileName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastUploadedFileTime: {\n        serializedName: \"properties.lastUploadedFileTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      blockReason: {\n        serializedName: \"properties.blockReason\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabaseSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabaseSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"New\", \"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const SecurityEvent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SecurityEvent\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      eventTime: {\n        serializedName: \"properties.eventTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      securityEventType: {\n        serializedName: \"properties.securityEventType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Undefined\",\n            \"SqlInjectionVulnerability\",\n            \"SqlInjectionExploit\"\n          ]\n        }\n      },\n      subscription: {\n        serializedName: \"properties.subscription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      server: {\n        serializedName: \"properties.server\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      database: {\n        serializedName: \"properties.database\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      clientIp: {\n        serializedName: \"properties.clientIp\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      applicationName: {\n        serializedName: \"properties.applicationName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      principalName: {\n        serializedName: \"properties.principalName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      securityEventSqlInjectionAdditionalProperties: {\n        serializedName:\n          \"properties.securityEventSqlInjectionAdditionalProperties\",\n        type: {\n          name: \"Composite\",\n          className: \"SecurityEventSqlInjectionAdditionalProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabel: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabel\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schemaName: {\n        serializedName: \"properties.schemaName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      tableName: {\n        serializedName: \"properties.tableName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      columnName: {\n        serializedName: \"properties.columnName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      labelName: {\n        serializedName: \"properties.labelName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      labelId: {\n        serializedName: \"properties.labelId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      informationType: {\n        serializedName: \"properties.informationType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      informationTypeId: {\n        serializedName: \"properties.informationTypeId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isDisabled: {\n        serializedName: \"properties.isDisabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      rank: {\n        serializedName: \"properties.rank\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"None\", \"Low\", \"Medium\", \"High\", \"Critical\"]\n        }\n      }\n    }\n  }\n};\n\nexport const SensitivityLabelUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SensitivityLabelUpdate\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      op: {\n        serializedName: \"properties.op\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"set\", \"remove\"]\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      column: {\n        serializedName: \"properties.column\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sensitivityLabel: {\n        serializedName: \"properties.sensitivityLabel\",\n        type: {\n          name: \"Composite\",\n          className: \"SensitivityLabel\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecommendedSensitivityLabelUpdate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecommendedSensitivityLabelUpdate\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      op: {\n        serializedName: \"properties.op\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"enable\", \"disable\"]\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"String\"\n        }\n      },\n      table: {\n        serializedName: \"properties.table\",\n        type: {\n          name: \"String\"\n        }\n      },\n      column: {\n        serializedName: \"properties.column\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedTransparentDataEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedTransparentDataEncryption\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceAdministrator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceAdministrator\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      administratorType: {\n        serializedName: \"properties.administratorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"properties.login\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sid: {\n        serializedName: \"properties.sid\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceAzureADOnlyAuthentication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceAzureADOnlyAuthentication\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      azureADOnlyAuthentication: {\n        serializedName: \"properties.azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceEncryptionProtector: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceEncryptionProtector\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyName: {\n        serializedName: \"properties.serverKeyName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyType: {\n        serializedName: \"properties.serverKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      autoRotationEnabled: {\n        serializedName: \"properties.autoRotationEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceKey\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyType: {\n        serializedName: \"properties.serverKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      autoRotationEnabled: {\n        serializedName: \"properties.autoRotationEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceLongTermRetentionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceLongTermRetentionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      weeklyRetention: {\n        serializedName: \"properties.weeklyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      monthlyRetention: {\n        serializedName: \"properties.monthlyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      yearlyRetention: {\n        serializedName: \"properties.yearlyRetention\",\n        type: {\n          name: \"String\"\n        }\n      },\n      weekOfYear: {\n        serializedName: \"properties.weekOfYear\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      managedInstanceName: {\n        serializedName: \"properties.managedInstanceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationFriendlyName: {\n        serializedName: \"properties.operationFriendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorDescription: {\n        serializedName: \"properties.errorDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isUserError: {\n        serializedName: \"properties.isUserError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedCompletionTime: {\n        serializedName: \"properties.estimatedCompletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isCancellable: {\n        serializedName: \"properties.isCancellable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      operationParameters: {\n        serializedName: \"properties.operationParameters\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstanceOperationParametersPair\"\n        }\n      },\n      operationSteps: {\n        serializedName: \"properties.operationSteps\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstanceOperationSteps\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateEndpointConnection\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateEndpointProperty\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateLinkServiceConnectionStateProperty\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstancePrivateLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstancePrivateLink\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstancePrivateLinkProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const TdeCertificate: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TdeCertificate\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      privateBlob: {\n        serializedName: \"properties.privateBlob\",\n        type: {\n          name: \"String\"\n        }\n      },\n      certPassword: {\n        serializedName: \"properties.certPassword\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceVulnerabilityAssessment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceVulnerabilityAssessment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasKey: {\n        serializedName: \"properties.storageContainerSasKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurringScans: {\n        serializedName: \"properties.recurringScans\",\n        type: {\n          name: \"Composite\",\n          className: \"VulnerabilityAssessmentRecurringScansProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedServerSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedServerSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const OperationsHealth: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OperationsHealth\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      health: {\n        serializedName: \"properties.health\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateEndpointConnection: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateEndpointConnection\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      privateEndpoint: {\n        serializedName: \"properties.privateEndpoint\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateEndpointProperty\"\n        }\n      },\n      privateLinkServiceConnectionState: {\n        serializedName: \"properties.privateLinkServiceConnectionState\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkServiceConnectionStateProperty\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const PrivateLinkResource: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"PrivateLinkResource\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      properties: {\n        serializedName: \"properties\",\n        type: {\n          name: \"Composite\",\n          className: \"PrivateLinkResourceProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecoverableManagedDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RecoverableManagedDatabase\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      lastAvailableBackupDate: {\n        serializedName: \"properties.lastAvailableBackupDate\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorePoint: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorePoint\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointType: {\n        serializedName: \"properties.restorePointType\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"CONTINUOUS\", \"DISCRETE\"]\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointCreationDate: {\n        serializedName: \"properties.restorePointCreationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointLabel: {\n        serializedName: \"properties.restorePointLabel\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerAutomaticTuning: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerAutomaticTuning\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      desiredState: {\n        serializedName: \"properties.desiredState\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Custom\", \"Auto\", \"Unspecified\"]\n        }\n      },\n      actualState: {\n        serializedName: \"properties.actualState\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Custom\", \"Auto\", \"Unspecified\"]\n        }\n      },\n      options: {\n        serializedName: \"properties.options\",\n        type: {\n          name: \"Dictionary\",\n          value: {\n            type: {\n              name: \"Composite\",\n              className: \"AutomaticTuningServerOptions\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServerAzureADAdministrator: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerAzureADAdministrator\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      administratorType: {\n        serializedName: \"properties.administratorType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      login: {\n        serializedName: \"properties.login\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sid: {\n        serializedName: \"properties.sid\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      tenantId: {\n        serializedName: \"properties.tenantId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      azureADOnlyAuthentication: {\n        serializedName: \"properties.azureADOnlyAuthentication\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerAzureADOnlyAuthentication: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerAzureADOnlyAuthentication\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      azureADOnlyAuthentication: {\n        serializedName: \"properties.azureADOnlyAuthentication\",\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerDevOpsAuditingSettings: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerDevOpsAuditingSettings\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      isAzureMonitorTargetEnabled: {\n        serializedName: \"properties.isAzureMonitorTargetEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountSubscriptionId: {\n        serializedName: \"properties.storageAccountSubscriptionId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerDnsAlias: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerDnsAlias\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      azureDnsRecord: {\n        serializedName: \"properties.azureDnsRecord\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerKey: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerKey\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      subregion: {\n        serializedName: \"properties.subregion\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverKeyType: {\n        serializedName: \"properties.serverKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      uri: {\n        serializedName: \"properties.uri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbprint: {\n        serializedName: \"properties.thumbprint\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      autoRotationEnabled: {\n        serializedName: \"properties.autoRotationEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationFriendlyName: {\n        serializedName: \"properties.operationFriendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorDescription: {\n        serializedName: \"properties.errorDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isUserError: {\n        serializedName: \"properties.isUserError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedCompletionTime: {\n        serializedName: \"properties.estimatedCompletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isCancellable: {\n        serializedName: \"properties.isCancellable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerSecurityAlertPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerSecurityAlertPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      systemData: {\n        serializedName: \"systemData\",\n        type: {\n          name: \"Composite\",\n          className: \"SystemData\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      },\n      disabledAlerts: {\n        serializedName: \"properties.disabledAlerts\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAddresses: {\n        serializedName: \"properties.emailAddresses\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      emailAccountAdmins: {\n        serializedName: \"properties.emailAccountAdmins\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      storageEndpoint: {\n        serializedName: \"properties.storageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationTime: {\n        serializedName: \"properties.creationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerTrustGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerTrustGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      groupMembers: {\n        serializedName: \"properties.groupMembers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerInfo\"\n            }\n          }\n        }\n      },\n      trustScopes: {\n        serializedName: \"properties.trustScopes\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ServerVulnerabilityAssessment: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerVulnerabilityAssessment\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      storageContainerPath: {\n        serializedName: \"properties.storageContainerPath\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasKey: {\n        serializedName: \"properties.storageContainerSasKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageAccountAccessKey: {\n        serializedName: \"properties.storageAccountAccessKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recurringScans: {\n        serializedName: \"properties.recurringScans\",\n        type: {\n          name: \"Composite\",\n          className: \"VulnerabilityAssessmentRecurringScansProperties\"\n        }\n      }\n    }\n  }\n};\n\nexport const SqlAgentConfiguration: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SqlAgentConfiguration\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SubscriptionUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SubscriptionUsage\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"properties.currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"properties.limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"properties.unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncAgent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncAgent\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      namePropertiesName: {\n        serializedName: \"properties.name\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      syncDatabaseId: {\n        serializedName: \"properties.syncDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      lastAliveTime: {\n        serializedName: \"properties.lastAliveTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isUpToDate: {\n        serializedName: \"properties.isUpToDate\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      expiryTime: {\n        serializedName: \"properties.expiryTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncAgentLinkedDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncAgentLinkedDatabase\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      databaseType: {\n        serializedName: \"properties.databaseType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseId: {\n        serializedName: \"properties.databaseId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      userName: {\n        serializedName: \"properties.userName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      interval: {\n        serializedName: \"properties.interval\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      lastSyncTime: {\n        serializedName: \"properties.lastSyncTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      conflictResolutionPolicy: {\n        serializedName: \"properties.conflictResolutionPolicy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncDatabaseId: {\n        serializedName: \"properties.syncDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hubDatabaseUserName: {\n        serializedName: \"properties.hubDatabaseUserName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hubDatabasePassword: {\n        serializedName: \"properties.hubDatabasePassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncState: {\n        serializedName: \"properties.syncState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      schema: {\n        serializedName: \"properties.schema\",\n        type: {\n          name: \"Composite\",\n          className: \"SyncGroupSchema\"\n        }\n      },\n      enableConflictLogging: {\n        serializedName: \"properties.enableConflictLogging\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      conflictLoggingRetentionInDays: {\n        serializedName: \"properties.conflictLoggingRetentionInDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      usePrivateLinkConnection: {\n        serializedName: \"properties.usePrivateLinkConnection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateEndpointName: {\n        serializedName: \"properties.privateEndpointName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const SyncMember: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"SyncMember\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      databaseType: {\n        serializedName: \"properties.databaseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncAgentId: {\n        serializedName: \"properties.syncAgentId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sqlServerDatabaseId: {\n        serializedName: \"properties.sqlServerDatabaseId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      syncMemberAzureDatabaseResourceId: {\n        serializedName: \"properties.syncMemberAzureDatabaseResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      usePrivateLinkConnection: {\n        serializedName: \"properties.usePrivateLinkConnection\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      privateEndpointName: {\n        serializedName: \"properties.privateEndpointName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      userName: {\n        serializedName: \"properties.userName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      password: {\n        serializedName: \"properties.password\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncDirection: {\n        serializedName: \"properties.syncDirection\",\n        type: {\n          name: \"String\"\n        }\n      },\n      syncState: {\n        serializedName: \"properties.syncState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const TimeZone: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"TimeZone\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      timeZoneId: {\n        serializedName: \"properties.timeZoneId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      displayName: {\n        serializedName: \"properties.displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const UpdateManagedInstanceDnsServersOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"UpdateManagedInstanceDnsServersOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualNetworkRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualNetworkRule\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      virtualNetworkSubnetId: {\n        serializedName: \"properties.virtualNetworkSubnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      ignoreMissingVnetServiceEndpoint: {\n        serializedName: \"properties.ignoreMissingVnetServiceEndpoint\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadClassifier: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadClassifier\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      memberName: {\n        serializedName: \"properties.memberName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      label: {\n        serializedName: \"properties.label\",\n        type: {\n          name: \"String\"\n        }\n      },\n      context: {\n        serializedName: \"properties.context\",\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endTime: {\n        serializedName: \"properties.endTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      importance: {\n        serializedName: \"properties.importance\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const WorkloadGroup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"WorkloadGroup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      minResourcePercent: {\n        serializedName: \"properties.minResourcePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourcePercent: {\n        serializedName: \"properties.maxResourcePercent\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      minResourcePercentPerRequest: {\n        serializedName: \"properties.minResourcePercentPerRequest\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      maxResourcePercentPerRequest: {\n        serializedName: \"properties.maxResourcePercentPerRequest\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      importance: {\n        serializedName: \"properties.importance\",\n        type: {\n          name: \"String\"\n        }\n      },\n      queryExecutionTimeout: {\n        serializedName: \"properties.queryExecutionTimeout\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const LogicalDatabaseTransparentDataEncryption: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LogicalDatabaseTransparentDataEncryption\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      state: {\n        serializedName: \"properties.state\",\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      }\n    }\n  }\n};\n\nexport const BackupShortTermRetentionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"BackupShortTermRetentionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      retentionDays: {\n        serializedName: \"properties.retentionDays\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      diffBackupIntervalInHours: {\n        serializedName: \"properties.diffBackupIntervalInHours\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseExtensions: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseExtensions\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      operationMode: {\n        serializedName: \"properties.operationMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKeyType: {\n        serializedName: \"properties.storageKeyType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageKey: {\n        serializedName: \"properties.storageKey\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageUri: {\n        serializedName: \"properties.storageUri\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportExportExtensionsOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportExportExtensionsOperationResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      requestId: {\n        serializedName: \"properties.requestId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      requestType: {\n        serializedName: \"properties.requestType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"properties.errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseOperation: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseOperation\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operation: {\n        serializedName: \"properties.operation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      operationFriendlyName: {\n        serializedName: \"properties.operationFriendlyName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorCode: {\n        serializedName: \"properties.errorCode\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      errorDescription: {\n        serializedName: \"properties.errorDescription\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorSeverity: {\n        serializedName: \"properties.errorSeverity\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      isUserError: {\n        serializedName: \"properties.isUserError\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      estimatedCompletionTime: {\n        serializedName: \"properties.estimatedCompletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      description: {\n        serializedName: \"properties.description\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isCancellable: {\n        serializedName: \"properties.isCancellable\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      }\n    }\n  }\n};\n\nexport const DatabaseUsage: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"DatabaseUsage\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      displayName: {\n        serializedName: \"properties.displayName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      currentValue: {\n        serializedName: \"properties.currentValue\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      limit: {\n        serializedName: \"properties.limit\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      unit: {\n        serializedName: \"properties.unit\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LedgerDigestUploads: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LedgerDigestUploads\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      digestStorageEndpoint: {\n        serializedName: \"properties.digestStorageEndpoint\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\"Enabled\", \"Disabled\"]\n        }\n      }\n    }\n  }\n};\n\nexport const OutboundFirewallRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"OutboundFirewallRule\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ReplicationLink: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ReplicationLink\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      partnerServer: {\n        serializedName: \"properties.partnerServer\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerDatabase: {\n        serializedName: \"properties.partnerDatabase\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      partnerLocation: {\n        serializedName: \"properties.partnerLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      role: {\n        serializedName: \"properties.role\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Primary\",\n            \"Secondary\",\n            \"NonReadableSecondary\",\n            \"Source\",\n            \"Copy\"\n          ]\n        }\n      },\n      partnerRole: {\n        serializedName: \"properties.partnerRole\",\n        readOnly: true,\n        type: {\n          name: \"Enum\",\n          allowedValues: [\n            \"Primary\",\n            \"Secondary\",\n            \"NonReadableSecondary\",\n            \"Source\",\n            \"Copy\"\n          ]\n        }\n      },\n      replicationMode: {\n        serializedName: \"properties.replicationMode\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      startTime: {\n        serializedName: \"properties.startTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      percentComplete: {\n        serializedName: \"properties.percentComplete\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      replicationState: {\n        serializedName: \"properties.replicationState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      isTerminationAllowed: {\n        serializedName: \"properties.isTerminationAllowed\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      linkType: {\n        serializedName: \"properties.linkType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImportExportOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ImportExportOperationResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      requestId: {\n        serializedName: \"properties.requestId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      requestType: {\n        serializedName: \"properties.requestType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      queuedTime: {\n        serializedName: \"properties.queuedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      lastModifiedTime: {\n        serializedName: \"properties.lastModifiedTime\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      blobUri: {\n        serializedName: \"properties.blobUri\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      errorMessage: {\n        serializedName: \"properties.errorMessage\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"PrivateEndpointConnectionRequestStatus\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const LongTermRetentionBackupOperationResult: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LongTermRetentionBackupOperationResult\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      requestId: {\n        serializedName: \"properties.requestId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      operationType: {\n        serializedName: \"properties.operationType\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fromBackupResourceId: {\n        serializedName: \"properties.fromBackupResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      toBackupResourceId: {\n        serializedName: \"properties.toBackupResourceId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      targetBackupStorageRedundancy: {\n        serializedName: \"properties.targetBackupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        serializedName: \"properties.message\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const LongTermRetentionBackup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"LongTermRetentionBackup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      serverName: {\n        serializedName: \"properties.serverName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      serverCreateTime: {\n        serializedName: \"properties.serverCreateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseDeletionTime: {\n        serializedName: \"properties.databaseDeletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupTime: {\n        serializedName: \"properties.backupTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupExpirationTime: {\n        serializedName: \"properties.backupExpirationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupStorageRedundancy: {\n        serializedName: \"properties.backupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstanceLongTermRetentionBackup: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstanceLongTermRetentionBackup\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      managedInstanceName: {\n        serializedName: \"properties.managedInstanceName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedInstanceCreateTime: {\n        serializedName: \"properties.managedInstanceCreateTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseDeletionTime: {\n        serializedName: \"properties.databaseDeletionTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupTime: {\n        serializedName: \"properties.backupTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupExpirationTime: {\n        serializedName: \"properties.backupExpirationTime\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupStorageRedundancy: {\n        serializedName: \"properties.backupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedDatabase\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      location: {\n        serializedName: \"location\",\n        type: {\n          name: \"String\"\n        }\n      },\n      tags: {\n        serializedName: \"tags\",\n        type: {\n          name: \"Dictionary\",\n          value: { type: { name: \"String\" } }\n        }\n      },\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      deletionDate: {\n        serializedName: \"properties.deletionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      backupStorageRedundancy: {\n        serializedName: \"properties.backupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ServerConnectionPolicy: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ServerConnectionPolicy\",\n    modelProperties: {\n      ...ProxyResource.type.modelProperties,\n      location: {\n        serializedName: \"location\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      connectionType: {\n        serializedName: \"properties.connectionType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ElasticPool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ElasticPool\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      perDatabaseSettings: {\n        serializedName: \"properties.perDatabaseSettings\",\n        type: {\n          name: \"Composite\",\n          className: \"ElasticPoolPerDatabaseSettings\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const InstancePool: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"InstancePool\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      subnetId: {\n        serializedName: \"properties.subnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vCores: {\n        serializedName: \"properties.vCores\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const JobAgent: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"JobAgent\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      databaseId: {\n        serializedName: \"properties.databaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedDatabase\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      earliestRestorePoint: {\n        serializedName: \"properties.earliestRestorePoint\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      defaultSecondaryLocation: {\n        serializedName: \"properties.defaultSecondaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogCollation: {\n        serializedName: \"properties.catalogCollation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerUri: {\n        serializedName: \"properties.storageContainerUri\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorableDroppedDatabaseId: {\n        serializedName: \"properties.restorableDroppedDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      storageContainerSasToken: {\n        serializedName: \"properties.storageContainerSasToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverGroupId: {\n        serializedName: \"properties.failoverGroupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      longTermRetentionBackupResourceId: {\n        serializedName: \"properties.longTermRetentionBackupResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      autoCompleteRestore: {\n        serializedName: \"properties.autoCompleteRestore\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      lastBackupName: {\n        serializedName: \"properties.lastBackupName\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const VirtualCluster: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"VirtualCluster\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      subnetId: {\n        serializedName: \"properties.subnetId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      family: {\n        serializedName: \"properties.family\",\n        type: {\n          name: \"String\"\n        }\n      },\n      childResources: {\n        serializedName: \"properties.childResources\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"String\"\n            }\n          }\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Server: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Server\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"properties.administratorLogin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"properties.administratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      version: {\n        serializedName: \"properties.version\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ServerPrivateEndpointConnection\"\n            }\n          }\n        }\n      },\n      minimalTlsVersion: {\n        serializedName: \"properties.minimalTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicNetworkAccess: {\n        serializedName: \"properties.publicNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      },\n      workspaceFeature: {\n        serializedName: \"properties.workspaceFeature\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      primaryUserAssignedIdentityId: {\n        serializedName: \"properties.primaryUserAssignedIdentityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      federatedClientId: {\n        serializedName: \"properties.federatedClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      keyId: {\n        serializedName: \"properties.keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administrators: {\n        serializedName: \"properties.administrators\",\n        type: {\n          name: \"Composite\",\n          className: \"ServerExternalAdministrator\"\n        }\n      },\n      restrictOutboundNetworkAccess: {\n        serializedName: \"properties.restrictOutboundNetworkAccess\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Database: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"Database\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      kind: {\n        serializedName: \"kind\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedBy: {\n        serializedName: \"managedBy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"DatabaseIdentity\"\n        }\n      },\n      createMode: {\n        serializedName: \"properties.createMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxSizeBytes: {\n        serializedName: \"properties.maxSizeBytes\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      sampleName: {\n        serializedName: \"properties.sampleName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      elasticPoolId: {\n        serializedName: \"properties.elasticPoolId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      sourceDatabaseId: {\n        serializedName: \"properties.sourceDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      status: {\n        serializedName: \"properties.status\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      databaseId: {\n        serializedName: \"properties.databaseId\",\n        readOnly: true,\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      currentServiceObjectiveName: {\n        serializedName: \"properties.currentServiceObjectiveName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedServiceObjectiveName: {\n        serializedName: \"properties.requestedServiceObjectiveName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      defaultSecondaryLocation: {\n        serializedName: \"properties.defaultSecondaryLocation\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      failoverGroupId: {\n        serializedName: \"properties.failoverGroupId\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      sourceDatabaseDeletionDate: {\n        serializedName: \"properties.sourceDatabaseDeletionDate\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      recoveryServicesRecoveryPointId: {\n        serializedName: \"properties.recoveryServicesRecoveryPointId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      longTermRetentionBackupResourceId: {\n        serializedName: \"properties.longTermRetentionBackupResourceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      recoverableDatabaseId: {\n        serializedName: \"properties.recoverableDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorableDroppedDatabaseId: {\n        serializedName: \"properties.restorableDroppedDatabaseId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      catalogCollation: {\n        serializedName: \"properties.catalogCollation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maxLogSizeBytes: {\n        serializedName: \"properties.maxLogSizeBytes\",\n        readOnly: true,\n        type: {\n          name: \"Number\"\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      readScale: {\n        serializedName: \"properties.readScale\",\n        type: {\n          name: \"String\"\n        }\n      },\n      highAvailabilityReplicaCount: {\n        serializedName: \"properties.highAvailabilityReplicaCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      secondaryType: {\n        serializedName: \"properties.secondaryType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentSku: {\n        serializedName: \"properties.currentSku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      autoPauseDelay: {\n        serializedName: \"properties.autoPauseDelay\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      currentBackupStorageRedundancy: {\n        serializedName: \"properties.currentBackupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      minCapacity: {\n        serializedName: \"properties.minCapacity\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      pausedDate: {\n        serializedName: \"properties.pausedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      resumedDate: {\n        serializedName: \"properties.resumedDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isLedgerOn: {\n        serializedName: \"properties.isLedgerOn\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      isInfraEncryptionEnabled: {\n        serializedName: \"properties.isInfraEncryptionEnabled\",\n        readOnly: true,\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      federatedClientId: {\n        serializedName: \"properties.federatedClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      },\n      primaryDelegatedIdentityClientId: {\n        serializedName: \"properties.primaryDelegatedIdentityClientId\",\n        type: {\n          name: \"Uuid\"\n        }\n      }\n    }\n  }\n};\n\nexport const ManagedInstance: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"ManagedInstance\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      identity: {\n        serializedName: \"identity\",\n        type: {\n          name: \"Composite\",\n          className: \"ResourceIdentity\"\n        }\n      },\n      sku: {\n        serializedName: \"sku\",\n        type: {\n          name: \"Composite\",\n          className: \"Sku\"\n        }\n      },\n      provisioningState: {\n        serializedName: \"properties.provisioningState\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      managedInstanceCreateMode: {\n        serializedName: \"properties.managedInstanceCreateMode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      fullyQualifiedDomainName: {\n        serializedName: \"properties.fullyQualifiedDomainName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLogin: {\n        serializedName: \"properties.administratorLogin\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administratorLoginPassword: {\n        serializedName: \"properties.administratorLoginPassword\",\n        type: {\n          name: \"String\"\n        }\n      },\n      subnetId: {\n        serializedName: \"properties.subnetId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      state: {\n        serializedName: \"properties.state\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      licenseType: {\n        serializedName: \"properties.licenseType\",\n        type: {\n          name: \"String\"\n        }\n      },\n      vCores: {\n        serializedName: \"properties.vCores\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      storageSizeInGB: {\n        serializedName: \"properties.storageSizeInGB\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      collation: {\n        serializedName: \"properties.collation\",\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsZone: {\n        serializedName: \"properties.dnsZone\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      dnsZonePartner: {\n        serializedName: \"properties.dnsZonePartner\",\n        type: {\n          name: \"String\"\n        }\n      },\n      publicDataEndpointEnabled: {\n        serializedName: \"properties.publicDataEndpointEnabled\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      sourceManagedInstanceId: {\n        serializedName: \"properties.sourceManagedInstanceId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      restorePointInTime: {\n        serializedName: \"properties.restorePointInTime\",\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      proxyOverride: {\n        serializedName: \"properties.proxyOverride\",\n        type: {\n          name: \"String\"\n        }\n      },\n      timezoneId: {\n        serializedName: \"properties.timezoneId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      instancePoolId: {\n        serializedName: \"properties.instancePoolId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      maintenanceConfigurationId: {\n        serializedName: \"properties.maintenanceConfigurationId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      privateEndpointConnections: {\n        serializedName: \"properties.privateEndpointConnections\",\n        readOnly: true,\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ManagedInstancePecProperty\"\n            }\n          }\n        }\n      },\n      minimalTlsVersion: {\n        serializedName: \"properties.minimalTlsVersion\",\n        type: {\n          name: \"String\"\n        }\n      },\n      currentBackupStorageRedundancy: {\n        serializedName: \"properties.currentBackupStorageRedundancy\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      requestedBackupStorageRedundancy: {\n        serializedName: \"properties.requestedBackupStorageRedundancy\",\n        type: {\n          name: \"String\"\n        }\n      },\n      zoneRedundant: {\n        serializedName: \"properties.zoneRedundant\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      primaryUserAssignedIdentityId: {\n        serializedName: \"properties.primaryUserAssignedIdentityId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      keyId: {\n        serializedName: \"properties.keyId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      administrators: {\n        serializedName: \"properties.administrators\",\n        type: {\n          name: \"Composite\",\n          className: \"ManagedInstanceExternalAdministrator\"\n        }\n      },\n      servicePrincipal: {\n        serializedName: \"properties.servicePrincipal\",\n        type: {\n          name: \"Composite\",\n          className: \"ServicePrincipal\"\n        }\n      }\n    }\n  }\n};\n\nexport const RestorableDroppedManagedDatabase: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"RestorableDroppedManagedDatabase\",\n    modelProperties: {\n      ...TrackedResource.type.modelProperties,\n      databaseName: {\n        serializedName: \"properties.databaseName\",\n        readOnly: true,\n        type: {\n          name: \"String\"\n        }\n      },\n      creationDate: {\n        serializedName: \"properties.creationDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      deletionDate: {\n        serializedName: \"properties.deletionDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      },\n      earliestRestoreDate: {\n        serializedName: \"properties.earliestRestoreDate\",\n        readOnly: true,\n        type: {\n          name: \"DateTime\"\n        }\n      }\n    }\n  }\n};\n\nexport const FirewallRule: coreClient.CompositeMapper = {\n  type: {\n    name: \"Composite\",\n    className: \"FirewallRule\",\n    modelProperties: {\n      ...ProxyResourceWithWritableName.type.modelProperties,\n      startIpAddress: {\n        serializedName: \"properties.startIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      },\n      endIpAddress: {\n        serializedName: \"properties.endIpAddress\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport {\n  OperationParameter,\n  OperationURLParameter,\n  OperationQueryParameter\n} from \"@azure/core-client\";\nimport {\n  DataMaskingPolicy as DataMaskingPolicyMapper,\n  DataMaskingRule as DataMaskingRuleMapper,\n  GeoBackupPolicy as GeoBackupPolicyMapper,\n  Database as DatabaseMapper,\n  DatabaseUpdate as DatabaseUpdateMapper,\n  ResourceMoveDefinition as ResourceMoveDefinitionMapper,\n  ImportExistingDatabaseDefinition as ImportExistingDatabaseDefinitionMapper,\n  ExportDatabaseDefinition as ExportDatabaseDefinitionMapper,\n  ElasticPool as ElasticPoolMapper,\n  ElasticPoolUpdate as ElasticPoolUpdateMapper,\n  UnlinkParameters as UnlinkParametersMapper,\n  ServerCommunicationLink as ServerCommunicationLinkMapper,\n  ExtendedDatabaseBlobAuditingPolicy as ExtendedDatabaseBlobAuditingPolicyMapper,\n  ExtendedServerBlobAuditingPolicy as ExtendedServerBlobAuditingPolicyMapper,\n  ServerBlobAuditingPolicy as ServerBlobAuditingPolicyMapper,\n  DatabaseBlobAuditingPolicy as DatabaseBlobAuditingPolicyMapper,\n  Advisor as AdvisorMapper,\n  DatabaseAutomaticTuning as DatabaseAutomaticTuningMapper,\n  RecommendedAction as RecommendedActionMapper,\n  DatabaseSecurityAlertPolicy as DatabaseSecurityAlertPolicyMapper,\n  DatabaseVulnerabilityAssessmentRuleBaseline as DatabaseVulnerabilityAssessmentRuleBaselineMapper,\n  DatabaseVulnerabilityAssessment as DatabaseVulnerabilityAssessmentMapper,\n  EncryptionProtector as EncryptionProtectorMapper,\n  FailoverGroup as FailoverGroupMapper,\n  FailoverGroupUpdate as FailoverGroupUpdateMapper,\n  FirewallRule as FirewallRuleMapper,\n  FirewallRuleList as FirewallRuleListMapper,\n  InstanceFailoverGroup as InstanceFailoverGroupMapper,\n  InstancePool as InstancePoolMapper,\n  InstancePoolUpdate as InstancePoolUpdateMapper,\n  JobAgent as JobAgentMapper,\n  JobAgentUpdate as JobAgentUpdateMapper,\n  JobCredential as JobCredentialMapper,\n  Job as JobMapper,\n  JobStep as JobStepMapper,\n  JobTargetGroup as JobTargetGroupMapper,\n  LongTermRetentionPolicy as LongTermRetentionPolicyMapper,\n  MaintenanceWindows as MaintenanceWindowsMapper,\n  ManagedBackupShortTermRetentionPolicy as ManagedBackupShortTermRetentionPolicyMapper,\n  ManagedDatabase as ManagedDatabaseMapper,\n  ManagedDatabaseUpdate as ManagedDatabaseUpdateMapper,\n  CompleteDatabaseRestoreDefinition as CompleteDatabaseRestoreDefinitionMapper,\n  ManagedDatabaseSecurityAlertPolicy as ManagedDatabaseSecurityAlertPolicyMapper,\n  SensitivityLabel as SensitivityLabelMapper,\n  SensitivityLabelUpdateList as SensitivityLabelUpdateListMapper,\n  RecommendedSensitivityLabelUpdateList as RecommendedSensitivityLabelUpdateListMapper,\n  ManagedTransparentDataEncryption as ManagedTransparentDataEncryptionMapper,\n  ManagedInstanceAdministrator as ManagedInstanceAdministratorMapper,\n  ManagedInstanceAzureADOnlyAuthentication as ManagedInstanceAzureADOnlyAuthenticationMapper,\n  ManagedInstanceEncryptionProtector as ManagedInstanceEncryptionProtectorMapper,\n  ManagedInstanceKey as ManagedInstanceKeyMapper,\n  ManagedInstanceLongTermRetentionPolicy as ManagedInstanceLongTermRetentionPolicyMapper,\n  ManagedInstancePrivateEndpointConnection as ManagedInstancePrivateEndpointConnectionMapper,\n  TdeCertificate as TdeCertificateMapper,\n  ManagedInstanceVulnerabilityAssessment as ManagedInstanceVulnerabilityAssessmentMapper,\n  ManagedServerSecurityAlertPolicy as ManagedServerSecurityAlertPolicyMapper,\n  PrivateEndpointConnection as PrivateEndpointConnectionMapper,\n  CreateDatabaseRestorePointDefinition as CreateDatabaseRestorePointDefinitionMapper,\n  ServerAutomaticTuning as ServerAutomaticTuningMapper,\n  ServerAzureADAdministrator as ServerAzureADAdministratorMapper,\n  ServerAzureADOnlyAuthentication as ServerAzureADOnlyAuthenticationMapper,\n  ServerDevOpsAuditingSettings as ServerDevOpsAuditingSettingsMapper,\n  ServerDnsAliasAcquisition as ServerDnsAliasAcquisitionMapper,\n  ServerKey as ServerKeyMapper,\n  ServerSecurityAlertPolicy as ServerSecurityAlertPolicyMapper,\n  ServerTrustGroup as ServerTrustGroupMapper,\n  ServerVulnerabilityAssessment as ServerVulnerabilityAssessmentMapper,\n  SqlAgentConfiguration as SqlAgentConfigurationMapper,\n  SyncAgent as SyncAgentMapper,\n  SyncGroup as SyncGroupMapper,\n  SyncMember as SyncMemberMapper,\n  VirtualClusterUpdate as VirtualClusterUpdateMapper,\n  VirtualNetworkRule as VirtualNetworkRuleMapper,\n  WorkloadClassifier as WorkloadClassifierMapper,\n  WorkloadGroup as WorkloadGroupMapper,\n  LogicalDatabaseTransparentDataEncryption as LogicalDatabaseTransparentDataEncryptionMapper,\n  BackupShortTermRetentionPolicy as BackupShortTermRetentionPolicyMapper,\n  DatabaseExtensions as DatabaseExtensionsMapper,\n  LedgerDigestUploads as LedgerDigestUploadsMapper,\n  OutboundFirewallRule as OutboundFirewallRuleMapper,\n  Server as ServerMapper,\n  ServerUpdate as ServerUpdateMapper,\n  ImportNewDatabaseDefinition as ImportNewDatabaseDefinitionMapper,\n  CheckNameAvailabilityRequest as CheckNameAvailabilityRequestMapper,\n  CopyLongTermRetentionBackupParameters as CopyLongTermRetentionBackupParametersMapper,\n  UpdateLongTermRetentionBackupParameters as UpdateLongTermRetentionBackupParametersMapper,\n  ManagedInstance as ManagedInstanceMapper,\n  ManagedInstanceUpdate as ManagedInstanceUpdateMapper,\n  ServerConnectionPolicy as ServerConnectionPolicyMapper\n} from \"../models/mappers\";\n\nexport const accept: OperationParameter = {\n  parameterPath: \"accept\",\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Accept\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const $host: OperationURLParameter = {\n  parameterPath: \"$host\",\n  mapper: {\n    serializedName: \"$host\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const apiVersion: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2014-04-01\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const subscriptionId: OperationURLParameter = {\n  parameterPath: \"subscriptionId\",\n  mapper: {\n    serializedName: \"subscriptionId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const resourceGroupName: OperationURLParameter = {\n  parameterPath: \"resourceGroupName\",\n  mapper: {\n    serializedName: \"resourceGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const serverName: OperationURLParameter = {\n  parameterPath: \"serverName\",\n  mapper: {\n    serializedName: \"serverName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const databaseName: OperationURLParameter = {\n  parameterPath: \"databaseName\",\n  mapper: {\n    serializedName: \"databaseName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const contentType: OperationParameter = {\n  parameterPath: [\"options\", \"contentType\"],\n  mapper: {\n    defaultValue: \"application/json\",\n    isConstant: true,\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataMaskingPolicyMapper\n};\n\nexport const dataMaskingPolicyName: OperationURLParameter = {\n  parameterPath: \"dataMaskingPolicyName\",\n  mapper: {\n    defaultValue: \"Default\",\n    isConstant: true,\n    serializedName: \"dataMaskingPolicyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters1: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DataMaskingRuleMapper\n};\n\nexport const dataMaskingRuleName: OperationURLParameter = {\n  parameterPath: \"dataMaskingRuleName\",\n  mapper: {\n    serializedName: \"dataMaskingRuleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters2: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: GeoBackupPolicyMapper\n};\n\nexport const geoBackupPolicyName: OperationURLParameter = {\n  parameterPath: \"geoBackupPolicyName\",\n  mapper: {\n    serializedName: \"geoBackupPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter: OperationQueryParameter = {\n  parameterPath: \"filter\",\n  mapper: {\n    serializedName: \"$filter\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const skipToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skipToken\"],\n  mapper: {\n    serializedName: \"$skipToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const apiVersion1: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-05-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters3: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseMapper\n};\n\nexport const parameters4: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseUpdateMapper\n};\n\nexport const elasticPoolName: OperationURLParameter = {\n  parameterPath: \"elasticPoolName\",\n  mapper: {\n    serializedName: \"elasticPoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const replicaType: OperationQueryParameter = {\n  parameterPath: [\"options\", \"replicaType\"],\n  mapper: {\n    serializedName: \"replicaType\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters5: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ResourceMoveDefinitionMapper\n};\n\nexport const parameters6: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ImportExistingDatabaseDefinitionMapper\n};\n\nexport const parameters7: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExportDatabaseDefinitionMapper\n};\n\nexport const nextLink: OperationURLParameter = {\n  parameterPath: \"nextLink\",\n  mapper: {\n    serializedName: \"nextLink\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\n\nexport const skip: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skip\"],\n  mapper: {\n    serializedName: \"$skip\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const apiVersion2: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2020-11-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters8: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ElasticPoolMapper\n};\n\nexport const parameters9: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ElasticPoolUpdateMapper\n};\n\nexport const linkId: OperationURLParameter = {\n  parameterPath: \"linkId\",\n  mapper: {\n    serializedName: \"linkId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters10: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: UnlinkParametersMapper\n};\n\nexport const apiVersion3: OperationQueryParameter = {\n  parameterPath: \"apiVersion\",\n  mapper: {\n    defaultValue: \"2021-02-01-preview\",\n    isConstant: true,\n    serializedName: \"api-version\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const communicationLinkName: OperationURLParameter = {\n  parameterPath: \"communicationLinkName\",\n  mapper: {\n    serializedName: \"communicationLinkName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters11: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerCommunicationLinkMapper\n};\n\nexport const serviceObjectiveName: OperationURLParameter = {\n  parameterPath: \"serviceObjectiveName\",\n  mapper: {\n    serializedName: \"serviceObjectiveName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const blobAuditingPolicyName: OperationURLParameter = {\n  parameterPath: \"blobAuditingPolicyName\",\n  mapper: {\n    defaultValue: \"default\",\n    isConstant: true,\n    serializedName: \"blobAuditingPolicyName\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters12: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExtendedDatabaseBlobAuditingPolicyMapper\n};\n\nexport const parameters13: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ExtendedServerBlobAuditingPolicyMapper\n};\n\nexport const parameters14: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerBlobAuditingPolicyMapper\n};\n\nexport const parameters15: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseBlobAuditingPolicyMapper\n};\n\nexport const expand: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expand\"],\n  mapper: {\n    serializedName: \"$expand\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const advisorName: OperationURLParameter = {\n  parameterPath: \"advisorName\",\n  mapper: {\n    serializedName: \"advisorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters16: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: AdvisorMapper\n};\n\nexport const parameters17: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseAutomaticTuningMapper\n};\n\nexport const schema: OperationQueryParameter = {\n  parameterPath: [\"options\", \"schema\"],\n  mapper: {\n    serializedName: \"schema\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const table: OperationQueryParameter = {\n  parameterPath: [\"options\", \"table\"],\n  mapper: {\n    serializedName: \"table\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const column: OperationQueryParameter = {\n  parameterPath: [\"options\", \"column\"],\n  mapper: {\n    serializedName: \"column\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const orderBy: OperationQueryParameter = {\n  parameterPath: [\"options\", \"orderBy\"],\n  mapper: {\n    serializedName: \"orderBy\",\n    type: {\n      name: \"Sequence\",\n      element: {\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  },\n  collectionFormat: \"Multi\"\n};\n\nexport const skiptoken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"skiptoken\"],\n  mapper: {\n    serializedName: \"$skiptoken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const schemaName: OperationURLParameter = {\n  parameterPath: \"schemaName\",\n  mapper: {\n    serializedName: \"schemaName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const tableName: OperationURLParameter = {\n  parameterPath: \"tableName\",\n  mapper: {\n    serializedName: \"tableName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const filter1: OperationQueryParameter = {\n  parameterPath: [\"options\", \"filter\"],\n  mapper: {\n    serializedName: \"$filter\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const columnName: OperationURLParameter = {\n  parameterPath: \"columnName\",\n  mapper: {\n    serializedName: \"columnName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const recommendedActionName: OperationURLParameter = {\n  parameterPath: \"recommendedActionName\",\n  mapper: {\n    serializedName: \"recommendedActionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters18: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RecommendedActionMapper\n};\n\nexport const securityAlertPolicyName: OperationURLParameter = {\n  parameterPath: \"securityAlertPolicyName\",\n  mapper: {\n    serializedName: \"securityAlertPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters19: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseSecurityAlertPolicyMapper\n};\n\nexport const vulnerabilityAssessmentName: OperationURLParameter = {\n  parameterPath: \"vulnerabilityAssessmentName\",\n  mapper: {\n    serializedName: \"vulnerabilityAssessmentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const ruleId: OperationURLParameter = {\n  parameterPath: \"ruleId\",\n  mapper: {\n    serializedName: \"ruleId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const baselineName: OperationURLParameter = {\n  parameterPath: \"baselineName\",\n  mapper: {\n    serializedName: \"baselineName\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"master\", \"default\"]\n    }\n  }\n};\n\nexport const parameters20: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseVulnerabilityAssessmentRuleBaselineMapper\n};\n\nexport const parameters21: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseVulnerabilityAssessmentMapper\n};\n\nexport const scanId: OperationURLParameter = {\n  parameterPath: \"scanId\",\n  mapper: {\n    serializedName: \"scanId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const dataWarehouseUserActivityName: OperationURLParameter = {\n  parameterPath: \"dataWarehouseUserActivityName\",\n  mapper: {\n    serializedName: \"dataWarehouseUserActivityName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const locationName: OperationURLParameter = {\n  parameterPath: \"locationName\",\n  mapper: {\n    serializedName: \"locationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const deletedServerName: OperationURLParameter = {\n  parameterPath: \"deletedServerName\",\n  mapper: {\n    serializedName: \"deletedServerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const operationId: OperationURLParameter = {\n  parameterPath: \"operationId\",\n  mapper: {\n    serializedName: \"operationId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const encryptionProtectorName: OperationURLParameter = {\n  parameterPath: \"encryptionProtectorName\",\n  mapper: {\n    serializedName: \"encryptionProtectorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters22: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: EncryptionProtectorMapper\n};\n\nexport const failoverGroupName: OperationURLParameter = {\n  parameterPath: \"failoverGroupName\",\n  mapper: {\n    serializedName: \"failoverGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters23: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FailoverGroupMapper\n};\n\nexport const parameters24: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FailoverGroupUpdateMapper\n};\n\nexport const firewallRuleName: OperationURLParameter = {\n  parameterPath: \"firewallRuleName\",\n  mapper: {\n    serializedName: \"firewallRuleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters25: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallRuleMapper\n};\n\nexport const parameters26: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: FirewallRuleListMapper\n};\n\nexport const parameters27: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: InstanceFailoverGroupMapper\n};\n\nexport const instancePoolName: OperationURLParameter = {\n  parameterPath: \"instancePoolName\",\n  mapper: {\n    serializedName: \"instancePoolName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters28: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: InstancePoolMapper\n};\n\nexport const parameters29: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: InstancePoolUpdateMapper\n};\n\nexport const jobAgentName: OperationURLParameter = {\n  parameterPath: \"jobAgentName\",\n  mapper: {\n    serializedName: \"jobAgentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters30: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobAgentMapper\n};\n\nexport const parameters31: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobAgentUpdateMapper\n};\n\nexport const credentialName: OperationURLParameter = {\n  parameterPath: \"credentialName\",\n  mapper: {\n    serializedName: \"credentialName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters32: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobCredentialMapper\n};\n\nexport const createTimeMin: OperationQueryParameter = {\n  parameterPath: [\"options\", \"createTimeMin\"],\n  mapper: {\n    serializedName: \"createTimeMin\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const createTimeMax: OperationQueryParameter = {\n  parameterPath: [\"options\", \"createTimeMax\"],\n  mapper: {\n    serializedName: \"createTimeMax\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const endTimeMin: OperationQueryParameter = {\n  parameterPath: [\"options\", \"endTimeMin\"],\n  mapper: {\n    serializedName: \"endTimeMin\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const endTimeMax: OperationQueryParameter = {\n  parameterPath: [\"options\", \"endTimeMax\"],\n  mapper: {\n    serializedName: \"endTimeMax\",\n    type: {\n      name: \"DateTime\"\n    }\n  }\n};\n\nexport const isActive: OperationQueryParameter = {\n  parameterPath: [\"options\", \"isActive\"],\n  mapper: {\n    serializedName: \"isActive\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const top: OperationQueryParameter = {\n  parameterPath: [\"options\", \"top\"],\n  mapper: {\n    serializedName: \"$top\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const jobName: OperationURLParameter = {\n  parameterPath: \"jobName\",\n  mapper: {\n    serializedName: \"jobName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const jobExecutionId: OperationURLParameter = {\n  parameterPath: \"jobExecutionId\",\n  mapper: {\n    serializedName: \"jobExecutionId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const parameters33: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobMapper\n};\n\nexport const stepName: OperationURLParameter = {\n  parameterPath: \"stepName\",\n  mapper: {\n    serializedName: \"stepName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const jobVersion: OperationURLParameter = {\n  parameterPath: \"jobVersion\",\n  mapper: {\n    serializedName: \"jobVersion\",\n    required: true,\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const parameters34: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobStepMapper\n};\n\nexport const targetId: OperationURLParameter = {\n  parameterPath: \"targetId\",\n  mapper: {\n    serializedName: \"targetId\",\n    required: true,\n    type: {\n      name: \"Uuid\"\n    }\n  }\n};\n\nexport const targetGroupName: OperationURLParameter = {\n  parameterPath: \"targetGroupName\",\n  mapper: {\n    serializedName: \"targetGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters35: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: JobTargetGroupMapper\n};\n\nexport const include: OperationQueryParameter = {\n  parameterPath: [\"options\", \"include\"],\n  mapper: {\n    serializedName: \"include\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyName: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters36: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LongTermRetentionPolicyMapper\n};\n\nexport const maintenanceWindowOptionsName: OperationQueryParameter = {\n  parameterPath: \"maintenanceWindowOptionsName\",\n  mapper: {\n    serializedName: \"maintenanceWindowOptionsName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const maintenanceWindowName: OperationQueryParameter = {\n  parameterPath: \"maintenanceWindowName\",\n  mapper: {\n    serializedName: \"maintenanceWindowName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters37: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: MaintenanceWindowsMapper\n};\n\nexport const managedInstanceName: OperationURLParameter = {\n  parameterPath: \"managedInstanceName\",\n  mapper: {\n    serializedName: \"managedInstanceName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const policyName1: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters38: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedBackupShortTermRetentionPolicyMapper\n};\n\nexport const queryId: OperationURLParameter = {\n  parameterPath: \"queryId\",\n  mapper: {\n    serializedName: \"queryId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startTime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"startTime\"],\n  mapper: {\n    serializedName: \"startTime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endTime: OperationQueryParameter = {\n  parameterPath: [\"options\", \"endTime\"],\n  mapper: {\n    serializedName: \"endTime\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const interval: OperationQueryParameter = {\n  parameterPath: [\"options\", \"interval\"],\n  mapper: {\n    serializedName: \"interval\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const restoreDetailsName: OperationURLParameter = {\n  parameterPath: \"restoreDetailsName\",\n  mapper: {\n    serializedName: \"restoreDetailsName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters39: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedDatabaseMapper\n};\n\nexport const parameters40: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedDatabaseUpdateMapper\n};\n\nexport const parameters41: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CompleteDatabaseRestoreDefinitionMapper\n};\n\nexport const parameters42: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedDatabaseSecurityAlertPolicyMapper\n};\n\nexport const sensitivityLabelSource: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    serializedName: \"sensitivityLabelSource\",\n    required: true,\n    type: {\n      name: \"Enum\",\n      allowedValues: [\"current\", \"recommended\"]\n    }\n  }\n};\n\nexport const parameters43: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SensitivityLabelMapper\n};\n\nexport const sensitivityLabelSource1: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    defaultValue: \"current\",\n    isConstant: true,\n    serializedName: \"sensitivityLabelSource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const sensitivityLabelSource2: OperationURLParameter = {\n  parameterPath: \"sensitivityLabelSource\",\n  mapper: {\n    defaultValue: \"recommended\",\n    isConstant: true,\n    serializedName: \"sensitivityLabelSource\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const count: OperationQueryParameter = {\n  parameterPath: [\"options\", \"count\"],\n  mapper: {\n    serializedName: \"$count\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const parameters44: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SensitivityLabelUpdateListMapper\n};\n\nexport const includeDisabledRecommendations: OperationQueryParameter = {\n  parameterPath: [\"options\", \"includeDisabledRecommendations\"],\n  mapper: {\n    serializedName: \"includeDisabledRecommendations\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const parameters45: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: RecommendedSensitivityLabelUpdateListMapper\n};\n\nexport const tdeName: OperationURLParameter = {\n  parameterPath: \"tdeName\",\n  mapper: {\n    serializedName: \"tdeName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters46: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedTransparentDataEncryptionMapper\n};\n\nexport const administratorName: OperationURLParameter = {\n  parameterPath: \"administratorName\",\n  mapper: {\n    serializedName: \"administratorName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters47: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceAdministratorMapper\n};\n\nexport const authenticationName: OperationURLParameter = {\n  parameterPath: \"authenticationName\",\n  mapper: {\n    serializedName: \"authenticationName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters48: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceAzureADOnlyAuthenticationMapper\n};\n\nexport const parameters49: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceEncryptionProtectorMapper\n};\n\nexport const keyName: OperationURLParameter = {\n  parameterPath: \"keyName\",\n  mapper: {\n    serializedName: \"keyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters50: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceKeyMapper\n};\n\nexport const policyName2: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters51: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceLongTermRetentionPolicyMapper\n};\n\nexport const privateEndpointConnectionName: OperationURLParameter = {\n  parameterPath: \"privateEndpointConnectionName\",\n  mapper: {\n    serializedName: \"privateEndpointConnectionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters52: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstancePrivateEndpointConnectionMapper\n};\n\nexport const groupName: OperationURLParameter = {\n  parameterPath: \"groupName\",\n  mapper: {\n    serializedName: \"groupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters53: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: TdeCertificateMapper\n};\n\nexport const parameters54: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceVulnerabilityAssessmentMapper\n};\n\nexport const restorableDroppedDatabaseId: OperationURLParameter = {\n  parameterPath: \"restorableDroppedDatabaseId\",\n  mapper: {\n    serializedName: \"restorableDroppedDatabaseId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters55: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedServerSecurityAlertPolicyMapper\n};\n\nexport const parameters56: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: PrivateEndpointConnectionMapper\n};\n\nexport const recoverableDatabaseName: OperationURLParameter = {\n  parameterPath: \"recoverableDatabaseName\",\n  mapper: {\n    serializedName: \"recoverableDatabaseName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters57: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CreateDatabaseRestorePointDefinitionMapper\n};\n\nexport const restorePointName: OperationURLParameter = {\n  parameterPath: \"restorePointName\",\n  mapper: {\n    serializedName: \"restorePointName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters58: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerAutomaticTuningMapper\n};\n\nexport const parameters59: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerAzureADAdministratorMapper\n};\n\nexport const parameters60: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerAzureADOnlyAuthenticationMapper\n};\n\nexport const devOpsAuditingSettingsName: OperationURLParameter = {\n  parameterPath: \"devOpsAuditingSettingsName\",\n  mapper: {\n    serializedName: \"devOpsAuditingSettingsName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters61: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerDevOpsAuditingSettingsMapper\n};\n\nexport const dnsAliasName: OperationURLParameter = {\n  parameterPath: \"dnsAliasName\",\n  mapper: {\n    serializedName: \"dnsAliasName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters62: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerDnsAliasAcquisitionMapper\n};\n\nexport const parameters63: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerKeyMapper\n};\n\nexport const parameters64: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerSecurityAlertPolicyMapper\n};\n\nexport const serverTrustGroupName: OperationURLParameter = {\n  parameterPath: \"serverTrustGroupName\",\n  mapper: {\n    serializedName: \"serverTrustGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters65: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerTrustGroupMapper\n};\n\nexport const parameters66: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerVulnerabilityAssessmentMapper\n};\n\nexport const parameters67: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SqlAgentConfigurationMapper\n};\n\nexport const usageName: OperationURLParameter = {\n  parameterPath: \"usageName\",\n  mapper: {\n    serializedName: \"usageName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const syncAgentName: OperationURLParameter = {\n  parameterPath: \"syncAgentName\",\n  mapper: {\n    serializedName: \"syncAgentName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters68: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SyncAgentMapper\n};\n\nexport const syncGroupName: OperationURLParameter = {\n  parameterPath: \"syncGroupName\",\n  mapper: {\n    serializedName: \"syncGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const startTime1: OperationQueryParameter = {\n  parameterPath: \"startTime\",\n  mapper: {\n    serializedName: \"startTime\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const endTime1: OperationQueryParameter = {\n  parameterPath: \"endTime\",\n  mapper: {\n    serializedName: \"endTime\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const typeParam: OperationQueryParameter = {\n  parameterPath: \"typeParam\",\n  mapper: {\n    serializedName: \"type\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const continuationToken: OperationQueryParameter = {\n  parameterPath: [\"options\", \"continuationToken\"],\n  mapper: {\n    serializedName: \"continuationToken\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters69: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SyncGroupMapper\n};\n\nexport const syncMemberName: OperationURLParameter = {\n  parameterPath: \"syncMemberName\",\n  mapper: {\n    serializedName: \"syncMemberName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters70: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: SyncMemberMapper\n};\n\nexport const timeZoneId: OperationURLParameter = {\n  parameterPath: \"timeZoneId\",\n  mapper: {\n    serializedName: \"timeZoneId\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const virtualClusterName: OperationURLParameter = {\n  parameterPath: \"virtualClusterName\",\n  mapper: {\n    serializedName: \"virtualClusterName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters71: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualClusterUpdateMapper\n};\n\nexport const virtualNetworkRuleName: OperationURLParameter = {\n  parameterPath: \"virtualNetworkRuleName\",\n  mapper: {\n    serializedName: \"virtualNetworkRuleName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters72: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: VirtualNetworkRuleMapper\n};\n\nexport const workloadGroupName: OperationURLParameter = {\n  parameterPath: \"workloadGroupName\",\n  mapper: {\n    serializedName: \"workloadGroupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const workloadClassifierName: OperationURLParameter = {\n  parameterPath: \"workloadClassifierName\",\n  mapper: {\n    serializedName: \"workloadClassifierName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters73: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkloadClassifierMapper\n};\n\nexport const parameters74: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: WorkloadGroupMapper\n};\n\nexport const parameters75: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LogicalDatabaseTransparentDataEncryptionMapper\n};\n\nexport const policyName3: OperationURLParameter = {\n  parameterPath: \"policyName\",\n  mapper: {\n    serializedName: \"policyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters76: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: BackupShortTermRetentionPolicyMapper\n};\n\nexport const extensionName: OperationURLParameter = {\n  parameterPath: \"extensionName\",\n  mapper: {\n    serializedName: \"extensionName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters77: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: DatabaseExtensionsMapper\n};\n\nexport const ledgerDigestUploads: OperationURLParameter = {\n  parameterPath: \"ledgerDigestUploads\",\n  mapper: {\n    serializedName: \"ledgerDigestUploads\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters78: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: LedgerDigestUploadsMapper\n};\n\nexport const outboundRuleFqdn: OperationURLParameter = {\n  parameterPath: \"outboundRuleFqdn\",\n  mapper: {\n    serializedName: \"outboundRuleFqdn\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters79: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: OutboundFirewallRuleMapper\n};\n\nexport const parameters80: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerMapper\n};\n\nexport const parameters81: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerUpdateMapper\n};\n\nexport const parameters82: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ImportNewDatabaseDefinitionMapper\n};\n\nexport const parameters83: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CheckNameAvailabilityRequestMapper\n};\n\nexport const expandChildren: OperationQueryParameter = {\n  parameterPath: [\"options\", \"expandChildren\"],\n  mapper: {\n    serializedName: \"expandChildren\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const parameters84: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: CopyLongTermRetentionBackupParametersMapper\n};\n\nexport const longTermRetentionServerName: OperationURLParameter = {\n  parameterPath: \"longTermRetentionServerName\",\n  mapper: {\n    serializedName: \"longTermRetentionServerName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const longTermRetentionDatabaseName: OperationURLParameter = {\n  parameterPath: \"longTermRetentionDatabaseName\",\n  mapper: {\n    serializedName: \"longTermRetentionDatabaseName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const backupName: OperationURLParameter = {\n  parameterPath: \"backupName\",\n  mapper: {\n    serializedName: \"backupName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters85: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: UpdateLongTermRetentionBackupParametersMapper\n};\n\nexport const onlyLatestPerDatabase: OperationQueryParameter = {\n  parameterPath: [\"options\", \"onlyLatestPerDatabase\"],\n  mapper: {\n    serializedName: \"onlyLatestPerDatabase\",\n    type: {\n      name: \"Boolean\"\n    }\n  }\n};\n\nexport const databaseState: OperationQueryParameter = {\n  parameterPath: [\"options\", \"databaseState\"],\n  mapper: {\n    serializedName: \"databaseState\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters86: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceMapper\n};\n\nexport const parameters87: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ManagedInstanceUpdateMapper\n};\n\nexport const numberOfQueries: OperationQueryParameter = {\n  parameterPath: [\"options\", \"numberOfQueries\"],\n  mapper: {\n    serializedName: \"numberOfQueries\",\n    type: {\n      name: \"Number\"\n    }\n  }\n};\n\nexport const databases: OperationQueryParameter = {\n  parameterPath: [\"options\", \"databases\"],\n  mapper: {\n    serializedName: \"databases\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const aggregationFunction: OperationQueryParameter = {\n  parameterPath: [\"options\", \"aggregationFunction\"],\n  mapper: {\n    serializedName: \"aggregationFunction\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const observationMetric: OperationQueryParameter = {\n  parameterPath: [\"options\", \"observationMetric\"],\n  mapper: {\n    serializedName: \"observationMetric\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const connectionPolicyName: OperationURLParameter = {\n  parameterPath: \"connectionPolicyName\",\n  mapper: {\n    serializedName: \"connectionPolicyName\",\n    required: true,\n    type: {\n      name: \"String\"\n    }\n  }\n};\n\nexport const parameters88: OperationParameter = {\n  parameterPath: \"parameters\",\n  mapper: ServerConnectionPolicyMapper\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { RecoverableDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RecoverableDatabase,\n  RecoverableDatabasesListByServerOptionalParams,\n  RecoverableDatabasesListByServerResponse,\n  RecoverableDatabasesGetOptionalParams,\n  RecoverableDatabasesGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RecoverableDatabases operations. */\nexport class RecoverableDatabasesImpl implements RecoverableDatabases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RecoverableDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of recoverable databases\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RecoverableDatabasesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<RecoverableDatabase> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RecoverableDatabasesListByServerOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<RecoverableDatabase[]> {\n    let result: RecoverableDatabasesListByServerResponse;\n    result = await this._listByServer(resourceGroupName, serverName, options);\n    yield result.value || [];\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RecoverableDatabasesListByServerOptionalParams\n  ): AsyncIterableIterator<RecoverableDatabase> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a recoverable database, which is a resource representing a database's geo backup\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: RecoverableDatabasesGetOptionalParams\n  ): Promise<RecoverableDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of recoverable databases\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RecoverableDatabasesListByServerOptionalParams\n  ): Promise<RecoverableDatabasesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases/{databaseName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableDatabase\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/recoverableDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableDatabaseListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DataMaskingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DataMaskingPolicy,\n  DataMaskingPoliciesCreateOrUpdateOptionalParams,\n  DataMaskingPoliciesCreateOrUpdateResponse,\n  DataMaskingPoliciesGetOptionalParams,\n  DataMaskingPoliciesGetResponse\n} from \"../models\";\n\n/** Class containing DataMaskingPolicies operations. */\nexport class DataMaskingPoliciesImpl implements DataMaskingPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataMaskingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates or updates a database data masking policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters Parameters for creating or updating a data masking policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: DataMaskingPolicy,\n    options?: DataMaskingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<DataMaskingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a database data masking policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataMaskingPoliciesGetOptionalParams\n  ): Promise<DataMaskingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingPolicy\n    }\n  },\n  requestBody: Parameters.parameters,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingPolicy\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { DataMaskingRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DataMaskingRule,\n  DataMaskingRulesListByDatabaseOptionalParams,\n  DataMaskingRulesListByDatabaseResponse,\n  DataMaskingRulesCreateOrUpdateOptionalParams,\n  DataMaskingRulesCreateOrUpdateResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataMaskingRules operations. */\nexport class DataMaskingRulesImpl implements DataMaskingRules {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataMaskingRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of database data masking rules.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataMaskingRulesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DataMaskingRule> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataMaskingRulesListByDatabaseOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<DataMaskingRule[]> {\n    let result: DataMaskingRulesListByDatabaseResponse;\n    result = await this._listByDatabase(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataMaskingRulesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DataMaskingRule> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Creates or updates a database data masking rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param dataMaskingRuleName The name of the data masking rule.\n   * @param parameters The required parameters for creating or updating a data masking rule.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    dataMaskingRuleName: string,\n    parameters: DataMaskingRule,\n    options?: DataMaskingRulesCreateOrUpdateOptionalParams\n  ): Promise<DataMaskingRulesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        dataMaskingRuleName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of database data masking rules.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataMaskingRulesListByDatabaseOptionalParams\n  ): Promise<DataMaskingRulesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules/{dataMaskingRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingRule\n    },\n    201: {\n      bodyMapper: Mappers.DataMaskingRule\n    }\n  },\n  requestBody: Parameters.parameters1,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.dataMaskingPolicyName,\n    Parameters.dataMaskingRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataMaskingPolicies/{dataMaskingPolicyName}/rules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataMaskingRuleListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.dataMaskingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { GeoBackupPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  GeoBackupPolicy,\n  GeoBackupPoliciesListByDatabaseOptionalParams,\n  GeoBackupPoliciesListByDatabaseResponse,\n  GeoBackupPolicyName,\n  GeoBackupPoliciesCreateOrUpdateOptionalParams,\n  GeoBackupPoliciesCreateOrUpdateResponse,\n  GeoBackupPoliciesGetOptionalParams,\n  GeoBackupPoliciesGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing GeoBackupPolicies operations. */\nexport class GeoBackupPoliciesImpl implements GeoBackupPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class GeoBackupPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns a list of geo backup policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: GeoBackupPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<GeoBackupPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: GeoBackupPoliciesListByDatabaseOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<GeoBackupPolicy[]> {\n    let result: GeoBackupPoliciesListByDatabaseResponse;\n    result = await this._listByDatabase(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: GeoBackupPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<GeoBackupPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Updates a database geo backup policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param geoBackupPolicyName The name of the geo backup policy.\n   * @param parameters The required parameters for creating or updating the geo backup policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    geoBackupPolicyName: GeoBackupPolicyName,\n    parameters: GeoBackupPolicy,\n    options?: GeoBackupPoliciesCreateOrUpdateOptionalParams\n  ): Promise<GeoBackupPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        geoBackupPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a geo backup policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param geoBackupPolicyName The name of the geo backup policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    geoBackupPolicyName: GeoBackupPolicyName,\n    options?: GeoBackupPoliciesGetOptionalParams\n  ): Promise<GeoBackupPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        geoBackupPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Returns a list of geo backup policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: GeoBackupPoliciesListByDatabaseOptionalParams\n  ): Promise<GeoBackupPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies/{geoBackupPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    },\n    201: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    }\n  },\n  requestBody: Parameters.parameters2,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.geoBackupPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies/{geoBackupPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicy\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.geoBackupPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/geoBackupPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.GeoBackupPolicyListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { LongRunningOperation, LroResponse } from \"@azure/core-lro\";\n\nexport class LroImpl<T> implements LongRunningOperation<T> {\n  constructor(\n    private sendOperationFn: (args: any, spec: any) => Promise<LroResponse<T>>,\n    private args: Record<string, unknown>,\n    private spec: {\n      readonly requestBody?: unknown;\n      readonly path?: string;\n      readonly httpMethod: string;\n    } & Record<string, any>,\n    public requestPath: string = spec.path!,\n    public requestMethod: string = spec.httpMethod\n  ) {}\n  public async sendInitialRequest(): Promise<LroResponse<T>> {\n    return this.sendOperationFn(this.args, this.spec);\n  }\n  public async sendPollRequest(path: string): Promise<LroResponse<T>> {\n    const { requestBody, ...restSpec } = this.spec;\n    return this.sendOperationFn(this.args, {\n      ...restSpec,\n      path,\n      httpMethod: \"GET\"\n    });\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Databases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Metric,\n  DatabasesListMetricsOptionalParams,\n  DatabasesListMetricsResponse,\n  MetricDefinition,\n  DatabasesListMetricDefinitionsOptionalParams,\n  DatabasesListMetricDefinitionsResponse,\n  Database,\n  DatabasesListByServerNextOptionalParams,\n  DatabasesListByServerOptionalParams,\n  DatabasesListByServerResponse,\n  DatabasesListByElasticPoolNextOptionalParams,\n  DatabasesListByElasticPoolOptionalParams,\n  DatabasesListByElasticPoolResponse,\n  DatabasesListInaccessibleByServerNextOptionalParams,\n  DatabasesListInaccessibleByServerOptionalParams,\n  DatabasesListInaccessibleByServerResponse,\n  DatabasesGetOptionalParams,\n  DatabasesGetResponse,\n  DatabasesCreateOrUpdateOptionalParams,\n  DatabasesCreateOrUpdateResponse,\n  DatabasesDeleteOptionalParams,\n  DatabaseUpdate,\n  DatabasesUpdateOptionalParams,\n  DatabasesUpdateResponse,\n  DatabasesFailoverOptionalParams,\n  DatabasesPauseOptionalParams,\n  DatabasesPauseResponse,\n  DatabasesResumeOptionalParams,\n  DatabasesResumeResponse,\n  DatabasesUpgradeDataWarehouseOptionalParams,\n  ResourceMoveDefinition,\n  DatabasesRenameOptionalParams,\n  ImportExistingDatabaseDefinition,\n  DatabasesImportOptionalParams,\n  DatabasesImportResponse,\n  ExportDatabaseDefinition,\n  DatabasesExportOptionalParams,\n  DatabasesExportResponse,\n  DatabasesListByServerNextResponse,\n  DatabasesListByElasticPoolNextResponse,\n  DatabasesListInaccessibleByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Databases operations. */\nexport class DatabasesImpl implements Databases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Databases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns database metrics.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param filter An OData filter expression that describes a subset of metrics to return.\n   * @param options The options parameters.\n   */\n  public listMetrics(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    filter: string,\n    options?: DatabasesListMetricsOptionalParams\n  ): PagedAsyncIterableIterator<Metric> {\n    const iter = this.listMetricsPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      filter,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMetricsPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          filter,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listMetricsPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    filter: string,\n    options?: DatabasesListMetricsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Metric[]> {\n    let result: DatabasesListMetricsResponse;\n    result = await this._listMetrics(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      filter,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listMetricsPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    filter: string,\n    options?: DatabasesListMetricsOptionalParams\n  ): AsyncIterableIterator<Metric> {\n    for await (const page of this.listMetricsPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      filter,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns database metric definitions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listMetricDefinitions(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesListMetricDefinitionsOptionalParams\n  ): PagedAsyncIterableIterator<MetricDefinition> {\n    const iter = this.listMetricDefinitionsPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMetricDefinitionsPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesListMetricDefinitionsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<MetricDefinition[]> {\n    let result: DatabasesListMetricDefinitionsResponse;\n    result = await this._listMetricDefinitions(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesListMetricDefinitionsOptionalParams\n  ): AsyncIterableIterator<MetricDefinition> {\n    for await (const page of this.listMetricDefinitionsPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<Database> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Database[]> {\n    let result: DatabasesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListByServerOptionalParams\n  ): AsyncIterableIterator<Database> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of databases in an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  public listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: DatabasesListByElasticPoolOptionalParams\n  ): PagedAsyncIterableIterator<Database> {\n    const iter = this.listByElasticPoolPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByElasticPoolPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByElasticPoolPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: DatabasesListByElasticPoolOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Database[]> {\n    let result: DatabasesListByElasticPoolResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByElasticPool(\n        resourceGroupName,\n        serverName,\n        elasticPoolName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByElasticPoolNext(\n        resourceGroupName,\n        serverName,\n        elasticPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByElasticPoolPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: DatabasesListByElasticPoolOptionalParams\n  ): AsyncIterableIterator<Database> {\n    for await (const page of this.listByElasticPoolPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of inaccessible databases in a logical server\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listInaccessibleByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListInaccessibleByServerOptionalParams\n  ): PagedAsyncIterableIterator<Database> {\n    const iter = this.listInaccessibleByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInaccessibleByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listInaccessibleByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListInaccessibleByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Database[]> {\n    let result: DatabasesListInaccessibleByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInaccessibleByServer(\n        resourceGroupName,\n        serverName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInaccessibleByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInaccessibleByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListInaccessibleByServerOptionalParams\n  ): AsyncIterableIterator<Database> {\n    for await (const page of this.listInaccessibleByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns database metrics.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param filter An OData filter expression that describes a subset of metrics to return.\n   * @param options The options parameters.\n   */\n  private _listMetrics(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    filter: string,\n    options?: DatabasesListMetricsOptionalParams\n  ): Promise<DatabasesListMetricsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, filter, options },\n      listMetricsOperationSpec\n    );\n  }\n\n  /**\n   * Returns database metric definitions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listMetricDefinitions(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesListMetricDefinitionsOptionalParams\n  ): Promise<DatabasesListMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listMetricDefinitionsOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListByServerOptionalParams\n  ): Promise<DatabasesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesGetOptionalParams\n  ): Promise<DatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new database or updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: Database,\n    options?: DatabasesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesCreateOrUpdateResponse>,\n      DatabasesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new database or updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: Database,\n    options?: DatabasesCreateOrUpdateOptionalParams\n  ): Promise<DatabasesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: DatabaseUpdate,\n    options?: DatabasesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesUpdateResponse>,\n      DatabasesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: DatabaseUpdate,\n    options?: DatabasesUpdateOptionalParams\n  ): Promise<DatabasesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of databases in an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  private _listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: DatabasesListByElasticPoolOptionalParams\n  ): Promise<DatabasesListByElasticPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      listByElasticPoolOperationSpec\n    );\n  }\n\n  /**\n   * Failovers a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to failover.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesFailoverOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Failovers a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to failover.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of inaccessible databases in a logical server\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listInaccessibleByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: DatabasesListInaccessibleByServerOptionalParams\n  ): Promise<DatabasesListInaccessibleByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listInaccessibleByServerOperationSpec\n    );\n  }\n\n  /**\n   * Pauses a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be paused.\n   * @param options The options parameters.\n   */\n  async beginPause(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesPauseOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesPauseResponse>,\n      DatabasesPauseResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesPauseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, options },\n      pauseOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Pauses a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be paused.\n   * @param options The options parameters.\n   */\n  async beginPauseAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesPauseOptionalParams\n  ): Promise<DatabasesPauseResponse> {\n    const poller = await this.beginPause(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Resumes a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be resumed.\n   * @param options The options parameters.\n   */\n  async beginResume(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesResumeOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesResumeResponse>,\n      DatabasesResumeResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesResumeResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, options },\n      resumeOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Resumes a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be resumed.\n   * @param options The options parameters.\n   */\n  async beginResumeAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesResumeOptionalParams\n  ): Promise<DatabasesResumeResponse> {\n    const poller = await this.beginResume(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Upgrades a data warehouse.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be upgraded.\n   * @param options The options parameters.\n   */\n  async beginUpgradeDataWarehouse(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesUpgradeDataWarehouseOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, options },\n      upgradeDataWarehouseOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Upgrades a data warehouse.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to be upgraded.\n   * @param options The options parameters.\n   */\n  async beginUpgradeDataWarehouseAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabasesUpgradeDataWarehouseOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginUpgradeDataWarehouse(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Renames a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to rename.\n   * @param parameters The resource move definition for renaming this database.\n   * @param options The options parameters.\n   */\n  rename(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ResourceMoveDefinition,\n    options?: DatabasesRenameOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      renameOperationSpec\n    );\n  }\n\n  /**\n   * Imports a bacpac into a new database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginImport(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ImportExistingDatabaseDefinition,\n    options?: DatabasesImportOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesImportResponse>,\n      DatabasesImportResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesImportResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      importOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Imports a bacpac into a new database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginImportAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ImportExistingDatabaseDefinition,\n    options?: DatabasesImportOptionalParams\n  ): Promise<DatabasesImportResponse> {\n    const poller = await this.beginImport(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Exports a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The database export request parameters.\n   * @param options The options parameters.\n   */\n  async beginExport(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ExportDatabaseDefinition,\n    options?: DatabasesExportOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabasesExportResponse>,\n      DatabasesExportResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabasesExportResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      exportOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Exports a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The database export request parameters.\n   * @param options The options parameters.\n   */\n  async beginExportAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ExportDatabaseDefinition,\n    options?: DatabasesExportOptionalParams\n  ): Promise<DatabasesExportResponse> {\n    const poller = await this.beginExport(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: DatabasesListByServerNextOptionalParams\n  ): Promise<DatabasesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByElasticPoolNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param nextLink The nextLink from the previous successful call to the ListByElasticPool method.\n   * @param options The options parameters.\n   */\n  private _listByElasticPoolNext(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    nextLink: string,\n    options?: DatabasesListByElasticPoolNextOptionalParams\n  ): Promise<DatabasesListByElasticPoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, nextLink, options },\n      listByElasticPoolNextOperationSpec\n    );\n  }\n\n  /**\n   * ListInaccessibleByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListInaccessibleByServer\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInaccessibleByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: DatabasesListInaccessibleByServerNextOptionalParams\n  ): Promise<DatabasesListInaccessibleByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listInaccessibleByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listMetricsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listMetricDefinitionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/metricDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricDefinitionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.skipToken, Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters3,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters4,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByElasticPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/databases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/failover\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1, Parameters.replicaType],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  serializer\n};\nconst listInaccessibleByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/inaccessibleDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst pauseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/pause\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst resumeOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/resume\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Database\n    },\n    201: {\n      bodyMapper: Mappers.Database\n    },\n    202: {\n      bodyMapper: Mappers.Database\n    },\n    204: {\n      bodyMapper: Mappers.Database\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst upgradeDataWarehouseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/upgradeDataWarehouse\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  serializer\n};\nconst renameOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/move\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters5,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst importOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/import\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters6,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst exportOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/export\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters7,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByElasticPoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listInaccessibleByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ElasticPools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Metric,\n  ElasticPoolsListMetricsOptionalParams,\n  ElasticPoolsListMetricsResponse,\n  MetricDefinition,\n  ElasticPoolsListMetricDefinitionsOptionalParams,\n  ElasticPoolsListMetricDefinitionsResponse,\n  ElasticPool,\n  ElasticPoolsListByServerNextOptionalParams,\n  ElasticPoolsListByServerOptionalParams,\n  ElasticPoolsListByServerResponse,\n  ElasticPoolsGetOptionalParams,\n  ElasticPoolsGetResponse,\n  ElasticPoolsCreateOrUpdateOptionalParams,\n  ElasticPoolsCreateOrUpdateResponse,\n  ElasticPoolsDeleteOptionalParams,\n  ElasticPoolUpdate,\n  ElasticPoolsUpdateOptionalParams,\n  ElasticPoolsUpdateResponse,\n  ElasticPoolsFailoverOptionalParams,\n  ElasticPoolsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ElasticPools operations. */\nexport class ElasticPoolsImpl implements ElasticPools {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ElasticPools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns elastic pool  metrics.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param filter An OData filter expression that describes a subset of metrics to return.\n   * @param options The options parameters.\n   */\n  public listMetrics(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    filter: string,\n    options?: ElasticPoolsListMetricsOptionalParams\n  ): PagedAsyncIterableIterator<Metric> {\n    const iter = this.listMetricsPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      filter,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMetricsPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          filter,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listMetricsPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    filter: string,\n    options?: ElasticPoolsListMetricsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<Metric[]> {\n    let result: ElasticPoolsListMetricsResponse;\n    result = await this._listMetrics(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      filter,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listMetricsPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    filter: string,\n    options?: ElasticPoolsListMetricsOptionalParams\n  ): AsyncIterableIterator<Metric> {\n    for await (const page of this.listMetricsPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      filter,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns elastic pool metric definitions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  public listMetricDefinitions(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsListMetricDefinitionsOptionalParams\n  ): PagedAsyncIterableIterator<MetricDefinition> {\n    const iter = this.listMetricDefinitionsPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMetricDefinitionsPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listMetricDefinitionsPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsListMetricDefinitionsOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<MetricDefinition[]> {\n    let result: ElasticPoolsListMetricDefinitionsResponse;\n    result = await this._listMetricDefinitions(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listMetricDefinitionsPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsListMetricDefinitionsOptionalParams\n  ): AsyncIterableIterator<MetricDefinition> {\n    for await (const page of this.listMetricDefinitionsPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all elastic pools in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ElasticPoolsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ElasticPool> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ElasticPoolsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ElasticPool[]> {\n    let result: ElasticPoolsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ElasticPoolsListByServerOptionalParams\n  ): AsyncIterableIterator<ElasticPool> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns elastic pool  metrics.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param filter An OData filter expression that describes a subset of metrics to return.\n   * @param options The options parameters.\n   */\n  private _listMetrics(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    filter: string,\n    options?: ElasticPoolsListMetricsOptionalParams\n  ): Promise<ElasticPoolsListMetricsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, filter, options },\n      listMetricsOperationSpec\n    );\n  }\n\n  /**\n   * Returns elastic pool metric definitions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  private _listMetricDefinitions(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsListMetricDefinitionsOptionalParams\n  ): Promise<ElasticPoolsListMetricDefinitionsResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      listMetricDefinitionsOperationSpec\n    );\n  }\n\n  /**\n   * Gets all elastic pools in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ElasticPoolsListByServerOptionalParams\n  ): Promise<ElasticPoolsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsGetOptionalParams\n  ): Promise<ElasticPoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param parameters The elastic pool parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    parameters: ElasticPool,\n    options?: ElasticPoolsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ElasticPoolsCreateOrUpdateResponse>,\n      ElasticPoolsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ElasticPoolsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, elasticPoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param parameters The elastic pool parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    parameters: ElasticPool,\n    options?: ElasticPoolsCreateOrUpdateOptionalParams\n  ): Promise<ElasticPoolsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, elasticPoolName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param parameters The elastic pool update parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    parameters: ElasticPoolUpdate,\n    options?: ElasticPoolsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ElasticPoolsUpdateResponse>,\n      ElasticPoolsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ElasticPoolsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, elasticPoolName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param parameters The elastic pool update parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    parameters: ElasticPoolUpdate,\n    options?: ElasticPoolsUpdateOptionalParams\n  ): Promise<ElasticPoolsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Failovers an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool to failover.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsFailoverOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, elasticPoolName, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Failovers an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool to failover.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolsFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ElasticPoolsListByServerNextOptionalParams\n  ): Promise<ElasticPoolsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listMetricsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metrics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion, Parameters.filter],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listMetricDefinitionsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/metricDefinitions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MetricDefinitionListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.skip, Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    201: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    202: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    204: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters8,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    201: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    202: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    204: {\n      bodyMapper: Mappers.ElasticPool\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters9,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/failover\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ReplicationLinks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ReplicationLink,\n  ReplicationLinksListByDatabaseNextOptionalParams,\n  ReplicationLinksListByDatabaseOptionalParams,\n  ReplicationLinksListByDatabaseResponse,\n  ReplicationLinksListByServerNextOptionalParams,\n  ReplicationLinksListByServerOptionalParams,\n  ReplicationLinksListByServerResponse,\n  ReplicationLinksDeleteOptionalParams,\n  ReplicationLinksFailoverOptionalParams,\n  ReplicationLinksFailoverAllowDataLossOptionalParams,\n  UnlinkParameters,\n  ReplicationLinksUnlinkOptionalParams,\n  ReplicationLinksGetOptionalParams,\n  ReplicationLinksGetResponse,\n  ReplicationLinksListByDatabaseNextResponse,\n  ReplicationLinksListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ReplicationLinks operations. */\nexport class ReplicationLinksImpl implements ReplicationLinks {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ReplicationLinks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of replication links on database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ReplicationLinksListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ReplicationLink> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ReplicationLinksListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReplicationLink[]> {\n    let result: ReplicationLinksListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ReplicationLinksListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ReplicationLink> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of replication links.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ReplicationLinksListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ReplicationLink> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ReplicationLinksListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ReplicationLink[]> {\n    let result: ReplicationLinksListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ReplicationLinksListByServerOptionalParams\n  ): AsyncIterableIterator<ReplicationLink> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Deletes a database replication link. Cannot be done during failover.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be dropped.\n   * @param linkId The ID of the replication link to be deleted.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, linkId, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Sets which replica database is primary by failing over from the current primary replica database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksFailoverOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, linkId, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets which replica database is primary by failing over from the current primary replica database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      linkId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Sets which replica database is primary by failing over from the current primary replica database.\n   * This operation might result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param options The options parameters.\n   */\n  async beginFailoverAllowDataLoss(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksFailoverAllowDataLossOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, linkId, options },\n      failoverAllowDataLossOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets which replica database is primary by failing over from the current primary replica database.\n   * This operation might result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param options The options parameters.\n   */\n  async beginFailoverAllowDataLossAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksFailoverAllowDataLossOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailoverAllowDataLoss(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      linkId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a database replication link in forced or friendly way.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param parameters The required parameters for unlinking replication link.\n   * @param options The options parameters.\n   */\n  async beginUnlink(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    parameters: UnlinkParameters,\n    options?: ReplicationLinksUnlinkOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        linkId,\n        parameters,\n        options\n      },\n      unlinkOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a database replication link in forced or friendly way.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database that has the replication link to be failed over.\n   * @param linkId The ID of the replication link to be failed over.\n   * @param parameters The required parameters for unlinking replication link.\n   * @param options The options parameters.\n   */\n  async beginUnlinkAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    parameters: UnlinkParameters,\n    options?: ReplicationLinksUnlinkOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginUnlink(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      linkId,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of replication links on database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ReplicationLinksListByDatabaseOptionalParams\n  ): Promise<ReplicationLinksListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Gets a replication link.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param linkId The name of the replication link.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    linkId: string,\n    options?: ReplicationLinksGetOptionalParams\n  ): Promise<ReplicationLinksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, linkId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of replication links.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ReplicationLinksListByServerOptionalParams\n  ): Promise<ReplicationLinksListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ReplicationLinksListByDatabaseNextOptionalParams\n  ): Promise<ReplicationLinksListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ReplicationLinksListByServerNextOptionalParams\n  ): Promise<ReplicationLinksListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.linkId\n  ],\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/failover\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.linkId\n  ],\n  serializer\n};\nconst failoverAllowDataLossOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/forceFailoverAllowDataLoss\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.linkId\n  ],\n  serializer\n};\nconst unlinkOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}/unlink\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {} },\n  requestBody: Parameters.parameters10,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.linkId\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/replicationLinks/{linkId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLink\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.linkId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/replicationLinks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ReplicationLinkListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ServerCommunicationLinks } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerCommunicationLink,\n  ServerCommunicationLinksListByServerOptionalParams,\n  ServerCommunicationLinksListByServerResponse,\n  ServerCommunicationLinksDeleteOptionalParams,\n  ServerCommunicationLinksGetOptionalParams,\n  ServerCommunicationLinksGetResponse,\n  ServerCommunicationLinksCreateOrUpdateOptionalParams,\n  ServerCommunicationLinksCreateOrUpdateResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerCommunicationLinks operations. */\nexport class ServerCommunicationLinksImpl implements ServerCommunicationLinks {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerCommunicationLinks class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server communication links.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerCommunicationLinksListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerCommunicationLink> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerCommunicationLinksListByServerOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ServerCommunicationLink[]> {\n    let result: ServerCommunicationLinksListByServerResponse;\n    result = await this._listByServer(resourceGroupName, serverName, options);\n    yield result.value || [];\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerCommunicationLinksListByServerOptionalParams\n  ): AsyncIterableIterator<ServerCommunicationLink> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Deletes a server communication link.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param communicationLinkName The name of the server communication link.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    communicationLinkName: string,\n    options?: ServerCommunicationLinksDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, communicationLinkName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Returns a server communication link.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param communicationLinkName The name of the server communication link.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    communicationLinkName: string,\n    options?: ServerCommunicationLinksGetOptionalParams\n  ): Promise<ServerCommunicationLinksGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, communicationLinkName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a server communication link.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param communicationLinkName The name of the server communication link.\n   * @param parameters The required parameters for creating a server communication link.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    communicationLinkName: string,\n    parameters: ServerCommunicationLink,\n    options?: ServerCommunicationLinksCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerCommunicationLinksCreateOrUpdateResponse>,\n      ServerCommunicationLinksCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerCommunicationLinksCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        communicationLinkName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a server communication link.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param communicationLinkName The name of the server communication link.\n   * @param parameters The required parameters for creating a server communication link.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    communicationLinkName: string,\n    parameters: ServerCommunicationLink,\n    options?: ServerCommunicationLinksCreateOrUpdateOptionalParams\n  ): Promise<ServerCommunicationLinksCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      communicationLinkName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of server communication links.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerCommunicationLinksListByServerOptionalParams\n  ): Promise<ServerCommunicationLinksListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {} },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.communicationLinkName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerCommunicationLink\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.communicationLinkName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks/{communicationLinkName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerCommunicationLink\n    },\n    201: {\n      bodyMapper: Mappers.ServerCommunicationLink\n    },\n    202: {\n      bodyMapper: Mappers.ServerCommunicationLink\n    },\n    204: {\n      bodyMapper: Mappers.ServerCommunicationLink\n    }\n  },\n  requestBody: Parameters.parameters11,\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.communicationLinkName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/communicationLinks\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerCommunicationLinkListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ServiceObjectives } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServiceObjective,\n  ServiceObjectivesListByServerOptionalParams,\n  ServiceObjectivesListByServerResponse,\n  ServiceObjectivesGetOptionalParams,\n  ServiceObjectivesGetResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServiceObjectives operations. */\nexport class ServiceObjectivesImpl implements ServiceObjectives {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServiceObjectives class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns database service objectives.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServiceObjectivesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServiceObjective> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServiceObjectivesListByServerOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ServiceObjective[]> {\n    let result: ServiceObjectivesListByServerResponse;\n    result = await this._listByServer(resourceGroupName, serverName, options);\n    yield result.value || [];\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServiceObjectivesListByServerOptionalParams\n  ): AsyncIterableIterator<ServiceObjective> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database service objective.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param serviceObjectiveName The name of the service objective to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    serviceObjectiveName: string,\n    options?: ServiceObjectivesGetOptionalParams\n  ): Promise<ServiceObjectivesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, serviceObjectiveName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Returns database service objectives.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServiceObjectivesListByServerOptionalParams\n  ): Promise<ServiceObjectivesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives/{serviceObjectiveName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceObjective\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.serviceObjectiveName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/serviceObjectives\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServiceObjectiveListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ElasticPoolActivities } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ElasticPoolActivity,\n  ElasticPoolActivitiesListByElasticPoolOptionalParams,\n  ElasticPoolActivitiesListByElasticPoolResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ElasticPoolActivities operations. */\nexport class ElasticPoolActivitiesImpl implements ElasticPoolActivities {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ElasticPoolActivities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns elastic pool activities.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool for which to get the current activity.\n   * @param options The options parameters.\n   */\n  public listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolActivitiesListByElasticPoolOptionalParams\n  ): PagedAsyncIterableIterator<ElasticPoolActivity> {\n    const iter = this.listByElasticPoolPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByElasticPoolPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByElasticPoolPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolActivitiesListByElasticPoolOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ElasticPoolActivity[]> {\n    let result: ElasticPoolActivitiesListByElasticPoolResponse;\n    result = await this._listByElasticPool(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByElasticPoolPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolActivitiesListByElasticPoolOptionalParams\n  ): AsyncIterableIterator<ElasticPoolActivity> {\n    for await (const page of this.listByElasticPoolPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns elastic pool activities.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool for which to get the current activity.\n   * @param options The options parameters.\n   */\n  private _listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolActivitiesListByElasticPoolOptionalParams\n  ): Promise<ElasticPoolActivitiesListByElasticPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      listByElasticPoolOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByElasticPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolActivity\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolActivityListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ElasticPoolDatabaseActivities } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ElasticPoolDatabaseActivity,\n  ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams,\n  ElasticPoolDatabaseActivitiesListByElasticPoolResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ElasticPoolDatabaseActivities operations. */\nexport class ElasticPoolDatabaseActivitiesImpl\n  implements ElasticPoolDatabaseActivities {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ElasticPoolDatabaseActivities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns activity on databases inside of an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  public listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams\n  ): PagedAsyncIterableIterator<ElasticPoolDatabaseActivity> {\n    const iter = this.listByElasticPoolPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByElasticPoolPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByElasticPoolPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ElasticPoolDatabaseActivity[]> {\n    let result: ElasticPoolDatabaseActivitiesListByElasticPoolResponse;\n    result = await this._listByElasticPool(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    yield result.value || [];\n  }\n\n  private async *listByElasticPoolPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams\n  ): AsyncIterableIterator<ElasticPoolDatabaseActivity> {\n    for await (const page of this.listByElasticPoolPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns activity on databases inside of an elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName The name of the elastic pool.\n   * @param options The options parameters.\n   */\n  private _listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolDatabaseActivitiesListByElasticPoolOptionalParams\n  ): Promise<ElasticPoolDatabaseActivitiesListByElasticPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      listByElasticPoolOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByElasticPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/elasticPoolDatabaseActivity\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolDatabaseActivityListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { ServerUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServerUsage,\n  ServerUsagesListByServerOptionalParams,\n  ServerUsagesListByServerResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerUsages operations. */\nexport class ServerUsagesImpl implements ServerUsages {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Returns server usages.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerUsagesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerUsage> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerUsagesListByServerOptionalParams,\n    _settings?: PageSettings\n  ): AsyncIterableIterator<ServerUsage[]> {\n    let result: ServerUsagesListByServerResponse;\n    result = await this._listByServer(resourceGroupName, serverName, options);\n    yield result.value || [];\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerUsagesListByServerOptionalParams\n  ): AsyncIterableIterator<ServerUsage> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Returns server usages.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerUsagesListByServerOptionalParams\n  ): Promise<ServerUsagesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerUsageListResult\n    }\n  },\n  queryParameters: [Parameters.apiVersion],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ExtendedDatabaseBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ExtendedDatabaseBlobAuditingPolicy,\n  ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams,\n  ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams,\n  ExtendedDatabaseBlobAuditingPoliciesListByDatabaseResponse,\n  ExtendedDatabaseBlobAuditingPoliciesGetOptionalParams,\n  ExtendedDatabaseBlobAuditingPoliciesGetResponse,\n  ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse,\n  ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ExtendedDatabaseBlobAuditingPolicies operations. */\nexport class ExtendedDatabaseBlobAuditingPoliciesImpl\n  implements ExtendedDatabaseBlobAuditingPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ExtendedDatabaseBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists extended auditing settings of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ExtendedDatabaseBlobAuditingPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ExtendedDatabaseBlobAuditingPolicy[]> {\n    let result: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ExtendedDatabaseBlobAuditingPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets an extended database's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesGetOptionalParams\n  ): Promise<ExtendedDatabaseBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an extended database's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The extended database blob auditing policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: ExtendedDatabaseBlobAuditingPolicy,\n    options?: ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ExtendedDatabaseBlobAuditingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Lists extended auditing settings of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): Promise<ExtendedDatabaseBlobAuditingPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams\n  ): Promise<ExtendedDatabaseBlobAuditingPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedDatabaseBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedDatabaseBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ExtendedDatabaseBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters12,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extendedAuditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedDatabaseBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedDatabaseBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ExtendedServerBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ExtendedServerBlobAuditingPolicy,\n  ExtendedServerBlobAuditingPoliciesListByServerNextOptionalParams,\n  ExtendedServerBlobAuditingPoliciesListByServerOptionalParams,\n  ExtendedServerBlobAuditingPoliciesListByServerResponse,\n  ExtendedServerBlobAuditingPoliciesGetOptionalParams,\n  ExtendedServerBlobAuditingPoliciesGetResponse,\n  ExtendedServerBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse,\n  ExtendedServerBlobAuditingPoliciesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ExtendedServerBlobAuditingPolicies operations. */\nexport class ExtendedServerBlobAuditingPoliciesImpl\n  implements ExtendedServerBlobAuditingPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ExtendedServerBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists extended auditing settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ExtendedServerBlobAuditingPoliciesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ExtendedServerBlobAuditingPolicy> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ExtendedServerBlobAuditingPoliciesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ExtendedServerBlobAuditingPolicy[]> {\n    let result: ExtendedServerBlobAuditingPoliciesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ExtendedServerBlobAuditingPoliciesListByServerOptionalParams\n  ): AsyncIterableIterator<ExtendedServerBlobAuditingPolicy> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets an extended server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ExtendedServerBlobAuditingPoliciesGetOptionalParams\n  ): Promise<ExtendedServerBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an extended server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters Properties of extended blob auditing policy\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ExtendedServerBlobAuditingPolicy,\n    options?: ExtendedServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse\n      >,\n      ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an extended server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters Properties of extended blob auditing policy\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ExtendedServerBlobAuditingPolicy,\n    options?: ExtendedServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ExtendedServerBlobAuditingPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists extended auditing settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ExtendedServerBlobAuditingPoliciesListByServerOptionalParams\n  ): Promise<ExtendedServerBlobAuditingPoliciesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ExtendedServerBlobAuditingPoliciesListByServerNextOptionalParams\n  ): Promise<ExtendedServerBlobAuditingPoliciesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters13,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/extendedAuditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ExtendedServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerBlobAuditingPolicy,\n  ServerBlobAuditingPoliciesListByServerNextOptionalParams,\n  ServerBlobAuditingPoliciesListByServerOptionalParams,\n  ServerBlobAuditingPoliciesListByServerResponse,\n  ServerBlobAuditingPoliciesGetOptionalParams,\n  ServerBlobAuditingPoliciesGetResponse,\n  ServerBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  ServerBlobAuditingPoliciesCreateOrUpdateResponse,\n  ServerBlobAuditingPoliciesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerBlobAuditingPolicies operations. */\nexport class ServerBlobAuditingPoliciesImpl\n  implements ServerBlobAuditingPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists auditing settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerBlobAuditingPoliciesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerBlobAuditingPolicy> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerBlobAuditingPoliciesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerBlobAuditingPolicy[]> {\n    let result: ServerBlobAuditingPoliciesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerBlobAuditingPoliciesListByServerOptionalParams\n  ): AsyncIterableIterator<ServerBlobAuditingPolicy> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerBlobAuditingPoliciesGetOptionalParams\n  ): Promise<ServerBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters Properties of blob auditing policy\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ServerBlobAuditingPolicy,\n    options?: ServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerBlobAuditingPoliciesCreateOrUpdateResponse>,\n      ServerBlobAuditingPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerBlobAuditingPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a server's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters Properties of blob auditing policy\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ServerBlobAuditingPolicy,\n    options?: ServerBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ServerBlobAuditingPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists auditing settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerBlobAuditingPoliciesListByServerOptionalParams\n  ): Promise<ServerBlobAuditingPoliciesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerBlobAuditingPoliciesListByServerNextOptionalParams\n  ): Promise<ServerBlobAuditingPoliciesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters14,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/auditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseBlobAuditingPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseBlobAuditingPolicy,\n  DatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams,\n  DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams,\n  DatabaseBlobAuditingPoliciesListByDatabaseResponse,\n  DatabaseBlobAuditingPoliciesGetOptionalParams,\n  DatabaseBlobAuditingPoliciesGetResponse,\n  DatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams,\n  DatabaseBlobAuditingPoliciesCreateOrUpdateResponse,\n  DatabaseBlobAuditingPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseBlobAuditingPolicies operations. */\nexport class DatabaseBlobAuditingPoliciesImpl\n  implements DatabaseBlobAuditingPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseBlobAuditingPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists auditing settings of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseBlobAuditingPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseBlobAuditingPolicy[]> {\n    let result: DatabaseBlobAuditingPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseBlobAuditingPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseBlobAuditingPoliciesGetOptionalParams\n  ): Promise<DatabaseBlobAuditingPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database's blob auditing policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The database blob auditing policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: DatabaseBlobAuditingPolicy,\n    options?: DatabaseBlobAuditingPoliciesCreateOrUpdateOptionalParams\n  ): Promise<DatabaseBlobAuditingPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Lists auditing settings of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseBlobAuditingPoliciesListByDatabaseOptionalParams\n  ): Promise<DatabaseBlobAuditingPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseBlobAuditingPoliciesListByDatabaseNextOptionalParams\n  ): Promise<DatabaseBlobAuditingPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseBlobAuditingPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings/{blobAuditingPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseBlobAuditingPolicy\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseBlobAuditingPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters15,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.blobAuditingPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/auditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseBlobAuditingPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DatabaseAdvisors } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseAdvisorsListByDatabaseOptionalParams,\n  DatabaseAdvisorsListByDatabaseResponse,\n  DatabaseAdvisorsGetOptionalParams,\n  DatabaseAdvisorsGetResponse,\n  Advisor,\n  DatabaseAdvisorsUpdateOptionalParams,\n  DatabaseAdvisorsUpdateResponse\n} from \"../models\";\n\n/** Class containing DatabaseAdvisors operations. */\nexport class DatabaseAdvisorsImpl implements DatabaseAdvisors {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseAdvisors class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of database advisors.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseAdvisorsListByDatabaseOptionalParams\n  ): Promise<DatabaseAdvisorsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Gets a database advisor.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param advisorName The name of the Database Advisor.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    advisorName: string,\n    options?: DatabaseAdvisorsGetOptionalParams\n  ): Promise<DatabaseAdvisorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, advisorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a database advisor.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param advisorName The name of the Database Advisor.\n   * @param parameters The requested advisor resource state.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    advisorName: string,\n    parameters: Advisor,\n    options?: DatabaseAdvisorsUpdateOptionalParams\n  ): Promise<DatabaseAdvisorsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        advisorName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"Advisor\" } }\n        }\n      }\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Advisor\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.advisorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Advisor\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters16,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.advisorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DatabaseAutomaticTuningOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseAutomaticTuningGetOptionalParams,\n  DatabaseAutomaticTuningGetResponse,\n  DatabaseAutomaticTuning,\n  DatabaseAutomaticTuningUpdateOptionalParams,\n  DatabaseAutomaticTuningUpdateResponse\n} from \"../models\";\n\n/** Class containing DatabaseAutomaticTuningOperations operations. */\nexport class DatabaseAutomaticTuningOperationsImpl\n  implements DatabaseAutomaticTuningOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseAutomaticTuningOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's automatic tuning.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseAutomaticTuningGetOptionalParams\n  ): Promise<DatabaseAutomaticTuningGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update automatic tuning properties for target database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The requested automatic tuning resource state.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: DatabaseAutomaticTuning,\n    options?: DatabaseAutomaticTuningUpdateOptionalParams\n  ): Promise<DatabaseAutomaticTuningUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/automaticTuning/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseAutomaticTuning\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/automaticTuning/current\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseAutomaticTuning\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters17,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseColumns } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseColumn,\n  DatabaseColumnsListByDatabaseNextOptionalParams,\n  DatabaseColumnsListByDatabaseOptionalParams,\n  DatabaseColumnsListByDatabaseResponse,\n  DatabaseColumnsListByTableNextOptionalParams,\n  DatabaseColumnsListByTableOptionalParams,\n  DatabaseColumnsListByTableResponse,\n  DatabaseColumnsGetOptionalParams,\n  DatabaseColumnsGetResponse,\n  DatabaseColumnsListByDatabaseNextResponse,\n  DatabaseColumnsListByTableNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseColumns operations. */\nexport class DatabaseColumnsImpl implements DatabaseColumns {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseColumns class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseColumnsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseColumn> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseColumnsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseColumn[]> {\n    let result: DatabaseColumnsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseColumnsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseColumn> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  public listByTable(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: DatabaseColumnsListByTableOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseColumn> {\n    const iter = this.listByTablePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      schemaName,\n      tableName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByTablePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          schemaName,\n          tableName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByTablePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: DatabaseColumnsListByTableOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseColumn[]> {\n    let result: DatabaseColumnsListByTableResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByTable(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByTableNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByTablePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: DatabaseColumnsListByTableOptionalParams\n  ): AsyncIterableIterator<DatabaseColumn> {\n    for await (const page of this.listByTablePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      schemaName,\n      tableName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseColumnsListByDatabaseOptionalParams\n  ): Promise<DatabaseColumnsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * List database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  private _listByTable(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: DatabaseColumnsListByTableOptionalParams\n  ): Promise<DatabaseColumnsListByTableResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      },\n      listByTableOperationSpec\n    );\n  }\n\n  /**\n   * Get database column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: DatabaseColumnsGetOptionalParams\n  ): Promise<DatabaseColumnsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseColumnsListByDatabaseNextOptionalParams\n  ): Promise<DatabaseColumnsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByTableNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param nextLink The nextLink from the previous successful call to the ListByTable method.\n   * @param options The options parameters.\n   */\n  private _listByTableNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    nextLink: string,\n    options?: DatabaseColumnsListByTableNextOptionalParams\n  ): Promise<DatabaseColumnsListByTableNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        nextLink,\n        options\n      },\n      listByTableNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/columns\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion2,\n    Parameters.schema,\n    Parameters.table,\n    Parameters.column,\n    Parameters.orderBy,\n    Parameters.skiptoken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumn\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTableNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DatabaseRecommendedActions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseRecommendedActionsListByDatabaseAdvisorOptionalParams,\n  DatabaseRecommendedActionsListByDatabaseAdvisorResponse,\n  DatabaseRecommendedActionsGetOptionalParams,\n  DatabaseRecommendedActionsGetResponse,\n  RecommendedAction,\n  DatabaseRecommendedActionsUpdateOptionalParams,\n  DatabaseRecommendedActionsUpdateResponse\n} from \"../models\";\n\n/** Class containing DatabaseRecommendedActions operations. */\nexport class DatabaseRecommendedActionsImpl\n  implements DatabaseRecommendedActions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseRecommendedActions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets list of Database Recommended Actions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param advisorName The name of the Database Advisor.\n   * @param options The options parameters.\n   */\n  listByDatabaseAdvisor(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    advisorName: string,\n    options?: DatabaseRecommendedActionsListByDatabaseAdvisorOptionalParams\n  ): Promise<DatabaseRecommendedActionsListByDatabaseAdvisorResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, advisorName, options },\n      listByDatabaseAdvisorOperationSpec\n    );\n  }\n\n  /**\n   * Gets a database recommended action.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param advisorName The name of the Database Advisor.\n   * @param recommendedActionName The name of Database Recommended Action.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    advisorName: string,\n    recommendedActionName: string,\n    options?: DatabaseRecommendedActionsGetOptionalParams\n  ): Promise<DatabaseRecommendedActionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        advisorName,\n        recommendedActionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a database recommended action.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param advisorName The name of the Database Advisor.\n   * @param recommendedActionName The name of Database Recommended Action.\n   * @param parameters The requested recommended action resource state.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    advisorName: string,\n    recommendedActionName: string,\n    parameters: RecommendedAction,\n    options?: DatabaseRecommendedActionsUpdateOptionalParams\n  ): Promise<DatabaseRecommendedActionsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        advisorName,\n        recommendedActionName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseAdvisorOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: { name: \"Composite\", className: \"RecommendedAction\" }\n          }\n        }\n      }\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.advisorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecommendedAction\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.advisorName,\n    Parameters.recommendedActionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/advisors/{advisorName}/recommendedActions/{recommendedActionName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecommendedAction\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters18,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.advisorName,\n    Parameters.recommendedActionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseSchemas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseSchema,\n  DatabaseSchemasListByDatabaseNextOptionalParams,\n  DatabaseSchemasListByDatabaseOptionalParams,\n  DatabaseSchemasListByDatabaseResponse,\n  DatabaseSchemasGetOptionalParams,\n  DatabaseSchemasGetResponse,\n  DatabaseSchemasListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseSchemas operations. */\nexport class DatabaseSchemasImpl implements DatabaseSchemas {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseSchemas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List database schemas\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSchemasListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseSchema> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSchemasListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseSchema[]> {\n    let result: DatabaseSchemasListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSchemasListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseSchema> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List database schemas\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSchemasListByDatabaseOptionalParams\n  ): Promise<DatabaseSchemasListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Get database schema\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: DatabaseSchemasGetOptionalParams\n  ): Promise<DatabaseSchemasGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, schemaName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseSchemasListByDatabaseNextOptionalParams\n  ): Promise<DatabaseSchemasListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchemaListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchema\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchemaListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseSecurityAlertPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseSecurityAlertPolicy,\n  DatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams,\n  DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams,\n  DatabaseSecurityAlertPoliciesListByDatabaseResponse,\n  SecurityAlertPolicyName,\n  DatabaseSecurityAlertPoliciesGetOptionalParams,\n  DatabaseSecurityAlertPoliciesGetResponse,\n  DatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams,\n  DatabaseSecurityAlertPoliciesCreateOrUpdateResponse,\n  DatabaseSecurityAlertPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseSecurityAlertPolicies operations. */\nexport class DatabaseSecurityAlertPoliciesImpl\n  implements DatabaseSecurityAlertPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseSecurityAlertPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of database's security alert policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the  server.\n   * @param databaseName The name of the  database for which the security alert policy is defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseSecurityAlertPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseSecurityAlertPolicy[]> {\n    let result: DatabaseSecurityAlertPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseSecurityAlertPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database's security alert policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the  server.\n   * @param databaseName The name of the  database for which the security alert policy is defined.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    options?: DatabaseSecurityAlertPoliciesGetOptionalParams\n  ): Promise<DatabaseSecurityAlertPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        securityAlertPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database's security alert policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the  server.\n   * @param databaseName The name of the  database for which the security alert policy is defined.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The database security alert policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: DatabaseSecurityAlertPolicy,\n    options?: DatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<DatabaseSecurityAlertPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of database's security alert policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the  server.\n   * @param databaseName The name of the  database for which the security alert policy is defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): Promise<DatabaseSecurityAlertPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the  server.\n   * @param databaseName The name of the  database for which the security alert policy is defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams\n  ): Promise<DatabaseSecurityAlertPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters19,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSecurityAlertListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSecurityAlertListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseTables } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseTable,\n  DatabaseTablesListBySchemaNextOptionalParams,\n  DatabaseTablesListBySchemaOptionalParams,\n  DatabaseTablesListBySchemaResponse,\n  DatabaseTablesGetOptionalParams,\n  DatabaseTablesGetResponse,\n  DatabaseTablesListBySchemaNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseTables operations. */\nexport class DatabaseTablesImpl implements DatabaseTables {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseTables class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List database tables\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  public listBySchema(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: DatabaseTablesListBySchemaOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseTable> {\n    const iter = this.listBySchemaPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      schemaName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySchemaPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          schemaName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySchemaPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: DatabaseTablesListBySchemaOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseTable[]> {\n    let result: DatabaseTablesListBySchemaResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySchema(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySchemaNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySchemaPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: DatabaseTablesListBySchemaOptionalParams\n  ): AsyncIterableIterator<DatabaseTable> {\n    for await (const page of this.listBySchemaPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      schemaName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List database tables\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  private _listBySchema(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: DatabaseTablesListBySchemaOptionalParams\n  ): Promise<DatabaseTablesListBySchemaResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, schemaName, options },\n      listBySchemaOperationSpec\n    );\n  }\n\n  /**\n   * Get database table\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: DatabaseTablesGetOptionalParams\n  ): Promise<DatabaseTablesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListBySchemaNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param nextLink The nextLink from the previous successful call to the ListBySchema method.\n   * @param options The options parameters.\n   */\n  private _listBySchemaNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    nextLink: string,\n    options?: DatabaseTablesListBySchemaNextOptionalParams\n  ): Promise<DatabaseTablesListBySchemaNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        nextLink,\n        options\n      },\n      listBySchemaNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySchemaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTableListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTable\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySchemaNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTableListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.schemaName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { DatabaseVulnerabilityAssessmentRuleBaselines } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  VulnerabilityAssessmentName,\n  VulnerabilityAssessmentPolicyBaselineName,\n  DatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams,\n  DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse,\n  DatabaseVulnerabilityAssessmentRuleBaseline,\n  DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams,\n  DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse,\n  DatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing DatabaseVulnerabilityAssessmentRuleBaselines operations. */\nexport class DatabaseVulnerabilityAssessmentRuleBaselinesImpl\n  implements DatabaseVulnerabilityAssessmentRuleBaselines {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseVulnerabilityAssessmentRuleBaselines class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: DatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentRuleBaselinesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param parameters The requested rule baseline resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    parameters: DatabaseVulnerabilityAssessmentRuleBaseline,\n    options?: DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  ): Promise<\n    DatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: DatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters20,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseVulnerabilityAssessment,\n  DatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams,\n  DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,\n  DatabaseVulnerabilityAssessmentsListByDatabaseResponse,\n  VulnerabilityAssessmentName,\n  DatabaseVulnerabilityAssessmentsGetOptionalParams,\n  DatabaseVulnerabilityAssessmentsGetResponse,\n  DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse,\n  DatabaseVulnerabilityAssessmentsDeleteOptionalParams,\n  DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseVulnerabilityAssessments operations. */\nexport class DatabaseVulnerabilityAssessmentsImpl\n  implements DatabaseVulnerabilityAssessments {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment policies are\n   *                     defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseVulnerabilityAssessment> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseVulnerabilityAssessment[]> {\n    let result: DatabaseVulnerabilityAssessmentsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseVulnerabilityAssessment> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters The requested resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: DatabaseVulnerabilityAssessment,\n    options?: DatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment policies are\n   *                     defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database for which the vulnerability assessment policies are\n   *                     defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters21,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseVulnerabilityAssessmentScans } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VulnerabilityAssessmentScanRecord,\n  VulnerabilityAssessmentName,\n  DatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams,\n  DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams,\n  DatabaseVulnerabilityAssessmentScansListByDatabaseResponse,\n  DatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams,\n  DatabaseVulnerabilityAssessmentScansGetOptionalParams,\n  DatabaseVulnerabilityAssessmentScansGetResponse,\n  DatabaseVulnerabilityAssessmentScansExportOptionalParams,\n  DatabaseVulnerabilityAssessmentScansExportResponse,\n  DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseVulnerabilityAssessmentScans operations. */\nexport class DatabaseVulnerabilityAssessmentScansImpl\n  implements DatabaseVulnerabilityAssessmentScans {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseVulnerabilityAssessmentScans class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          vulnerabilityAssessmentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord[]> {\n    let result: DatabaseVulnerabilityAssessmentScansListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScan(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: DatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      initiateScanOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScanAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: DatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginInitiateScan(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      scanId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: DatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentScansListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Gets a vulnerability assessment scan record of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: DatabaseVulnerabilityAssessmentScansGetOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentScansGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Convert an existing scan result to a human readable format. If already exists nothing happens\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the scanned database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id.\n   * @param options The options parameters.\n   */\n  export(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: DatabaseVulnerabilityAssessmentScansExportOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentScansExportResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      exportOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    nextLink: string,\n    options?: DatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams\n  ): Promise<DatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst initiateScanOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecord\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst exportOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DataWarehouseUserActivitiesOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DataWarehouseUserActivities,\n  DataWarehouseUserActivitiesListByDatabaseNextOptionalParams,\n  DataWarehouseUserActivitiesListByDatabaseOptionalParams,\n  DataWarehouseUserActivitiesListByDatabaseResponse,\n  DataWarehouseUserActivityName,\n  DataWarehouseUserActivitiesGetOptionalParams,\n  DataWarehouseUserActivitiesGetResponse,\n  DataWarehouseUserActivitiesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DataWarehouseUserActivitiesOperations operations. */\nexport class DataWarehouseUserActivitiesOperationsImpl\n  implements DataWarehouseUserActivitiesOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DataWarehouseUserActivitiesOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List the user activities of a data warehouse which includes running and suspended queries\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataWarehouseUserActivitiesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DataWarehouseUserActivities> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataWarehouseUserActivitiesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DataWarehouseUserActivities[]> {\n    let result: DataWarehouseUserActivitiesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataWarehouseUserActivitiesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DataWarehouseUserActivities> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the user activities of a data warehouse which includes running and suspended queries\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param dataWarehouseUserActivityName The activity name of the data warehouse.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    dataWarehouseUserActivityName: DataWarehouseUserActivityName,\n    options?: DataWarehouseUserActivitiesGetOptionalParams\n  ): Promise<DataWarehouseUserActivitiesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        dataWarehouseUserActivityName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * List the user activities of a data warehouse which includes running and suspended queries\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DataWarehouseUserActivitiesListByDatabaseOptionalParams\n  ): Promise<DataWarehouseUserActivitiesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DataWarehouseUserActivitiesListByDatabaseNextOptionalParams\n  ): Promise<DataWarehouseUserActivitiesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataWarehouseUserActivities/{dataWarehouseUserActivityName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataWarehouseUserActivities\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.dataWarehouseUserActivityName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/dataWarehouseUserActivities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataWarehouseUserActivitiesListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DataWarehouseUserActivitiesListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DeletedServers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  DeletedServer,\n  DeletedServersListNextOptionalParams,\n  DeletedServersListOptionalParams,\n  DeletedServersListResponse,\n  DeletedServersListByLocationNextOptionalParams,\n  DeletedServersListByLocationOptionalParams,\n  DeletedServersListByLocationResponse,\n  DeletedServersGetOptionalParams,\n  DeletedServersGetResponse,\n  DeletedServersRecoverOptionalParams,\n  DeletedServersRecoverResponse,\n  DeletedServersListNextResponse,\n  DeletedServersListByLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DeletedServers operations. */\nexport class DeletedServersImpl implements DeletedServers {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DeletedServers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all deleted servers in a subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: DeletedServersListOptionalParams\n  ): PagedAsyncIterableIterator<DeletedServer> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: DeletedServersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeletedServer[]> {\n    let result: DeletedServersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: DeletedServersListOptionalParams\n  ): AsyncIterableIterator<DeletedServer> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of deleted servers for a location.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: DeletedServersListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<DeletedServer> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: DeletedServersListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DeletedServer[]> {\n    let result: DeletedServersListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: DeletedServersListByLocationOptionalParams\n  ): AsyncIterableIterator<DeletedServer> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all deleted servers in a subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: DeletedServersListOptionalParams\n  ): Promise<DeletedServersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets a deleted server.\n   * @param locationName The name of the region where the resource is located.\n   * @param deletedServerName The name of the deleted server.\n   * @param options The options parameters.\n   */\n  get(\n    locationName: string,\n    deletedServerName: string,\n    options?: DeletedServersGetOptionalParams\n  ): Promise<DeletedServersGetResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, deletedServerName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of deleted servers for a location.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: DeletedServersListByLocationOptionalParams\n  ): Promise<DeletedServersListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Recovers a deleted server.\n   * @param locationName The name of the region where the resource is located.\n   * @param deletedServerName The name of the deleted server.\n   * @param options The options parameters.\n   */\n  async beginRecover(\n    locationName: string,\n    deletedServerName: string,\n    options?: DeletedServersRecoverOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DeletedServersRecoverResponse>,\n      DeletedServersRecoverResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DeletedServersRecoverResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { locationName, deletedServerName, options },\n      recoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Recovers a deleted server.\n   * @param locationName The name of the region where the resource is located.\n   * @param deletedServerName The name of the deleted server.\n   * @param options The options parameters.\n   */\n  async beginRecoverAndWait(\n    locationName: string,\n    deletedServerName: string,\n    options?: DeletedServersRecoverOptionalParams\n  ): Promise<DeletedServersRecoverResponse> {\n    const poller = await this.beginRecover(\n      locationName,\n      deletedServerName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: DeletedServersListNextOptionalParams\n  ): Promise<DeletedServersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: DeletedServersListByLocationNextOptionalParams\n  ): Promise<DeletedServersListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/deletedServers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServerListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/deletedServers/{deletedServerName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServer\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.deletedServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/deletedServers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServerListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst recoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/deletedServers/{deletedServerName}/recover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServer\n    },\n    201: {\n      bodyMapper: Mappers.DeletedServer\n    },\n    202: {\n      bodyMapper: Mappers.DeletedServer\n    },\n    204: {\n      bodyMapper: Mappers.DeletedServer\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.deletedServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServerListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DeletedServerListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ElasticPoolOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ElasticPoolOperation,\n  ElasticPoolOperationsListByElasticPoolNextOptionalParams,\n  ElasticPoolOperationsListByElasticPoolOptionalParams,\n  ElasticPoolOperationsListByElasticPoolResponse,\n  ElasticPoolOperationsCancelOptionalParams,\n  ElasticPoolOperationsListByElasticPoolNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ElasticPoolOperations operations. */\nexport class ElasticPoolOperationsImpl implements ElasticPoolOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ElasticPoolOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of operations performed on the elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName\n   * @param options The options parameters.\n   */\n  public listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolOperationsListByElasticPoolOptionalParams\n  ): PagedAsyncIterableIterator<ElasticPoolOperation> {\n    const iter = this.listByElasticPoolPagingAll(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByElasticPoolPagingPage(\n          resourceGroupName,\n          serverName,\n          elasticPoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByElasticPoolPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolOperationsListByElasticPoolOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ElasticPoolOperation[]> {\n    let result: ElasticPoolOperationsListByElasticPoolResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByElasticPool(\n        resourceGroupName,\n        serverName,\n        elasticPoolName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByElasticPoolNext(\n        resourceGroupName,\n        serverName,\n        elasticPoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByElasticPoolPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolOperationsListByElasticPoolOptionalParams\n  ): AsyncIterableIterator<ElasticPoolOperation> {\n    for await (const page of this.listByElasticPoolPagingPage(\n      resourceGroupName,\n      serverName,\n      elasticPoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Cancels the asynchronous operation on the elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName\n   * @param operationId The operation identifier.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    operationId: string,\n    options?: ElasticPoolOperationsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, operationId, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of operations performed on the elastic pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName\n   * @param options The options parameters.\n   */\n  private _listByElasticPool(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    options?: ElasticPoolOperationsListByElasticPoolOptionalParams\n  ): Promise<ElasticPoolOperationsListByElasticPoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, options },\n      listByElasticPoolOperationSpec\n    );\n  }\n\n  /**\n   * ListByElasticPoolNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param elasticPoolName\n   * @param nextLink The nextLink from the previous successful call to the ListByElasticPool method.\n   * @param options The options parameters.\n   */\n  private _listByElasticPoolNext(\n    resourceGroupName: string,\n    serverName: string,\n    elasticPoolName: string,\n    nextLink: string,\n    options?: ElasticPoolOperationsListByElasticPoolNextOptionalParams\n  ): Promise<ElasticPoolOperationsListByElasticPoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, elasticPoolName, nextLink, options },\n      listByElasticPoolNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations/{operationId}/cancel\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName,\n    Parameters.operationId\n  ],\n  serializer\n};\nconst listByElasticPoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/elasticPools/{elasticPoolName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByElasticPoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ElasticPoolOperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.elasticPoolName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { EncryptionProtectors } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  EncryptionProtector,\n  EncryptionProtectorsListByServerNextOptionalParams,\n  EncryptionProtectorsListByServerOptionalParams,\n  EncryptionProtectorsListByServerResponse,\n  EncryptionProtectorName,\n  EncryptionProtectorsGetOptionalParams,\n  EncryptionProtectorsGetResponse,\n  EncryptionProtectorsCreateOrUpdateOptionalParams,\n  EncryptionProtectorsCreateOrUpdateResponse,\n  EncryptionProtectorsRevalidateOptionalParams,\n  EncryptionProtectorsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing EncryptionProtectors operations. */\nexport class EncryptionProtectorsImpl implements EncryptionProtectors {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class EncryptionProtectors class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server encryption protectors\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: EncryptionProtectorsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<EncryptionProtector> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: EncryptionProtectorsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<EncryptionProtector[]> {\n    let result: EncryptionProtectorsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: EncryptionProtectorsListByServerOptionalParams\n  ): AsyncIterableIterator<EncryptionProtector> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of server encryption protectors\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: EncryptionProtectorsListByServerOptionalParams\n  ): Promise<EncryptionProtectorsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a server encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param encryptionProtectorName The name of the encryption protector to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: EncryptionProtectorsGetOptionalParams\n  ): Promise<EncryptionProtectorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, encryptionProtectorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: EncryptionProtector,\n    options?: EncryptionProtectorsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<EncryptionProtectorsCreateOrUpdateResponse>,\n      EncryptionProtectorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<EncryptionProtectorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        encryptionProtectorName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: EncryptionProtector,\n    options?: EncryptionProtectorsCreateOrUpdateOptionalParams\n  ): Promise<EncryptionProtectorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      encryptionProtectorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Revalidates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param options The options parameters.\n   */\n  async beginRevalidate(\n    resourceGroupName: string,\n    serverName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: EncryptionProtectorsRevalidateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, encryptionProtectorName, options },\n      revalidateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Revalidates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param options The options parameters.\n   */\n  async beginRevalidateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: EncryptionProtectorsRevalidateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevalidate(\n      resourceGroupName,\n      serverName,\n      encryptionProtectorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: EncryptionProtectorsListByServerNextOptionalParams\n  ): Promise<EncryptionProtectorsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtectorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.encryptionProtectorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    201: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    202: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    204: {\n      bodyMapper: Mappers.EncryptionProtector\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters22,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.encryptionProtectorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst revalidateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/encryptionProtector/{encryptionProtectorName}/revalidate\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.encryptionProtectorName\n  ],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.EncryptionProtectorListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { FailoverGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  FailoverGroup,\n  FailoverGroupsListByServerNextOptionalParams,\n  FailoverGroupsListByServerOptionalParams,\n  FailoverGroupsListByServerResponse,\n  FailoverGroupsGetOptionalParams,\n  FailoverGroupsGetResponse,\n  FailoverGroupsCreateOrUpdateOptionalParams,\n  FailoverGroupsCreateOrUpdateResponse,\n  FailoverGroupsDeleteOptionalParams,\n  FailoverGroupUpdate,\n  FailoverGroupsUpdateOptionalParams,\n  FailoverGroupsUpdateResponse,\n  FailoverGroupsFailoverOptionalParams,\n  FailoverGroupsFailoverResponse,\n  FailoverGroupsForceFailoverAllowDataLossOptionalParams,\n  FailoverGroupsForceFailoverAllowDataLossResponse,\n  FailoverGroupsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing FailoverGroups operations. */\nexport class FailoverGroupsImpl implements FailoverGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class FailoverGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the failover groups in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FailoverGroupsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<FailoverGroup> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FailoverGroupsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<FailoverGroup[]> {\n    let result: FailoverGroupsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FailoverGroupsListByServerOptionalParams\n  ): AsyncIterableIterator<FailoverGroup> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsGetOptionalParams\n  ): Promise<FailoverGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, failoverGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    parameters: FailoverGroup,\n    options?: FailoverGroupsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<FailoverGroupsCreateOrUpdateResponse>,\n      FailoverGroupsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<FailoverGroupsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, failoverGroupName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    parameters: FailoverGroup,\n    options?: FailoverGroupsCreateOrUpdateOptionalParams\n  ): Promise<FailoverGroupsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      failoverGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, failoverGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    parameters: FailoverGroupUpdate,\n    options?: FailoverGroupsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<FailoverGroupsUpdateResponse>,\n      FailoverGroupsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<FailoverGroupsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, failoverGroupName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    parameters: FailoverGroupUpdate,\n    options?: FailoverGroupsUpdateOptionalParams\n  ): Promise<FailoverGroupsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      failoverGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists the failover groups in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FailoverGroupsListByServerOptionalParams\n  ): Promise<FailoverGroupsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Fails over from the current primary server to this server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsFailoverOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<FailoverGroupsFailoverResponse>,\n      FailoverGroupsFailoverResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<FailoverGroupsFailoverResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, failoverGroupName, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Fails over from the current primary server to this server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsFailoverOptionalParams\n  ): Promise<FailoverGroupsFailoverResponse> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      serverName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Fails over from the current primary server to this server. This operation might result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginForceFailoverAllowDataLoss(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsForceFailoverAllowDataLossOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<FailoverGroupsForceFailoverAllowDataLossResponse>,\n      FailoverGroupsForceFailoverAllowDataLossResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<FailoverGroupsForceFailoverAllowDataLossResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, failoverGroupName, options },\n      forceFailoverAllowDataLossOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Fails over from the current primary server to this server. This operation might result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginForceFailoverAllowDataLossAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    failoverGroupName: string,\n    options?: FailoverGroupsForceFailoverAllowDataLossOptionalParams\n  ): Promise<FailoverGroupsForceFailoverAllowDataLossResponse> {\n    const poller = await this.beginForceFailoverAllowDataLoss(\n      resourceGroupName,\n      serverName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server containing the failover group.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: FailoverGroupsListByServerNextOptionalParams\n  ): Promise<FailoverGroupsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters23,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters24,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/failover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst forceFailoverAllowDataLossOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/failoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.FailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FailoverGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { FirewallRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  FirewallRule,\n  FirewallRulesListByServerNextOptionalParams,\n  FirewallRulesListByServerOptionalParams,\n  FirewallRulesListByServerResponse,\n  FirewallRulesGetOptionalParams,\n  FirewallRulesGetResponse,\n  FirewallRulesCreateOrUpdateOptionalParams,\n  FirewallRulesCreateOrUpdateResponse,\n  FirewallRulesDeleteOptionalParams,\n  FirewallRuleList,\n  FirewallRulesReplaceOptionalParams,\n  FirewallRulesReplaceResponse,\n  FirewallRulesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing FirewallRules operations. */\nexport class FirewallRulesImpl implements FirewallRules {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class FirewallRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of firewall rules.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FirewallRulesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<FirewallRule> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FirewallRulesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<FirewallRule[]> {\n    let result: FirewallRulesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FirewallRulesListByServerOptionalParams\n  ): AsyncIterableIterator<FirewallRule> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a firewall rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param firewallRuleName The name of the firewall rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    firewallRuleName: string,\n    options?: FirewallRulesGetOptionalParams\n  ): Promise<FirewallRulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, firewallRuleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a firewall rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param firewallRuleName The name of the firewall rule.\n   * @param parameters The required parameters for creating or updating a firewall rule.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    firewallRuleName: string,\n    parameters: FirewallRule,\n    options?: FirewallRulesCreateOrUpdateOptionalParams\n  ): Promise<FirewallRulesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, firewallRuleName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a firewall rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param firewallRuleName The name of the firewall rule.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    firewallRuleName: string,\n    options?: FirewallRulesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, firewallRuleName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of firewall rules.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: FirewallRulesListByServerOptionalParams\n  ): Promise<FirewallRulesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Replaces all firewall rules on the server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters A list of server firewall rules.\n   * @param options The options parameters.\n   */\n  replace(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: FirewallRuleList,\n    options?: FirewallRulesReplaceOptionalParams\n  ): Promise<FirewallRulesReplaceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, parameters, options },\n      replaceOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: FirewallRulesListByServerNextOptionalParams\n  ): Promise<FirewallRulesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FirewallRule\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.firewallRuleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FirewallRule\n    },\n    201: {\n      bodyMapper: Mappers.FirewallRule\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters25,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.firewallRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules/{firewallRuleName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.firewallRuleName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FirewallRuleListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst replaceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/firewallRules\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FirewallRule\n    },\n    202: {},\n    default: {}\n  },\n  requestBody: Parameters.parameters26,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.FirewallRuleListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { InstanceFailoverGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  InstanceFailoverGroup,\n  InstanceFailoverGroupsListByLocationNextOptionalParams,\n  InstanceFailoverGroupsListByLocationOptionalParams,\n  InstanceFailoverGroupsListByLocationResponse,\n  InstanceFailoverGroupsGetOptionalParams,\n  InstanceFailoverGroupsGetResponse,\n  InstanceFailoverGroupsCreateOrUpdateOptionalParams,\n  InstanceFailoverGroupsCreateOrUpdateResponse,\n  InstanceFailoverGroupsDeleteOptionalParams,\n  InstanceFailoverGroupsFailoverOptionalParams,\n  InstanceFailoverGroupsFailoverResponse,\n  InstanceFailoverGroupsForceFailoverAllowDataLossOptionalParams,\n  InstanceFailoverGroupsForceFailoverAllowDataLossResponse,\n  InstanceFailoverGroupsListByLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing InstanceFailoverGroups operations. */\nexport class InstanceFailoverGroupsImpl implements InstanceFailoverGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class InstanceFailoverGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the failover groups in a location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: InstanceFailoverGroupsListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<InstanceFailoverGroup> {\n    const iter = this.listByLocationPagingAll(\n      resourceGroupName,\n      locationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(\n          resourceGroupName,\n          locationName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    options?: InstanceFailoverGroupsListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<InstanceFailoverGroup[]> {\n    let result: InstanceFailoverGroupsListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(\n        resourceGroupName,\n        locationName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        resourceGroupName,\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    options?: InstanceFailoverGroupsListByLocationOptionalParams\n  ): AsyncIterableIterator<InstanceFailoverGroup> {\n    for await (const page of this.listByLocationPagingPage(\n      resourceGroupName,\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsGetOptionalParams\n  ): Promise<InstanceFailoverGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, failoverGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    parameters: InstanceFailoverGroup,\n    options?: InstanceFailoverGroupsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<InstanceFailoverGroupsCreateOrUpdateResponse>,\n      InstanceFailoverGroupsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InstanceFailoverGroupsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        failoverGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param parameters The failover group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    parameters: InstanceFailoverGroup,\n    options?: InstanceFailoverGroupsCreateOrUpdateOptionalParams\n  ): Promise<InstanceFailoverGroupsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      locationName,\n      failoverGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, locationName, failoverGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a failover group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      locationName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists the failover groups in a location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: InstanceFailoverGroupsListByLocationOptionalParams\n  ): Promise<InstanceFailoverGroupsListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Fails over from the current primary managed instance to this managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsFailoverOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<InstanceFailoverGroupsFailoverResponse>,\n      InstanceFailoverGroupsFailoverResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InstanceFailoverGroupsFailoverResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, locationName, failoverGroupName, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Fails over from the current primary managed instance to this managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsFailoverOptionalParams\n  ): Promise<InstanceFailoverGroupsFailoverResponse> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      locationName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Fails over from the current primary managed instance to this managed instance. This operation might\n   * result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginForceFailoverAllowDataLoss(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsForceFailoverAllowDataLossOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        InstanceFailoverGroupsForceFailoverAllowDataLossResponse\n      >,\n      InstanceFailoverGroupsForceFailoverAllowDataLossResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InstanceFailoverGroupsForceFailoverAllowDataLossResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, locationName, failoverGroupName, options },\n      forceFailoverAllowDataLossOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Fails over from the current primary managed instance to this managed instance. This operation might\n   * result in data loss.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param failoverGroupName The name of the failover group.\n   * @param options The options parameters.\n   */\n  async beginForceFailoverAllowDataLossAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    failoverGroupName: string,\n    options?: InstanceFailoverGroupsForceFailoverAllowDataLossOptionalParams\n  ): Promise<InstanceFailoverGroupsForceFailoverAllowDataLossResponse> {\n    const poller = await this.beginForceFailoverAllowDataLoss(\n      resourceGroupName,\n      locationName,\n      failoverGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByLocationNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    resourceGroupName: string,\n    locationName: string,\n    nextLink: string,\n    options?: InstanceFailoverGroupsListByLocationNextOptionalParams\n  ): Promise<InstanceFailoverGroupsListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters27,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.failoverGroupName\n  ],\n  serializer\n};\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}/failover\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst forceFailoverAllowDataLossOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/instanceFailoverGroups/{failoverGroupName}/forceFailoverAllowDataLoss\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    201: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    202: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    204: {\n      bodyMapper: Mappers.InstanceFailoverGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.failoverGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstanceFailoverGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { InstancePools } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  InstancePool,\n  InstancePoolsListByResourceGroupNextOptionalParams,\n  InstancePoolsListByResourceGroupOptionalParams,\n  InstancePoolsListByResourceGroupResponse,\n  InstancePoolsListNextOptionalParams,\n  InstancePoolsListOptionalParams,\n  InstancePoolsListResponse,\n  InstancePoolsGetOptionalParams,\n  InstancePoolsGetResponse,\n  InstancePoolsCreateOrUpdateOptionalParams,\n  InstancePoolsCreateOrUpdateResponse,\n  InstancePoolsDeleteOptionalParams,\n  InstancePoolUpdate,\n  InstancePoolsUpdateOptionalParams,\n  InstancePoolsUpdateResponse,\n  InstancePoolsListByResourceGroupNextResponse,\n  InstancePoolsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing InstancePools operations. */\nexport class InstancePoolsImpl implements InstancePools {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class InstancePools class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of instance pools in the resource group\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: InstancePoolsListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<InstancePool> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: InstancePoolsListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<InstancePool[]> {\n    let result: InstancePoolsListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: InstancePoolsListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<InstancePool> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all instance pools in the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: InstancePoolsListOptionalParams\n  ): PagedAsyncIterableIterator<InstancePool> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: InstancePoolsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<InstancePool[]> {\n    let result: InstancePoolsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: InstancePoolsListOptionalParams\n  ): AsyncIterableIterator<InstancePool> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: InstancePoolsGetOptionalParams\n  ): Promise<InstancePoolsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, instancePoolName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be created or updated.\n   * @param parameters The requested instance pool resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    instancePoolName: string,\n    parameters: InstancePool,\n    options?: InstancePoolsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<InstancePoolsCreateOrUpdateResponse>,\n      InstancePoolsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InstancePoolsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, instancePoolName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be created or updated.\n   * @param parameters The requested instance pool resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    instancePoolName: string,\n    parameters: InstancePool,\n    options?: InstancePoolsCreateOrUpdateOptionalParams\n  ): Promise<InstancePoolsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      instancePoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an instance pool\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be deleted\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: InstancePoolsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, instancePoolName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an instance pool\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be deleted\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: InstancePoolsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      instancePoolName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be updated.\n   * @param parameters The requested instance pool resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    instancePoolName: string,\n    parameters: InstancePoolUpdate,\n    options?: InstancePoolsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<InstancePoolsUpdateResponse>,\n      InstancePoolsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<InstancePoolsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, instancePoolName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be updated.\n   * @param parameters The requested instance pool resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    instancePoolName: string,\n    parameters: InstancePoolUpdate,\n    options?: InstancePoolsUpdateOptionalParams\n  ): Promise<InstancePoolsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      instancePoolName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of instance pools in the resource group\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: InstancePoolsListByResourceGroupOptionalParams\n  ): Promise<InstancePoolsListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all instance pools in the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: InstancePoolsListOptionalParams\n  ): Promise<InstancePoolsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: InstancePoolsListByResourceGroupNextOptionalParams\n  ): Promise<InstancePoolsListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: InstancePoolsListNextOptionalParams\n  ): Promise<InstancePoolsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePool\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePool\n    },\n    201: {\n      bodyMapper: Mappers.InstancePool\n    },\n    202: {\n      bodyMapper: Mappers.InstancePool\n    },\n    204: {\n      bodyMapper: Mappers.InstancePool\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters28,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePool\n    },\n    201: {\n      bodyMapper: Mappers.InstancePool\n    },\n    202: {\n      bodyMapper: Mappers.InstancePool\n    },\n    204: {\n      bodyMapper: Mappers.InstancePool\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters29,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePoolListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/instancePools\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePoolListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePoolListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.InstancePoolListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobAgents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  JobAgent,\n  JobAgentsListByServerNextOptionalParams,\n  JobAgentsListByServerOptionalParams,\n  JobAgentsListByServerResponse,\n  JobAgentsGetOptionalParams,\n  JobAgentsGetResponse,\n  JobAgentsCreateOrUpdateOptionalParams,\n  JobAgentsCreateOrUpdateResponse,\n  JobAgentsDeleteOptionalParams,\n  JobAgentUpdate,\n  JobAgentsUpdateOptionalParams,\n  JobAgentsUpdateResponse,\n  JobAgentsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobAgents operations. */\nexport class JobAgentsImpl implements JobAgents {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobAgents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of job agents in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: JobAgentsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<JobAgent> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: JobAgentsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobAgent[]> {\n    let result: JobAgentsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: JobAgentsListByServerOptionalParams\n  ): AsyncIterableIterator<JobAgent> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of job agents in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: JobAgentsListByServerOptionalParams\n  ): Promise<JobAgentsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobAgentsGetOptionalParams\n  ): Promise<JobAgentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be created or updated.\n   * @param parameters The requested job agent resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    parameters: JobAgent,\n    options?: JobAgentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<JobAgentsCreateOrUpdateResponse>,\n      JobAgentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<JobAgentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, jobAgentName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be created or updated.\n   * @param parameters The requested job agent resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    parameters: JobAgent,\n    options?: JobAgentsCreateOrUpdateOptionalParams\n  ): Promise<JobAgentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobAgentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, jobAgentName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobAgentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be updated.\n   * @param parameters The update to the job agent.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    parameters: JobAgentUpdate,\n    options?: JobAgentsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<JobAgentsUpdateResponse>,\n      JobAgentsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<JobAgentsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, jobAgentName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent to be updated.\n   * @param parameters The update to the job agent.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    parameters: JobAgentUpdate,\n    options?: JobAgentsUpdateOptionalParams\n  ): Promise<JobAgentsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: JobAgentsListByServerNextOptionalParams\n  ): Promise<JobAgentsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobAgentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobAgent\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobAgent\n    },\n    201: {\n      bodyMapper: Mappers.JobAgent\n    },\n    202: {\n      bodyMapper: Mappers.JobAgent\n    },\n    204: {\n      bodyMapper: Mappers.JobAgent\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters30,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobAgent\n    },\n    201: {\n      bodyMapper: Mappers.JobAgent\n    },\n    202: {\n      bodyMapper: Mappers.JobAgent\n    },\n    204: {\n      bodyMapper: Mappers.JobAgent\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters31,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobAgentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobCredentials } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobCredential,\n  JobCredentialsListByAgentNextOptionalParams,\n  JobCredentialsListByAgentOptionalParams,\n  JobCredentialsListByAgentResponse,\n  JobCredentialsGetOptionalParams,\n  JobCredentialsGetResponse,\n  JobCredentialsCreateOrUpdateOptionalParams,\n  JobCredentialsCreateOrUpdateResponse,\n  JobCredentialsDeleteOptionalParams,\n  JobCredentialsListByAgentNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobCredentials operations. */\nexport class JobCredentialsImpl implements JobCredentials {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobCredentials class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of jobs credentials.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  public listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobCredentialsListByAgentOptionalParams\n  ): PagedAsyncIterableIterator<JobCredential> {\n    const iter = this.listByAgentPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByAgentPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByAgentPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobCredentialsListByAgentOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobCredential[]> {\n    let result: JobCredentialsListByAgentResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByAgent(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByAgentNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByAgentPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobCredentialsListByAgentOptionalParams\n  ): AsyncIterableIterator<JobCredential> {\n    for await (const page of this.listByAgentPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of jobs credentials.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  private _listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobCredentialsListByAgentOptionalParams\n  ): Promise<JobCredentialsListByAgentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, options },\n      listByAgentOperationSpec\n    );\n  }\n\n  /**\n   * Gets a jobs credential.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param credentialName The name of the credential.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    credentialName: string,\n    options?: JobCredentialsGetOptionalParams\n  ): Promise<JobCredentialsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, credentialName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a job credential.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param credentialName The name of the credential.\n   * @param parameters The requested job credential state.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    credentialName: string,\n    parameters: JobCredential,\n    options?: JobCredentialsCreateOrUpdateOptionalParams\n  ): Promise<JobCredentialsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        credentialName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a job credential.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param credentialName The name of the credential.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    credentialName: string,\n    options?: JobCredentialsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, credentialName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByAgentNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param nextLink The nextLink from the previous successful call to the ListByAgent method.\n   * @param options The options parameters.\n   */\n  private _listByAgentNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    nextLink: string,\n    options?: JobCredentialsListByAgentNextOptionalParams\n  ): Promise<JobCredentialsListByAgentNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, nextLink, options },\n      listByAgentNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByAgentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobCredentialListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobCredential\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.credentialName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobCredential\n    },\n    201: {\n      bodyMapper: Mappers.JobCredential\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters32,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.credentialName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/credentials/{credentialName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.credentialName\n  ],\n  serializer\n};\nconst listByAgentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobCredentialListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobExecutions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  JobExecution,\n  JobExecutionsListByAgentNextOptionalParams,\n  JobExecutionsListByAgentOptionalParams,\n  JobExecutionsListByAgentResponse,\n  JobExecutionsListByJobNextOptionalParams,\n  JobExecutionsListByJobOptionalParams,\n  JobExecutionsListByJobResponse,\n  JobExecutionsCancelOptionalParams,\n  JobExecutionsCreateOptionalParams,\n  JobExecutionsCreateResponse,\n  JobExecutionsGetOptionalParams,\n  JobExecutionsGetResponse,\n  JobExecutionsCreateOrUpdateOptionalParams,\n  JobExecutionsCreateOrUpdateResponse,\n  JobExecutionsListByAgentNextResponse,\n  JobExecutionsListByJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobExecutions operations. */\nexport class JobExecutionsImpl implements JobExecutions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobExecutions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all executions in a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  public listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobExecutionsListByAgentOptionalParams\n  ): PagedAsyncIterableIterator<JobExecution> {\n    const iter = this.listByAgentPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByAgentPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByAgentPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobExecutionsListByAgentOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobExecution[]> {\n    let result: JobExecutionsListByAgentResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByAgent(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByAgentNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByAgentPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobExecutionsListByAgentOptionalParams\n  ): AsyncIterableIterator<JobExecution> {\n    for await (const page of this.listByAgentPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists a job's executions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  public listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsListByJobOptionalParams\n  ): PagedAsyncIterableIterator<JobExecution> {\n    const iter = this.listByJobPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByJobPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByJobPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsListByJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobExecution[]> {\n    let result: JobExecutionsListByJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByJob(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByJobNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByJobPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsListByJobOptionalParams\n  ): AsyncIterableIterator<JobExecution> {\n    for await (const page of this.listByJobPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all executions in a job agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  private _listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobExecutionsListByAgentOptionalParams\n  ): Promise<JobExecutionsListByAgentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, options },\n      listByAgentOperationSpec\n    );\n  }\n\n  /**\n   * Requests cancellation of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param jobExecutionId The id of the job execution to cancel.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobExecutionsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Starts an elastic job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<JobExecutionsCreateResponse>,\n      JobExecutionsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<JobExecutionsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Starts an elastic job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsCreateOptionalParams\n  ): Promise<JobExecutionsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists a job's executions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  private _listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobExecutionsListByJobOptionalParams\n  ): Promise<JobExecutionsListByJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      listByJobOperationSpec\n    );\n  }\n\n  /**\n   * Gets a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param jobExecutionId The id of the job execution\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobExecutionsGetOptionalParams\n  ): Promise<JobExecutionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The job execution id to create the job execution under.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobExecutionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<JobExecutionsCreateOrUpdateResponse>,\n      JobExecutionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<JobExecutionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The job execution id to create the job execution under.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobExecutionsCreateOrUpdateOptionalParams\n  ): Promise<JobExecutionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByAgentNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param nextLink The nextLink from the previous successful call to the ListByAgent method.\n   * @param options The options parameters.\n   */\n  private _listByAgentNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    nextLink: string,\n    options?: JobExecutionsListByAgentNextOptionalParams\n  ): Promise<JobExecutionsListByAgentNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, nextLink, options },\n      listByAgentNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByJobNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByJob method.\n   * @param options The options parameters.\n   */\n  private _listByJobNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    nextLink: string,\n    options?: JobExecutionsListByJobNextOptionalParams\n  ): Promise<JobExecutionsListByJobNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        nextLink,\n        options\n      },\n      listByJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByAgentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/executions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.createTimeMin,\n    Parameters.createTimeMax,\n    Parameters.endTimeMin,\n    Parameters.endTimeMax,\n    Parameters.isActive,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/cancel\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/start\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecution\n    },\n    201: {\n      bodyMapper: Mappers.JobExecution\n    },\n    202: {\n      bodyMapper: Mappers.JobExecution\n    },\n    204: {\n      bodyMapper: Mappers.JobExecution\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.createTimeMin,\n    Parameters.createTimeMax,\n    Parameters.endTimeMin,\n    Parameters.endTimeMax,\n    Parameters.isActive,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecution\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecution\n    },\n    201: {\n      bodyMapper: Mappers.JobExecution\n    },\n    202: {\n      bodyMapper: Mappers.JobExecution\n    },\n    204: {\n      bodyMapper: Mappers.JobExecution\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByAgentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Jobs } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  Job,\n  JobsListByAgentNextOptionalParams,\n  JobsListByAgentOptionalParams,\n  JobsListByAgentResponse,\n  JobsGetOptionalParams,\n  JobsGetResponse,\n  JobsCreateOrUpdateOptionalParams,\n  JobsCreateOrUpdateResponse,\n  JobsDeleteOptionalParams,\n  JobsListByAgentNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Jobs operations. */\nexport class JobsImpl implements Jobs {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Jobs class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of jobs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  public listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobsListByAgentOptionalParams\n  ): PagedAsyncIterableIterator<Job> {\n    const iter = this.listByAgentPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByAgentPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByAgentPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobsListByAgentOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Job[]> {\n    let result: JobsListByAgentResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByAgent(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByAgentNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByAgentPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobsListByAgentOptionalParams\n  ): AsyncIterableIterator<Job> {\n    for await (const page of this.listByAgentPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of jobs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  private _listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobsListByAgentOptionalParams\n  ): Promise<JobsListByAgentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, options },\n      listByAgentOperationSpec\n    );\n  }\n\n  /**\n   * Gets a job.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobsGetOptionalParams\n  ): Promise<JobsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a job.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param parameters The requested job state.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    parameters: Job,\n    options?: JobsCreateOrUpdateOptionalParams\n  ): Promise<JobsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a job.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByAgentNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param nextLink The nextLink from the previous successful call to the ListByAgent method.\n   * @param options The options parameters.\n   */\n  private _listByAgentNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    nextLink: string,\n    options?: JobsListByAgentNextOptionalParams\n  ): Promise<JobsListByAgentNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, nextLink, options },\n      listByAgentNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByAgentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Job\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Job\n    },\n    201: {\n      bodyMapper: Mappers.Job\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters33,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  serializer\n};\nconst listByAgentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobStepExecutions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobExecution,\n  JobStepExecutionsListByJobExecutionNextOptionalParams,\n  JobStepExecutionsListByJobExecutionOptionalParams,\n  JobStepExecutionsListByJobExecutionResponse,\n  JobStepExecutionsGetOptionalParams,\n  JobStepExecutionsGetResponse,\n  JobStepExecutionsListByJobExecutionNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobStepExecutions operations. */\nexport class JobStepExecutionsImpl implements JobStepExecutions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobStepExecutions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the step executions of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param options The options parameters.\n   */\n  public listByJobExecution(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobStepExecutionsListByJobExecutionOptionalParams\n  ): PagedAsyncIterableIterator<JobExecution> {\n    const iter = this.listByJobExecutionPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByJobExecutionPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          jobExecutionId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByJobExecutionPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobStepExecutionsListByJobExecutionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobExecution[]> {\n    let result: JobStepExecutionsListByJobExecutionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByJobExecution(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByJobExecutionNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByJobExecutionPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobStepExecutionsListByJobExecutionOptionalParams\n  ): AsyncIterableIterator<JobExecution> {\n    for await (const page of this.listByJobExecutionPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the step executions of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param options The options parameters.\n   */\n  private _listByJobExecution(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobStepExecutionsListByJobExecutionOptionalParams\n  ): Promise<JobStepExecutionsListByJobExecutionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      },\n      listByJobExecutionOperationSpec\n    );\n  }\n\n  /**\n   * Gets a step execution of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The unique id of the job execution\n   * @param stepName The name of the step.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    options?: JobStepExecutionsGetOptionalParams\n  ): Promise<JobStepExecutionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByJobExecutionNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param nextLink The nextLink from the previous successful call to the ListByJobExecution method.\n   * @param options The options parameters.\n   */\n  private _listByJobExecutionNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    nextLink: string,\n    options?: JobStepExecutionsListByJobExecutionNextOptionalParams\n  ): Promise<JobStepExecutionsListByJobExecutionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        nextLink,\n        options\n      },\n      listByJobExecutionNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByJobExecutionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.createTimeMin,\n    Parameters.createTimeMax,\n    Parameters.endTimeMin,\n    Parameters.endTimeMax,\n    Parameters.isActive,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecution\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId,\n    Parameters.stepName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobExecutionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobSteps } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobStep,\n  JobStepsListByVersionNextOptionalParams,\n  JobStepsListByVersionOptionalParams,\n  JobStepsListByVersionResponse,\n  JobStepsListByJobNextOptionalParams,\n  JobStepsListByJobOptionalParams,\n  JobStepsListByJobResponse,\n  JobStepsGetByVersionOptionalParams,\n  JobStepsGetByVersionResponse,\n  JobStepsGetOptionalParams,\n  JobStepsGetResponse,\n  JobStepsCreateOrUpdateOptionalParams,\n  JobStepsCreateOrUpdateResponse,\n  JobStepsDeleteOptionalParams,\n  JobStepsListByVersionNextResponse,\n  JobStepsListByJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobSteps operations. */\nexport class JobStepsImpl implements JobSteps {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobSteps class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all job steps in the specified job version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobVersion The version of the job to get.\n   * @param options The options parameters.\n   */\n  public listByVersion(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    options?: JobStepsListByVersionOptionalParams\n  ): PagedAsyncIterableIterator<JobStep> {\n    const iter = this.listByVersionPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobVersion,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByVersionPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          jobVersion,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByVersionPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    options?: JobStepsListByVersionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobStep[]> {\n    let result: JobStepsListByVersionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByVersion(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByVersionNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByVersionPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    options?: JobStepsListByVersionOptionalParams\n  ): AsyncIterableIterator<JobStep> {\n    for await (const page of this.listByVersionPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobVersion,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all job steps for a job's current version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  public listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobStepsListByJobOptionalParams\n  ): PagedAsyncIterableIterator<JobStep> {\n    const iter = this.listByJobPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByJobPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByJobPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobStepsListByJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobStep[]> {\n    let result: JobStepsListByJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByJob(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByJobNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByJobPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobStepsListByJobOptionalParams\n  ): AsyncIterableIterator<JobStep> {\n    for await (const page of this.listByJobPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all job steps in the specified job version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobVersion The version of the job to get.\n   * @param options The options parameters.\n   */\n  private _listByVersion(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    options?: JobStepsListByVersionOptionalParams\n  ): Promise<JobStepsListByVersionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        options\n      },\n      listByVersionOperationSpec\n    );\n  }\n\n  /**\n   * Gets the specified version of a job step.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param jobVersion The version of the job to get.\n   * @param stepName The name of the job step.\n   * @param options The options parameters.\n   */\n  getByVersion(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    stepName: string,\n    options?: JobStepsGetByVersionOptionalParams\n  ): Promise<JobStepsGetByVersionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        stepName,\n        options\n      },\n      getByVersionOperationSpec\n    );\n  }\n\n  /**\n   * Gets all job steps for a job's current version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  private _listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobStepsListByJobOptionalParams\n  ): Promise<JobStepsListByJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      listByJobOperationSpec\n    );\n  }\n\n  /**\n   * Gets a job step in a job's current version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param stepName The name of the job step.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    stepName: string,\n    options?: JobStepsGetOptionalParams\n  ): Promise<JobStepsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        stepName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a job step. This will implicitly create a new job version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param stepName The name of the job step.\n   * @param parameters The requested state of the job step.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    stepName: string,\n    parameters: JobStep,\n    options?: JobStepsCreateOrUpdateOptionalParams\n  ): Promise<JobStepsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        stepName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a job step. This will implicitly create a new job version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param stepName The name of the job step to delete.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    stepName: string,\n    options?: JobStepsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        stepName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByVersionNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobVersion The version of the job to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByVersion method.\n   * @param options The options parameters.\n   */\n  private _listByVersionNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    nextLink: string,\n    options?: JobStepsListByVersionNextOptionalParams\n  ): Promise<JobStepsListByVersionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        nextLink,\n        options\n      },\n      listByVersionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByJobNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByJob method.\n   * @param options The options parameters.\n   */\n  private _listByJobNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    nextLink: string,\n    options?: JobStepsListByJobNextOptionalParams\n  ): Promise<JobStepsListByJobNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        nextLink,\n        options\n      },\n      listByJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByVersionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStepListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByVersionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}/steps/{stepName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStep\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.stepName,\n    Parameters.jobVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStepListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStep\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.stepName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStep\n    },\n    201: {\n      bodyMapper: Mappers.JobStep\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters34,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.stepName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/steps/{stepName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.stepName\n  ],\n  serializer\n};\nconst listByVersionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStepListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobStepListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobTargetExecutions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobExecution,\n  JobTargetExecutionsListByJobExecutionNextOptionalParams,\n  JobTargetExecutionsListByJobExecutionOptionalParams,\n  JobTargetExecutionsListByJobExecutionResponse,\n  JobTargetExecutionsListByStepNextOptionalParams,\n  JobTargetExecutionsListByStepOptionalParams,\n  JobTargetExecutionsListByStepResponse,\n  JobTargetExecutionsGetOptionalParams,\n  JobTargetExecutionsGetResponse,\n  JobTargetExecutionsListByJobExecutionNextResponse,\n  JobTargetExecutionsListByStepNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobTargetExecutions operations. */\nexport class JobTargetExecutionsImpl implements JobTargetExecutions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobTargetExecutions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists target executions for all steps of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param options The options parameters.\n   */\n  public listByJobExecution(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobTargetExecutionsListByJobExecutionOptionalParams\n  ): PagedAsyncIterableIterator<JobExecution> {\n    const iter = this.listByJobExecutionPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByJobExecutionPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          jobExecutionId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByJobExecutionPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobTargetExecutionsListByJobExecutionOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobExecution[]> {\n    let result: JobTargetExecutionsListByJobExecutionResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByJobExecution(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByJobExecutionNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByJobExecutionPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobTargetExecutionsListByJobExecutionOptionalParams\n  ): AsyncIterableIterator<JobExecution> {\n    for await (const page of this.listByJobExecutionPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the target executions of a job step execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param stepName The name of the step.\n   * @param options The options parameters.\n   */\n  public listByStep(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    options?: JobTargetExecutionsListByStepOptionalParams\n  ): PagedAsyncIterableIterator<JobExecution> {\n    const iter = this.listByStepPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      stepName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByStepPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          jobExecutionId,\n          stepName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByStepPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    options?: JobTargetExecutionsListByStepOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobExecution[]> {\n    let result: JobTargetExecutionsListByStepResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByStep(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByStepNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByStepPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    options?: JobTargetExecutionsListByStepOptionalParams\n  ): AsyncIterableIterator<JobExecution> {\n    for await (const page of this.listByStepPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      jobExecutionId,\n      stepName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists target executions for all steps of a job execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param options The options parameters.\n   */\n  private _listByJobExecution(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    options?: JobTargetExecutionsListByJobExecutionOptionalParams\n  ): Promise<JobTargetExecutionsListByJobExecutionResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        options\n      },\n      listByJobExecutionOperationSpec\n    );\n  }\n\n  /**\n   * Lists the target executions of a job step execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param stepName The name of the step.\n   * @param options The options parameters.\n   */\n  private _listByStep(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    options?: JobTargetExecutionsListByStepOptionalParams\n  ): Promise<JobTargetExecutionsListByStepResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        options\n      },\n      listByStepOperationSpec\n    );\n  }\n\n  /**\n   * Gets a target execution.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The unique id of the job execution\n   * @param stepName The name of the step.\n   * @param targetId The target id.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    targetId: string,\n    options?: JobTargetExecutionsGetOptionalParams\n  ): Promise<JobTargetExecutionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        targetId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByJobExecutionNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param nextLink The nextLink from the previous successful call to the ListByJobExecution method.\n   * @param options The options parameters.\n   */\n  private _listByJobExecutionNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    nextLink: string,\n    options?: JobTargetExecutionsListByJobExecutionNextOptionalParams\n  ): Promise<JobTargetExecutionsListByJobExecutionNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        nextLink,\n        options\n      },\n      listByJobExecutionNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByStepNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param jobExecutionId The id of the job execution\n   * @param stepName The name of the step.\n   * @param nextLink The nextLink from the previous successful call to the ListByStep method.\n   * @param options The options parameters.\n   */\n  private _listByStepNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobExecutionId: string,\n    stepName: string,\n    nextLink: string,\n    options?: JobTargetExecutionsListByStepNextOptionalParams\n  ): Promise<JobTargetExecutionsListByStepNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobExecutionId,\n        stepName,\n        nextLink,\n        options\n      },\n      listByStepNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByJobExecutionOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/targets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.createTimeMin,\n    Parameters.createTimeMax,\n    Parameters.endTimeMin,\n    Parameters.endTimeMax,\n    Parameters.isActive,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStepOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.createTimeMin,\n    Parameters.createTimeMax,\n    Parameters.endTimeMin,\n    Parameters.endTimeMax,\n    Parameters.isActive,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId,\n    Parameters.stepName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/executions/{jobExecutionId}/steps/{stepName}/targets/{targetId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecution\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId,\n    Parameters.stepName,\n    Parameters.targetId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobExecutionNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByStepNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobExecutionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobExecutionId,\n    Parameters.stepName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobTargetGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobTargetGroup,\n  JobTargetGroupsListByAgentNextOptionalParams,\n  JobTargetGroupsListByAgentOptionalParams,\n  JobTargetGroupsListByAgentResponse,\n  JobTargetGroupsGetOptionalParams,\n  JobTargetGroupsGetResponse,\n  JobTargetGroupsCreateOrUpdateOptionalParams,\n  JobTargetGroupsCreateOrUpdateResponse,\n  JobTargetGroupsDeleteOptionalParams,\n  JobTargetGroupsListByAgentNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobTargetGroups operations. */\nexport class JobTargetGroupsImpl implements JobTargetGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobTargetGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all target groups in an agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  public listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobTargetGroupsListByAgentOptionalParams\n  ): PagedAsyncIterableIterator<JobTargetGroup> {\n    const iter = this.listByAgentPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByAgentPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByAgentPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobTargetGroupsListByAgentOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobTargetGroup[]> {\n    let result: JobTargetGroupsListByAgentResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByAgent(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByAgentNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByAgentPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobTargetGroupsListByAgentOptionalParams\n  ): AsyncIterableIterator<JobTargetGroup> {\n    for await (const page of this.listByAgentPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all target groups in an agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param options The options parameters.\n   */\n  private _listByAgent(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    options?: JobTargetGroupsListByAgentOptionalParams\n  ): Promise<JobTargetGroupsListByAgentResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, options },\n      listByAgentOperationSpec\n    );\n  }\n\n  /**\n   * Gets a target group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param targetGroupName The name of the target group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    targetGroupName: string,\n    options?: JobTargetGroupsGetOptionalParams\n  ): Promise<JobTargetGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, targetGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a target group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param targetGroupName The name of the target group.\n   * @param parameters The requested state of the target group.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    targetGroupName: string,\n    parameters: JobTargetGroup,\n    options?: JobTargetGroupsCreateOrUpdateOptionalParams\n  ): Promise<JobTargetGroupsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        targetGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a target group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param targetGroupName The name of the target group.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    targetGroupName: string,\n    options?: JobTargetGroupsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, targetGroupName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByAgentNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param nextLink The nextLink from the previous successful call to the ListByAgent method.\n   * @param options The options parameters.\n   */\n  private _listByAgentNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    nextLink: string,\n    options?: JobTargetGroupsListByAgentNextOptionalParams\n  ): Promise<JobTargetGroupsListByAgentNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, nextLink, options },\n      listByAgentNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByAgentOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobTargetGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobTargetGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.targetGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobTargetGroup\n    },\n    201: {\n      bodyMapper: Mappers.JobTargetGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters35,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.targetGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/targetGroups/{targetGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.targetGroupName\n  ],\n  serializer\n};\nconst listByAgentNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobTargetGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { JobVersions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  JobVersion,\n  JobVersionsListByJobNextOptionalParams,\n  JobVersionsListByJobOptionalParams,\n  JobVersionsListByJobResponse,\n  JobVersionsGetOptionalParams,\n  JobVersionsGetResponse,\n  JobVersionsListByJobNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing JobVersions operations. */\nexport class JobVersionsImpl implements JobVersions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class JobVersions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all versions of a job.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  public listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobVersionsListByJobOptionalParams\n  ): PagedAsyncIterableIterator<JobVersion> {\n    const iter = this.listByJobPagingAll(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByJobPagingPage(\n          resourceGroupName,\n          serverName,\n          jobAgentName,\n          jobName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByJobPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobVersionsListByJobOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<JobVersion[]> {\n    let result: JobVersionsListByJobResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByJob(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByJobNext(\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByJobPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobVersionsListByJobOptionalParams\n  ): AsyncIterableIterator<JobVersion> {\n    for await (const page of this.listByJobPagingPage(\n      resourceGroupName,\n      serverName,\n      jobAgentName,\n      jobName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all versions of a job.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param options The options parameters.\n   */\n  private _listByJob(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    options?: JobVersionsListByJobOptionalParams\n  ): Promise<JobVersionsListByJobResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, jobAgentName, jobName, options },\n      listByJobOperationSpec\n    );\n  }\n\n  /**\n   * Gets a job version.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job.\n   * @param jobVersion The version of the job to get.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    jobVersion: number,\n    options?: JobVersionsGetOptionalParams\n  ): Promise<JobVersionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        jobVersion,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByJobNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param jobAgentName The name of the job agent.\n   * @param jobName The name of the job to get.\n   * @param nextLink The nextLink from the previous successful call to the ListByJob method.\n   * @param options The options parameters.\n   */\n  private _listByJobNext(\n    resourceGroupName: string,\n    serverName: string,\n    jobAgentName: string,\n    jobName: string,\n    nextLink: string,\n    options?: JobVersionsListByJobNextOptionalParams\n  ): Promise<JobVersionsListByJobNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        jobAgentName,\n        jobName,\n        nextLink,\n        options\n      },\n      listByJobNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByJobOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobVersionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/jobAgents/{jobAgentName}/jobs/{jobName}/versions/{jobVersion}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobVersion\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.jobAgentName,\n    Parameters.jobName,\n    Parameters.jobVersion\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByJobNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.JobVersionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.jobAgentName,\n    Parameters.jobName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { Capabilities } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  CapabilitiesListByLocationOptionalParams,\n  CapabilitiesListByLocationResponse\n} from \"../models\";\n\n/** Class containing Capabilities operations. */\nexport class CapabilitiesImpl implements Capabilities {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Capabilities class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the subscription capabilities available for the specified location.\n   * @param locationName The location name whose capabilities are retrieved.\n   * @param options The options parameters.\n   */\n  listByLocation(\n    locationName: string,\n    options?: CapabilitiesListByLocationOptionalParams\n  ): Promise<CapabilitiesListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/capabilities\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LocationCapabilities\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.include],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { LongTermRetentionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  LongTermRetentionPolicy,\n  LongTermRetentionPoliciesListByDatabaseNextOptionalParams,\n  LongTermRetentionPoliciesListByDatabaseOptionalParams,\n  LongTermRetentionPoliciesListByDatabaseResponse,\n  LongTermRetentionPolicyName,\n  LongTermRetentionPoliciesGetOptionalParams,\n  LongTermRetentionPoliciesGetResponse,\n  LongTermRetentionPoliciesCreateOrUpdateOptionalParams,\n  LongTermRetentionPoliciesCreateOrUpdateResponse,\n  LongTermRetentionPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LongTermRetentionPolicies operations. */\nexport class LongTermRetentionPoliciesImpl\n  implements LongTermRetentionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class LongTermRetentionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LongTermRetentionPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionPolicy[]> {\n    let result: LongTermRetentionPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: LongTermRetentionPolicyName,\n    options?: LongTermRetentionPoliciesGetOptionalParams\n  ): Promise<LongTermRetentionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, policyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param parameters The long term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: LongTermRetentionPolicyName,\n    parameters: LongTermRetentionPolicy,\n    options?: LongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LongTermRetentionPoliciesCreateOrUpdateResponse>,\n      LongTermRetentionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LongTermRetentionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param parameters The long term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: LongTermRetentionPolicyName,\n    parameters: LongTermRetentionPolicy,\n    options?: LongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<LongTermRetentionPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): Promise<LongTermRetentionPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: LongTermRetentionPoliciesListByDatabaseNextOptionalParams\n  ): Promise<LongTermRetentionPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.LongTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.LongTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.LongTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters36,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.policyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupLongTermRetentionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MaintenanceWindowOptionsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  MaintenanceWindowOptionsGetOptionalParams,\n  MaintenanceWindowOptionsGetResponse\n} from \"../models\";\n\n/** Class containing MaintenanceWindowOptionsOperations operations. */\nexport class MaintenanceWindowOptionsOperationsImpl\n  implements MaintenanceWindowOptionsOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class MaintenanceWindowOptionsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of available maintenance windows.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to get maintenance windows options for.\n   * @param maintenanceWindowOptionsName Maintenance window options name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    maintenanceWindowOptionsName: string,\n    options?: MaintenanceWindowOptionsGetOptionalParams\n  ): Promise<MaintenanceWindowOptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        maintenanceWindowOptionsName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/maintenanceWindowOptions/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MaintenanceWindowOptions\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion2,\n    Parameters.maintenanceWindowOptionsName\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { MaintenanceWindowsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  MaintenanceWindowsGetOptionalParams,\n  MaintenanceWindowsGetResponse,\n  MaintenanceWindows,\n  MaintenanceWindowsCreateOrUpdateOptionalParams\n} from \"../models\";\n\n/** Class containing MaintenanceWindowsOperations operations. */\nexport class MaintenanceWindowsOperationsImpl\n  implements MaintenanceWindowsOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class MaintenanceWindowsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets maintenance windows settings for a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to get maintenance windows for.\n   * @param maintenanceWindowName Maintenance window name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    maintenanceWindowName: string,\n    options?: MaintenanceWindowsGetOptionalParams\n  ): Promise<MaintenanceWindowsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        maintenanceWindowName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets maintenance windows settings for a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database to set maintenance windows for.\n   * @param maintenanceWindowName Maintenance window name.\n   * @param parameters Maintenance windows.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    maintenanceWindowName: string,\n    parameters: MaintenanceWindows,\n    options?: MaintenanceWindowsCreateOrUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        maintenanceWindowName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/maintenanceWindows/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.MaintenanceWindows\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.maintenanceWindowName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/maintenanceWindows/current\",\n  httpMethod: \"PUT\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters37,\n  queryParameters: [Parameters.apiVersion2, Parameters.maintenanceWindowName],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedBackupShortTermRetentionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedBackupShortTermRetentionPolicy,\n  ManagedBackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams,\n  ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams,\n  ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse,\n  ManagedShortTermRetentionPolicyName,\n  ManagedBackupShortTermRetentionPoliciesGetOptionalParams,\n  ManagedBackupShortTermRetentionPoliciesGetResponse,\n  ManagedBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams,\n  ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse,\n  ManagedBackupShortTermRetentionPoliciesUpdateOptionalParams,\n  ManagedBackupShortTermRetentionPoliciesUpdateResponse,\n  ManagedBackupShortTermRetentionPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedBackupShortTermRetentionPolicies operations. */\nexport class ManagedBackupShortTermRetentionPoliciesImpl\n  implements ManagedBackupShortTermRetentionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedBackupShortTermRetentionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a managed database's short term retention policy list.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedBackupShortTermRetentionPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedBackupShortTermRetentionPolicy[]> {\n    let result: ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedBackupShortTermRetentionPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a managed database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    options?: ManagedBackupShortTermRetentionPoliciesGetOptionalParams\n  ): Promise<ManagedBackupShortTermRetentionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        policyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a managed database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse\n      >,\n      ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a managed database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ManagedBackupShortTermRetentionPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a managed database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedBackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedBackupShortTermRetentionPoliciesUpdateResponse>,\n      ManagedBackupShortTermRetentionPoliciesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedBackupShortTermRetentionPoliciesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a managed database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedBackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<ManagedBackupShortTermRetentionPoliciesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a managed database's short term retention policy list.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedBackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): Promise<ManagedBackupShortTermRetentionPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedBackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedBackupShortTermRetentionPoliciesListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters38,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters38,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupShortTermRetentionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseColumns } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseColumn,\n  ManagedDatabaseColumnsListByDatabaseNextOptionalParams,\n  ManagedDatabaseColumnsListByDatabaseOptionalParams,\n  ManagedDatabaseColumnsListByDatabaseResponse,\n  ManagedDatabaseColumnsListByTableNextOptionalParams,\n  ManagedDatabaseColumnsListByTableOptionalParams,\n  ManagedDatabaseColumnsListByTableResponse,\n  ManagedDatabaseColumnsGetOptionalParams,\n  ManagedDatabaseColumnsGetResponse,\n  ManagedDatabaseColumnsListByDatabaseNextResponse,\n  ManagedDatabaseColumnsListByTableNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseColumns operations. */\nexport class ManagedDatabaseColumnsImpl implements ManagedDatabaseColumns {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseColumns class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List managed database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseColumnsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseColumn> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseColumnsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseColumn[]> {\n    let result: ManagedDatabaseColumnsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseColumnsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseColumn> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List managed database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  public listByTable(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: ManagedDatabaseColumnsListByTableOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseColumn> {\n    const iter = this.listByTablePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      schemaName,\n      tableName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByTablePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          schemaName,\n          tableName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByTablePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: ManagedDatabaseColumnsListByTableOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseColumn[]> {\n    let result: ManagedDatabaseColumnsListByTableResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByTable(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByTableNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByTablePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: ManagedDatabaseColumnsListByTableOptionalParams\n  ): AsyncIterableIterator<DatabaseColumn> {\n    for await (const page of this.listByTablePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      schemaName,\n      tableName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List managed database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseColumnsListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseColumnsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * List managed database columns\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  private _listByTable(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: ManagedDatabaseColumnsListByTableOptionalParams\n  ): Promise<ManagedDatabaseColumnsListByTableResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      },\n      listByTableOperationSpec\n    );\n  }\n\n  /**\n   * Get managed database column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: ManagedDatabaseColumnsGetOptionalParams\n  ): Promise<ManagedDatabaseColumnsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseColumnsListByDatabaseNextOptionalParams\n  ): Promise<ManagedDatabaseColumnsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByTableNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param nextLink The nextLink from the previous successful call to the ListByTable method.\n   * @param options The options parameters.\n   */\n  private _listByTableNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    nextLink: string,\n    options?: ManagedDatabaseColumnsListByTableNextOptionalParams\n  ): Promise<ManagedDatabaseColumnsListByTableNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        nextLink,\n        options\n      },\n      listByTableNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/columns\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion2,\n    Parameters.schema,\n    Parameters.table,\n    Parameters.column,\n    Parameters.orderBy,\n    Parameters.skiptoken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumn\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByTableNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseColumnListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseQueries } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  QueryStatistics,\n  ManagedDatabaseQueriesListByQueryNextOptionalParams,\n  ManagedDatabaseQueriesListByQueryOptionalParams,\n  ManagedDatabaseQueriesListByQueryResponse,\n  ManagedDatabaseQueriesGetOptionalParams,\n  ManagedDatabaseQueriesGetResponse,\n  ManagedDatabaseQueriesListByQueryNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseQueries operations. */\nexport class ManagedDatabaseQueriesImpl implements ManagedDatabaseQueries {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseQueries class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get query execution statistics by query id.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param queryId\n   * @param options The options parameters.\n   */\n  public listByQuery(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    options?: ManagedDatabaseQueriesListByQueryOptionalParams\n  ): PagedAsyncIterableIterator<QueryStatistics> {\n    const iter = this.listByQueryPagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      queryId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByQueryPagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          queryId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByQueryPagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    options?: ManagedDatabaseQueriesListByQueryOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<QueryStatistics[]> {\n    let result: ManagedDatabaseQueriesListByQueryResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByQuery(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        queryId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByQueryNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        queryId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByQueryPagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    options?: ManagedDatabaseQueriesListByQueryOptionalParams\n  ): AsyncIterableIterator<QueryStatistics> {\n    for await (const page of this.listByQueryPagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      queryId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get query by query id.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param queryId\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    options?: ManagedDatabaseQueriesGetOptionalParams\n  ): Promise<ManagedDatabaseQueriesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        queryId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Get query execution statistics by query id.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param queryId\n   * @param options The options parameters.\n   */\n  private _listByQuery(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    options?: ManagedDatabaseQueriesListByQueryOptionalParams\n  ): Promise<ManagedDatabaseQueriesListByQueryResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        queryId,\n        options\n      },\n      listByQueryOperationSpec\n    );\n  }\n\n  /**\n   * ListByQueryNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param queryId\n   * @param nextLink The nextLink from the previous successful call to the ListByQuery method.\n   * @param options The options parameters.\n   */\n  private _listByQueryNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    queryId: string,\n    nextLink: string,\n    options?: ManagedDatabaseQueriesListByQueryNextOptionalParams\n  ): Promise<ManagedDatabaseQueriesListByQueryNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        queryId,\n        nextLink,\n        options\n      },\n      listByQueryNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/queries/{queryId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceQuery\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.queryId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByQueryOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/queries/{queryId}/statistics\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceQueryStatistics\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion2,\n    Parameters.startTime,\n    Parameters.endTime,\n    Parameters.interval\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.queryId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByQueryNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceQueryStatistics\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName,\n    Parameters.queryId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagedDatabaseRestoreDetails } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RestoreDetailsName,\n  ManagedDatabaseRestoreDetailsGetOptionalParams,\n  ManagedDatabaseRestoreDetailsGetResponse\n} from \"../models\";\n\n/** Class containing ManagedDatabaseRestoreDetails operations. */\nexport class ManagedDatabaseRestoreDetailsImpl\n  implements ManagedDatabaseRestoreDetails {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseRestoreDetails class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets managed database restore details.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param restoreDetailsName The name of the restore details to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    restoreDetailsName: RestoreDetailsName,\n    options?: ManagedDatabaseRestoreDetailsGetOptionalParams\n  ): Promise<ManagedDatabaseRestoreDetailsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        restoreDetailsName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/restoreDetails/{restoreDetailsName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseRestoreDetailsResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.restoreDetailsName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedDatabase,\n  ManagedDatabasesListByInstanceNextOptionalParams,\n  ManagedDatabasesListByInstanceOptionalParams,\n  ManagedDatabasesListByInstanceResponse,\n  ManagedDatabasesListInaccessibleByInstanceNextOptionalParams,\n  ManagedDatabasesListInaccessibleByInstanceOptionalParams,\n  ManagedDatabasesListInaccessibleByInstanceResponse,\n  ManagedDatabasesGetOptionalParams,\n  ManagedDatabasesGetResponse,\n  ManagedDatabasesCreateOrUpdateOptionalParams,\n  ManagedDatabasesCreateOrUpdateResponse,\n  ManagedDatabasesDeleteOptionalParams,\n  ManagedDatabaseUpdate,\n  ManagedDatabasesUpdateOptionalParams,\n  ManagedDatabasesUpdateResponse,\n  CompleteDatabaseRestoreDefinition,\n  ManagedDatabasesCompleteRestoreOptionalParams,\n  ManagedDatabasesListByInstanceNextResponse,\n  ManagedDatabasesListInaccessibleByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabases operations. */\nexport class ManagedDatabasesImpl implements ManagedDatabases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedDatabase> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedDatabase[]> {\n    let result: ManagedDatabasesListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedDatabase> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of inaccessible managed databases in a managed instance\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listInaccessibleByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListInaccessibleByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedDatabase> {\n    const iter = this.listInaccessibleByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listInaccessibleByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listInaccessibleByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListInaccessibleByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedDatabase[]> {\n    let result: ManagedDatabasesListInaccessibleByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listInaccessibleByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listInaccessibleByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listInaccessibleByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListInaccessibleByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedDatabase> {\n    for await (const page of this.listInaccessibleByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListByInstanceOptionalParams\n  ): Promise<ManagedDatabasesListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabasesGetOptionalParams\n  ): Promise<ManagedDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a new database or updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: ManagedDatabase,\n    options?: ManagedDatabasesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedDatabasesCreateOrUpdateResponse>,\n      ManagedDatabasesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedDatabasesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a new database or updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: ManagedDatabase,\n    options?: ManagedDatabasesCreateOrUpdateOptionalParams\n  ): Promise<ManagedDatabasesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabasesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabasesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: ManagedDatabaseUpdate,\n    options?: ManagedDatabasesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedDatabasesUpdateResponse>,\n      ManagedDatabasesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedDatabasesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The requested database resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: ManagedDatabaseUpdate,\n    options?: ManagedDatabasesUpdateOptionalParams\n  ): Promise<ManagedDatabasesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Completes the restore operation on a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The definition for completing the restore of this managed database.\n   * @param options The options parameters.\n   */\n  async beginCompleteRestore(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: CompleteDatabaseRestoreDefinition,\n    options?: ManagedDatabasesCompleteRestoreOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        parameters,\n        options\n      },\n      completeRestoreOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Completes the restore operation on a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters The definition for completing the restore of this managed database.\n   * @param options The options parameters.\n   */\n  async beginCompleteRestoreAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: CompleteDatabaseRestoreDefinition,\n    options?: ManagedDatabasesCompleteRestoreOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCompleteRestore(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of inaccessible managed databases in a managed instance\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listInaccessibleByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedDatabasesListInaccessibleByInstanceOptionalParams\n  ): Promise<ManagedDatabasesListInaccessibleByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listInaccessibleByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedDatabasesListByInstanceNextOptionalParams\n  ): Promise<ManagedDatabasesListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListInaccessibleByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListInaccessibleByInstance\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listInaccessibleByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedDatabasesListInaccessibleByInstanceNextOptionalParams\n  ): Promise<ManagedDatabasesListInaccessibleByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listInaccessibleByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    201: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    202: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    204: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters39,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    201: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    202: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    204: {\n      bodyMapper: Mappers.ManagedDatabase\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters40,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst completeRestoreOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/completeRestore\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  requestBody: Parameters.parameters41,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listInaccessibleByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/inaccessibleManagedDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listInaccessibleByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseSchemas } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseSchema,\n  ManagedDatabaseSchemasListByDatabaseNextOptionalParams,\n  ManagedDatabaseSchemasListByDatabaseOptionalParams,\n  ManagedDatabaseSchemasListByDatabaseResponse,\n  ManagedDatabaseSchemasGetOptionalParams,\n  ManagedDatabaseSchemasGetResponse,\n  ManagedDatabaseSchemasListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseSchemas operations. */\nexport class ManagedDatabaseSchemasImpl implements ManagedDatabaseSchemas {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseSchemas class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List managed database schemas\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSchemasListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseSchema> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSchemasListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseSchema[]> {\n    let result: ManagedDatabaseSchemasListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSchemasListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseSchema> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List managed database schemas\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSchemasListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseSchemasListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Get managed database schema\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: ManagedDatabaseSchemasGetOptionalParams\n  ): Promise<ManagedDatabaseSchemasGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseSchemasListByDatabaseNextOptionalParams\n  ): Promise<ManagedDatabaseSchemasListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchemaListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchema\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseSchemaListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseSecurityAlertPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ManagedDatabaseSecurityAlertPolicy,\n  ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams,\n  ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams,\n  ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse,\n  SecurityAlertPolicyName,\n  ManagedDatabaseSecurityAlertPoliciesGetOptionalParams,\n  ManagedDatabaseSecurityAlertPoliciesGetResponse,\n  ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams,\n  ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateResponse,\n  ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseSecurityAlertPolicies operations. */\nexport class ManagedDatabaseSecurityAlertPoliciesImpl\n  implements ManagedDatabaseSecurityAlertPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseSecurityAlertPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed database's security alert policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policies are\n   *                     defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedDatabaseSecurityAlertPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedDatabaseSecurityAlertPolicy[]> {\n    let result: ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedDatabaseSecurityAlertPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a managed database's security alert policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policy is defined.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    options?: ManagedDatabaseSecurityAlertPoliciesGetOptionalParams\n  ): Promise<ManagedDatabaseSecurityAlertPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        securityAlertPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database's security alert policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policy is defined.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The database security alert policy.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: ManagedDatabaseSecurityAlertPolicy,\n    options?: ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ManagedDatabaseSecurityAlertPoliciesCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of managed database's security alert policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policies are\n   *                     defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityAlertPoliciesListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseSecurityAlertPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policies are\n   *                     defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextOptionalParams\n  ): Promise<ManagedDatabaseSecurityAlertPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.securityAlertPolicyName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedDatabaseSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters42,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.securityAlertPolicyName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedDatabaseSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseSecurityEvents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  SecurityEvent,\n  ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams,\n  ManagedDatabaseSecurityEventsListByDatabaseOptionalParams,\n  ManagedDatabaseSecurityEventsListByDatabaseResponse,\n  ManagedDatabaseSecurityEventsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseSecurityEvents operations. */\nexport class ManagedDatabaseSecurityEventsImpl\n  implements ManagedDatabaseSecurityEvents {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseSecurityEvents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of security events.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security events are retrieved.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityEventsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SecurityEvent> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityEventsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SecurityEvent[]> {\n    let result: ManagedDatabaseSecurityEventsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityEventsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<SecurityEvent> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of security events.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security events are retrieved.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSecurityEventsListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseSecurityEventsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security events are retrieved.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseSecurityEventsListByDatabaseNextOptionalParams\n  ): Promise<ManagedDatabaseSecurityEventsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/securityEvents\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityEventCollection\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skip,\n    Parameters.apiVersion2,\n    Parameters.skiptoken,\n    Parameters.filter1,\n    Parameters.top\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SecurityEventCollection\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseSensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  SensitivityLabel,\n  ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextOptionalParams,\n  ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams,\n  ManagedDatabaseSensitivityLabelsListCurrentByDatabaseResponse,\n  ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextOptionalParams,\n  ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams,\n  ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseResponse,\n  SensitivityLabelSource,\n  ManagedDatabaseSensitivityLabelsGetOptionalParams,\n  ManagedDatabaseSensitivityLabelsGetResponse,\n  ManagedDatabaseSensitivityLabelsCreateOrUpdateOptionalParams,\n  ManagedDatabaseSensitivityLabelsCreateOrUpdateResponse,\n  ManagedDatabaseSensitivityLabelsDeleteOptionalParams,\n  ManagedDatabaseSensitivityLabelsDisableRecommendationOptionalParams,\n  ManagedDatabaseSensitivityLabelsEnableRecommendationOptionalParams,\n  SensitivityLabelUpdateList,\n  ManagedDatabaseSensitivityLabelsUpdateOptionalParams,\n  ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextResponse,\n  ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseSensitivityLabels operations. */\nexport class ManagedDatabaseSensitivityLabelsImpl\n  implements ManagedDatabaseSensitivityLabels {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseSensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listCurrentByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listCurrentByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCurrentByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listCurrentByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCurrentByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCurrentByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCurrentByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listCurrentByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listRecommendedByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listRecommendedByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listRecommendedByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listRecommendedByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listRecommendedByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listRecommendedByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listRecommendedByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listRecommendedByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param sensitivityLabelSource The source of the sensitivity label.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    sensitivityLabelSource: SensitivityLabelSource,\n    options?: ManagedDatabaseSensitivityLabelsGetOptionalParams\n  ): Promise<ManagedDatabaseSensitivityLabelsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        sensitivityLabelSource,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param parameters The column sensitivity label resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    parameters: SensitivityLabel,\n    options?: ManagedDatabaseSensitivityLabelsCreateOrUpdateOptionalParams\n  ): Promise<ManagedDatabaseSensitivityLabelsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: ManagedDatabaseSensitivityLabelsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Disables sensitivity recommendations on a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  disableRecommendation(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: ManagedDatabaseSensitivityLabelsDisableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      disableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * Enables sensitivity recommendations on a given column (recommendations are enabled by default on all\n   * columns)\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  enableRecommendation(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: ManagedDatabaseSensitivityLabelsEnableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      enableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listCurrentByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseSensitivityLabelsListCurrentByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listCurrentByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Update sensitivity labels of a given database using an operations batch.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters A list of sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: SensitivityLabelUpdateList,\n    options?: ManagedDatabaseSensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listRecommendedByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): Promise<\n    ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listRecommendedByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListCurrentByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListCurrentByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listCurrentByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedDatabaseSensitivityLabelsListCurrentByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listCurrentByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListRecommendedByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListRecommendedByDatabase\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listRecommendedByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedDatabaseSensitivityLabelsListRecommendedByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listRecommendedByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName,\n    Parameters.sensitivityLabelSource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    201: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters43,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName,\n    Parameters.sensitivityLabelSource1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName,\n    Parameters.sensitivityLabelSource1\n  ],\n  serializer\n};\nconst disableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/disable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst enableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/enable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.managedInstanceName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst listCurrentByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/currentSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skipToken,\n    Parameters.apiVersion2,\n    Parameters.filter1,\n    Parameters.count\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/currentSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters44,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listRecommendedByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/recommendedSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skipToken,\n    Parameters.apiVersion2,\n    Parameters.filter1,\n    Parameters.includeDisabledRecommendations\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listCurrentByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRecommendedByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagedDatabaseRecommendedSensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RecommendedSensitivityLabelUpdateList,\n  ManagedDatabaseRecommendedSensitivityLabelsUpdateOptionalParams\n} from \"../models\";\n\n/** Class containing ManagedDatabaseRecommendedSensitivityLabels operations. */\nexport class ManagedDatabaseRecommendedSensitivityLabelsImpl\n  implements ManagedDatabaseRecommendedSensitivityLabels {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseRecommendedSensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Update recommended sensitivity labels states of a given database using an operations batch.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param parameters A list of recommended sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    parameters: RecommendedSensitivityLabelUpdateList,\n    options?: ManagedDatabaseRecommendedSensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/recommendedSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters45,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseTables } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseTable,\n  ManagedDatabaseTablesListBySchemaNextOptionalParams,\n  ManagedDatabaseTablesListBySchemaOptionalParams,\n  ManagedDatabaseTablesListBySchemaResponse,\n  ManagedDatabaseTablesGetOptionalParams,\n  ManagedDatabaseTablesGetResponse,\n  ManagedDatabaseTablesListBySchemaNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseTables operations. */\nexport class ManagedDatabaseTablesImpl implements ManagedDatabaseTables {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseTables class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List managed database tables\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  public listBySchema(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: ManagedDatabaseTablesListBySchemaOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseTable> {\n    const iter = this.listBySchemaPagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      schemaName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySchemaPagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          schemaName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySchemaPagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: ManagedDatabaseTablesListBySchemaOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseTable[]> {\n    let result: ManagedDatabaseTablesListBySchemaResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySchema(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySchemaNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySchemaPagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: ManagedDatabaseTablesListBySchemaOptionalParams\n  ): AsyncIterableIterator<DatabaseTable> {\n    for await (const page of this.listBySchemaPagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      schemaName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * List managed database tables\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param options The options parameters.\n   */\n  private _listBySchema(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    options?: ManagedDatabaseTablesListBySchemaOptionalParams\n  ): Promise<ManagedDatabaseTablesListBySchemaResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        options\n      },\n      listBySchemaOperationSpec\n    );\n  }\n\n  /**\n   * Get managed database table\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    options?: ManagedDatabaseTablesGetOptionalParams\n  ): Promise<ManagedDatabaseTablesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        tableName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListBySchemaNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param nextLink The nextLink from the previous successful call to the ListBySchema method.\n   * @param options The options parameters.\n   */\n  private _listBySchemaNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    schemaName: string,\n    nextLink: string,\n    options?: ManagedDatabaseTablesListBySchemaNextOptionalParams\n  ): Promise<ManagedDatabaseTablesListBySchemaNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        schemaName,\n        nextLink,\n        options\n      },\n      listBySchemaNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listBySchemaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTableListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTable\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listBySchemaNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseTableListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.schemaName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseTransparentDataEncryption } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ManagedTransparentDataEncryption,\n  ManagedDatabaseTransparentDataEncryptionListByDatabaseNextOptionalParams,\n  ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams,\n  ManagedDatabaseTransparentDataEncryptionListByDatabaseResponse,\n  TransparentDataEncryptionName,\n  ManagedDatabaseTransparentDataEncryptionGetOptionalParams,\n  ManagedDatabaseTransparentDataEncryptionGetResponse,\n  ManagedDatabaseTransparentDataEncryptionCreateOrUpdateOptionalParams,\n  ManagedDatabaseTransparentDataEncryptionCreateOrUpdateResponse,\n  ManagedDatabaseTransparentDataEncryptionListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseTransparentDataEncryption operations. */\nexport class ManagedDatabaseTransparentDataEncryptionImpl\n  implements ManagedDatabaseTransparentDataEncryption {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseTransparentDataEncryption class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed database's transparent data encryptions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the transparent data encryption is\n   *                     defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedTransparentDataEncryption> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedTransparentDataEncryption[]> {\n    let result: ManagedDatabaseTransparentDataEncryptionListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedTransparentDataEncryption> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a managed database's transparent data encryption.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the transparent data encryption is\n   *                     defined.\n   * @param tdeName The name of the transparent data encryption configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    tdeName: TransparentDataEncryptionName,\n    options?: ManagedDatabaseTransparentDataEncryptionGetOptionalParams\n  ): Promise<ManagedDatabaseTransparentDataEncryptionGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        tdeName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a database's transparent data encryption configuration.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the security alert policy is defined.\n   * @param tdeName The name of the transparent data encryption configuration.\n   * @param parameters The database transparent data encryption.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    tdeName: TransparentDataEncryptionName,\n    parameters: ManagedTransparentDataEncryption,\n    options?: ManagedDatabaseTransparentDataEncryptionCreateOrUpdateOptionalParams\n  ): Promise<ManagedDatabaseTransparentDataEncryptionCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        tdeName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of managed database's transparent data encryptions.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the transparent data encryption is\n   *                     defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseTransparentDataEncryptionListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database for which the transparent data encryption is\n   *                     defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseTransparentDataEncryptionListByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedDatabaseTransparentDataEncryptionListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/transparentDataEncryption/{tdeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedTransparentDataEncryption\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.tdeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/transparentDataEncryption/{tdeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedTransparentDataEncryption\n    },\n    201: {\n      bodyMapper: Mappers.ManagedTransparentDataEncryption\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters46,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.tdeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/transparentDataEncryption\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedTransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedTransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagedDatabaseVulnerabilityAssessmentRuleBaselines } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  VulnerabilityAssessmentName,\n  VulnerabilityAssessmentPolicyBaselineName,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse,\n  DatabaseVulnerabilityAssessmentRuleBaseline,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n} from \"../models\";\n\n/** Class containing ManagedDatabaseVulnerabilityAssessmentRuleBaselines operations. */\nexport class ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl\n  implements ManagedDatabaseVulnerabilityAssessmentRuleBaselines {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseVulnerabilityAssessmentRuleBaselines class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentRuleBaselinesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param parameters The requested rule baseline resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    parameters: DatabaseVulnerabilityAssessmentRuleBaseline,\n    options?: ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateOptionalParams\n  ): Promise<\n    ManagedDatabaseVulnerabilityAssessmentRuleBaselinesCreateOrUpdateResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment rule baseline.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment rule baseline is\n   *                     defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param ruleId The vulnerability assessment rule ID.\n   * @param baselineName The name of the vulnerability assessment rule baseline (default implies a\n   *                     baseline on a database level rule and master for server level rule).\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    ruleId: string,\n    baselineName: VulnerabilityAssessmentPolicyBaselineName,\n    options?: ManagedDatabaseVulnerabilityAssessmentRuleBaselinesDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        ruleId,\n        baselineName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentRuleBaseline\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters20,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/rules/{ruleId}/baselines/{baselineName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.ruleId,\n    Parameters.baselineName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseVulnerabilityAssessment,\n  ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse,\n  VulnerabilityAssessmentName,\n  ManagedDatabaseVulnerabilityAssessmentsGetOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentsGetResponse,\n  ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse,\n  ManagedDatabaseVulnerabilityAssessmentsDeleteOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseVulnerabilityAssessments operations. */\nexport class ManagedDatabaseVulnerabilityAssessmentsImpl\n  implements ManagedDatabaseVulnerabilityAssessments {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessments of a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseVulnerabilityAssessment> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseVulnerabilityAssessment[]> {\n    let result: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseVulnerabilityAssessment> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters The requested resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: DatabaseVulnerabilityAssessment,\n    options?: ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the database's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the vulnerability assessments of a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database for which the vulnerability assessment is defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedDatabaseVulnerabilityAssessmentsListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters21,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedDatabaseVulnerabilityAssessmentScans } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VulnerabilityAssessmentScanRecord,\n  VulnerabilityAssessmentName,\n  ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse,\n  ManagedDatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentScansExportOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentScansExportResponse,\n  ManagedDatabaseVulnerabilityAssessmentScansGetOptionalParams,\n  ManagedDatabaseVulnerabilityAssessmentScansGetResponse,\n  ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedDatabaseVulnerabilityAssessmentScans operations. */\nexport class ManagedDatabaseVulnerabilityAssessmentScansImpl\n  implements ManagedDatabaseVulnerabilityAssessmentScans {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedDatabaseVulnerabilityAssessmentScans class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          vulnerabilityAssessmentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord[]> {\n    let result: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): AsyncIterableIterator<VulnerabilityAssessmentScanRecord> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScan(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      initiateScanOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Executes a Vulnerability Assessment database scan.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  async beginInitiateScanAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansInitiateScanOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginInitiateScan(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      vulnerabilityAssessmentName,\n      scanId,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Convert an existing scan result to a human readable format. If already exists nothing happens\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the scanned database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id.\n   * @param options The options parameters.\n   */\n  export(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansExportOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentScansExportResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      exportOperationSpec\n    );\n  }\n\n  /**\n   * Lists the vulnerability assessment scans of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseOptionalParams\n  ): Promise<\n    ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Gets a vulnerability assessment scan record of a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param scanId The vulnerability assessment scan Id of the scan to retrieve.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    scanId: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansGetOptionalParams\n  ): Promise<ManagedDatabaseVulnerabilityAssessmentScansGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        scanId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    nextLink: string,\n    options?: ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedDatabaseVulnerabilityAssessmentScansListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        vulnerabilityAssessmentName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst initiateScanOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/initiateScan\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst exportOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}/export\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport\n    },\n    201: {\n      bodyMapper: Mappers.DatabaseVulnerabilityAssessmentScansExport\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}/scans/{scanId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecord\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.scanId,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VulnerabilityAssessmentScanRecordListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceAdministrators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceAdministrator,\n  ManagedInstanceAdministratorsListByInstanceNextOptionalParams,\n  ManagedInstanceAdministratorsListByInstanceOptionalParams,\n  ManagedInstanceAdministratorsListByInstanceResponse,\n  AdministratorName,\n  ManagedInstanceAdministratorsGetOptionalParams,\n  ManagedInstanceAdministratorsGetResponse,\n  ManagedInstanceAdministratorsCreateOrUpdateOptionalParams,\n  ManagedInstanceAdministratorsCreateOrUpdateResponse,\n  ManagedInstanceAdministratorsDeleteOptionalParams,\n  ManagedInstanceAdministratorsListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceAdministrators operations. */\nexport class ManagedInstanceAdministratorsImpl\n  implements ManagedInstanceAdministrators {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceAdministrators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed instance administrators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAdministratorsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceAdministrator> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAdministratorsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceAdministrator[]> {\n    let result: ManagedInstanceAdministratorsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAdministratorsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceAdministrator> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of managed instance administrators.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAdministratorsListByInstanceOptionalParams\n  ): Promise<ManagedInstanceAdministratorsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed instance administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param administratorName\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    administratorName: AdministratorName,\n    options?: ManagedInstanceAdministratorsGetOptionalParams\n  ): Promise<ManagedInstanceAdministratorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, administratorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a managed instance administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param administratorName\n   * @param parameters The requested administrator parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    administratorName: AdministratorName,\n    parameters: ManagedInstanceAdministrator,\n    options?: ManagedInstanceAdministratorsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedInstanceAdministratorsCreateOrUpdateResponse>,\n      ManagedInstanceAdministratorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstanceAdministratorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        administratorName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a managed instance administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param administratorName\n   * @param parameters The requested administrator parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    administratorName: AdministratorName,\n    parameters: ManagedInstanceAdministrator,\n    options?: ManagedInstanceAdministratorsCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceAdministratorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      administratorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a managed instance administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param administratorName\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    administratorName: AdministratorName,\n    options?: ManagedInstanceAdministratorsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, administratorName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a managed instance administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param administratorName\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    administratorName: AdministratorName,\n    options?: ManagedInstanceAdministratorsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      administratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceAdministratorsListByInstanceNextOptionalParams\n  ): Promise<ManagedInstanceAdministratorsListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAdministratorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAdministrator\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.administratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAdministrator\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceAdministrator\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstanceAdministrator\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstanceAdministrator\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters47,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.administratorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/administrators/{administratorName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.administratorName\n  ],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAdministratorListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceAzureADOnlyAuthentications } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceAzureADOnlyAuthentication,\n  ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextOptionalParams,\n  ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams,\n  ManagedInstanceAzureADOnlyAuthenticationsListByInstanceResponse,\n  AuthenticationName,\n  ManagedInstanceAzureADOnlyAuthenticationsGetOptionalParams,\n  ManagedInstanceAzureADOnlyAuthenticationsGetResponse,\n  ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams,\n  ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse,\n  ManagedInstanceAzureADOnlyAuthenticationsDeleteOptionalParams,\n  ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceAzureADOnlyAuthentications operations. */\nexport class ManagedInstanceAzureADOnlyAuthenticationsImpl\n  implements ManagedInstanceAzureADOnlyAuthentications {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceAzureADOnlyAuthentications class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server Azure Active Directory only authentications.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceAzureADOnlyAuthentication> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceAzureADOnlyAuthentication[]> {\n    let result: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceAzureADOnlyAuthentication> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a specific Azure Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    authenticationName: AuthenticationName,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsGetOptionalParams\n  ): Promise<ManagedInstanceAzureADOnlyAuthenticationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, authenticationName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets Server Active Directory only authentication property or updates an existing server Active\n   * Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param parameters The required parameters for creating or updating an Active Directory only\n   *                   authentication property.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    authenticationName: AuthenticationName,\n    parameters: ManagedInstanceAzureADOnlyAuthentication,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse\n      >,\n      ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        authenticationName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets Server Active Directory only authentication property or updates an existing server Active\n   * Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param parameters The required parameters for creating or updating an Active Directory only\n   *                   authentication property.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    authenticationName: AuthenticationName,\n    parameters: ManagedInstanceAzureADOnlyAuthentication,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceAzureADOnlyAuthenticationsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      authenticationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing server Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    authenticationName: AuthenticationName,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, authenticationName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing server Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    authenticationName: AuthenticationName,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      authenticationName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of server Azure Active Directory only authentications.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceOptionalParams\n  ): Promise<ManagedInstanceAzureADOnlyAuthenticationsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextOptionalParams\n  ): Promise<\n    ManagedInstanceAzureADOnlyAuthenticationsListByInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthentication\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.authenticationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthentication\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthentication\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthentication\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthentication\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters48,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.authenticationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.authenticationName\n  ],\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/azureADOnlyAuthentications\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceAzureADOnlyAuthListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceEncryptionProtectors } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceEncryptionProtector,\n  ManagedInstanceEncryptionProtectorsListByInstanceNextOptionalParams,\n  ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams,\n  ManagedInstanceEncryptionProtectorsListByInstanceResponse,\n  EncryptionProtectorName,\n  ManagedInstanceEncryptionProtectorsRevalidateOptionalParams,\n  ManagedInstanceEncryptionProtectorsGetOptionalParams,\n  ManagedInstanceEncryptionProtectorsGetResponse,\n  ManagedInstanceEncryptionProtectorsCreateOrUpdateOptionalParams,\n  ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse,\n  ManagedInstanceEncryptionProtectorsListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceEncryptionProtectors operations. */\nexport class ManagedInstanceEncryptionProtectorsImpl\n  implements ManagedInstanceEncryptionProtectors {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceEncryptionProtectors class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed instance encryption protectors\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceEncryptionProtector> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceEncryptionProtector[]> {\n    let result: ManagedInstanceEncryptionProtectorsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceEncryptionProtector> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Revalidates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param options The options parameters.\n   */\n  async beginRevalidate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: ManagedInstanceEncryptionProtectorsRevalidateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        encryptionProtectorName,\n        options\n      },\n      revalidateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Revalidates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param options The options parameters.\n   */\n  async beginRevalidateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: ManagedInstanceEncryptionProtectorsRevalidateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRevalidate(\n      resourceGroupName,\n      managedInstanceName,\n      encryptionProtectorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of managed instance encryption protectors\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceEncryptionProtectorsListByInstanceOptionalParams\n  ): Promise<ManagedInstanceEncryptionProtectorsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed instance encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param encryptionProtectorName The name of the encryption protector to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    options?: ManagedInstanceEncryptionProtectorsGetOptionalParams\n  ): Promise<ManagedInstanceEncryptionProtectorsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        encryptionProtectorName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: ManagedInstanceEncryptionProtector,\n    options?: ManagedInstanceEncryptionProtectorsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse\n      >,\n      ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        encryptionProtectorName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing encryption protector.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param encryptionProtectorName The name of the encryption protector to be updated.\n   * @param parameters The requested encryption protector resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    encryptionProtectorName: EncryptionProtectorName,\n    parameters: ManagedInstanceEncryptionProtector,\n    options?: ManagedInstanceEncryptionProtectorsCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceEncryptionProtectorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      encryptionProtectorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceEncryptionProtectorsListByInstanceNextOptionalParams\n  ): Promise<ManagedInstanceEncryptionProtectorsListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst revalidateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}/revalidate\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.encryptionProtectorName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtectorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtector\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.encryptionProtectorName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/encryptionProtector/{encryptionProtectorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtector\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtector\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtector\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtector\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters49,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.encryptionProtectorName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceEncryptionProtectorListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceKeys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceKey,\n  ManagedInstanceKeysListByInstanceNextOptionalParams,\n  ManagedInstanceKeysListByInstanceOptionalParams,\n  ManagedInstanceKeysListByInstanceResponse,\n  ManagedInstanceKeysGetOptionalParams,\n  ManagedInstanceKeysGetResponse,\n  ManagedInstanceKeysCreateOrUpdateOptionalParams,\n  ManagedInstanceKeysCreateOrUpdateResponse,\n  ManagedInstanceKeysDeleteOptionalParams,\n  ManagedInstanceKeysListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceKeys operations. */\nexport class ManagedInstanceKeysImpl implements ManagedInstanceKeys {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceKeys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed instance keys.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceKeysListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceKey> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceKeysListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceKey[]> {\n    let result: ManagedInstanceKeysListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceKeysListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceKey> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of managed instance keys.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceKeysListByInstanceOptionalParams\n  ): Promise<ManagedInstanceKeysListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed instance key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param keyName The name of the managed instance key to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    keyName: string,\n    options?: ManagedInstanceKeysGetOptionalParams\n  ): Promise<ManagedInstanceKeysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, keyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a managed instance key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param keyName The name of the managed instance key to be operated on (updated or created).\n   * @param parameters The requested managed instance key resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    keyName: string,\n    parameters: ManagedInstanceKey,\n    options?: ManagedInstanceKeysCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedInstanceKeysCreateOrUpdateResponse>,\n      ManagedInstanceKeysCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstanceKeysCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, keyName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a managed instance key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param keyName The name of the managed instance key to be operated on (updated or created).\n   * @param parameters The requested managed instance key resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    keyName: string,\n    parameters: ManagedInstanceKey,\n    options?: ManagedInstanceKeysCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceKeysCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      keyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the managed instance key with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param keyName The name of the managed instance key to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    keyName: string,\n    options?: ManagedInstanceKeysDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, keyName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the managed instance key with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param keyName The name of the managed instance key to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    keyName: string,\n    options?: ManagedInstanceKeysDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      keyName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceKeysListByInstanceNextOptionalParams\n  ): Promise<ManagedInstanceKeysListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceKeyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.filter1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceKey\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceKey\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceKey\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstanceKey\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstanceKey\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters50,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/keys/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.keyName\n  ],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceKeyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceLongTermRetentionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceLongTermRetentionPolicy,\n  ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextOptionalParams,\n  ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams,\n  ManagedInstanceLongTermRetentionPoliciesListByDatabaseResponse,\n  ManagedInstanceLongTermRetentionPolicyName,\n  ManagedInstanceLongTermRetentionPoliciesGetOptionalParams,\n  ManagedInstanceLongTermRetentionPoliciesGetResponse,\n  ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateOptionalParams,\n  ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse,\n  ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceLongTermRetentionPolicies operations. */\nexport class ManagedInstanceLongTermRetentionPoliciesImpl\n  implements ManagedInstanceLongTermRetentionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceLongTermRetentionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionPolicy[]> {\n    let result: ManagedInstanceLongTermRetentionPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a managed database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedInstanceLongTermRetentionPolicyName,\n    options?: ManagedInstanceLongTermRetentionPoliciesGetOptionalParams\n  ): Promise<ManagedInstanceLongTermRetentionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        policyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets a managed database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param parameters The long term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedInstanceLongTermRetentionPolicyName,\n    parameters: ManagedInstanceLongTermRetentionPolicy,\n    options?: ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse\n      >,\n      ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets a managed database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be Default.\n   * @param parameters The long term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    policyName: ManagedInstanceLongTermRetentionPolicyName,\n    parameters: ManagedInstanceLongTermRetentionPolicy,\n    options?: ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceLongTermRetentionPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a database's long term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: ManagedInstanceLongTermRetentionPoliciesListByDatabaseOptionalParams\n  ): Promise<ManagedInstanceLongTermRetentionPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextOptionalParams\n  ): Promise<\n    ManagedInstanceLongTermRetentionPoliciesListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.policyName2\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupLongTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters51,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName,\n    Parameters.policyName2\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/databases/{databaseName}/backupLongTermRetentionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ManagedInstanceOperation,\n  ManagedInstanceOperationsListByManagedInstanceNextOptionalParams,\n  ManagedInstanceOperationsListByManagedInstanceOptionalParams,\n  ManagedInstanceOperationsListByManagedInstanceResponse,\n  ManagedInstanceOperationsGetOptionalParams,\n  ManagedInstanceOperationsGetResponse,\n  ManagedInstanceOperationsCancelOptionalParams,\n  ManagedInstanceOperationsListByManagedInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceOperations operations. */\nexport class ManagedInstanceOperationsImpl\n  implements ManagedInstanceOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of operations performed on the managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceOperationsListByManagedInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceOperation> {\n    const iter = this.listByManagedInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByManagedInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByManagedInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceOperationsListByManagedInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceOperation[]> {\n    let result: ManagedInstanceOperationsListByManagedInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByManagedInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByManagedInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByManagedInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceOperationsListByManagedInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceOperation> {\n    for await (const page of this.listByManagedInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of operations performed on the managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceOperationsListByManagedInstanceOptionalParams\n  ): Promise<ManagedInstanceOperationsListByManagedInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByManagedInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a management operation on a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param operationId\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    operationId: string,\n    options?: ManagedInstanceOperationsGetOptionalParams\n  ): Promise<ManagedInstanceOperationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, operationId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Cancels the asynchronous operation on the managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param operationId\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    operationId: string,\n    options?: ManagedInstanceOperationsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, operationId, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * ListByManagedInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByManagedInstance method.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceOperationsListByManagedInstanceNextOptionalParams\n  ): Promise<ManagedInstanceOperationsListByManagedInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByManagedInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByManagedInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceOperation\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/operations/{operationId}/cancel\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.operationId,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst listByManagedInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceOperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstancePrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstancePrivateEndpointConnection,\n  ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextOptionalParams,\n  ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams,\n  ManagedInstancePrivateEndpointConnectionsListByManagedInstanceResponse,\n  ManagedInstancePrivateEndpointConnectionsGetOptionalParams,\n  ManagedInstancePrivateEndpointConnectionsGetResponse,\n  ManagedInstancePrivateEndpointConnectionsCreateOrUpdateOptionalParams,\n  ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse,\n  ManagedInstancePrivateEndpointConnectionsDeleteOptionalParams,\n  ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstancePrivateEndpointConnections operations. */\nexport class ManagedInstancePrivateEndpointConnectionsImpl\n  implements ManagedInstancePrivateEndpointConnections {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstancePrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all private endpoint connections on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstancePrivateEndpointConnection> {\n    const iter = this.listByManagedInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByManagedInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByManagedInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstancePrivateEndpointConnection[]> {\n    let result: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByManagedInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByManagedInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByManagedInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstancePrivateEndpointConnection> {\n    for await (const page of this.listByManagedInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a private endpoint connection.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    privateEndpointConnectionName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsGetOptionalParams\n  ): Promise<ManagedInstancePrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        privateEndpointConnectionName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Approve or reject a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param privateEndpointConnectionName\n   * @param parameters A private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    privateEndpointConnectionName: string,\n    parameters: ManagedInstancePrivateEndpointConnection,\n    options?: ManagedInstancePrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse\n      >,\n      ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        privateEndpointConnectionName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Approve or reject a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param privateEndpointConnectionName\n   * @param parameters A private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    privateEndpointConnectionName: string,\n    parameters: ManagedInstancePrivateEndpointConnection,\n    options?: ManagedInstancePrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstancePrivateEndpointConnectionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      privateEndpointConnectionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    privateEndpointConnectionName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        privateEndpointConnectionName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    privateEndpointConnectionName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all private endpoint connections on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceOptionalParams\n  ): Promise<\n    ManagedInstancePrivateEndpointConnectionsListByManagedInstanceResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByManagedInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByManagedInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByManagedInstance method.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextOptionalParams\n  ): Promise<\n    ManagedInstancePrivateEndpointConnectionsListByManagedInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByManagedInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnection\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnection\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters52,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.privateEndpointConnectionName\n  ],\n  serializer\n};\nconst listByManagedInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnectionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByManagedInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateEndpointConnectionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstancePrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ManagedInstancePrivateLink,\n  ManagedInstancePrivateLinkResourcesListByManagedInstanceNextOptionalParams,\n  ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams,\n  ManagedInstancePrivateLinkResourcesListByManagedInstanceResponse,\n  ManagedInstancePrivateLinkResourcesGetOptionalParams,\n  ManagedInstancePrivateLinkResourcesGetResponse,\n  ManagedInstancePrivateLinkResourcesListByManagedInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstancePrivateLinkResources operations. */\nexport class ManagedInstancePrivateLinkResourcesImpl\n  implements ManagedInstancePrivateLinkResources {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstancePrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstancePrivateLink> {\n    const iter = this.listByManagedInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByManagedInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByManagedInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstancePrivateLink[]> {\n    let result: ManagedInstancePrivateLinkResourcesListByManagedInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByManagedInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByManagedInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByManagedInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstancePrivateLink> {\n    for await (const page of this.listByManagedInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the private link resources for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancePrivateLinkResourcesListByManagedInstanceOptionalParams\n  ): Promise<ManagedInstancePrivateLinkResourcesListByManagedInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByManagedInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a private link resource for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param groupName The name of the private link resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    groupName: string,\n    options?: ManagedInstancePrivateLinkResourcesGetOptionalParams\n  ): Promise<ManagedInstancePrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, groupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByManagedInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByManagedInstance method.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstancePrivateLinkResourcesListByManagedInstanceNextOptionalParams\n  ): Promise<\n    ManagedInstancePrivateLinkResourcesListByManagedInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByManagedInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByManagedInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateLinkListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/privateLinkResources/{groupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateLink\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.groupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByManagedInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstancePrivateLinkListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ManagedInstanceTdeCertificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  TdeCertificate,\n  ManagedInstanceTdeCertificatesCreateOptionalParams\n} from \"../models\";\n\n/** Class containing ManagedInstanceTdeCertificates operations. */\nexport class ManagedInstanceTdeCertificatesImpl\n  implements ManagedInstanceTdeCertificates {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceTdeCertificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a TDE certificate for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested TDE certificate to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: TdeCertificate,\n    options?: ManagedInstanceTdeCertificatesCreateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, parameters, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a TDE certificate for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested TDE certificate to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: TdeCertificate,\n    options?: ManagedInstanceTdeCertificatesCreateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      managedInstanceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/tdeCertificates\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  requestBody: Parameters.parameters53,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstanceVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ManagedInstanceVulnerabilityAssessment,\n  ManagedInstanceVulnerabilityAssessmentsListByInstanceNextOptionalParams,\n  ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams,\n  ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse,\n  VulnerabilityAssessmentName,\n  ManagedInstanceVulnerabilityAssessmentsGetOptionalParams,\n  ManagedInstanceVulnerabilityAssessmentsGetResponse,\n  ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse,\n  ManagedInstanceVulnerabilityAssessmentsDeleteOptionalParams,\n  ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstanceVulnerabilityAssessments operations. */\nexport class ManagedInstanceVulnerabilityAssessmentsImpl\n  implements ManagedInstanceVulnerabilityAssessments {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstanceVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the managed instance's vulnerability assessment policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessments\n   *                            is defined.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceVulnerabilityAssessment> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceVulnerabilityAssessment[]> {\n    let result: ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceVulnerabilityAssessment> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the managed instance's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessment\n   *                            is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedInstanceVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<ManagedInstanceVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the managed instance's vulnerability assessment. Learn more about setting SQL\n   * vulnerability assessment with managed identity -\n   * https://docs.microsoft.com/azure/azure-sql/database/sql-database-vulnerability-assessment-storage\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessment\n   *                            is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters The requested resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: ManagedInstanceVulnerabilityAssessment,\n    options?: ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstanceVulnerabilityAssessmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the managed instance's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessment\n   *                            is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ManagedInstanceVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        vulnerabilityAssessmentName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Gets the managed instance's vulnerability assessment policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessments\n   *                            is defined.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceOptionalParams\n  ): Promise<ManagedInstanceVulnerabilityAssessmentsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance for which the vulnerability assessments\n   *                            is defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstanceVulnerabilityAssessmentsListByInstanceNextOptionalParams\n  ): Promise<\n    ManagedInstanceVulnerabilityAssessmentsListByInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstanceVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters54,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.vulnerabilityAssessmentName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedBackupShortTermRetentionPolicy,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextOptionalParams,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse,\n  ManagedShortTermRetentionPolicyName,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetOptionalParams,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetResponse,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateOptionalParams,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies operations. */\nexport class ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl\n  implements ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a dropped database's short term retention policy list.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param options The options parameters.\n   */\n  public listByRestorableDroppedDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedBackupShortTermRetentionPolicy> {\n    const iter = this.listByRestorableDroppedDatabasePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      restorableDroppedDatabaseId,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByRestorableDroppedDatabasePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          restorableDroppedDatabaseId,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByRestorableDroppedDatabasePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedBackupShortTermRetentionPolicy[]> {\n    let result: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByRestorableDroppedDatabase(\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByRestorableDroppedDatabaseNext(\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByRestorableDroppedDatabasePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedBackupShortTermRetentionPolicy> {\n    for await (const page of this.listByRestorableDroppedDatabasePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      restorableDroppedDatabaseId,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a dropped database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param policyName The policy name.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetOptionalParams\n  ): Promise<\n    ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesGetResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        policyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse\n      >,\n      ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        policyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesCreateOrUpdateResponse\n  > {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      restorableDroppedDatabaseId,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Sets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse\n      >,\n      ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        policyName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    policyName: ManagedShortTermRetentionPolicyName,\n    parameters: ManagedBackupShortTermRetentionPolicy,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<\n    ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesUpdateResponse\n  > {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      restorableDroppedDatabaseId,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a dropped database's short term retention policy list.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param options The options parameters.\n   */\n  private _listByRestorableDroppedDatabase(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseOptionalParams\n  ): Promise<\n    ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        options\n      },\n      listByRestorableDroppedDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByRestorableDroppedDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param nextLink The nextLink from the previous successful call to the\n   *                 ListByRestorableDroppedDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByRestorableDroppedDatabaseNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    nextLink: string,\n    options?: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextOptionalParams\n  ): Promise<\n    ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesListByRestorableDroppedDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        nextLink,\n        options\n      },\n      listByRestorableDroppedDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters38,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters38,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.policyName1,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByRestorableDroppedDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}/backupShortTermRetentionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByRestorableDroppedDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedBackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedServerSecurityAlertPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedServerSecurityAlertPolicy,\n  ManagedServerSecurityAlertPoliciesListByInstanceNextOptionalParams,\n  ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams,\n  ManagedServerSecurityAlertPoliciesListByInstanceResponse,\n  SecurityAlertPolicyName,\n  ManagedServerSecurityAlertPoliciesGetOptionalParams,\n  ManagedServerSecurityAlertPoliciesGetResponse,\n  ManagedServerSecurityAlertPoliciesCreateOrUpdateOptionalParams,\n  ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse,\n  ManagedServerSecurityAlertPoliciesListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedServerSecurityAlertPolicies operations. */\nexport class ManagedServerSecurityAlertPoliciesImpl\n  implements ManagedServerSecurityAlertPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedServerSecurityAlertPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the managed server's threat detection policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedServerSecurityAlertPolicy> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedServerSecurityAlertPolicy[]> {\n    let result: ManagedServerSecurityAlertPoliciesListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedServerSecurityAlertPolicy> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a managed server's threat detection policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    options?: ManagedServerSecurityAlertPoliciesGetOptionalParams\n  ): Promise<ManagedServerSecurityAlertPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        securityAlertPolicyName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a threat detection policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The managed server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: ManagedServerSecurityAlertPolicy,\n    options?: ManagedServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse\n      >,\n      ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        managedInstanceName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a threat detection policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param parameters The managed server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: ManagedServerSecurityAlertPolicy,\n    options?: ManagedServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ManagedServerSecurityAlertPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      securityAlertPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the managed server's threat detection policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedServerSecurityAlertPoliciesListByInstanceOptionalParams\n  ): Promise<ManagedServerSecurityAlertPoliciesListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedServerSecurityAlertPoliciesListByInstanceNextOptionalParams\n  ): Promise<ManagedServerSecurityAlertPoliciesListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.securityAlertPolicyName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters55,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.securityAlertPolicyName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Operations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  Operation,\n  OperationsListNextOptionalParams,\n  OperationsListOptionalParams,\n  OperationsListResponse,\n  OperationsListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Operations operations. */\nexport class OperationsImpl implements Operations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Operations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all of the available SQL Rest API operations.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: OperationsListOptionalParams\n  ): PagedAsyncIterableIterator<Operation> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: OperationsListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Operation[]> {\n    let result: OperationsListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: OperationsListOptionalParams\n  ): AsyncIterableIterator<Operation> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all of the available SQL Rest API operations.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: OperationsListOptionalParams\n  ): Promise<OperationsListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: OperationsListNextOptionalParams\n  ): Promise<OperationsListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/providers/Microsoft.Sql/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [Parameters.$host, Parameters.nextLink],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { OperationsHealthOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  OperationsHealth,\n  OperationsHealthListByLocationNextOptionalParams,\n  OperationsHealthListByLocationOptionalParams,\n  OperationsHealthListByLocationResponse,\n  OperationsHealthListByLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing OperationsHealthOperations operations. */\nexport class OperationsHealthOperationsImpl\n  implements OperationsHealthOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class OperationsHealthOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a service operation health status.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: OperationsHealthListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<OperationsHealth> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: OperationsHealthListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OperationsHealth[]> {\n    let result: OperationsHealthListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: OperationsHealthListByLocationOptionalParams\n  ): AsyncIterableIterator<OperationsHealth> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a service operation health status.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: OperationsHealthListByLocationOptionalParams\n  ): Promise<OperationsHealthListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: OperationsHealthListByLocationNextOptionalParams\n  ): Promise<OperationsHealthListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/operationsHealth\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsHealthListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OperationsHealthListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { PrivateEndpointConnections } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  PrivateEndpointConnection,\n  PrivateEndpointConnectionsListByServerNextOptionalParams,\n  PrivateEndpointConnectionsListByServerOptionalParams,\n  PrivateEndpointConnectionsListByServerResponse,\n  PrivateEndpointConnectionsGetOptionalParams,\n  PrivateEndpointConnectionsGetResponse,\n  PrivateEndpointConnectionsCreateOrUpdateOptionalParams,\n  PrivateEndpointConnectionsCreateOrUpdateResponse,\n  PrivateEndpointConnectionsDeleteOptionalParams,\n  PrivateEndpointConnectionsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateEndpointConnections operations. */\nexport class PrivateEndpointConnectionsImpl\n  implements PrivateEndpointConnections {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateEndpointConnections class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all private endpoint connections on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateEndpointConnectionsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<PrivateEndpointConnection> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateEndpointConnectionsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PrivateEndpointConnection[]> {\n    let result: PrivateEndpointConnectionsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateEndpointConnectionsListByServerOptionalParams\n  ): AsyncIterableIterator<PrivateEndpointConnection> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a private endpoint connection.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param privateEndpointConnectionName The name of the private endpoint connection.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsGetOptionalParams\n  ): Promise<PrivateEndpointConnectionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, privateEndpointConnectionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Approve or reject a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param privateEndpointConnectionName\n   * @param parameters A private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    privateEndpointConnectionName: string,\n    parameters: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<PrivateEndpointConnectionsCreateOrUpdateResponse>,\n      PrivateEndpointConnectionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        privateEndpointConnectionName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Approve or reject a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param privateEndpointConnectionName\n   * @param parameters A private endpoint connection\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    privateEndpointConnectionName: string,\n    parameters: PrivateEndpointConnection,\n    options?: PrivateEndpointConnectionsCreateOrUpdateOptionalParams\n  ): Promise<PrivateEndpointConnectionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      privateEndpointConnectionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, privateEndpointConnectionName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a private endpoint connection with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param privateEndpointConnectionName\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    privateEndpointConnectionName: string,\n    options?: PrivateEndpointConnectionsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      privateEndpointConnectionName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all private endpoint connections on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateEndpointConnectionsListByServerOptionalParams\n  ): Promise<PrivateEndpointConnectionsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: PrivateEndpointConnectionsListByServerNextOptionalParams\n  ): Promise<PrivateEndpointConnectionsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    201: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    202: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    204: {\n      bodyMapper: Mappers.PrivateEndpointConnection\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters56,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.privateEndpointConnectionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections/{privateEndpointConnectionName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.privateEndpointConnectionName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateEndpointConnections\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateEndpointConnectionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { PrivateLinkResources } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  PrivateLinkResource,\n  PrivateLinkResourcesListByServerNextOptionalParams,\n  PrivateLinkResourcesListByServerOptionalParams,\n  PrivateLinkResourcesListByServerResponse,\n  PrivateLinkResourcesGetOptionalParams,\n  PrivateLinkResourcesGetResponse,\n  PrivateLinkResourcesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing PrivateLinkResources operations. */\nexport class PrivateLinkResourcesImpl implements PrivateLinkResources {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class PrivateLinkResources class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the private link resources for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateLinkResourcesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<PrivateLinkResource> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateLinkResourcesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<PrivateLinkResource[]> {\n    let result: PrivateLinkResourcesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateLinkResourcesListByServerOptionalParams\n  ): AsyncIterableIterator<PrivateLinkResource> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the private link resources for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: PrivateLinkResourcesListByServerOptionalParams\n  ): Promise<PrivateLinkResourcesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a private link resource for SQL server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param groupName The name of the private link resource.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    groupName: string,\n    options?: PrivateLinkResourcesGetOptionalParams\n  ): Promise<PrivateLinkResourcesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, groupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: PrivateLinkResourcesListByServerNextOptionalParams\n  ): Promise<PrivateLinkResourcesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateLinkResources\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/privateLinkResources/{groupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResource\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.groupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.PrivateLinkResourceListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RecoverableManagedDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RecoverableManagedDatabase,\n  RecoverableManagedDatabasesListByInstanceNextOptionalParams,\n  RecoverableManagedDatabasesListByInstanceOptionalParams,\n  RecoverableManagedDatabasesListByInstanceResponse,\n  RecoverableManagedDatabasesGetOptionalParams,\n  RecoverableManagedDatabasesGetResponse,\n  RecoverableManagedDatabasesListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RecoverableManagedDatabases operations. */\nexport class RecoverableManagedDatabasesImpl\n  implements RecoverableManagedDatabases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RecoverableManagedDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of recoverable managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RecoverableManagedDatabasesListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<RecoverableManagedDatabase> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RecoverableManagedDatabasesListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RecoverableManagedDatabase[]> {\n    let result: RecoverableManagedDatabasesListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RecoverableManagedDatabasesListByInstanceOptionalParams\n  ): AsyncIterableIterator<RecoverableManagedDatabase> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of recoverable managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RecoverableManagedDatabasesListByInstanceOptionalParams\n  ): Promise<RecoverableManagedDatabasesListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a recoverable managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param recoverableDatabaseName\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    recoverableDatabaseName: string,\n    options?: RecoverableManagedDatabasesGetOptionalParams\n  ): Promise<RecoverableManagedDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        recoverableDatabaseName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: RecoverableManagedDatabasesListByInstanceNextOptionalParams\n  ): Promise<RecoverableManagedDatabasesListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableManagedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/recoverableDatabases/{recoverableDatabaseName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableManagedDatabase\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.recoverableDatabaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RecoverableManagedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RestorePoints } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  RestorePoint,\n  RestorePointsListByDatabaseNextOptionalParams,\n  RestorePointsListByDatabaseOptionalParams,\n  RestorePointsListByDatabaseResponse,\n  CreateDatabaseRestorePointDefinition,\n  RestorePointsCreateOptionalParams,\n  RestorePointsCreateResponse,\n  RestorePointsGetOptionalParams,\n  RestorePointsGetResponse,\n  RestorePointsDeleteOptionalParams,\n  RestorePointsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RestorePoints operations. */\nexport class RestorePointsImpl implements RestorePoints {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorePoints class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of database restore points.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: RestorePointsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<RestorePoint> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: RestorePointsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RestorePoint[]> {\n    let result: RestorePointsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: RestorePointsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<RestorePoint> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of database restore points.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: RestorePointsListByDatabaseOptionalParams\n  ): Promise<RestorePointsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Creates a restore point for a data warehouse.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The definition for creating the restore point of this database.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: CreateDatabaseRestorePointDefinition,\n    options?: RestorePointsCreateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<RestorePointsCreateResponse>,\n      RestorePointsCreateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<RestorePointsCreateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a restore point for a data warehouse.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters The definition for creating the restore point of this database.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: CreateDatabaseRestorePointDefinition,\n    options?: RestorePointsCreateOptionalParams\n  ): Promise<RestorePointsCreateResponse> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a restore point.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    restorePointName: string,\n    options?: RestorePointsGetOptionalParams\n  ): Promise<RestorePointsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        restorePointName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a restore point.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param restorePointName The name of the restore point.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    restorePointName: string,\n    options?: RestorePointsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        restorePointName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: RestorePointsListByDatabaseNextOptionalParams\n  ): Promise<RestorePointsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    201: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    202: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    204: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters57,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints/{restorePointName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePoint\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.restorePointName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/restorePoints/{restorePointName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.restorePointName\n  ],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorePointListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  SensitivityLabel,\n  SensitivityLabelsListCurrentByDatabaseNextOptionalParams,\n  SensitivityLabelsListCurrentByDatabaseOptionalParams,\n  SensitivityLabelsListCurrentByDatabaseResponse,\n  SensitivityLabelsListRecommendedByDatabaseNextOptionalParams,\n  SensitivityLabelsListRecommendedByDatabaseOptionalParams,\n  SensitivityLabelsListRecommendedByDatabaseResponse,\n  SensitivityLabelUpdateList,\n  SensitivityLabelsUpdateOptionalParams,\n  SensitivityLabelsEnableRecommendationOptionalParams,\n  SensitivityLabelsDisableRecommendationOptionalParams,\n  SensitivityLabelSource,\n  SensitivityLabelsGetOptionalParams,\n  SensitivityLabelsGetResponse,\n  SensitivityLabelsCreateOrUpdateOptionalParams,\n  SensitivityLabelsCreateOrUpdateResponse,\n  SensitivityLabelsDeleteOptionalParams,\n  SensitivityLabelsListCurrentByDatabaseNextResponse,\n  SensitivityLabelsListRecommendedByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SensitivityLabels operations. */\nexport class SensitivityLabelsImpl implements SensitivityLabels {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listCurrentByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listCurrentByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listCurrentByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listCurrentByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListCurrentByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result: SensitivityLabelsListCurrentByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listCurrentByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listCurrentByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listCurrentByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listCurrentByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listRecommendedByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SensitivityLabel> {\n    const iter = this.listRecommendedByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listRecommendedByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listRecommendedByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListRecommendedByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SensitivityLabel[]> {\n    let result: SensitivityLabelsListRecommendedByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listRecommendedByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listRecommendedByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listRecommendedByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): AsyncIterableIterator<SensitivityLabel> {\n    for await (const page of this.listRecommendedByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listCurrentByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListCurrentByDatabaseOptionalParams\n  ): Promise<SensitivityLabelsListCurrentByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listCurrentByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Update sensitivity labels of a given database using an operations batch.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters A list of sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: SensitivityLabelUpdateList,\n    options?: SensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      updateOperationSpec\n    );\n  }\n\n  /**\n   * Gets the sensitivity labels of a given database\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listRecommendedByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SensitivityLabelsListRecommendedByDatabaseOptionalParams\n  ): Promise<SensitivityLabelsListRecommendedByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listRecommendedByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Enables sensitivity recommendations on a given column (recommendations are enabled by default on all\n   * columns)\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  enableRecommendation(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SensitivityLabelsEnableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      enableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * Disables sensitivity recommendations on a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  disableRecommendation(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SensitivityLabelsDisableRecommendationOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      disableRecommendationOperationSpec\n    );\n  }\n\n  /**\n   * Gets the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param sensitivityLabelSource The source of the sensitivity label.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    sensitivityLabelSource: SensitivityLabelSource,\n    options?: SensitivityLabelsGetOptionalParams\n  ): Promise<SensitivityLabelsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        sensitivityLabelSource,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param parameters The column sensitivity label resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    parameters: SensitivityLabel,\n    options?: SensitivityLabelsCreateOrUpdateOptionalParams\n  ): Promise<SensitivityLabelsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Deletes the sensitivity label of a given column\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param schemaName The name of the schema.\n   * @param tableName The name of the table.\n   * @param columnName The name of the column.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    schemaName: string,\n    tableName: string,\n    columnName: string,\n    options?: SensitivityLabelsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        schemaName,\n        tableName,\n        columnName,\n        options\n      },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * ListCurrentByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListCurrentByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listCurrentByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: SensitivityLabelsListCurrentByDatabaseNextOptionalParams\n  ): Promise<SensitivityLabelsListCurrentByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listCurrentByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListRecommendedByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListRecommendedByDatabase\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listRecommendedByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: SensitivityLabelsListRecommendedByDatabaseNextOptionalParams\n  ): Promise<SensitivityLabelsListRecommendedByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listRecommendedByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listCurrentByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/currentSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skipToken,\n    Parameters.apiVersion2,\n    Parameters.filter1,\n    Parameters.count\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/currentSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters44,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listRecommendedByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/recommendedSensitivityLabels\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.skipToken,\n    Parameters.apiVersion2,\n    Parameters.filter1,\n    Parameters.includeDisabledRecommendations\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst enableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/enable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst disableRecommendationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}/disable\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource2\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    201: {\n      bodyMapper: Mappers.SensitivityLabel\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters43,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource1\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/schemas/{schemaName}/tables/{tableName}/columns/{columnName}/sensitivityLabels/{sensitivityLabelSource}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.schemaName,\n    Parameters.tableName,\n    Parameters.columnName,\n    Parameters.sensitivityLabelSource1\n  ],\n  serializer\n};\nconst listCurrentByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listRecommendedByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SensitivityLabelListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { RecommendedSensitivityLabels } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RecommendedSensitivityLabelUpdateList,\n  RecommendedSensitivityLabelsUpdateOptionalParams\n} from \"../models\";\n\n/** Class containing RecommendedSensitivityLabels operations. */\nexport class RecommendedSensitivityLabelsImpl\n  implements RecommendedSensitivityLabels {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RecommendedSensitivityLabels class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Update recommended sensitivity labels states of a given database using an operations batch.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param parameters A list of recommended sensitivity label update operations.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    parameters: RecommendedSensitivityLabelUpdateList,\n    options?: RecommendedSensitivityLabelsUpdateOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/recommendedSensitivityLabels\",\n  httpMethod: \"PATCH\",\n  responses: { 200: {}, default: {} },\n  requestBody: Parameters.parameters45,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServerAdvisors } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServerAdvisorsListByServerOptionalParams,\n  ServerAdvisorsListByServerResponse,\n  ServerAdvisorsGetOptionalParams,\n  ServerAdvisorsGetResponse,\n  Advisor,\n  ServerAdvisorsUpdateOptionalParams,\n  ServerAdvisorsUpdateResponse\n} from \"../models\";\n\n/** Class containing ServerAdvisors operations. */\nexport class ServerAdvisorsImpl implements ServerAdvisors {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerAdvisors class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server advisors.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAdvisorsListByServerOptionalParams\n  ): Promise<ServerAdvisorsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a server advisor.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param advisorName The name of the Server Advisor.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    advisorName: string,\n    options?: ServerAdvisorsGetOptionalParams\n  ): Promise<ServerAdvisorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, advisorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a server advisor.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param advisorName The name of the Server Advisor.\n   * @param parameters The requested advisor resource state.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    advisorName: string,\n    parameters: Advisor,\n    options?: ServerAdvisorsUpdateOptionalParams\n  ): Promise<ServerAdvisorsUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, advisorName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: {\n        type: {\n          name: \"Sequence\",\n          element: { type: { name: \"Composite\", className: \"Advisor\" } }\n        }\n      }\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Advisor\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.advisorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/advisors/{advisorName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Advisor\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters16,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.advisorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServerAutomaticTuningOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServerAutomaticTuningGetOptionalParams,\n  ServerAutomaticTuningGetResponse,\n  ServerAutomaticTuning,\n  ServerAutomaticTuningUpdateOptionalParams,\n  ServerAutomaticTuningUpdateResponse\n} from \"../models\";\n\n/** Class containing ServerAutomaticTuningOperations operations. */\nexport class ServerAutomaticTuningOperationsImpl\n  implements ServerAutomaticTuningOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerAutomaticTuningOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Retrieves server automatic tuning options.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAutomaticTuningGetOptionalParams\n  ): Promise<ServerAutomaticTuningGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Update automatic tuning options on server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested automatic tuning resource state.\n   * @param options The options parameters.\n   */\n  update(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ServerAutomaticTuning,\n    options?: ServerAutomaticTuningUpdateOptionalParams\n  ): Promise<ServerAutomaticTuningUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, parameters, options },\n      updateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/automaticTuning/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAutomaticTuning\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/automaticTuning/current\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAutomaticTuning\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters58,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerAzureADAdministrators } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerAzureADAdministrator,\n  ServerAzureADAdministratorsListByServerNextOptionalParams,\n  ServerAzureADAdministratorsListByServerOptionalParams,\n  ServerAzureADAdministratorsListByServerResponse,\n  AdministratorName,\n  ServerAzureADAdministratorsGetOptionalParams,\n  ServerAzureADAdministratorsGetResponse,\n  ServerAzureADAdministratorsCreateOrUpdateOptionalParams,\n  ServerAzureADAdministratorsCreateOrUpdateResponse,\n  ServerAzureADAdministratorsDeleteOptionalParams,\n  ServerAzureADAdministratorsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerAzureADAdministrators operations. */\nexport class ServerAzureADAdministratorsImpl\n  implements ServerAzureADAdministrators {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerAzureADAdministrators class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of Azure Active Directory administrators in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADAdministratorsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerAzureADAdministrator> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADAdministratorsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerAzureADAdministrator[]> {\n    let result: ServerAzureADAdministratorsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADAdministratorsListByServerOptionalParams\n  ): AsyncIterableIterator<ServerAzureADAdministrator> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a Azure Active Directory administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param administratorName The name of server active directory administrator.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    administratorName: AdministratorName,\n    options?: ServerAzureADAdministratorsGetOptionalParams\n  ): Promise<ServerAzureADAdministratorsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, administratorName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an existing Azure Active Directory administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param administratorName The name of server active directory administrator.\n   * @param parameters The requested Azure Active Directory administrator Resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    administratorName: AdministratorName,\n    parameters: ServerAzureADAdministrator,\n    options?: ServerAzureADAdministratorsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerAzureADAdministratorsCreateOrUpdateResponse>,\n      ServerAzureADAdministratorsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerAzureADAdministratorsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, administratorName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an existing Azure Active Directory administrator.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param administratorName The name of server active directory administrator.\n   * @param parameters The requested Azure Active Directory administrator Resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    administratorName: AdministratorName,\n    parameters: ServerAzureADAdministrator,\n    options?: ServerAzureADAdministratorsCreateOrUpdateOptionalParams\n  ): Promise<ServerAzureADAdministratorsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      administratorName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the Azure Active Directory administrator with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param administratorName The name of server active directory administrator.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    administratorName: AdministratorName,\n    options?: ServerAzureADAdministratorsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, administratorName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the Azure Active Directory administrator with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param administratorName The name of server active directory administrator.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    administratorName: AdministratorName,\n    options?: ServerAzureADAdministratorsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      administratorName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of Azure Active Directory administrators in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADAdministratorsListByServerOptionalParams\n  ): Promise<ServerAzureADAdministratorsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerAzureADAdministratorsListByServerNextOptionalParams\n  ): Promise<ServerAzureADAdministratorsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAzureADAdministrator\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.administratorName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAzureADAdministrator\n    },\n    201: {\n      bodyMapper: Mappers.ServerAzureADAdministrator\n    },\n    202: {\n      bodyMapper: Mappers.ServerAzureADAdministrator\n    },\n    204: {\n      bodyMapper: Mappers.ServerAzureADAdministrator\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters59,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.administratorName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators/{administratorName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.administratorName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/administrators\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AdministratorListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AdministratorListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerAzureADOnlyAuthentications } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerAzureADOnlyAuthentication,\n  ServerAzureADOnlyAuthenticationsListByServerNextOptionalParams,\n  ServerAzureADOnlyAuthenticationsListByServerOptionalParams,\n  ServerAzureADOnlyAuthenticationsListByServerResponse,\n  AuthenticationName,\n  ServerAzureADOnlyAuthenticationsGetOptionalParams,\n  ServerAzureADOnlyAuthenticationsGetResponse,\n  ServerAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams,\n  ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse,\n  ServerAzureADOnlyAuthenticationsDeleteOptionalParams,\n  ServerAzureADOnlyAuthenticationsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerAzureADOnlyAuthentications operations. */\nexport class ServerAzureADOnlyAuthenticationsImpl\n  implements ServerAzureADOnlyAuthentications {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerAzureADOnlyAuthentications class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server Azure Active Directory only authentications.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADOnlyAuthenticationsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerAzureADOnlyAuthentication> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADOnlyAuthenticationsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerAzureADOnlyAuthentication[]> {\n    let result: ServerAzureADOnlyAuthenticationsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADOnlyAuthenticationsListByServerOptionalParams\n  ): AsyncIterableIterator<ServerAzureADOnlyAuthentication> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a specific Azure Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    authenticationName: AuthenticationName,\n    options?: ServerAzureADOnlyAuthenticationsGetOptionalParams\n  ): Promise<ServerAzureADOnlyAuthenticationsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, authenticationName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Sets Server Active Directory only authentication property or updates an existing server Active\n   * Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param parameters The required parameters for creating or updating an Active Directory only\n   *                   authentication property.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    authenticationName: AuthenticationName,\n    parameters: ServerAzureADOnlyAuthentication,\n    options?: ServerAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse\n      >,\n      ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        authenticationName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Sets Server Active Directory only authentication property or updates an existing server Active\n   * Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param parameters The required parameters for creating or updating an Active Directory only\n   *                   authentication property.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    authenticationName: AuthenticationName,\n    parameters: ServerAzureADOnlyAuthentication,\n    options?: ServerAzureADOnlyAuthenticationsCreateOrUpdateOptionalParams\n  ): Promise<ServerAzureADOnlyAuthenticationsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      authenticationName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes an existing server Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    authenticationName: AuthenticationName,\n    options?: ServerAzureADOnlyAuthenticationsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, authenticationName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes an existing server Active Directory only authentication property.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param authenticationName The name of server azure active directory only authentication.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    authenticationName: AuthenticationName,\n    options?: ServerAzureADOnlyAuthenticationsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      authenticationName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of server Azure Active Directory only authentications.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerAzureADOnlyAuthenticationsListByServerOptionalParams\n  ): Promise<ServerAzureADOnlyAuthenticationsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerAzureADOnlyAuthenticationsListByServerNextOptionalParams\n  ): Promise<ServerAzureADOnlyAuthenticationsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAzureADOnlyAuthentication\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.authenticationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerAzureADOnlyAuthentication\n    },\n    201: {\n      bodyMapper: Mappers.ServerAzureADOnlyAuthentication\n    },\n    202: {\n      bodyMapper: Mappers.ServerAzureADOnlyAuthentication\n    },\n    204: {\n      bodyMapper: Mappers.ServerAzureADOnlyAuthentication\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters60,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.authenticationName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications/{authenticationName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.authenticationName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/azureADOnlyAuthentications\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.AzureADOnlyAuthListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerDevOpsAuditSettings } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerDevOpsAuditingSettings,\n  ServerDevOpsAuditSettingsListByServerNextOptionalParams,\n  ServerDevOpsAuditSettingsListByServerOptionalParams,\n  ServerDevOpsAuditSettingsListByServerResponse,\n  ServerDevOpsAuditSettingsGetOptionalParams,\n  ServerDevOpsAuditSettingsGetResponse,\n  ServerDevOpsAuditSettingsCreateOrUpdateOptionalParams,\n  ServerDevOpsAuditSettingsCreateOrUpdateResponse,\n  ServerDevOpsAuditSettingsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerDevOpsAuditSettings operations. */\nexport class ServerDevOpsAuditSettingsImpl\n  implements ServerDevOpsAuditSettings {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerDevOpsAuditSettings class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists DevOps audit settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDevOpsAuditSettingsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerDevOpsAuditingSettings> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDevOpsAuditSettingsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerDevOpsAuditingSettings[]> {\n    let result: ServerDevOpsAuditSettingsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDevOpsAuditSettingsListByServerOptionalParams\n  ): AsyncIterableIterator<ServerDevOpsAuditingSettings> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server's DevOps audit settings.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param devOpsAuditingSettingsName The name of the devops audit settings. This should always be\n   *                                   'default'.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    devOpsAuditingSettingsName: string,\n    options?: ServerDevOpsAuditSettingsGetOptionalParams\n  ): Promise<ServerDevOpsAuditSettingsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, devOpsAuditingSettingsName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a server's DevOps audit settings.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param devOpsAuditingSettingsName The name of the devops audit settings. This should always be\n   *                                   'default'.\n   * @param parameters Properties of DevOps audit settings\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    devOpsAuditingSettingsName: string,\n    parameters: ServerDevOpsAuditingSettings,\n    options?: ServerDevOpsAuditSettingsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerDevOpsAuditSettingsCreateOrUpdateResponse>,\n      ServerDevOpsAuditSettingsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerDevOpsAuditSettingsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        devOpsAuditingSettingsName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs,\n      lroResourceLocationConfig: \"azure-async-operation\"\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a server's DevOps audit settings.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param devOpsAuditingSettingsName The name of the devops audit settings. This should always be\n   *                                   'default'.\n   * @param parameters Properties of DevOps audit settings\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    devOpsAuditingSettingsName: string,\n    parameters: ServerDevOpsAuditingSettings,\n    options?: ServerDevOpsAuditSettingsCreateOrUpdateOptionalParams\n  ): Promise<ServerDevOpsAuditSettingsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      devOpsAuditingSettingsName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists DevOps audit settings of a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDevOpsAuditSettingsListByServerOptionalParams\n  ): Promise<ServerDevOpsAuditSettingsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerDevOpsAuditSettingsListByServerNextOptionalParams\n  ): Promise<ServerDevOpsAuditSettingsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/devOpsAuditingSettings/{devOpsAuditingSettingsName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDevOpsAuditingSettings\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.devOpsAuditingSettingsName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/devOpsAuditingSettings/{devOpsAuditingSettingsName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDevOpsAuditingSettings\n    },\n    201: {\n      bodyMapper: Mappers.ServerDevOpsAuditingSettings\n    },\n    202: {\n      bodyMapper: Mappers.ServerDevOpsAuditingSettings\n    },\n    204: {\n      bodyMapper: Mappers.ServerDevOpsAuditingSettings\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters61,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.devOpsAuditingSettingsName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/devOpsAuditingSettings\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDevOpsAuditSettingsListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDevOpsAuditSettingsListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerDnsAliases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerDnsAlias,\n  ServerDnsAliasesListByServerNextOptionalParams,\n  ServerDnsAliasesListByServerOptionalParams,\n  ServerDnsAliasesListByServerResponse,\n  ServerDnsAliasesGetOptionalParams,\n  ServerDnsAliasesGetResponse,\n  ServerDnsAliasesCreateOrUpdateOptionalParams,\n  ServerDnsAliasesCreateOrUpdateResponse,\n  ServerDnsAliasesDeleteOptionalParams,\n  ServerDnsAliasAcquisition,\n  ServerDnsAliasesAcquireOptionalParams,\n  ServerDnsAliasesAcquireResponse,\n  ServerDnsAliasesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerDnsAliases operations. */\nexport class ServerDnsAliasesImpl implements ServerDnsAliases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerDnsAliases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server DNS aliases for a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDnsAliasesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerDnsAlias> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDnsAliasesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerDnsAlias[]> {\n    let result: ServerDnsAliasesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDnsAliasesListByServerOptionalParams\n  ): AsyncIterableIterator<ServerDnsAlias> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server DNS alias.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    options?: ServerDnsAliasesGetOptionalParams\n  ): Promise<ServerDnsAliasesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, dnsAliasName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates a server DNS alias.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    options?: ServerDnsAliasesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerDnsAliasesCreateOrUpdateResponse>,\n      ServerDnsAliasesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerDnsAliasesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, dnsAliasName, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a server DNS alias.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    options?: ServerDnsAliasesCreateOrUpdateOptionalParams\n  ): Promise<ServerDnsAliasesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      dnsAliasName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the server DNS alias with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    options?: ServerDnsAliasesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, dnsAliasName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the server DNS alias with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    options?: ServerDnsAliasesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      dnsAliasName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of server DNS aliases for a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerDnsAliasesListByServerOptionalParams\n  ): Promise<ServerDnsAliasesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Acquires server DNS alias from another server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param parameters A server dns alias acquisition request.\n   * @param options The options parameters.\n   */\n  async beginAcquire(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    parameters: ServerDnsAliasAcquisition,\n    options?: ServerDnsAliasesAcquireOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerDnsAliasesAcquireResponse>,\n      ServerDnsAliasesAcquireResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerDnsAliasesAcquireResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, dnsAliasName, parameters, options },\n      acquireOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Acquires server DNS alias from another server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param dnsAliasName The name of the server dns alias.\n   * @param parameters A server dns alias acquisition request.\n   * @param options The options parameters.\n   */\n  async beginAcquireAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    dnsAliasName: string,\n    parameters: ServerDnsAliasAcquisition,\n    options?: ServerDnsAliasesAcquireOptionalParams\n  ): Promise<ServerDnsAliasesAcquireResponse> {\n    const poller = await this.beginAcquire(\n      resourceGroupName,\n      serverName,\n      dnsAliasName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server that the alias is pointing to.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerDnsAliasesListByServerNextOptionalParams\n  ): Promise<ServerDnsAliasesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.dnsAliasName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    201: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    202: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    204: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.dnsAliasName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.dnsAliasName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDnsAliasListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst acquireOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/dnsAliases/{dnsAliasName}/acquire\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    201: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    202: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    204: {\n      bodyMapper: Mappers.ServerDnsAlias\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters62,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.dnsAliasName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerDnsAliasListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerKeys } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerKey,\n  ServerKeysListByServerNextOptionalParams,\n  ServerKeysListByServerOptionalParams,\n  ServerKeysListByServerResponse,\n  ServerKeysGetOptionalParams,\n  ServerKeysGetResponse,\n  ServerKeysCreateOrUpdateOptionalParams,\n  ServerKeysCreateOrUpdateResponse,\n  ServerKeysDeleteOptionalParams,\n  ServerKeysListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerKeys operations. */\nexport class ServerKeysImpl implements ServerKeys {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerKeys class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of server keys.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerKeysListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerKey> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerKeysListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerKey[]> {\n    let result: ServerKeysListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerKeysListByServerOptionalParams\n  ): AsyncIterableIterator<ServerKey> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of server keys.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerKeysListByServerOptionalParams\n  ): Promise<ServerKeysListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a server key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param keyName The name of the server key to be retrieved.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    keyName: string,\n    options?: ServerKeysGetOptionalParams\n  ): Promise<ServerKeysGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, keyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a server key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param keyName The name of the server key to be operated on (updated or created). The key name is\n   *                required to be in the format of 'vault_key_version'. For example, if the keyId is\n   *                https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion, then the server key name\n   *                should be formatted as: YourVaultName_YourKeyName_YourKeyVersion\n   * @param parameters The requested server key resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    keyName: string,\n    parameters: ServerKey,\n    options?: ServerKeysCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerKeysCreateOrUpdateResponse>,\n      ServerKeysCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerKeysCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, keyName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a server key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param keyName The name of the server key to be operated on (updated or created). The key name is\n   *                required to be in the format of 'vault_key_version'. For example, if the keyId is\n   *                https://YourVaultName.vault.azure.net/keys/YourKeyName/YourKeyVersion, then the server key name\n   *                should be formatted as: YourVaultName_YourKeyName_YourKeyVersion\n   * @param parameters The requested server key resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    keyName: string,\n    parameters: ServerKey,\n    options?: ServerKeysCreateOrUpdateOptionalParams\n  ): Promise<ServerKeysCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      keyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the server key with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param keyName The name of the server key to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    keyName: string,\n    options?: ServerKeysDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, keyName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the server key with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param keyName The name of the server key to be deleted.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    keyName: string,\n    options?: ServerKeysDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      keyName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerKeysListByServerNextOptionalParams\n  ): Promise<ServerKeysListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerKeyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerKey\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerKey\n    },\n    201: {\n      bodyMapper: Mappers.ServerKey\n    },\n    202: {\n      bodyMapper: Mappers.ServerKey\n    },\n    204: {\n      bodyMapper: Mappers.ServerKey\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters63,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.keyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/keys/{keyName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.keyName\n  ],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerKeyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServerOperation,\n  ServerOperationsListByServerNextOptionalParams,\n  ServerOperationsListByServerOptionalParams,\n  ServerOperationsListByServerResponse,\n  ServerOperationsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerOperations operations. */\nexport class ServerOperationsImpl implements ServerOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of operations performed on the server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerOperationsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerOperation> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerOperationsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerOperation[]> {\n    let result: ServerOperationsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerOperationsListByServerOptionalParams\n  ): AsyncIterableIterator<ServerOperation> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of operations performed on the server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerOperationsListByServerOptionalParams\n  ): Promise<ServerOperationsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerOperationsListByServerNextOptionalParams\n  ): Promise<ServerOperationsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerOperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerSecurityAlertPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerSecurityAlertPolicy,\n  ServerSecurityAlertPoliciesListByServerNextOptionalParams,\n  ServerSecurityAlertPoliciesListByServerOptionalParams,\n  ServerSecurityAlertPoliciesListByServerResponse,\n  SecurityAlertPolicyName,\n  ServerSecurityAlertPoliciesGetOptionalParams,\n  ServerSecurityAlertPoliciesGetResponse,\n  ServerSecurityAlertPoliciesCreateOrUpdateOptionalParams,\n  ServerSecurityAlertPoliciesCreateOrUpdateResponse,\n  ServerSecurityAlertPoliciesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerSecurityAlertPolicies operations. */\nexport class ServerSecurityAlertPoliciesImpl\n  implements ServerSecurityAlertPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerSecurityAlertPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Get the server's threat detection policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerSecurityAlertPoliciesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerSecurityAlertPolicy> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerSecurityAlertPoliciesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerSecurityAlertPolicy[]> {\n    let result: ServerSecurityAlertPoliciesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerSecurityAlertPoliciesListByServerOptionalParams\n  ): AsyncIterableIterator<ServerSecurityAlertPolicy> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get a server's security alert policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param securityAlertPolicyName The name of the security alert policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    options?: ServerSecurityAlertPoliciesGetOptionalParams\n  ): Promise<ServerSecurityAlertPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, securityAlertPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a threat detection policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param securityAlertPolicyName The name of the threat detection policy.\n   * @param parameters The server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: ServerSecurityAlertPolicy,\n    options?: ServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerSecurityAlertPoliciesCreateOrUpdateResponse>,\n      ServerSecurityAlertPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerSecurityAlertPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        securityAlertPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a threat detection policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param securityAlertPolicyName The name of the threat detection policy.\n   * @param parameters The server security alert policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    securityAlertPolicyName: SecurityAlertPolicyName,\n    parameters: ServerSecurityAlertPolicy,\n    options?: ServerSecurityAlertPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ServerSecurityAlertPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      securityAlertPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get the server's threat detection policies.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerSecurityAlertPoliciesListByServerOptionalParams\n  ): Promise<ServerSecurityAlertPoliciesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerSecurityAlertPoliciesListByServerNextOptionalParams\n  ): Promise<ServerSecurityAlertPoliciesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies/{securityAlertPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ServerSecurityAlertPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters64,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.securityAlertPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/securityAlertPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalServerSecurityAlertPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerTrustGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerTrustGroup,\n  ServerTrustGroupsListByLocationNextOptionalParams,\n  ServerTrustGroupsListByLocationOptionalParams,\n  ServerTrustGroupsListByLocationResponse,\n  ServerTrustGroupsListByInstanceNextOptionalParams,\n  ServerTrustGroupsListByInstanceOptionalParams,\n  ServerTrustGroupsListByInstanceResponse,\n  ServerTrustGroupsGetOptionalParams,\n  ServerTrustGroupsGetResponse,\n  ServerTrustGroupsCreateOrUpdateOptionalParams,\n  ServerTrustGroupsCreateOrUpdateResponse,\n  ServerTrustGroupsDeleteOptionalParams,\n  ServerTrustGroupsListByLocationNextResponse,\n  ServerTrustGroupsListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerTrustGroups operations. */\nexport class ServerTrustGroupsImpl implements ServerTrustGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerTrustGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: ServerTrustGroupsListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<ServerTrustGroup> {\n    const iter = this.listByLocationPagingAll(\n      resourceGroupName,\n      locationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(\n          resourceGroupName,\n          locationName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    options?: ServerTrustGroupsListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerTrustGroup[]> {\n    let result: ServerTrustGroupsListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(\n        resourceGroupName,\n        locationName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        resourceGroupName,\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    options?: ServerTrustGroupsListByLocationOptionalParams\n  ): AsyncIterableIterator<ServerTrustGroup> {\n    for await (const page of this.listByLocationPagingPage(\n      resourceGroupName,\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server trust groups by instance name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ServerTrustGroupsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ServerTrustGroup> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ServerTrustGroupsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerTrustGroup[]> {\n    let result: ServerTrustGroupsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ServerTrustGroupsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ServerTrustGroup> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param serverTrustGroupName The name of the server trust group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    locationName: string,\n    serverTrustGroupName: string,\n    options?: ServerTrustGroupsGetOptionalParams\n  ): Promise<ServerTrustGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, serverTrustGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param serverTrustGroupName The name of the server trust group.\n   * @param parameters The server trust group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    locationName: string,\n    serverTrustGroupName: string,\n    parameters: ServerTrustGroup,\n    options?: ServerTrustGroupsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerTrustGroupsCreateOrUpdateResponse>,\n      ServerTrustGroupsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerTrustGroupsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        serverTrustGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param serverTrustGroupName The name of the server trust group.\n   * @param parameters The server trust group parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    serverTrustGroupName: string,\n    parameters: ServerTrustGroup,\n    options?: ServerTrustGroupsCreateOrUpdateOptionalParams\n  ): Promise<ServerTrustGroupsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      locationName,\n      serverTrustGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param serverTrustGroupName The name of the server trust group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    locationName: string,\n    serverTrustGroupName: string,\n    options?: ServerTrustGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, locationName, serverTrustGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param serverTrustGroupName The name of the server trust group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    serverTrustGroupName: string,\n    options?: ServerTrustGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      locationName,\n      serverTrustGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists a server trust group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: ServerTrustGroupsListByLocationOptionalParams\n  ): Promise<ServerTrustGroupsListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Gets a server trust groups by instance name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ServerTrustGroupsListByInstanceOptionalParams\n  ): Promise<ServerTrustGroupsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    resourceGroupName: string,\n    locationName: string,\n    nextLink: string,\n    options?: ServerTrustGroupsListByLocationNextOptionalParams\n  ): Promise<ServerTrustGroupsListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ServerTrustGroupsListByInstanceNextOptionalParams\n  ): Promise<ServerTrustGroupsListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.serverTrustGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroup\n    },\n    201: {\n      bodyMapper: Mappers.ServerTrustGroup\n    },\n    202: {\n      bodyMapper: Mappers.ServerTrustGroup\n    },\n    204: {\n      bodyMapper: Mappers.ServerTrustGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters65,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.serverTrustGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups/{serverTrustGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.serverTrustGroupName\n  ],\n  serializer\n};\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/serverTrustGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/serverTrustGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerTrustGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerVulnerabilityAssessments } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  ServerVulnerabilityAssessment,\n  ServerVulnerabilityAssessmentsListByServerNextOptionalParams,\n  ServerVulnerabilityAssessmentsListByServerOptionalParams,\n  ServerVulnerabilityAssessmentsListByServerResponse,\n  VulnerabilityAssessmentName,\n  ServerVulnerabilityAssessmentsGetOptionalParams,\n  ServerVulnerabilityAssessmentsGetResponse,\n  ServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams,\n  ServerVulnerabilityAssessmentsCreateOrUpdateResponse,\n  ServerVulnerabilityAssessmentsDeleteOptionalParams,\n  ServerVulnerabilityAssessmentsListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerVulnerabilityAssessments operations. */\nexport class ServerVulnerabilityAssessmentsImpl\n  implements ServerVulnerabilityAssessments {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerVulnerabilityAssessments class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerVulnerabilityAssessmentsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerVulnerabilityAssessment> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerVulnerabilityAssessmentsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerVulnerabilityAssessment[]> {\n    let result: ServerVulnerabilityAssessmentsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerVulnerabilityAssessmentsListByServerOptionalParams\n  ): AsyncIterableIterator<ServerVulnerabilityAssessment> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the server's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ServerVulnerabilityAssessmentsGetOptionalParams\n  ): Promise<ServerVulnerabilityAssessmentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, vulnerabilityAssessmentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates the server's vulnerability assessment. Learn more about setting SQL vulnerability\n   * assessment with managed identity -\n   * https://docs.microsoft.com/azure/azure-sql/database/sql-database-vulnerability-assessment-storage\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param parameters The requested resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    parameters: ServerVulnerabilityAssessment,\n    options?: ServerVulnerabilityAssessmentsCreateOrUpdateOptionalParams\n  ): Promise<ServerVulnerabilityAssessmentsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        vulnerabilityAssessmentName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Removes the server's vulnerability assessment.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server for which the vulnerability assessment is defined.\n   * @param vulnerabilityAssessmentName The name of the vulnerability assessment.\n   * @param options The options parameters.\n   */\n  delete(\n    resourceGroupName: string,\n    serverName: string,\n    vulnerabilityAssessmentName: VulnerabilityAssessmentName,\n    options?: ServerVulnerabilityAssessmentsDeleteOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, vulnerabilityAssessmentName, options },\n      deleteOperationSpec\n    );\n  }\n\n  /**\n   * Lists the vulnerability assessment policies associated with a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerVulnerabilityAssessmentsListByServerOptionalParams\n  ): Promise<ServerVulnerabilityAssessmentsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerVulnerabilityAssessmentsListByServerNextOptionalParams\n  ): Promise<ServerVulnerabilityAssessmentsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    201: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessment\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters66,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments/{vulnerabilityAssessmentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.vulnerabilityAssessmentName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/vulnerabilityAssessments\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerVulnerabilityAssessmentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { SqlAgent } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  SqlAgentGetOptionalParams,\n  SqlAgentGetResponse,\n  SqlAgentConfiguration,\n  SqlAgentCreateOrUpdateOptionalParams,\n  SqlAgentCreateOrUpdateResponse\n} from \"../models\";\n\n/** Class containing SqlAgent operations. */\nexport class SqlAgentImpl implements SqlAgent {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SqlAgent class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets current instance sql agent configuration.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: SqlAgentGetOptionalParams\n  ): Promise<SqlAgentGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Puts new sql agent configuration to instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters A recoverable managed database resource.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: SqlAgentConfiguration,\n    options?: SqlAgentCreateOrUpdateOptionalParams\n  ): Promise<SqlAgentCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/sqlAgent/current\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlAgentConfiguration\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/sqlAgent/current\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SqlAgentConfiguration\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters67,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SubscriptionUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  SubscriptionUsage,\n  SubscriptionUsagesListByLocationNextOptionalParams,\n  SubscriptionUsagesListByLocationOptionalParams,\n  SubscriptionUsagesListByLocationResponse,\n  SubscriptionUsagesGetOptionalParams,\n  SubscriptionUsagesGetResponse,\n  SubscriptionUsagesListByLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SubscriptionUsages operations. */\nexport class SubscriptionUsagesImpl implements SubscriptionUsages {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SubscriptionUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all subscription usage metrics in a given location.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: SubscriptionUsagesListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<SubscriptionUsage> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: SubscriptionUsagesListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SubscriptionUsage[]> {\n    let result: SubscriptionUsagesListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: SubscriptionUsagesListByLocationOptionalParams\n  ): AsyncIterableIterator<SubscriptionUsage> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all subscription usage metrics in a given location.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: SubscriptionUsagesListByLocationOptionalParams\n  ): Promise<SubscriptionUsagesListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Gets a subscription usage metric.\n   * @param locationName The name of the region where the resource is located.\n   * @param usageName Name of usage metric to return.\n   * @param options The options parameters.\n   */\n  get(\n    locationName: string,\n    usageName: string,\n    options?: SubscriptionUsagesGetOptionalParams\n  ): Promise<SubscriptionUsagesGetResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, usageName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: SubscriptionUsagesListByLocationNextOptionalParams\n  ): Promise<SubscriptionUsagesListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionUsageListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/usages/{usageName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionUsage\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.usageName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SubscriptionUsageListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SyncAgents } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SyncAgent,\n  SyncAgentsListByServerNextOptionalParams,\n  SyncAgentsListByServerOptionalParams,\n  SyncAgentsListByServerResponse,\n  SyncAgentLinkedDatabase,\n  SyncAgentsListLinkedDatabasesNextOptionalParams,\n  SyncAgentsListLinkedDatabasesOptionalParams,\n  SyncAgentsListLinkedDatabasesResponse,\n  SyncAgentsGetOptionalParams,\n  SyncAgentsGetResponse,\n  SyncAgentsCreateOrUpdateOptionalParams,\n  SyncAgentsCreateOrUpdateResponse,\n  SyncAgentsDeleteOptionalParams,\n  SyncAgentsGenerateKeyOptionalParams,\n  SyncAgentsGenerateKeyResponse,\n  SyncAgentsListByServerNextResponse,\n  SyncAgentsListLinkedDatabasesNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SyncAgents operations. */\nexport class SyncAgentsImpl implements SyncAgents {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SyncAgents class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists sync agents in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: SyncAgentsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<SyncAgent> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: SyncAgentsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncAgent[]> {\n    let result: SyncAgentsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: SyncAgentsListByServerOptionalParams\n  ): AsyncIterableIterator<SyncAgent> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists databases linked to a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  public listLinkedDatabases(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsListLinkedDatabasesOptionalParams\n  ): PagedAsyncIterableIterator<SyncAgentLinkedDatabase> {\n    const iter = this.listLinkedDatabasesPagingAll(\n      resourceGroupName,\n      serverName,\n      syncAgentName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listLinkedDatabasesPagingPage(\n          resourceGroupName,\n          serverName,\n          syncAgentName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listLinkedDatabasesPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsListLinkedDatabasesOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncAgentLinkedDatabase[]> {\n    let result: SyncAgentsListLinkedDatabasesResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listLinkedDatabases(\n        resourceGroupName,\n        serverName,\n        syncAgentName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listLinkedDatabasesNext(\n        resourceGroupName,\n        serverName,\n        syncAgentName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listLinkedDatabasesPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsListLinkedDatabasesOptionalParams\n  ): AsyncIterableIterator<SyncAgentLinkedDatabase> {\n    for await (const page of this.listLinkedDatabasesPagingPage(\n      resourceGroupName,\n      serverName,\n      syncAgentName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsGetOptionalParams\n  ): Promise<SyncAgentsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, syncAgentName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param parameters The requested sync agent resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    parameters: SyncAgent,\n    options?: SyncAgentsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SyncAgentsCreateOrUpdateResponse>,\n      SyncAgentsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SyncAgentsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, syncAgentName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param parameters The requested sync agent resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    parameters: SyncAgent,\n    options?: SyncAgentsCreateOrUpdateOptionalParams\n  ): Promise<SyncAgentsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      syncAgentName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, syncAgentName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      syncAgentName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists sync agents in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: SyncAgentsListByServerOptionalParams\n  ): Promise<SyncAgentsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Generates a sync agent key.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  generateKey(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsGenerateKeyOptionalParams\n  ): Promise<SyncAgentsGenerateKeyResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, syncAgentName, options },\n      generateKeyOperationSpec\n    );\n  }\n\n  /**\n   * Lists databases linked to a sync agent.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param options The options parameters.\n   */\n  private _listLinkedDatabases(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    options?: SyncAgentsListLinkedDatabasesOptionalParams\n  ): Promise<SyncAgentsListLinkedDatabasesResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, syncAgentName, options },\n      listLinkedDatabasesOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: SyncAgentsListByServerNextOptionalParams\n  ): Promise<SyncAgentsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n\n  /**\n   * ListLinkedDatabasesNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server on which the sync agent is hosted.\n   * @param syncAgentName The name of the sync agent.\n   * @param nextLink The nextLink from the previous successful call to the ListLinkedDatabases method.\n   * @param options The options parameters.\n   */\n  private _listLinkedDatabasesNext(\n    resourceGroupName: string,\n    serverName: string,\n    syncAgentName: string,\n    nextLink: string,\n    options?: SyncAgentsListLinkedDatabasesNextOptionalParams\n  ): Promise<SyncAgentsListLinkedDatabasesNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, syncAgentName, nextLink, options },\n      listLinkedDatabasesNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgent\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.syncAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgent\n    },\n    201: {\n      bodyMapper: Mappers.SyncAgent\n    },\n    202: {\n      bodyMapper: Mappers.SyncAgent\n    },\n    204: {\n      bodyMapper: Mappers.SyncAgent\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters68,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.syncAgentName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.syncAgentName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgentListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst generateKeyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}/generateKey\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgentKeyProperties\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.syncAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listLinkedDatabasesOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/syncAgents/{syncAgentName}/linkedDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgentLinkedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.syncAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgentListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listLinkedDatabasesNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncAgentLinkedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink,\n    Parameters.syncAgentName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SyncGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SyncDatabaseIdProperties,\n  SyncGroupsListSyncDatabaseIdsNextOptionalParams,\n  SyncGroupsListSyncDatabaseIdsOptionalParams,\n  SyncGroupsListSyncDatabaseIdsResponse,\n  SyncFullSchemaProperties,\n  SyncGroupsListHubSchemasNextOptionalParams,\n  SyncGroupsListHubSchemasOptionalParams,\n  SyncGroupsListHubSchemasResponse,\n  SyncGroupLogProperties,\n  SyncGroupsListLogsNextOptionalParams,\n  Enum60,\n  SyncGroupsListLogsOptionalParams,\n  SyncGroupsListLogsResponse,\n  SyncGroup,\n  SyncGroupsListByDatabaseNextOptionalParams,\n  SyncGroupsListByDatabaseOptionalParams,\n  SyncGroupsListByDatabaseResponse,\n  SyncGroupsRefreshHubSchemaOptionalParams,\n  SyncGroupsCancelSyncOptionalParams,\n  SyncGroupsTriggerSyncOptionalParams,\n  SyncGroupsGetOptionalParams,\n  SyncGroupsGetResponse,\n  SyncGroupsCreateOrUpdateOptionalParams,\n  SyncGroupsCreateOrUpdateResponse,\n  SyncGroupsDeleteOptionalParams,\n  SyncGroupsUpdateOptionalParams,\n  SyncGroupsUpdateResponse,\n  SyncGroupsListSyncDatabaseIdsNextResponse,\n  SyncGroupsListHubSchemasNextResponse,\n  SyncGroupsListLogsNextResponse,\n  SyncGroupsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SyncGroups operations. */\nexport class SyncGroupsImpl implements SyncGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SyncGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a collection of sync database ids.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  public listSyncDatabaseIds(\n    locationName: string,\n    options?: SyncGroupsListSyncDatabaseIdsOptionalParams\n  ): PagedAsyncIterableIterator<SyncDatabaseIdProperties> {\n    const iter = this.listSyncDatabaseIdsPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listSyncDatabaseIdsPagingPage(\n          locationName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listSyncDatabaseIdsPagingPage(\n    locationName: string,\n    options?: SyncGroupsListSyncDatabaseIdsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncDatabaseIdProperties[]> {\n    let result: SyncGroupsListSyncDatabaseIdsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listSyncDatabaseIds(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listSyncDatabaseIdsNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listSyncDatabaseIdsPagingAll(\n    locationName: string,\n    options?: SyncGroupsListSyncDatabaseIdsOptionalParams\n  ): AsyncIterableIterator<SyncDatabaseIdProperties> {\n    for await (const page of this.listSyncDatabaseIdsPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a collection of hub database schemas.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  public listHubSchemas(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsListHubSchemasOptionalParams\n  ): PagedAsyncIterableIterator<SyncFullSchemaProperties> {\n    const iter = this.listHubSchemasPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listHubSchemasPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          syncGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listHubSchemasPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsListHubSchemasOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncFullSchemaProperties[]> {\n    let result: SyncGroupsListHubSchemasResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listHubSchemas(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listHubSchemasNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listHubSchemasPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsListHubSchemasOptionalParams\n  ): AsyncIterableIterator<SyncFullSchemaProperties> {\n    for await (const page of this.listHubSchemasPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a collection of sync group logs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param startTime Get logs generated after this time.\n   * @param endTime Get logs generated before this time.\n   * @param typeParam The types of logs to retrieve.\n   * @param options The options parameters.\n   */\n  public listLogs(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    startTime: string,\n    endTime: string,\n    typeParam: Enum60,\n    options?: SyncGroupsListLogsOptionalParams\n  ): PagedAsyncIterableIterator<SyncGroupLogProperties> {\n    const iter = this.listLogsPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      startTime,\n      endTime,\n      typeParam,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listLogsPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          syncGroupName,\n          startTime,\n          endTime,\n          typeParam,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listLogsPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    startTime: string,\n    endTime: string,\n    typeParam: Enum60,\n    options?: SyncGroupsListLogsOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncGroupLogProperties[]> {\n    let result: SyncGroupsListLogsResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listLogs(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        startTime,\n        endTime,\n        typeParam,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listLogsNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listLogsPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    startTime: string,\n    endTime: string,\n    typeParam: Enum60,\n    options?: SyncGroupsListLogsOptionalParams\n  ): AsyncIterableIterator<SyncGroupLogProperties> {\n    for await (const page of this.listLogsPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      startTime,\n      endTime,\n      typeParam,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists sync groups under a hub database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SyncGroupsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<SyncGroup> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SyncGroupsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncGroup[]> {\n    let result: SyncGroupsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SyncGroupsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<SyncGroup> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a collection of sync database ids.\n   * @param locationName The name of the region where the resource is located.\n   * @param options The options parameters.\n   */\n  private _listSyncDatabaseIds(\n    locationName: string,\n    options?: SyncGroupsListSyncDatabaseIdsOptionalParams\n  ): Promise<SyncGroupsListSyncDatabaseIdsResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listSyncDatabaseIdsOperationSpec\n    );\n  }\n\n  /**\n   * Refreshes a hub database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  async beginRefreshHubSchema(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsRefreshHubSchemaOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      refreshHubSchemaOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Refreshes a hub database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  async beginRefreshHubSchemaAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsRefreshHubSchemaOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRefreshHubSchema(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a collection of hub database schemas.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  private _listHubSchemas(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsListHubSchemasOptionalParams\n  ): Promise<SyncGroupsListHubSchemasResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      listHubSchemasOperationSpec\n    );\n  }\n\n  /**\n   * Gets a collection of sync group logs.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param startTime Get logs generated after this time.\n   * @param endTime Get logs generated before this time.\n   * @param typeParam The types of logs to retrieve.\n   * @param options The options parameters.\n   */\n  private _listLogs(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    startTime: string,\n    endTime: string,\n    typeParam: Enum60,\n    options?: SyncGroupsListLogsOptionalParams\n  ): Promise<SyncGroupsListLogsResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        startTime,\n        endTime,\n        typeParam,\n        options\n      },\n      listLogsOperationSpec\n    );\n  }\n\n  /**\n   * Cancels a sync group synchronization.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  cancelSync(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsCancelSyncOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      cancelSyncOperationSpec\n    );\n  }\n\n  /**\n   * Triggers a sync group synchronization.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  triggerSync(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsTriggerSyncOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      triggerSyncOperationSpec\n    );\n  }\n\n  /**\n   * Gets a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsGetOptionalParams\n  ): Promise<SyncGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param parameters The requested sync group resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    parameters: SyncGroup,\n    options?: SyncGroupsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SyncGroupsCreateOrUpdateResponse>,\n      SyncGroupsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SyncGroupsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param parameters The requested sync group resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    parameters: SyncGroup,\n    options?: SyncGroupsCreateOrUpdateOptionalParams\n  ): Promise<SyncGroupsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param parameters The requested sync group resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    parameters: SyncGroup,\n    options?: SyncGroupsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SyncGroupsUpdateResponse>,\n      SyncGroupsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SyncGroupsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param parameters The requested sync group resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    parameters: SyncGroup,\n    options?: SyncGroupsUpdateOptionalParams\n  ): Promise<SyncGroupsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists sync groups under a hub database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: SyncGroupsListByDatabaseOptionalParams\n  ): Promise<SyncGroupsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListSyncDatabaseIdsNext\n   * @param locationName The name of the region where the resource is located.\n   * @param nextLink The nextLink from the previous successful call to the ListSyncDatabaseIds method.\n   * @param options The options parameters.\n   */\n  private _listSyncDatabaseIdsNext(\n    locationName: string,\n    nextLink: string,\n    options?: SyncGroupsListSyncDatabaseIdsNextOptionalParams\n  ): Promise<SyncGroupsListSyncDatabaseIdsNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listSyncDatabaseIdsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListHubSchemasNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param nextLink The nextLink from the previous successful call to the ListHubSchemas method.\n   * @param options The options parameters.\n   */\n  private _listHubSchemasNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    nextLink: string,\n    options?: SyncGroupsListHubSchemasNextOptionalParams\n  ): Promise<SyncGroupsListHubSchemasNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        nextLink,\n        options\n      },\n      listHubSchemasNextOperationSpec\n    );\n  }\n\n  /**\n   * ListLogsNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param nextLink The nextLink from the previous successful call to the ListLogs method.\n   * @param options The options parameters.\n   */\n  private _listLogsNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    nextLink: string,\n    options?: SyncGroupsListLogsNextOptionalParams\n  ): Promise<SyncGroupsListLogsNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        nextLink,\n        options\n      },\n      listLogsNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: SyncGroupsListByDatabaseNextOptionalParams\n  ): Promise<SyncGroupsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listSyncDatabaseIdsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/syncDatabaseIds\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncDatabaseIdListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst refreshHubSchemaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/refreshHubSchema\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  serializer\n};\nconst listHubSchemasOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/hubSchemas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncFullSchemaPropertiesListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listLogsOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/logs\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroupLogListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion2,\n    Parameters.startTime1,\n    Parameters.endTime1,\n    Parameters.typeParam,\n    Parameters.continuationToken\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst cancelSyncOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/cancelSync\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  serializer\n};\nconst triggerSyncOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/triggerSync\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    201: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    202: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    204: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters69,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    201: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    202: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    204: {\n      bodyMapper: Mappers.SyncGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters69,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listSyncDatabaseIdsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncDatabaseIdListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listHubSchemasNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncFullSchemaPropertiesListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listLogsNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroupLogListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { SyncMembers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  SyncMember,\n  SyncMembersListBySyncGroupNextOptionalParams,\n  SyncMembersListBySyncGroupOptionalParams,\n  SyncMembersListBySyncGroupResponse,\n  SyncFullSchemaProperties,\n  SyncMembersListMemberSchemasNextOptionalParams,\n  SyncMembersListMemberSchemasOptionalParams,\n  SyncMembersListMemberSchemasResponse,\n  SyncMembersGetOptionalParams,\n  SyncMembersGetResponse,\n  SyncMembersCreateOrUpdateOptionalParams,\n  SyncMembersCreateOrUpdateResponse,\n  SyncMembersDeleteOptionalParams,\n  SyncMembersUpdateOptionalParams,\n  SyncMembersUpdateResponse,\n  SyncMembersRefreshMemberSchemaOptionalParams,\n  SyncMembersListBySyncGroupNextResponse,\n  SyncMembersListMemberSchemasNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing SyncMembers operations. */\nexport class SyncMembersImpl implements SyncMembers {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class SyncMembers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists sync members in the given sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  public listBySyncGroup(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncMembersListBySyncGroupOptionalParams\n  ): PagedAsyncIterableIterator<SyncMember> {\n    const iter = this.listBySyncGroupPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listBySyncGroupPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          syncGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listBySyncGroupPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncMembersListBySyncGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncMember[]> {\n    let result: SyncMembersListBySyncGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listBySyncGroup(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listBySyncGroupNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listBySyncGroupPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncMembersListBySyncGroupOptionalParams\n  ): AsyncIterableIterator<SyncMember> {\n    for await (const page of this.listBySyncGroupPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a sync member database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  public listMemberSchemas(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersListMemberSchemasOptionalParams\n  ): PagedAsyncIterableIterator<SyncFullSchemaProperties> {\n    const iter = this.listMemberSchemasPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listMemberSchemasPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          syncGroupName,\n          syncMemberName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listMemberSchemasPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersListMemberSchemasOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<SyncFullSchemaProperties[]> {\n    let result: SyncMembersListMemberSchemasResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listMemberSchemas(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listMemberSchemasNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listMemberSchemasPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersListMemberSchemasOptionalParams\n  ): AsyncIterableIterator<SyncFullSchemaProperties> {\n    for await (const page of this.listMemberSchemasPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersGetOptionalParams\n  ): Promise<SyncMembersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param parameters The requested sync member resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    parameters: SyncMember,\n    options?: SyncMembersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SyncMembersCreateOrUpdateResponse>,\n      SyncMembersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SyncMembersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param parameters The requested sync member resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    parameters: SyncMember,\n    options?: SyncMembersCreateOrUpdateOptionalParams\n  ): Promise<SyncMembersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param parameters The requested sync member resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    parameters: SyncMember,\n    options?: SyncMembersUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<SyncMembersUpdateResponse>,\n      SyncMembersUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<SyncMembersUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing sync member.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param parameters The requested sync member resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    parameters: SyncMember,\n    options?: SyncMembersUpdateOptionalParams\n  ): Promise<SyncMembersUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists sync members in the given sync group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param options The options parameters.\n   */\n  private _listBySyncGroup(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    options?: SyncMembersListBySyncGroupOptionalParams\n  ): Promise<SyncMembersListBySyncGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, syncGroupName, options },\n      listBySyncGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a sync member database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  private _listMemberSchemas(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersListMemberSchemasOptionalParams\n  ): Promise<SyncMembersListMemberSchemasResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        options\n      },\n      listMemberSchemasOperationSpec\n    );\n  }\n\n  /**\n   * Refreshes a sync member database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  async beginRefreshMemberSchema(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersRefreshMemberSchemaOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        options\n      },\n      refreshMemberSchemaOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Refreshes a sync member database schema.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param options The options parameters.\n   */\n  async beginRefreshMemberSchemaAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    options?: SyncMembersRefreshMemberSchemaOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginRefreshMemberSchema(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      syncGroupName,\n      syncMemberName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListBySyncGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group.\n   * @param nextLink The nextLink from the previous successful call to the ListBySyncGroup method.\n   * @param options The options parameters.\n   */\n  private _listBySyncGroupNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    nextLink: string,\n    options?: SyncMembersListBySyncGroupNextOptionalParams\n  ): Promise<SyncMembersListBySyncGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        nextLink,\n        options\n      },\n      listBySyncGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListMemberSchemasNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database on which the sync group is hosted.\n   * @param syncGroupName The name of the sync group on which the sync member is hosted.\n   * @param syncMemberName The name of the sync member.\n   * @param nextLink The nextLink from the previous successful call to the ListMemberSchemas method.\n   * @param options The options parameters.\n   */\n  private _listMemberSchemasNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    syncGroupName: string,\n    syncMemberName: string,\n    nextLink: string,\n    options?: SyncMembersListMemberSchemasNextOptionalParams\n  ): Promise<SyncMembersListMemberSchemasNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        syncGroupName,\n        syncMemberName,\n        nextLink,\n        options\n      },\n      listMemberSchemasNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncMember\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncMember\n    },\n    201: {\n      bodyMapper: Mappers.SyncMember\n    },\n    202: {\n      bodyMapper: Mappers.SyncMember\n    },\n    204: {\n      bodyMapper: Mappers.SyncMember\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters70,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncMember\n    },\n    201: {\n      bodyMapper: Mappers.SyncMember\n    },\n    202: {\n      bodyMapper: Mappers.SyncMember\n    },\n    204: {\n      bodyMapper: Mappers.SyncMember\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters70,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listBySyncGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncMemberListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listMemberSchemasOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/schemas\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncFullSchemaPropertiesListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst refreshMemberSchemaOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/syncGroups/{syncGroupName}/syncMembers/{syncMemberName}/refreshSchema\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  serializer\n};\nconst listBySyncGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncMemberListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.syncGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listMemberSchemasNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.SyncFullSchemaPropertiesListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.syncGroupName,\n    Parameters.syncMemberName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { TdeCertificates } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport { TdeCertificate, TdeCertificatesCreateOptionalParams } from \"../models\";\n\n/** Class containing TdeCertificates operations. */\nexport class TdeCertificatesImpl implements TdeCertificates {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class TdeCertificates class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Creates a TDE certificate for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested TDE certificate to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreate(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: TdeCertificate,\n    options?: TdeCertificatesCreateOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      createOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates a TDE certificate for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested TDE certificate to be created or updated.\n   * @param options The options parameters.\n   */\n  async beginCreateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: TdeCertificate,\n    options?: TdeCertificatesCreateOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginCreate(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst createOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/tdeCertificates\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  requestBody: Parameters.parameters53,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { TimeZones } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  TimeZone,\n  TimeZonesListByLocationNextOptionalParams,\n  TimeZonesListByLocationOptionalParams,\n  TimeZonesListByLocationResponse,\n  TimeZonesGetOptionalParams,\n  TimeZonesGetResponse,\n  TimeZonesListByLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing TimeZones operations. */\nexport class TimeZonesImpl implements TimeZones {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class TimeZones class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of managed instance time zones by location.\n   * @param locationName\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: TimeZonesListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<TimeZone> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: TimeZonesListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<TimeZone[]> {\n    let result: TimeZonesListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: TimeZonesListByLocationOptionalParams\n  ): AsyncIterableIterator<TimeZone> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of managed instance time zones by location.\n   * @param locationName\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: TimeZonesListByLocationOptionalParams\n  ): Promise<TimeZonesListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed instance time zone.\n   * @param locationName\n   * @param timeZoneId\n   * @param options The options parameters.\n   */\n  get(\n    locationName: string,\n    timeZoneId: string,\n    options?: TimeZonesGetOptionalParams\n  ): Promise<TimeZonesGetResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, timeZoneId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: TimeZonesListByLocationNextOptionalParams\n  ): Promise<TimeZonesListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/timeZones\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TimeZoneListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/timeZones/{timeZoneId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TimeZone\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.timeZoneId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TimeZoneListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { VirtualClusters } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualCluster,\n  VirtualClustersListNextOptionalParams,\n  VirtualClustersListOptionalParams,\n  VirtualClustersListResponse,\n  VirtualClustersListByResourceGroupNextOptionalParams,\n  VirtualClustersListByResourceGroupOptionalParams,\n  VirtualClustersListByResourceGroupResponse,\n  VirtualClustersUpdateDnsServersOptionalParams,\n  VirtualClustersUpdateDnsServersResponse,\n  VirtualClustersGetOptionalParams,\n  VirtualClustersGetResponse,\n  VirtualClustersDeleteOptionalParams,\n  VirtualClusterUpdate,\n  VirtualClustersUpdateOptionalParams,\n  VirtualClustersUpdateResponse,\n  VirtualClustersListNextResponse,\n  VirtualClustersListByResourceGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualClusters operations. */\nexport class VirtualClustersImpl implements VirtualClusters {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualClusters class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all virtualClusters in the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: VirtualClustersListOptionalParams\n  ): PagedAsyncIterableIterator<VirtualCluster> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: VirtualClustersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<VirtualCluster[]> {\n    let result: VirtualClustersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: VirtualClustersListOptionalParams\n  ): AsyncIterableIterator<VirtualCluster> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of virtual clusters in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: VirtualClustersListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<VirtualCluster> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: VirtualClustersListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<VirtualCluster[]> {\n    let result: VirtualClustersListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: VirtualClustersListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<VirtualCluster> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Synchronizes the DNS server settings used by the managed instances inside the given virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param options The options parameters.\n   */\n  updateDnsServers(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    options?: VirtualClustersUpdateDnsServersOptionalParams\n  ): Promise<VirtualClustersUpdateDnsServersResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualClusterName, options },\n      updateDnsServersOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all virtualClusters in the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: VirtualClustersListOptionalParams\n  ): Promise<VirtualClustersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets a list of virtual clusters in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: VirtualClustersListByResourceGroupOptionalParams\n  ): Promise<VirtualClustersListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    options?: VirtualClustersGetOptionalParams\n  ): Promise<VirtualClustersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, virtualClusterName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    options?: VirtualClustersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, virtualClusterName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    options?: VirtualClustersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      virtualClusterName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param parameters The requested virtual cluster resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    parameters: VirtualClusterUpdate,\n    options?: VirtualClustersUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualClustersUpdateResponse>,\n      VirtualClustersUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualClustersUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, virtualClusterName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a virtual cluster.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param virtualClusterName The name of the virtual cluster.\n   * @param parameters The requested virtual cluster resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    virtualClusterName: string,\n    parameters: VirtualClusterUpdate,\n    options?: VirtualClustersUpdateOptionalParams\n  ): Promise<VirtualClustersUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      virtualClusterName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: VirtualClustersListNextOptionalParams\n  ): Promise<VirtualClustersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: VirtualClustersListByResourceGroupNextOptionalParams\n  ): Promise<VirtualClustersListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst updateDnsServersOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}/updateManagedInstanceDnsServers\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UpdateManagedInstanceDnsServersOperation\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.virtualClusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/virtualClusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualClusterListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualClusterListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualCluster\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.virtualClusterName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.virtualClusterName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/virtualClusters/{virtualClusterName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualCluster\n    },\n    201: {\n      bodyMapper: Mappers.VirtualCluster\n    },\n    202: {\n      bodyMapper: Mappers.VirtualCluster\n    },\n    204: {\n      bodyMapper: Mappers.VirtualCluster\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters71,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.virtualClusterName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualClusterListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualClusterListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { VirtualNetworkRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  VirtualNetworkRule,\n  VirtualNetworkRulesListByServerNextOptionalParams,\n  VirtualNetworkRulesListByServerOptionalParams,\n  VirtualNetworkRulesListByServerResponse,\n  VirtualNetworkRulesGetOptionalParams,\n  VirtualNetworkRulesGetResponse,\n  VirtualNetworkRulesCreateOrUpdateOptionalParams,\n  VirtualNetworkRulesCreateOrUpdateResponse,\n  VirtualNetworkRulesDeleteOptionalParams,\n  VirtualNetworkRulesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing VirtualNetworkRules operations. */\nexport class VirtualNetworkRulesImpl implements VirtualNetworkRules {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class VirtualNetworkRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of virtual network rules in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: VirtualNetworkRulesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<VirtualNetworkRule> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: VirtualNetworkRulesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<VirtualNetworkRule[]> {\n    let result: VirtualNetworkRulesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: VirtualNetworkRulesListByServerOptionalParams\n  ): AsyncIterableIterator<VirtualNetworkRule> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a virtual network rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param virtualNetworkRuleName The name of the virtual network rule.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    virtualNetworkRuleName: string,\n    options?: VirtualNetworkRulesGetOptionalParams\n  ): Promise<VirtualNetworkRulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, virtualNetworkRuleName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates an existing virtual network rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param virtualNetworkRuleName The name of the virtual network rule.\n   * @param parameters The requested virtual Network Rule Resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    virtualNetworkRuleName: string,\n    parameters: VirtualNetworkRule,\n    options?: VirtualNetworkRulesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<VirtualNetworkRulesCreateOrUpdateResponse>,\n      VirtualNetworkRulesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<VirtualNetworkRulesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        virtualNetworkRuleName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates an existing virtual network rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param virtualNetworkRuleName The name of the virtual network rule.\n   * @param parameters The requested virtual Network Rule Resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    virtualNetworkRuleName: string,\n    parameters: VirtualNetworkRule,\n    options?: VirtualNetworkRulesCreateOrUpdateOptionalParams\n  ): Promise<VirtualNetworkRulesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      virtualNetworkRuleName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes the virtual network rule with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param virtualNetworkRuleName The name of the virtual network rule.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    virtualNetworkRuleName: string,\n    options?: VirtualNetworkRulesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, virtualNetworkRuleName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes the virtual network rule with the given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param virtualNetworkRuleName The name of the virtual network rule.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    virtualNetworkRuleName: string,\n    options?: VirtualNetworkRulesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      virtualNetworkRuleName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of virtual network rules in a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: VirtualNetworkRulesListByServerOptionalParams\n  ): Promise<VirtualNetworkRulesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: VirtualNetworkRulesListByServerNextOptionalParams\n  ): Promise<VirtualNetworkRulesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualNetworkRule\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.virtualNetworkRuleName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualNetworkRule\n    },\n    201: {\n      bodyMapper: Mappers.VirtualNetworkRule\n    },\n    202: {\n      bodyMapper: Mappers.VirtualNetworkRule\n    },\n    204: {\n      bodyMapper: Mappers.VirtualNetworkRule\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters72,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.virtualNetworkRuleName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules/{virtualNetworkRuleName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.virtualNetworkRuleName\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/virtualNetworkRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualNetworkRuleListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.VirtualNetworkRuleListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { WorkloadClassifiers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkloadClassifier,\n  WorkloadClassifiersListByWorkloadGroupNextOptionalParams,\n  WorkloadClassifiersListByWorkloadGroupOptionalParams,\n  WorkloadClassifiersListByWorkloadGroupResponse,\n  WorkloadClassifiersGetOptionalParams,\n  WorkloadClassifiersGetResponse,\n  WorkloadClassifiersCreateOrUpdateOptionalParams,\n  WorkloadClassifiersCreateOrUpdateResponse,\n  WorkloadClassifiersDeleteOptionalParams,\n  WorkloadClassifiersListByWorkloadGroupNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkloadClassifiers operations. */\nexport class WorkloadClassifiersImpl implements WorkloadClassifiers {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkloadClassifiers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of workload classifiers for a workload group\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifiers from.\n   * @param options The options parameters.\n   */\n  public listByWorkloadGroup(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadClassifiersListByWorkloadGroupOptionalParams\n  ): PagedAsyncIterableIterator<WorkloadClassifier> {\n    const iter = this.listByWorkloadGroupPagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByWorkloadGroupPagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          workloadGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByWorkloadGroupPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadClassifiersListByWorkloadGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<WorkloadClassifier[]> {\n    let result: WorkloadClassifiersListByWorkloadGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByWorkloadGroup(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByWorkloadGroupNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByWorkloadGroupPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadClassifiersListByWorkloadGroupOptionalParams\n  ): AsyncIterableIterator<WorkloadClassifier> {\n    for await (const page of this.listByWorkloadGroupPagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a workload classifier\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifier from.\n   * @param workloadClassifierName The name of the workload classifier.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: WorkloadClassifiersGetOptionalParams\n  ): Promise<WorkloadClassifiersGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        workloadClassifierName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workload classifier.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifier from.\n   * @param workloadClassifierName The name of the workload classifier to create/update.\n   * @param parameters The properties of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    parameters: WorkloadClassifier,\n    options?: WorkloadClassifiersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkloadClassifiersCreateOrUpdateResponse>,\n      WorkloadClassifiersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkloadClassifiersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        workloadClassifierName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a workload classifier.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifier from.\n   * @param workloadClassifierName The name of the workload classifier to create/update.\n   * @param parameters The properties of the workload classifier.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    parameters: WorkloadClassifier,\n    options?: WorkloadClassifiersCreateOrUpdateOptionalParams\n  ): Promise<WorkloadClassifiersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      workloadClassifierName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workload classifier.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifier from.\n   * @param workloadClassifierName The name of the workload classifier to delete.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: WorkloadClassifiersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        workloadClassifierName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a workload classifier.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifier from.\n   * @param workloadClassifierName The name of the workload classifier to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    workloadClassifierName: string,\n    options?: WorkloadClassifiersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      workloadClassifierName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the list of workload classifiers for a workload group\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifiers from.\n   * @param options The options parameters.\n   */\n  private _listByWorkloadGroup(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadClassifiersListByWorkloadGroupOptionalParams\n  ): Promise<WorkloadClassifiersListByWorkloadGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        options\n      },\n      listByWorkloadGroupOperationSpec\n    );\n  }\n\n  /**\n   * ListByWorkloadGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group from which to receive the classifiers from.\n   * @param nextLink The nextLink from the previous successful call to the ListByWorkloadGroup method.\n   * @param options The options parameters.\n   */\n  private _listByWorkloadGroupNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    nextLink: string,\n    options?: WorkloadClassifiersListByWorkloadGroupNextOptionalParams\n  ): Promise<WorkloadClassifiersListByWorkloadGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        nextLink,\n        options\n      },\n      listByWorkloadGroupNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    201: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    202: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    204: {\n      bodyMapper: Mappers.WorkloadClassifier\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters73,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}/workloadClassifiers/{workloadClassifierName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName,\n    Parameters.workloadClassifierName\n  ],\n  serializer\n};\nconst listByWorkloadGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}/workloadClassifiers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifierListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByWorkloadGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadClassifierListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { WorkloadGroups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  WorkloadGroup,\n  WorkloadGroupsListByDatabaseNextOptionalParams,\n  WorkloadGroupsListByDatabaseOptionalParams,\n  WorkloadGroupsListByDatabaseResponse,\n  WorkloadGroupsGetOptionalParams,\n  WorkloadGroupsGetResponse,\n  WorkloadGroupsCreateOrUpdateOptionalParams,\n  WorkloadGroupsCreateOrUpdateResponse,\n  WorkloadGroupsDeleteOptionalParams,\n  WorkloadGroupsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing WorkloadGroups operations. */\nexport class WorkloadGroupsImpl implements WorkloadGroups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class WorkloadGroups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets the list of workload groups\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: WorkloadGroupsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<WorkloadGroup> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: WorkloadGroupsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<WorkloadGroup[]> {\n    let result: WorkloadGroupsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: WorkloadGroupsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<WorkloadGroup> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a workload group\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadGroupsGetOptionalParams\n  ): Promise<WorkloadGroupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a workload group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group.\n   * @param parameters The requested workload group state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    parameters: WorkloadGroup,\n    options?: WorkloadGroupsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<WorkloadGroupsCreateOrUpdateResponse>,\n      WorkloadGroupsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<WorkloadGroupsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a workload group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group.\n   * @param parameters The requested workload group state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    parameters: WorkloadGroup,\n    options?: WorkloadGroupsCreateOrUpdateOptionalParams\n  ): Promise<WorkloadGroupsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a workload group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group to delete.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadGroupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        workloadGroupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a workload group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param workloadGroupName The name of the workload group to delete.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    workloadGroupName: string,\n    options?: WorkloadGroupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      workloadGroupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets the list of workload groups\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: WorkloadGroupsListByDatabaseOptionalParams\n  ): Promise<WorkloadGroupsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: WorkloadGroupsListByDatabaseNextOptionalParams\n  ): Promise<WorkloadGroupsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    201: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    202: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    204: {\n      bodyMapper: Mappers.WorkloadGroup\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters74,\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups/{workloadGroupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.workloadGroupName\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/workloadGroups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroupListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion2],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.WorkloadGroupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { TransparentDataEncryptions } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  LogicalDatabaseTransparentDataEncryption,\n  TransparentDataEncryptionsListByDatabaseNextOptionalParams,\n  TransparentDataEncryptionsListByDatabaseOptionalParams,\n  TransparentDataEncryptionsListByDatabaseResponse,\n  TransparentDataEncryptionName,\n  TransparentDataEncryptionsGetOptionalParams,\n  TransparentDataEncryptionsGetResponse,\n  TransparentDataEncryptionsCreateOrUpdateOptionalParams,\n  TransparentDataEncryptionsCreateOrUpdateResponse,\n  TransparentDataEncryptionsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing TransparentDataEncryptions operations. */\nexport class TransparentDataEncryptionsImpl\n  implements TransparentDataEncryptions {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class TransparentDataEncryptions class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of the logical database's transparent data encryption.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the logical database for which the transparent data encryption is\n   *                     defined.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: TransparentDataEncryptionsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<LogicalDatabaseTransparentDataEncryption> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: TransparentDataEncryptionsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LogicalDatabaseTransparentDataEncryption[]> {\n    let result: TransparentDataEncryptionsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: TransparentDataEncryptionsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<LogicalDatabaseTransparentDataEncryption> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a logical database's transparent data encryption.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the logical database for which the transparent data encryption is\n   *                     defined.\n   * @param tdeName The name of the transparent data encryption configuration.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    tdeName: TransparentDataEncryptionName,\n    options?: TransparentDataEncryptionsGetOptionalParams\n  ): Promise<TransparentDataEncryptionsGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, tdeName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a logical database's transparent data encryption configuration.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the logical database for which the security alert policy is defined.\n   * @param tdeName The name of the transparent data encryption configuration.\n   * @param parameters The database transparent data encryption.\n   * @param options The options parameters.\n   */\n  createOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    tdeName: TransparentDataEncryptionName,\n    parameters: LogicalDatabaseTransparentDataEncryption,\n    options?: TransparentDataEncryptionsCreateOrUpdateOptionalParams\n  ): Promise<TransparentDataEncryptionsCreateOrUpdateResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        tdeName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of the logical database's transparent data encryption.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the logical database for which the transparent data encryption is\n   *                     defined.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: TransparentDataEncryptionsListByDatabaseOptionalParams\n  ): Promise<TransparentDataEncryptionsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the logical database for which the transparent data encryption is\n   *                     defined.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: TransparentDataEncryptionsListByDatabaseNextOptionalParams\n  ): Promise<TransparentDataEncryptionsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{tdeName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalDatabaseTransparentDataEncryption\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.tdeName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption/{tdeName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalDatabaseTransparentDataEncryption\n    },\n    201: {\n      bodyMapper: Mappers.LogicalDatabaseTransparentDataEncryption\n    },\n    202: {},\n    default: {}\n  },\n  requestBody: Parameters.parameters75,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.tdeName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/transparentDataEncryption\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalDatabaseTransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LogicalDatabaseTransparentDataEncryptionListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { BackupShortTermRetentionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  BackupShortTermRetentionPolicy,\n  BackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams,\n  BackupShortTermRetentionPoliciesListByDatabaseOptionalParams,\n  BackupShortTermRetentionPoliciesListByDatabaseResponse,\n  ShortTermRetentionPolicyName,\n  BackupShortTermRetentionPoliciesGetOptionalParams,\n  BackupShortTermRetentionPoliciesGetResponse,\n  BackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams,\n  BackupShortTermRetentionPoliciesCreateOrUpdateResponse,\n  BackupShortTermRetentionPoliciesUpdateOptionalParams,\n  BackupShortTermRetentionPoliciesUpdateResponse,\n  BackupShortTermRetentionPoliciesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing BackupShortTermRetentionPolicies operations. */\nexport class BackupShortTermRetentionPoliciesImpl\n  implements BackupShortTermRetentionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class BackupShortTermRetentionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: BackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<BackupShortTermRetentionPolicy> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: BackupShortTermRetentionPoliciesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<BackupShortTermRetentionPolicy[]> {\n    let result: BackupShortTermRetentionPoliciesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: BackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<BackupShortTermRetentionPolicy> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: ShortTermRetentionPolicyName,\n    options?: BackupShortTermRetentionPoliciesGetOptionalParams\n  ): Promise<BackupShortTermRetentionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, policyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: ShortTermRetentionPolicyName,\n    parameters: BackupShortTermRetentionPolicy,\n    options?: BackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<\n        BackupShortTermRetentionPoliciesCreateOrUpdateResponse\n      >,\n      BackupShortTermRetentionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BackupShortTermRetentionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: ShortTermRetentionPolicyName,\n    parameters: BackupShortTermRetentionPolicy,\n    options?: BackupShortTermRetentionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<BackupShortTermRetentionPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: ShortTermRetentionPolicyName,\n    parameters: BackupShortTermRetentionPolicy,\n    options?: BackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<BackupShortTermRetentionPoliciesUpdateResponse>,\n      BackupShortTermRetentionPoliciesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<BackupShortTermRetentionPoliciesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        policyName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param policyName The policy name. Should always be \"default\".\n   * @param parameters The short term retention policy info.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    policyName: ShortTermRetentionPolicyName,\n    parameters: BackupShortTermRetentionPolicy,\n    options?: BackupShortTermRetentionPoliciesUpdateOptionalParams\n  ): Promise<BackupShortTermRetentionPoliciesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      policyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a database's short term retention policy.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: BackupShortTermRetentionPoliciesListByDatabaseOptionalParams\n  ): Promise<BackupShortTermRetentionPoliciesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: BackupShortTermRetentionPoliciesListByDatabaseNextOptionalParams\n  ): Promise<BackupShortTermRetentionPoliciesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.policyName3\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters76,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.policyName3\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies/{policyName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters76,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.policyName3\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/backupShortTermRetentionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.BackupShortTermRetentionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseExtensionsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ImportExportExtensionsOperationResult,\n  DatabaseExtensionsListByDatabaseNextOptionalParams,\n  DatabaseExtensionsListByDatabaseOptionalParams,\n  DatabaseExtensionsListByDatabaseResponse,\n  DatabaseExtensionsGetOptionalParams,\n  DatabaseExtensions,\n  DatabaseExtensionsCreateOrUpdateOptionalParams,\n  DatabaseExtensionsCreateOrUpdateResponse,\n  DatabaseExtensionsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseExtensionsOperations operations. */\nexport class DatabaseExtensionsOperationsImpl\n  implements DatabaseExtensionsOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseExtensionsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * List database extension. This will return an empty list as it is not supported.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseExtensionsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ImportExportExtensionsOperationResult> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseExtensionsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ImportExportExtensionsOperationResult[]> {\n    let result: DatabaseExtensionsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseExtensionsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ImportExportExtensionsOperationResult> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a database extension. This will return resource not found as it is not supported.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param extensionName\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    extensionName: string,\n    options?: DatabaseExtensionsGetOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, extensionName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Perform a database extension operation, like polybase import\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param extensionName\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    extensionName: string,\n    parameters: DatabaseExtensions,\n    options?: DatabaseExtensionsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<DatabaseExtensionsCreateOrUpdateResponse>,\n      DatabaseExtensionsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<DatabaseExtensionsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        extensionName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Perform a database extension operation, like polybase import\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param extensionName\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    extensionName: string,\n    parameters: DatabaseExtensions,\n    options?: DatabaseExtensionsCreateOrUpdateOptionalParams\n  ): Promise<DatabaseExtensionsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      extensionName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * List database extension. This will return an empty list as it is not supported.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseExtensionsListByDatabaseOptionalParams\n  ): Promise<DatabaseExtensionsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseExtensionsListByDatabaseNextOptionalParams\n  ): Promise<DatabaseExtensionsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}\",\n  httpMethod: \"GET\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.extensionName\n  ],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions/{extensionName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters77,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.extensionName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/extensions\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportExtensionsOperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseOperation,\n  DatabaseOperationsListByDatabaseNextOptionalParams,\n  DatabaseOperationsListByDatabaseOptionalParams,\n  DatabaseOperationsListByDatabaseResponse,\n  DatabaseOperationsCancelOptionalParams,\n  DatabaseOperationsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseOperations operations. */\nexport class DatabaseOperationsImpl implements DatabaseOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of operations performed on the database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseOperationsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseOperation> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseOperationsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseOperation[]> {\n    let result: DatabaseOperationsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseOperationsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseOperation> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Cancels the asynchronous operation on the database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param operationId The operation identifier.\n   * @param options The options parameters.\n   */\n  cancel(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    operationId: string,\n    options?: DatabaseOperationsCancelOptionalParams\n  ): Promise<void> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, operationId, options },\n      cancelOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of operations performed on the database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseOperationsListByDatabaseOptionalParams\n  ): Promise<DatabaseOperationsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseOperationsListByDatabaseNextOptionalParams\n  ): Promise<DatabaseOperationsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst cancelOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/operations/{operationId}/cancel\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, default: {} },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.operationId\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/operations\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseOperationListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseOperationListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { DatabaseUsages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  DatabaseUsage,\n  DatabaseUsagesListByDatabaseNextOptionalParams,\n  DatabaseUsagesListByDatabaseOptionalParams,\n  DatabaseUsagesListByDatabaseResponse,\n  DatabaseUsagesListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing DatabaseUsages operations. */\nexport class DatabaseUsagesImpl implements DatabaseUsages {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class DatabaseUsages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets database usages.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseUsagesListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<DatabaseUsage> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseUsagesListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<DatabaseUsage[]> {\n    let result: DatabaseUsagesListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseUsagesListByDatabaseOptionalParams\n  ): AsyncIterableIterator<DatabaseUsage> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets database usages.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: DatabaseUsagesListByDatabaseOptionalParams\n  ): Promise<DatabaseUsagesListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: DatabaseUsagesListByDatabaseNextOptionalParams\n  ): Promise<DatabaseUsagesListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseUsageListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.DatabaseUsageListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { LedgerDigestUploadsOperations } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  LedgerDigestUploads,\n  LedgerDigestUploadsListByDatabaseNextOptionalParams,\n  LedgerDigestUploadsListByDatabaseOptionalParams,\n  LedgerDigestUploadsListByDatabaseResponse,\n  LedgerDigestUploadsName,\n  LedgerDigestUploadsGetOptionalParams,\n  LedgerDigestUploadsGetResponse,\n  LedgerDigestUploadsCreateOrUpdateOptionalParams,\n  LedgerDigestUploadsCreateOrUpdateResponse,\n  LedgerDigestUploadsDisableOptionalParams,\n  LedgerDigestUploadsDisableResponse,\n  LedgerDigestUploadsListByDatabaseNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LedgerDigestUploadsOperations operations. */\nexport class LedgerDigestUploadsOperationsImpl\n  implements LedgerDigestUploadsOperations {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class LedgerDigestUploadsOperations class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all ledger digest upload settings on a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LedgerDigestUploadsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<LedgerDigestUploads> {\n    const iter = this.listByDatabasePagingAll(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          resourceGroupName,\n          serverName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LedgerDigestUploadsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LedgerDigestUploads[]> {\n    let result: LedgerDigestUploadsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        resourceGroupName,\n        serverName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LedgerDigestUploadsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<LedgerDigestUploads> {\n    for await (const page of this.listByDatabasePagingPage(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets the current ledger digest upload configuration for a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param ledgerDigestUploads\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    ledgerDigestUploads: LedgerDigestUploadsName,\n    options?: LedgerDigestUploadsGetOptionalParams\n  ): Promise<LedgerDigestUploadsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        ledgerDigestUploads,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param ledgerDigestUploads\n   * @param parameters Azure SQL Database ledger digest upload settings.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    ledgerDigestUploads: LedgerDigestUploadsName,\n    parameters: LedgerDigestUploads,\n    options?: LedgerDigestUploadsCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LedgerDigestUploadsCreateOrUpdateResponse>,\n      LedgerDigestUploadsCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LedgerDigestUploadsCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        ledgerDigestUploads,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Enables upload ledger digests to an Azure Storage account or an Azure Confidential Ledger instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param ledgerDigestUploads\n   * @param parameters Azure SQL Database ledger digest upload settings.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    ledgerDigestUploads: LedgerDigestUploadsName,\n    parameters: LedgerDigestUploads,\n    options?: LedgerDigestUploadsCreateOrUpdateOptionalParams\n  ): Promise<LedgerDigestUploadsCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      ledgerDigestUploads,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all ledger digest upload settings on a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    options?: LedgerDigestUploadsListByDatabaseOptionalParams\n  ): Promise<LedgerDigestUploadsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger\n   * instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param ledgerDigestUploads\n   * @param options The options parameters.\n   */\n  async beginDisable(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    ledgerDigestUploads: LedgerDigestUploadsName,\n    options?: LedgerDigestUploadsDisableOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LedgerDigestUploadsDisableResponse>,\n      LedgerDigestUploadsDisableResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LedgerDigestUploadsDisableResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        databaseName,\n        ledgerDigestUploads,\n        options\n      },\n      disableOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Disables uploading ledger digests to an Azure Storage account or an Azure Confidential Ledger\n   * instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param ledgerDigestUploads\n   * @param options The options parameters.\n   */\n  async beginDisableAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    ledgerDigestUploads: LedgerDigestUploadsName,\n    options?: LedgerDigestUploadsDisableOptionalParams\n  ): Promise<LedgerDigestUploadsDisableResponse> {\n    const poller = await this.beginDisable(\n      resourceGroupName,\n      serverName,\n      databaseName,\n      ledgerDigestUploads,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param databaseName The name of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    resourceGroupName: string,\n    serverName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: LedgerDigestUploadsListByDatabaseNextOptionalParams\n  ): Promise<LedgerDigestUploadsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/ledgerDigestUploads/{ledgerDigestUploads}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.ledgerDigestUploads\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/ledgerDigestUploads/{ledgerDigestUploads}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    201: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    202: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    204: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters78,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.ledgerDigestUploads\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/ledgerDigestUploads\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LedgerDigestUploadsListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst disableOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/databases/{databaseName}/ledgerDigestUploads/{ledgerDigestUploads}/disable\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    201: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    202: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    204: {\n      bodyMapper: Mappers.LedgerDigestUploads\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.ledgerDigestUploads\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LedgerDigestUploadsListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.databaseName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { OutboundFirewallRules } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  OutboundFirewallRule,\n  OutboundFirewallRulesListByServerNextOptionalParams,\n  OutboundFirewallRulesListByServerOptionalParams,\n  OutboundFirewallRulesListByServerResponse,\n  OutboundFirewallRulesGetOptionalParams,\n  OutboundFirewallRulesGetResponse,\n  OutboundFirewallRulesCreateOrUpdateOptionalParams,\n  OutboundFirewallRulesCreateOrUpdateResponse,\n  OutboundFirewallRulesDeleteOptionalParams,\n  OutboundFirewallRulesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing OutboundFirewallRules operations. */\nexport class OutboundFirewallRulesImpl implements OutboundFirewallRules {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class OutboundFirewallRules class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all outbound firewall rules on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: OutboundFirewallRulesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<OutboundFirewallRule> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: OutboundFirewallRulesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<OutboundFirewallRule[]> {\n    let result: OutboundFirewallRulesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: OutboundFirewallRulesListByServerOptionalParams\n  ): AsyncIterableIterator<OutboundFirewallRule> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets an outbound firewall rule.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param outboundRuleFqdn\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    outboundRuleFqdn: string,\n    options?: OutboundFirewallRulesGetOptionalParams\n  ): Promise<OutboundFirewallRulesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, outboundRuleFqdn, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Create a outbound firewall rule with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param outboundRuleFqdn\n   * @param parameters An Azure SQL DB Server Outbound Firewall Rule.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    outboundRuleFqdn: string,\n    parameters: OutboundFirewallRule,\n    options?: OutboundFirewallRulesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<OutboundFirewallRulesCreateOrUpdateResponse>,\n      OutboundFirewallRulesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<OutboundFirewallRulesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, outboundRuleFqdn, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Create a outbound firewall rule with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param outboundRuleFqdn\n   * @param parameters An Azure SQL DB Server Outbound Firewall Rule.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    outboundRuleFqdn: string,\n    parameters: OutboundFirewallRule,\n    options?: OutboundFirewallRulesCreateOrUpdateOptionalParams\n  ): Promise<OutboundFirewallRulesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      outboundRuleFqdn,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a outbound firewall rule with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param outboundRuleFqdn\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    outboundRuleFqdn: string,\n    options?: OutboundFirewallRulesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, outboundRuleFqdn, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a outbound firewall rule with a given name.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param outboundRuleFqdn\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    outboundRuleFqdn: string,\n    options?: OutboundFirewallRulesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      outboundRuleFqdn,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets all outbound firewall rules on a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: OutboundFirewallRulesListByServerOptionalParams\n  ): Promise<OutboundFirewallRulesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: OutboundFirewallRulesListByServerNextOptionalParams\n  ): Promise<OutboundFirewallRulesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules/{outboundRuleFqdn}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutboundFirewallRule\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.outboundRuleFqdn\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules/{outboundRuleFqdn}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutboundFirewallRule\n    },\n    201: {\n      bodyMapper: Mappers.OutboundFirewallRule\n    },\n    202: {\n      bodyMapper: Mappers.OutboundFirewallRule\n    },\n    204: {\n      bodyMapper: Mappers.OutboundFirewallRule\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters79,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.outboundRuleFqdn\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules/{outboundRuleFqdn}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.outboundRuleFqdn\n  ],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/outboundFirewallRules\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutboundFirewallRuleListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.OutboundFirewallRuleListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Servers } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  Server,\n  ServersListByResourceGroupNextOptionalParams,\n  ServersListByResourceGroupOptionalParams,\n  ServersListByResourceGroupResponse,\n  ServersListNextOptionalParams,\n  ServersListOptionalParams,\n  ServersListResponse,\n  ServersGetOptionalParams,\n  ServersGetResponse,\n  ServersCreateOrUpdateOptionalParams,\n  ServersCreateOrUpdateResponse,\n  ServersDeleteOptionalParams,\n  ServerUpdate,\n  ServersUpdateOptionalParams,\n  ServersUpdateResponse,\n  ImportNewDatabaseDefinition,\n  ServersImportDatabaseOptionalParams,\n  ServersImportDatabaseResponse,\n  CheckNameAvailabilityRequest,\n  ServersCheckNameAvailabilityOptionalParams,\n  ServersCheckNameAvailabilityResponse,\n  ServersListByResourceGroupNextResponse,\n  ServersListNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Servers operations. */\nexport class ServersImpl implements Servers {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Servers class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of servers in a resource groups.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ServersListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<Server> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ServersListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Server[]> {\n    let result: ServersListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ServersListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<Server> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all servers in the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ServersListOptionalParams\n  ): PagedAsyncIterableIterator<Server> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ServersListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Server[]> {\n    let result: ServersListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ServersListOptionalParams\n  ): AsyncIterableIterator<Server> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of servers in a resource groups.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ServersListByResourceGroupOptionalParams\n  ): Promise<ServersListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServersGetOptionalParams\n  ): Promise<ServersGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested server resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: Server,\n    options?: ServersCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServersCreateOrUpdateResponse>,\n      ServersCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServersCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested server resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: Server,\n    options?: ServersCreateOrUpdateOptionalParams\n  ): Promise<ServersCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServersDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServersDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested server resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ServerUpdate,\n    options?: ServersUpdateOptionalParams\n  ): Promise<\n    PollerLike<PollOperationState<ServersUpdateResponse>, ServersUpdateResponse>\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServersUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The requested server resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ServerUpdate,\n    options?: ServersUpdateOptionalParams\n  ): Promise<ServersUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a list of all servers in the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ServersListOptionalParams\n  ): Promise<ServersListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Imports a bacpac into a new database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginImportDatabase(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ImportNewDatabaseDefinition,\n    options?: ServersImportDatabaseOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServersImportDatabaseResponse>,\n      ServersImportDatabaseResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServersImportDatabaseResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, serverName, parameters, options },\n      importDatabaseOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Imports a bacpac into a new database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param parameters The database import request parameters.\n   * @param options The options parameters.\n   */\n  async beginImportDatabaseAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    parameters: ImportNewDatabaseDefinition,\n    options?: ServersImportDatabaseOptionalParams\n  ): Promise<ServersImportDatabaseResponse> {\n    const poller = await this.beginImportDatabase(\n      resourceGroupName,\n      serverName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Determines whether a resource can be created with the specified name.\n   * @param parameters The name availability request parameters.\n   * @param options The options parameters.\n   */\n  checkNameAvailability(\n    parameters: CheckNameAvailabilityRequest,\n    options?: ServersCheckNameAvailabilityOptionalParams\n  ): Promise<ServersCheckNameAvailabilityResponse> {\n    return this.client.sendOperationRequest(\n      { parameters, options },\n      checkNameAvailabilityOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ServersListByResourceGroupNextOptionalParams\n  ): Promise<ServersListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ServersListNextOptionalParams\n  ): Promise<ServersListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Server\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Server\n    },\n    201: {\n      bodyMapper: Mappers.Server\n    },\n    202: {\n      bodyMapper: Mappers.Server\n    },\n    204: {\n      bodyMapper: Mappers.Server\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters80,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.Server\n    },\n    201: {\n      bodyMapper: Mappers.Server\n    },\n    202: {\n      bodyMapper: Mappers.Server\n    },\n    204: {\n      bodyMapper: Mappers.Server\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters81,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path: \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/servers\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst importDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/import\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.ImportExportOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters82,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst checkNameAvailabilityOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/checkNameAvailability\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.CheckNameAvailabilityResponse\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters83,\n  queryParameters: [Parameters.apiVersion3],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { Usages } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  Usage,\n  UsagesListByInstancePoolNextOptionalParams,\n  UsagesListByInstancePoolOptionalParams,\n  UsagesListByInstancePoolResponse,\n  UsagesListByInstancePoolNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing Usages operations. */\nexport class UsagesImpl implements Usages {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class Usages class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets all instance pool usage metrics\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be retrieved.\n   * @param options The options parameters.\n   */\n  public listByInstancePool(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: UsagesListByInstancePoolOptionalParams\n  ): PagedAsyncIterableIterator<Usage> {\n    const iter = this.listByInstancePoolPagingAll(\n      resourceGroupName,\n      instancePoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePoolPagingPage(\n          resourceGroupName,\n          instancePoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePoolPagingPage(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: UsagesListByInstancePoolOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<Usage[]> {\n    let result: UsagesListByInstancePoolResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstancePool(\n        resourceGroupName,\n        instancePoolName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstancePoolNext(\n        resourceGroupName,\n        instancePoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePoolPagingAll(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: UsagesListByInstancePoolOptionalParams\n  ): AsyncIterableIterator<Usage> {\n    for await (const page of this.listByInstancePoolPagingPage(\n      resourceGroupName,\n      instancePoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets all instance pool usage metrics\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be retrieved.\n   * @param options The options parameters.\n   */\n  private _listByInstancePool(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: UsagesListByInstancePoolOptionalParams\n  ): Promise<UsagesListByInstancePoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, instancePoolName, options },\n      listByInstancePoolOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstancePoolNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The name of the instance pool to be retrieved.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstancePool method.\n   * @param options The options parameters.\n   */\n  private _listByInstancePoolNext(\n    resourceGroupName: string,\n    instancePoolName: string,\n    nextLink: string,\n    options?: UsagesListByInstancePoolNextOptionalParams\n  ): Promise<UsagesListByInstancePoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, instancePoolName, nextLink, options },\n      listByInstancePoolNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstancePoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}/usages\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion3, Parameters.expandChildren],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstancePoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.UsageListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { LongTermRetentionBackups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  LongTermRetentionBackup,\n  LongTermRetentionBackupsListByDatabaseNextOptionalParams,\n  LongTermRetentionBackupsListByDatabaseOptionalParams,\n  LongTermRetentionBackupsListByDatabaseResponse,\n  LongTermRetentionBackupsListByLocationNextOptionalParams,\n  LongTermRetentionBackupsListByLocationOptionalParams,\n  LongTermRetentionBackupsListByLocationResponse,\n  LongTermRetentionBackupsListByServerNextOptionalParams,\n  LongTermRetentionBackupsListByServerOptionalParams,\n  LongTermRetentionBackupsListByServerResponse,\n  LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupDatabaseResponse,\n  LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupLocationOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupLocationResponse,\n  LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupServerOptionalParams,\n  LongTermRetentionBackupsListByResourceGroupServerResponse,\n  CopyLongTermRetentionBackupParameters,\n  LongTermRetentionBackupsCopyOptionalParams,\n  LongTermRetentionBackupsCopyResponse,\n  UpdateLongTermRetentionBackupParameters,\n  LongTermRetentionBackupsUpdateOptionalParams,\n  LongTermRetentionBackupsUpdateResponse,\n  LongTermRetentionBackupsGetOptionalParams,\n  LongTermRetentionBackupsGetResponse,\n  LongTermRetentionBackupsDeleteOptionalParams,\n  LongTermRetentionBackupsCopyByResourceGroupOptionalParams,\n  LongTermRetentionBackupsCopyByResourceGroupResponse,\n  LongTermRetentionBackupsUpdateByResourceGroupOptionalParams,\n  LongTermRetentionBackupsUpdateByResourceGroupResponse,\n  LongTermRetentionBackupsGetByResourceGroupOptionalParams,\n  LongTermRetentionBackupsGetByResourceGroupResponse,\n  LongTermRetentionBackupsDeleteByResourceGroupOptionalParams,\n  LongTermRetentionBackupsListByDatabaseNextResponse,\n  LongTermRetentionBackupsListByLocationNextResponse,\n  LongTermRetentionBackupsListByServerNextResponse,\n  LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse,\n  LongTermRetentionBackupsListByResourceGroupLocationNextResponse,\n  LongTermRetentionBackupsListByResourceGroupServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LongTermRetentionBackups operations. */\nexport class LongTermRetentionBackupsImpl implements LongTermRetentionBackups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class LongTermRetentionBackups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all long term retention backups for a database.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByDatabasePagingAll(\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          locationName,\n          longTermRetentionServerName,\n          longTermRetentionDatabaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByDatabasePagingPage(\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given location.\n   * @param locationName The location of the database\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: LongTermRetentionBackupsListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: LongTermRetentionBackupsListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: LongTermRetentionBackupsListByLocationOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given server.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param options The options parameters.\n   */\n  public listByServer(\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByServerOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByServerPagingAll(\n      locationName,\n      longTermRetentionServerName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          locationName,\n          longTermRetentionServerName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(\n        locationName,\n        longTermRetentionServerName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        locationName,\n        longTermRetentionServerName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByServerOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByServerPagingPage(\n      locationName,\n      longTermRetentionServerName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all long term retention backups for a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param options The options parameters.\n   */\n  public listByResourceGroupDatabase(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByResourceGroupDatabasePagingAll(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupDatabasePagingPage(\n          resourceGroupName,\n          locationName,\n          longTermRetentionServerName,\n          longTermRetentionDatabaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupDatabasePagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByResourceGroupDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupDatabase(\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupDatabaseNext(\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupDatabasePagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupDatabasePagingPage(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param options The options parameters.\n   */\n  public listByResourceGroupLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupLocationOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByResourceGroupLocationPagingAll(\n      resourceGroupName,\n      locationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupLocationPagingPage(\n          resourceGroupName,\n          locationName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupLocationPagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByResourceGroupLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupLocation(\n        resourceGroupName,\n        locationName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupLocationNext(\n        resourceGroupName,\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupLocationPagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupLocationOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupLocationPagingPage(\n      resourceGroupName,\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param options The options parameters.\n   */\n  public listByResourceGroupServer(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupServerOptionalParams\n  ): PagedAsyncIterableIterator<LongTermRetentionBackup> {\n    const iter = this.listByResourceGroupServerPagingAll(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupServerPagingPage(\n          resourceGroupName,\n          locationName,\n          longTermRetentionServerName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupServerPagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<LongTermRetentionBackup[]> {\n    let result: LongTermRetentionBackupsListByResourceGroupServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupServer(\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupServerNext(\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupServerPagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupServerOptionalParams\n  ): AsyncIterableIterator<LongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupServerPagingPage(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Copy an existing long term retention backup.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The parameters needed for long term retention copy request\n   * @param options The options parameters.\n   */\n  async beginCopy(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: CopyLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsCopyOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LongTermRetentionBackupsCopyResponse>,\n      LongTermRetentionBackupsCopyResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LongTermRetentionBackupsCopyResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        parameters,\n        options\n      },\n      copyOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Copy an existing long term retention backup.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The parameters needed for long term retention copy request\n   * @param options The options parameters.\n   */\n  async beginCopyAndWait(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: CopyLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsCopyOptionalParams\n  ): Promise<LongTermRetentionBackupsCopyResponse> {\n    const poller = await this.beginCopy(\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing long term retention backup.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The requested backup resource state\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: UpdateLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LongTermRetentionBackupsUpdateResponse>,\n      LongTermRetentionBackupsUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LongTermRetentionBackupsUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        parameters,\n        options\n      },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing long term retention backup.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The requested backup resource state\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: UpdateLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsUpdateOptionalParams\n  ): Promise<LongTermRetentionBackupsUpdateResponse> {\n    const poller = await this.beginUpdate(\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a long term retention backup.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  get(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsGetOptionalParams\n  ): Promise<LongTermRetentionBackupsGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        options\n      },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all long term retention backups for a database.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByDatabaseOptionalParams\n  ): Promise<LongTermRetentionBackupsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        options\n      },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given location.\n   * @param locationName The location of the database\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: LongTermRetentionBackupsListByLocationOptionalParams\n  ): Promise<LongTermRetentionBackupsListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given server.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByServerOptionalParams\n  ): Promise<LongTermRetentionBackupsListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, longTermRetentionServerName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Copy an existing long term retention backup to a different server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The parameters needed for long term retention copy request\n   * @param options The options parameters.\n   */\n  async beginCopyByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: CopyLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsCopyByResourceGroupOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LongTermRetentionBackupsCopyByResourceGroupResponse>,\n      LongTermRetentionBackupsCopyByResourceGroupResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LongTermRetentionBackupsCopyByResourceGroupResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        parameters,\n        options\n      },\n      copyByResourceGroupOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Copy an existing long term retention backup to a different server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The parameters needed for long term retention copy request\n   * @param options The options parameters.\n   */\n  async beginCopyByResourceGroupAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: CopyLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsCopyByResourceGroupOptionalParams\n  ): Promise<LongTermRetentionBackupsCopyByResourceGroupResponse> {\n    const poller = await this.beginCopyByResourceGroup(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates an existing long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The requested backup resource state\n   * @param options The options parameters.\n   */\n  async beginUpdateByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: UpdateLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsUpdateByResourceGroupOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<LongTermRetentionBackupsUpdateByResourceGroupResponse>,\n      LongTermRetentionBackupsUpdateByResourceGroupResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<LongTermRetentionBackupsUpdateByResourceGroupResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        parameters,\n        options\n      },\n      updateByResourceGroupOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates an existing long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param parameters The requested backup resource state\n   * @param options The options parameters.\n   */\n  async beginUpdateByResourceGroupAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    parameters: UpdateLongTermRetentionBackupParameters,\n    options?: LongTermRetentionBackupsUpdateByResourceGroupOptionalParams\n  ): Promise<LongTermRetentionBackupsUpdateByResourceGroupResponse> {\n    const poller = await this.beginUpdateByResourceGroup(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Gets a long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  getByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsGetByResourceGroupOptionalParams\n  ): Promise<LongTermRetentionBackupsGetByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        options\n      },\n      getByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsDeleteByResourceGroupOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        backupName,\n        options\n      },\n      deleteByResourceGroupOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteByResourceGroupAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    backupName: string,\n    options?: LongTermRetentionBackupsDeleteByResourceGroupOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteByResourceGroup(\n      resourceGroupName,\n      locationName,\n      longTermRetentionServerName,\n      longTermRetentionDatabaseName,\n      backupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all long term retention backups for a database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupDatabase(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupDatabaseOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        options\n      },\n      listByResourceGroupDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupLocationOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupLocationResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, options },\n      listByResourceGroupLocationOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given server.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupServer(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    options?: LongTermRetentionBackupsListByResourceGroupServerOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, longTermRetentionServerName, options },\n      listByResourceGroupServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByDatabaseNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        nextLink,\n        options\n      },\n      listByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName The location of the database\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByLocationNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    locationName: string,\n    longTermRetentionServerName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByServerNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, longTermRetentionServerName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param longTermRetentionDatabaseName The name of the database\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupDatabase\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupDatabaseNext(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    longTermRetentionDatabaseName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByResourceGroupDatabaseNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupDatabaseNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        longTermRetentionDatabaseName,\n        nextLink,\n        options\n      },\n      listByResourceGroupDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupLocationNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupLocation\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupLocationNext(\n    resourceGroupName: string,\n    locationName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByResourceGroupLocationNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupLocationNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, nextLink, options },\n      listByResourceGroupLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param longTermRetentionServerName The name of the server\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupServer\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupServerNext(\n    resourceGroupName: string,\n    locationName: string,\n    longTermRetentionServerName: string,\n    nextLink: string,\n    options?: LongTermRetentionBackupsListByResourceGroupServerNextOptionalParams\n  ): Promise<LongTermRetentionBackupsListByResourceGroupServerNextResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        longTermRetentionServerName,\n        nextLink,\n        options\n      },\n      listByResourceGroupServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst copyOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}/copy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters84,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}/update\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters85,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst copyByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}/copy\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters84,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst updateByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}/update\",\n  httpMethod: \"POST\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    201: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    202: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    204: {\n      bodyMapper: Mappers.LongTermRetentionBackupOperationResult\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters85,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst getByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups/{backupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName,\n    Parameters.backupName\n  ],\n  serializer\n};\nconst listByResourceGroupDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionDatabases/{longTermRetentionDatabaseName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionServers/{longTermRetentionServerName}/longTermRetentionBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName,\n    Parameters.longTermRetentionDatabaseName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.LongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.longTermRetentionServerName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { LongTermRetentionManagedInstanceBackups } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstanceLongTermRetentionBackup,\n  LongTermRetentionManagedInstanceBackupsListByDatabaseNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByDatabaseResponse,\n  LongTermRetentionManagedInstanceBackupsListByInstanceNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByInstanceResponse,\n  LongTermRetentionManagedInstanceBackupsListByLocationNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByLocationResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse,\n  LongTermRetentionManagedInstanceBackupsGetOptionalParams,\n  LongTermRetentionManagedInstanceBackupsGetResponse,\n  LongTermRetentionManagedInstanceBackupsDeleteOptionalParams,\n  LongTermRetentionManagedInstanceBackupsGetByResourceGroupOptionalParams,\n  LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse,\n  LongTermRetentionManagedInstanceBackupsDeleteByResourceGroupOptionalParams,\n  LongTermRetentionManagedInstanceBackupsListByDatabaseNextResponse,\n  LongTermRetentionManagedInstanceBackupsListByInstanceNextResponse,\n  LongTermRetentionManagedInstanceBackupsListByLocationNextResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextResponse,\n  LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing LongTermRetentionManagedInstanceBackups operations. */\nexport class LongTermRetentionManagedInstanceBackupsImpl\n  implements LongTermRetentionManagedInstanceBackups {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class LongTermRetentionManagedInstanceBackups class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists all long term retention backups for a managed database.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param options The options parameters.\n   */\n  public listByDatabase(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByDatabasePagingAll(\n      locationName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByDatabasePagingPage(\n          locationName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByDatabasePagingPage(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByDatabase(\n        locationName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByDatabaseNext(\n        locationName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByDatabasePagingAll(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByDatabasePagingPage(\n      locationName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given managed instance.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByInstancePagingAll(\n      locationName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          locationName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        locationName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        locationName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByInstancePagingPage(\n      locationName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for managed databases in a given location.\n   * @param locationName The location of the database.\n   * @param options The options parameters.\n   */\n  public listByLocation(\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByLocationPagingAll(locationName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByLocationPagingPage(locationName, options, settings);\n      }\n    };\n  }\n\n  private async *listByLocationPagingPage(\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByLocation(locationName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByLocationNext(\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByLocationPagingAll(\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByLocationPagingPage(\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists all long term retention backups for a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param options The options parameters.\n   */\n  public listByResourceGroupDatabase(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByResourceGroupDatabasePagingAll(\n      resourceGroupName,\n      locationName,\n      managedInstanceName,\n      databaseName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupDatabasePagingPage(\n          resourceGroupName,\n          locationName,\n          managedInstanceName,\n          databaseName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupDatabasePagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupDatabase(\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupDatabaseNext(\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupDatabasePagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupDatabasePagingPage(\n      resourceGroupName,\n      locationName,\n      managedInstanceName,\n      databaseName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for a given managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByResourceGroupInstance(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByResourceGroupInstancePagingAll(\n      resourceGroupName,\n      locationName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupInstancePagingPage(\n          resourceGroupName,\n          locationName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupInstancePagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupInstance(\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupInstanceNext(\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupInstancePagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupInstancePagingPage(\n      resourceGroupName,\n      locationName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Lists the long term retention backups for managed databases in a given location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param options The options parameters.\n   */\n  public listByResourceGroupLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    const iter = this.listByResourceGroupLocationPagingAll(\n      resourceGroupName,\n      locationName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupLocationPagingPage(\n          resourceGroupName,\n          locationName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupLocationPagingPage(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup[]> {\n    let result: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroupLocation(\n        resourceGroupName,\n        locationName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupLocationNext(\n        resourceGroupName,\n        locationName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupLocationPagingAll(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams\n  ): AsyncIterableIterator<ManagedInstanceLongTermRetentionBackup> {\n    for await (const page of this.listByResourceGroupLocationPagingPage(\n      resourceGroupName,\n      locationName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a long term retention backup for a managed database.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  get(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsGetOptionalParams\n  ): Promise<LongTermRetentionManagedInstanceBackupsGetResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, managedInstanceName, databaseName, backupName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { locationName, managedInstanceName, databaseName, backupName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      locationName,\n      managedInstanceName,\n      databaseName,\n      backupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all long term retention backups for a managed database.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param options The options parameters.\n   */\n  private _listByDatabase(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByDatabaseOptionalParams\n  ): Promise<LongTermRetentionManagedInstanceBackupsListByDatabaseResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, managedInstanceName, databaseName, options },\n      listByDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given managed instance.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByInstanceOptionalParams\n  ): Promise<LongTermRetentionManagedInstanceBackupsListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for managed databases in a given location.\n   * @param locationName The location of the database.\n   * @param options The options parameters.\n   */\n  private _listByLocation(\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByLocationOptionalParams\n  ): Promise<LongTermRetentionManagedInstanceBackupsListByLocationResponse> {\n    return this.client.sendOperationRequest(\n      { locationName, options },\n      listByLocationOperationSpec\n    );\n  }\n\n  /**\n   * Gets a long term retention backup for a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  getByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsGetByResourceGroupOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsGetByResourceGroupResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        backupName,\n        options\n      },\n      getByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteByResourceGroup(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsDeleteByResourceGroupOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        backupName,\n        options\n      },\n      deleteByResourceGroupOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a long term retention backup.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param backupName The backup name.\n   * @param options The options parameters.\n   */\n  async beginDeleteByResourceGroupAndWait(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    backupName: string,\n    options?: LongTermRetentionManagedInstanceBackupsDeleteByResourceGroupOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDeleteByResourceGroup(\n      resourceGroupName,\n      locationName,\n      managedInstanceName,\n      databaseName,\n      backupName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists all long term retention backups for a managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupDatabase(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        options\n      },\n      listByResourceGroupDatabaseOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for a given managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupInstance(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, managedInstanceName, options },\n      listByResourceGroupInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Lists the long term retention backups for managed databases in a given location.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupLocation(\n    resourceGroupName: string,\n    locationName: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, options },\n      listByResourceGroupLocationOperationSpec\n    );\n  }\n\n  /**\n   * ListByDatabaseNext\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.\n   * @param options The options parameters.\n   */\n  private _listByDatabaseNext(\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByDatabaseNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { locationName, managedInstanceName, databaseName, nextLink, options },\n      listByDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    locationName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByInstanceNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { locationName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByLocationNext\n   * @param locationName The location of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByLocation method.\n   * @param options The options parameters.\n   */\n  private _listByLocationNext(\n    locationName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByLocationNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByLocationNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { locationName, nextLink, options },\n      listByLocationNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupDatabaseNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database\n   * @param managedInstanceName The name of the managed instance.\n   * @param databaseName The name of the managed database.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupDatabase\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupDatabaseNext(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    databaseName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupDatabaseNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        databaseName,\n        nextLink,\n        options\n      },\n      listByResourceGroupDatabaseNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupInstance\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupInstanceNext(\n    resourceGroupName: string,\n    locationName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupInstanceNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        locationName,\n        managedInstanceName,\n        nextLink,\n        options\n      },\n      listByResourceGroupInstanceNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupLocationNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param locationName The location of the database.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroupLocation\n   *                 method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupLocationNext(\n    resourceGroupName: string,\n    locationName: string,\n    nextLink: string,\n    options?: LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextOptionalParams\n  ): Promise<\n    LongTermRetentionManagedInstanceBackupsListByResourceGroupLocationNextResponse\n  > {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, locationName, nextLink, options },\n      listByResourceGroupLocationNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName,\n    Parameters.backupName\n  ],\n  serializer\n};\nconst listByDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackup\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName,\n    Parameters.backupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst deleteByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups/{backupName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName,\n    Parameters.backupName\n  ],\n  serializer\n};\nconst listByResourceGroupDatabaseOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionDatabases/{databaseName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstances/{managedInstanceName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupLocationOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/locations/{locationName}/longTermRetentionManagedInstanceBackups\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.onlyLatestPerDatabase,\n    Parameters.databaseState\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupDatabaseNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.databaseName,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupLocationNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceLongTermRetentionBackupListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.locationName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ManagedInstances } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ManagedInstance,\n  ManagedInstancesListByInstancePoolNextOptionalParams,\n  ManagedInstancesListByInstancePoolOptionalParams,\n  ManagedInstancesListByInstancePoolResponse,\n  ManagedInstancesListNextOptionalParams,\n  ManagedInstancesListOptionalParams,\n  ManagedInstancesListResponse,\n  ManagedInstancesListByResourceGroupNextOptionalParams,\n  ManagedInstancesListByResourceGroupOptionalParams,\n  ManagedInstancesListByResourceGroupResponse,\n  TopQueries,\n  ManagedInstancesListByManagedInstanceNextOptionalParams,\n  ManagedInstancesListByManagedInstanceOptionalParams,\n  ManagedInstancesListByManagedInstanceResponse,\n  ManagedInstancesGetOptionalParams,\n  ManagedInstancesGetResponse,\n  ManagedInstancesCreateOrUpdateOptionalParams,\n  ManagedInstancesCreateOrUpdateResponse,\n  ManagedInstancesDeleteOptionalParams,\n  ManagedInstanceUpdate,\n  ManagedInstancesUpdateOptionalParams,\n  ManagedInstancesUpdateResponse,\n  ManagedInstancesFailoverOptionalParams,\n  ManagedInstancesListByInstancePoolNextResponse,\n  ManagedInstancesListNextResponse,\n  ManagedInstancesListByResourceGroupNextResponse,\n  ManagedInstancesListByManagedInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ManagedInstances operations. */\nexport class ManagedInstancesImpl implements ManagedInstances {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ManagedInstances class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of all managed instances in an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The instance pool name.\n   * @param options The options parameters.\n   */\n  public listByInstancePool(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: ManagedInstancesListByInstancePoolOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstance> {\n    const iter = this.listByInstancePoolPagingAll(\n      resourceGroupName,\n      instancePoolName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePoolPagingPage(\n          resourceGroupName,\n          instancePoolName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePoolPagingPage(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: ManagedInstancesListByInstancePoolOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstance[]> {\n    let result: ManagedInstancesListByInstancePoolResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstancePool(\n        resourceGroupName,\n        instancePoolName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstancePoolNext(\n        resourceGroupName,\n        instancePoolName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePoolPagingAll(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: ManagedInstancesListByInstancePoolOptionalParams\n  ): AsyncIterableIterator<ManagedInstance> {\n    for await (const page of this.listByInstancePoolPagingPage(\n      resourceGroupName,\n      instancePoolName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all managed instances in the subscription.\n   * @param options The options parameters.\n   */\n  public list(\n    options?: ManagedInstancesListOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstance> {\n    const iter = this.listPagingAll(options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listPagingPage(options, settings);\n      }\n    };\n  }\n\n  private async *listPagingPage(\n    options?: ManagedInstancesListOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstance[]> {\n    let result: ManagedInstancesListResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._list(options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listNext(continuationToken, options);\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listPagingAll(\n    options?: ManagedInstancesListOptionalParams\n  ): AsyncIterableIterator<ManagedInstance> {\n    for await (const page of this.listPagingPage(options)) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of managed instances in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  public listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedInstancesListByResourceGroupOptionalParams\n  ): PagedAsyncIterableIterator<ManagedInstance> {\n    const iter = this.listByResourceGroupPagingAll(resourceGroupName, options);\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByResourceGroupPagingPage(\n          resourceGroupName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByResourceGroupPagingPage(\n    resourceGroupName: string,\n    options?: ManagedInstancesListByResourceGroupOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ManagedInstance[]> {\n    let result: ManagedInstancesListByResourceGroupResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByResourceGroup(resourceGroupName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByResourceGroupNext(\n        resourceGroupName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByResourceGroupPagingAll(\n    resourceGroupName: string,\n    options?: ManagedInstancesListByResourceGroupOptionalParams\n  ): AsyncIterableIterator<ManagedInstance> {\n    for await (const page of this.listByResourceGroupPagingPage(\n      resourceGroupName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Get top resource consuming queries of a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesListByManagedInstanceOptionalParams\n  ): PagedAsyncIterableIterator<TopQueries> {\n    const iter = this.listByManagedInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByManagedInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByManagedInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesListByManagedInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<TopQueries[]> {\n    let result: ManagedInstancesListByManagedInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByManagedInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByManagedInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByManagedInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesListByManagedInstanceOptionalParams\n  ): AsyncIterableIterator<TopQueries> {\n    for await (const page of this.listByManagedInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of all managed instances in an instance pool.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The instance pool name.\n   * @param options The options parameters.\n   */\n  private _listByInstancePool(\n    resourceGroupName: string,\n    instancePoolName: string,\n    options?: ManagedInstancesListByInstancePoolOptionalParams\n  ): Promise<ManagedInstancesListByInstancePoolResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, instancePoolName, options },\n      listByInstancePoolOperationSpec\n    );\n  }\n\n  /**\n   * Gets a list of all managed instances in the subscription.\n   * @param options The options parameters.\n   */\n  private _list(\n    options?: ManagedInstancesListOptionalParams\n  ): Promise<ManagedInstancesListResponse> {\n    return this.client.sendOperationRequest({ options }, listOperationSpec);\n  }\n\n  /**\n   * Gets a list of managed instances in a resource group.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroup(\n    resourceGroupName: string,\n    options?: ManagedInstancesListByResourceGroupOptionalParams\n  ): Promise<ManagedInstancesListByResourceGroupResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, options },\n      listByResourceGroupOperationSpec\n    );\n  }\n\n  /**\n   * Gets a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesGetOptionalParams\n  ): Promise<ManagedInstancesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Creates or updates a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested managed instance resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: ManagedInstance,\n    options?: ManagedInstancesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedInstancesCreateOrUpdateResponse>,\n      ManagedInstancesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstancesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, parameters, options },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Creates or updates a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested managed instance resource state.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: ManagedInstance,\n    options?: ManagedInstancesCreateOrUpdateOptionalParams\n  ): Promise<ManagedInstancesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Deletes a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  async beginDelete(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesDeleteOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, options },\n      deleteOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Deletes a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  async beginDeleteAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesDeleteOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginDelete(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Updates a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested managed instance resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdate(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: ManagedInstanceUpdate,\n    options?: ManagedInstancesUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ManagedInstancesUpdateResponse>,\n      ManagedInstancesUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ManagedInstancesUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, parameters, options },\n      updateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param parameters The requested managed instance resource state.\n   * @param options The options parameters.\n   */\n  async beginUpdateAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    parameters: ManagedInstanceUpdate,\n    options?: ManagedInstancesUpdateOptionalParams\n  ): Promise<ManagedInstancesUpdateResponse> {\n    const poller = await this.beginUpdate(\n      resourceGroupName,\n      managedInstanceName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Get top resource consuming queries of a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesListByManagedInstanceOptionalParams\n  ): Promise<ManagedInstancesListByManagedInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByManagedInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Failovers a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance to failover.\n   * @param options The options parameters.\n   */\n  async beginFailover(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesFailoverOptionalParams\n  ): Promise<PollerLike<PollOperationState<void>, void>> {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<void> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      { resourceGroupName, managedInstanceName, options },\n      failoverOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Failovers a managed instance.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance to failover.\n   * @param options The options parameters.\n   */\n  async beginFailoverAndWait(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: ManagedInstancesFailoverOptionalParams\n  ): Promise<void> {\n    const poller = await this.beginFailover(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * ListByInstancePoolNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param instancePoolName The instance pool name.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstancePool method.\n   * @param options The options parameters.\n   */\n  private _listByInstancePoolNext(\n    resourceGroupName: string,\n    instancePoolName: string,\n    nextLink: string,\n    options?: ManagedInstancesListByInstancePoolNextOptionalParams\n  ): Promise<ManagedInstancesListByInstancePoolNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, instancePoolName, nextLink, options },\n      listByInstancePoolNextOperationSpec\n    );\n  }\n\n  /**\n   * ListNext\n   * @param nextLink The nextLink from the previous successful call to the List method.\n   * @param options The options parameters.\n   */\n  private _listNext(\n    nextLink: string,\n    options?: ManagedInstancesListNextOptionalParams\n  ): Promise<ManagedInstancesListNextResponse> {\n    return this.client.sendOperationRequest(\n      { nextLink, options },\n      listNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByResourceGroupNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param nextLink The nextLink from the previous successful call to the ListByResourceGroup method.\n   * @param options The options parameters.\n   */\n  private _listByResourceGroupNext(\n    resourceGroupName: string,\n    nextLink: string,\n    options?: ManagedInstancesListByResourceGroupNextOptionalParams\n  ): Promise<ManagedInstancesListByResourceGroupNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, nextLink, options },\n      listByResourceGroupNextOperationSpec\n    );\n  }\n\n  /**\n   * ListByManagedInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByManagedInstance method.\n   * @param options The options parameters.\n   */\n  private _listByManagedInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: ManagedInstancesListByManagedInstanceNextOptionalParams\n  ): Promise<ManagedInstancesListByManagedInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByManagedInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstancePoolOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/instancePools/{instancePoolName}/managedInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/providers/Microsoft.Sql/managedInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [Parameters.$host, Parameters.subscriptionId],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1, Parameters.expand],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters86,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst deleteOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}\",\n  httpMethod: \"DELETE\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst updateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}\",\n  httpMethod: \"PATCH\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    201: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    202: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    204: {\n      bodyMapper: Mappers.ManagedInstance\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters87,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByManagedInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/topqueries\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TopQueriesListResult\n    },\n    default: {}\n  },\n  queryParameters: [\n    Parameters.apiVersion1,\n    Parameters.startTime,\n    Parameters.endTime,\n    Parameters.interval,\n    Parameters.numberOfQueries,\n    Parameters.databases,\n    Parameters.aggregationFunction,\n    Parameters.observationMetric\n  ],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst failoverOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/failover\",\n  httpMethod: \"POST\",\n  responses: { 200: {}, 201: {}, 202: {}, 204: {}, default: {} },\n  queryParameters: [Parameters.apiVersion1, Parameters.replicaType],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  serializer\n};\nconst listByInstancePoolNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.instancePoolName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByResourceGroupNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ManagedInstanceListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByManagedInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.TopQueriesListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RestorableDroppedDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RestorableDroppedDatabase,\n  RestorableDroppedDatabasesListByServerNextOptionalParams,\n  RestorableDroppedDatabasesListByServerOptionalParams,\n  RestorableDroppedDatabasesListByServerResponse,\n  RestorableDroppedDatabasesGetOptionalParams,\n  RestorableDroppedDatabasesGetResponse,\n  RestorableDroppedDatabasesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RestorableDroppedDatabases operations. */\nexport class RestorableDroppedDatabasesImpl\n  implements RestorableDroppedDatabases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorableDroppedDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of restorable dropped databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RestorableDroppedDatabasesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<RestorableDroppedDatabase> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RestorableDroppedDatabasesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RestorableDroppedDatabase[]> {\n    let result: RestorableDroppedDatabasesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RestorableDroppedDatabasesListByServerOptionalParams\n  ): AsyncIterableIterator<RestorableDroppedDatabase> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of restorable dropped databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: RestorableDroppedDatabasesListByServerOptionalParams\n  ): Promise<RestorableDroppedDatabasesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * Gets a restorable dropped database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param restorableDroppedDatabaseId\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    restorableDroppedDatabaseId: string,\n    options?: RestorableDroppedDatabasesGetOptionalParams\n  ): Promise<RestorableDroppedDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, restorableDroppedDatabaseId, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: RestorableDroppedDatabasesListByServerNextOptionalParams\n  ): Promise<RestorableDroppedDatabasesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedDatabase\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { RestorableDroppedManagedDatabases } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport {\n  RestorableDroppedManagedDatabase,\n  RestorableDroppedManagedDatabasesListByInstanceNextOptionalParams,\n  RestorableDroppedManagedDatabasesListByInstanceOptionalParams,\n  RestorableDroppedManagedDatabasesListByInstanceResponse,\n  RestorableDroppedManagedDatabasesGetOptionalParams,\n  RestorableDroppedManagedDatabasesGetResponse,\n  RestorableDroppedManagedDatabasesListByInstanceNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing RestorableDroppedManagedDatabases operations. */\nexport class RestorableDroppedManagedDatabasesImpl\n  implements RestorableDroppedManagedDatabases {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class RestorableDroppedManagedDatabases class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Gets a list of restorable dropped managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  public listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RestorableDroppedManagedDatabasesListByInstanceOptionalParams\n  ): PagedAsyncIterableIterator<RestorableDroppedManagedDatabase> {\n    const iter = this.listByInstancePagingAll(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByInstancePagingPage(\n          resourceGroupName,\n          managedInstanceName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByInstancePagingPage(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RestorableDroppedManagedDatabasesListByInstanceOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<RestorableDroppedManagedDatabase[]> {\n    let result: RestorableDroppedManagedDatabasesListByInstanceResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByInstance(\n        resourceGroupName,\n        managedInstanceName,\n        options\n      );\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByInstanceNext(\n        resourceGroupName,\n        managedInstanceName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByInstancePagingAll(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RestorableDroppedManagedDatabasesListByInstanceOptionalParams\n  ): AsyncIterableIterator<RestorableDroppedManagedDatabase> {\n    for await (const page of this.listByInstancePagingPage(\n      resourceGroupName,\n      managedInstanceName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a list of restorable dropped managed databases.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param options The options parameters.\n   */\n  private _listByInstance(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    options?: RestorableDroppedManagedDatabasesListByInstanceOptionalParams\n  ): Promise<RestorableDroppedManagedDatabasesListByInstanceResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, options },\n      listByInstanceOperationSpec\n    );\n  }\n\n  /**\n   * Gets a restorable dropped managed database.\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param restorableDroppedDatabaseId\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    restorableDroppedDatabaseId: string,\n    options?: RestorableDroppedManagedDatabasesGetOptionalParams\n  ): Promise<RestorableDroppedManagedDatabasesGetResponse> {\n    return this.client.sendOperationRequest(\n      {\n        resourceGroupName,\n        managedInstanceName,\n        restorableDroppedDatabaseId,\n        options\n      },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * ListByInstanceNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param managedInstanceName The name of the managed instance.\n   * @param nextLink The nextLink from the previous successful call to the ListByInstance method.\n   * @param options The options parameters.\n   */\n  private _listByInstanceNext(\n    resourceGroupName: string,\n    managedInstanceName: string,\n    nextLink: string,\n    options?: RestorableDroppedManagedDatabasesListByInstanceNextOptionalParams\n  ): Promise<RestorableDroppedManagedDatabasesListByInstanceNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, managedInstanceName, nextLink, options },\n      listByInstanceNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst listByInstanceOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedManagedDatabaseListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/managedInstances/{managedInstanceName}/restorableDroppedDatabases/{restorableDroppedDatabaseId}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedManagedDatabase\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.managedInstanceName,\n    Parameters.restorableDroppedDatabaseId\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByInstanceNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.RestorableDroppedManagedDatabaseListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.nextLink,\n    Parameters.managedInstanceName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { PagedAsyncIterableIterator, PageSettings } from \"@azure/core-paging\";\nimport { setContinuationToken } from \"../pagingHelper\";\nimport { ServerConnectionPolicies } from \"../operationsInterfaces\";\nimport * as coreClient from \"@azure/core-client\";\nimport * as Mappers from \"../models/mappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { SqlManagementClient } from \"../sqlManagementClient\";\nimport { PollerLike, PollOperationState, LroEngine } from \"@azure/core-lro\";\nimport { LroImpl } from \"../lroImpl\";\nimport {\n  ServerConnectionPolicy,\n  ServerConnectionPoliciesListByServerNextOptionalParams,\n  ServerConnectionPoliciesListByServerOptionalParams,\n  ServerConnectionPoliciesListByServerResponse,\n  ConnectionPolicyName,\n  ServerConnectionPoliciesGetOptionalParams,\n  ServerConnectionPoliciesGetResponse,\n  ServerConnectionPoliciesCreateOrUpdateOptionalParams,\n  ServerConnectionPoliciesCreateOrUpdateResponse,\n  ServerConnectionPoliciesListByServerNextResponse\n} from \"../models\";\n\n/// <reference lib=\"esnext.asynciterable\" />\n/** Class containing ServerConnectionPolicies operations. */\nexport class ServerConnectionPoliciesImpl implements ServerConnectionPolicies {\n  private readonly client: SqlManagementClient;\n\n  /**\n   * Initialize a new instance of the class ServerConnectionPolicies class.\n   * @param client Reference to the service client\n   */\n  constructor(client: SqlManagementClient) {\n    this.client = client;\n  }\n\n  /**\n   * Lists connection policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  public listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerConnectionPoliciesListByServerOptionalParams\n  ): PagedAsyncIterableIterator<ServerConnectionPolicy> {\n    const iter = this.listByServerPagingAll(\n      resourceGroupName,\n      serverName,\n      options\n    );\n    return {\n      next() {\n        return iter.next();\n      },\n      [Symbol.asyncIterator]() {\n        return this;\n      },\n      byPage: (settings?: PageSettings) => {\n        if (settings?.maxPageSize) {\n          throw new Error(\"maxPageSize is not supported by this operation.\");\n        }\n        return this.listByServerPagingPage(\n          resourceGroupName,\n          serverName,\n          options,\n          settings\n        );\n      }\n    };\n  }\n\n  private async *listByServerPagingPage(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerConnectionPoliciesListByServerOptionalParams,\n    settings?: PageSettings\n  ): AsyncIterableIterator<ServerConnectionPolicy[]> {\n    let result: ServerConnectionPoliciesListByServerResponse;\n    let continuationToken = settings?.continuationToken;\n    if (!continuationToken) {\n      result = await this._listByServer(resourceGroupName, serverName, options);\n      let page = result.value || [];\n      continuationToken = result.nextLink;\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n    while (continuationToken) {\n      result = await this._listByServerNext(\n        resourceGroupName,\n        serverName,\n        continuationToken,\n        options\n      );\n      continuationToken = result.nextLink;\n      let page = result.value || [];\n      setContinuationToken(page, continuationToken);\n      yield page;\n    }\n  }\n\n  private async *listByServerPagingAll(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerConnectionPoliciesListByServerOptionalParams\n  ): AsyncIterableIterator<ServerConnectionPolicy> {\n    for await (const page of this.listByServerPagingPage(\n      resourceGroupName,\n      serverName,\n      options\n    )) {\n      yield* page;\n    }\n  }\n\n  /**\n   * Gets a server connection policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param connectionPolicyName The name of the connection policy.\n   * @param options The options parameters.\n   */\n  get(\n    resourceGroupName: string,\n    serverName: string,\n    connectionPolicyName: ConnectionPolicyName,\n    options?: ServerConnectionPoliciesGetOptionalParams\n  ): Promise<ServerConnectionPoliciesGetResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, connectionPolicyName, options },\n      getOperationSpec\n    );\n  }\n\n  /**\n   * Updates a server connection policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param connectionPolicyName The name of the connection policy.\n   * @param parameters The required parameters for updating a server connection policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdate(\n    resourceGroupName: string,\n    serverName: string,\n    connectionPolicyName: ConnectionPolicyName,\n    parameters: ServerConnectionPolicy,\n    options?: ServerConnectionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<\n    PollerLike<\n      PollOperationState<ServerConnectionPoliciesCreateOrUpdateResponse>,\n      ServerConnectionPoliciesCreateOrUpdateResponse\n    >\n  > {\n    const directSendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ): Promise<ServerConnectionPoliciesCreateOrUpdateResponse> => {\n      return this.client.sendOperationRequest(args, spec);\n    };\n    const sendOperation = async (\n      args: coreClient.OperationArguments,\n      spec: coreClient.OperationSpec\n    ) => {\n      let currentRawResponse:\n        | coreClient.FullOperationResponse\n        | undefined = undefined;\n      const providedCallback = args.options?.onResponse;\n      const callback: coreClient.RawResponseCallback = (\n        rawResponse: coreClient.FullOperationResponse,\n        flatResponse: unknown\n      ) => {\n        currentRawResponse = rawResponse;\n        providedCallback?.(rawResponse, flatResponse);\n      };\n      const updatedArgs = {\n        ...args,\n        options: {\n          ...args.options,\n          onResponse: callback\n        }\n      };\n      const flatResponse = await directSendOperation(updatedArgs, spec);\n      return {\n        flatResponse,\n        rawResponse: {\n          statusCode: currentRawResponse!.status,\n          body: currentRawResponse!.parsedBody,\n          headers: currentRawResponse!.headers.toJSON()\n        }\n      };\n    };\n\n    const lro = new LroImpl(\n      sendOperation,\n      {\n        resourceGroupName,\n        serverName,\n        connectionPolicyName,\n        parameters,\n        options\n      },\n      createOrUpdateOperationSpec\n    );\n    const poller = new LroEngine(lro, {\n      resumeFrom: options?.resumeFrom,\n      intervalInMs: options?.updateIntervalInMs\n    });\n    await poller.poll();\n    return poller;\n  }\n\n  /**\n   * Updates a server connection policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param connectionPolicyName The name of the connection policy.\n   * @param parameters The required parameters for updating a server connection policy.\n   * @param options The options parameters.\n   */\n  async beginCreateOrUpdateAndWait(\n    resourceGroupName: string,\n    serverName: string,\n    connectionPolicyName: ConnectionPolicyName,\n    parameters: ServerConnectionPolicy,\n    options?: ServerConnectionPoliciesCreateOrUpdateOptionalParams\n  ): Promise<ServerConnectionPoliciesCreateOrUpdateResponse> {\n    const poller = await this.beginCreateOrUpdate(\n      resourceGroupName,\n      serverName,\n      connectionPolicyName,\n      parameters,\n      options\n    );\n    return poller.pollUntilDone();\n  }\n\n  /**\n   * Lists connection policy\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param options The options parameters.\n   */\n  private _listByServer(\n    resourceGroupName: string,\n    serverName: string,\n    options?: ServerConnectionPoliciesListByServerOptionalParams\n  ): Promise<ServerConnectionPoliciesListByServerResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, options },\n      listByServerOperationSpec\n    );\n  }\n\n  /**\n   * ListByServerNext\n   * @param resourceGroupName The name of the resource group that contains the resource. You can obtain\n   *                          this value from the Azure Resource Manager API or the portal.\n   * @param serverName The name of the server.\n   * @param nextLink The nextLink from the previous successful call to the ListByServer method.\n   * @param options The options parameters.\n   */\n  private _listByServerNext(\n    resourceGroupName: string,\n    serverName: string,\n    nextLink: string,\n    options?: ServerConnectionPoliciesListByServerNextOptionalParams\n  ): Promise<ServerConnectionPoliciesListByServerNextResponse> {\n    return this.client.sendOperationRequest(\n      { resourceGroupName, serverName, nextLink, options },\n      listByServerNextOperationSpec\n    );\n  }\n}\n// Operation Specifications\nconst serializer = coreClient.createSerializer(Mappers, /* isXml */ false);\n\nconst getOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerConnectionPolicy\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.connectionPolicyName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst createOrUpdateOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies/{connectionPolicyName}\",\n  httpMethod: \"PUT\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerConnectionPolicy\n    },\n    201: {\n      bodyMapper: Mappers.ServerConnectionPolicy\n    },\n    202: {\n      bodyMapper: Mappers.ServerConnectionPolicy\n    },\n    204: {\n      bodyMapper: Mappers.ServerConnectionPolicy\n    },\n    default: {}\n  },\n  requestBody: Parameters.parameters88,\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.connectionPolicyName\n  ],\n  headerParameters: [Parameters.accept, Parameters.contentType],\n  mediaType: \"json\",\n  serializer\n};\nconst listByServerOperationSpec: coreClient.OperationSpec = {\n  path:\n    \"/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Sql/servers/{serverName}/connectionPolicies\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerConnectionPolicyListResult\n    },\n    default: {}\n  },\n  queryParameters: [Parameters.apiVersion1],\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\nconst listByServerNextOperationSpec: coreClient.OperationSpec = {\n  path: \"{nextLink}\",\n  httpMethod: \"GET\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ServerConnectionPolicyListResult\n    },\n    default: {}\n  },\n  urlParameters: [\n    Parameters.$host,\n    Parameters.subscriptionId,\n    Parameters.resourceGroupName,\n    Parameters.serverName,\n    Parameters.nextLink\n  ],\n  headerParameters: [Parameters.accept],\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreRestPipeline from \"@azure/core-rest-pipeline\";\nimport * as coreAuth from \"@azure/core-auth\";\nimport {\n  RecoverableDatabasesImpl,\n  DataMaskingPoliciesImpl,\n  DataMaskingRulesImpl,\n  GeoBackupPoliciesImpl,\n  DatabasesImpl,\n  ElasticPoolsImpl,\n  ReplicationLinksImpl,\n  ServerCommunicationLinksImpl,\n  ServiceObjectivesImpl,\n  ElasticPoolActivitiesImpl,\n  ElasticPoolDatabaseActivitiesImpl,\n  ServerUsagesImpl,\n  ExtendedDatabaseBlobAuditingPoliciesImpl,\n  ExtendedServerBlobAuditingPoliciesImpl,\n  ServerBlobAuditingPoliciesImpl,\n  DatabaseBlobAuditingPoliciesImpl,\n  DatabaseAdvisorsImpl,\n  DatabaseAutomaticTuningOperationsImpl,\n  DatabaseColumnsImpl,\n  DatabaseRecommendedActionsImpl,\n  DatabaseSchemasImpl,\n  DatabaseSecurityAlertPoliciesImpl,\n  DatabaseTablesImpl,\n  DatabaseVulnerabilityAssessmentRuleBaselinesImpl,\n  DatabaseVulnerabilityAssessmentsImpl,\n  DatabaseVulnerabilityAssessmentScansImpl,\n  DataWarehouseUserActivitiesOperationsImpl,\n  DeletedServersImpl,\n  ElasticPoolOperationsImpl,\n  EncryptionProtectorsImpl,\n  FailoverGroupsImpl,\n  FirewallRulesImpl,\n  InstanceFailoverGroupsImpl,\n  InstancePoolsImpl,\n  JobAgentsImpl,\n  JobCredentialsImpl,\n  JobExecutionsImpl,\n  JobsImpl,\n  JobStepExecutionsImpl,\n  JobStepsImpl,\n  JobTargetExecutionsImpl,\n  JobTargetGroupsImpl,\n  JobVersionsImpl,\n  CapabilitiesImpl,\n  LongTermRetentionPoliciesImpl,\n  MaintenanceWindowOptionsOperationsImpl,\n  MaintenanceWindowsOperationsImpl,\n  ManagedBackupShortTermRetentionPoliciesImpl,\n  ManagedDatabaseColumnsImpl,\n  ManagedDatabaseQueriesImpl,\n  ManagedDatabaseRestoreDetailsImpl,\n  ManagedDatabasesImpl,\n  ManagedDatabaseSchemasImpl,\n  ManagedDatabaseSecurityAlertPoliciesImpl,\n  ManagedDatabaseSecurityEventsImpl,\n  ManagedDatabaseSensitivityLabelsImpl,\n  ManagedDatabaseRecommendedSensitivityLabelsImpl,\n  ManagedDatabaseTablesImpl,\n  ManagedDatabaseTransparentDataEncryptionImpl,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl,\n  ManagedDatabaseVulnerabilityAssessmentsImpl,\n  ManagedDatabaseVulnerabilityAssessmentScansImpl,\n  ManagedInstanceAdministratorsImpl,\n  ManagedInstanceAzureADOnlyAuthenticationsImpl,\n  ManagedInstanceEncryptionProtectorsImpl,\n  ManagedInstanceKeysImpl,\n  ManagedInstanceLongTermRetentionPoliciesImpl,\n  ManagedInstanceOperationsImpl,\n  ManagedInstancePrivateEndpointConnectionsImpl,\n  ManagedInstancePrivateLinkResourcesImpl,\n  ManagedInstanceTdeCertificatesImpl,\n  ManagedInstanceVulnerabilityAssessmentsImpl,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl,\n  ManagedServerSecurityAlertPoliciesImpl,\n  OperationsImpl,\n  OperationsHealthOperationsImpl,\n  PrivateEndpointConnectionsImpl,\n  PrivateLinkResourcesImpl,\n  RecoverableManagedDatabasesImpl,\n  RestorePointsImpl,\n  SensitivityLabelsImpl,\n  RecommendedSensitivityLabelsImpl,\n  ServerAdvisorsImpl,\n  ServerAutomaticTuningOperationsImpl,\n  ServerAzureADAdministratorsImpl,\n  ServerAzureADOnlyAuthenticationsImpl,\n  ServerDevOpsAuditSettingsImpl,\n  ServerDnsAliasesImpl,\n  ServerKeysImpl,\n  ServerOperationsImpl,\n  ServerSecurityAlertPoliciesImpl,\n  ServerTrustGroupsImpl,\n  ServerVulnerabilityAssessmentsImpl,\n  SqlAgentImpl,\n  SubscriptionUsagesImpl,\n  SyncAgentsImpl,\n  SyncGroupsImpl,\n  SyncMembersImpl,\n  TdeCertificatesImpl,\n  TimeZonesImpl,\n  VirtualClustersImpl,\n  VirtualNetworkRulesImpl,\n  WorkloadClassifiersImpl,\n  WorkloadGroupsImpl,\n  TransparentDataEncryptionsImpl,\n  BackupShortTermRetentionPoliciesImpl,\n  DatabaseExtensionsOperationsImpl,\n  DatabaseOperationsImpl,\n  DatabaseUsagesImpl,\n  LedgerDigestUploadsOperationsImpl,\n  OutboundFirewallRulesImpl,\n  ServersImpl,\n  UsagesImpl,\n  LongTermRetentionBackupsImpl,\n  LongTermRetentionManagedInstanceBackupsImpl,\n  ManagedInstancesImpl,\n  RestorableDroppedDatabasesImpl,\n  RestorableDroppedManagedDatabasesImpl,\n  ServerConnectionPoliciesImpl\n} from \"./operations\";\nimport {\n  RecoverableDatabases,\n  DataMaskingPolicies,\n  DataMaskingRules,\n  GeoBackupPolicies,\n  Databases,\n  ElasticPools,\n  ReplicationLinks,\n  ServerCommunicationLinks,\n  ServiceObjectives,\n  ElasticPoolActivities,\n  ElasticPoolDatabaseActivities,\n  ServerUsages,\n  ExtendedDatabaseBlobAuditingPolicies,\n  ExtendedServerBlobAuditingPolicies,\n  ServerBlobAuditingPolicies,\n  DatabaseBlobAuditingPolicies,\n  DatabaseAdvisors,\n  DatabaseAutomaticTuningOperations,\n  DatabaseColumns,\n  DatabaseRecommendedActions,\n  DatabaseSchemas,\n  DatabaseSecurityAlertPolicies,\n  DatabaseTables,\n  DatabaseVulnerabilityAssessmentRuleBaselines,\n  DatabaseVulnerabilityAssessments,\n  DatabaseVulnerabilityAssessmentScans,\n  DataWarehouseUserActivitiesOperations,\n  DeletedServers,\n  ElasticPoolOperations,\n  EncryptionProtectors,\n  FailoverGroups,\n  FirewallRules,\n  InstanceFailoverGroups,\n  InstancePools,\n  JobAgents,\n  JobCredentials,\n  JobExecutions,\n  Jobs,\n  JobStepExecutions,\n  JobSteps,\n  JobTargetExecutions,\n  JobTargetGroups,\n  JobVersions,\n  Capabilities,\n  LongTermRetentionPolicies,\n  MaintenanceWindowOptionsOperations,\n  MaintenanceWindowsOperations,\n  ManagedBackupShortTermRetentionPolicies,\n  ManagedDatabaseColumns,\n  ManagedDatabaseQueries,\n  ManagedDatabaseRestoreDetails,\n  ManagedDatabases,\n  ManagedDatabaseSchemas,\n  ManagedDatabaseSecurityAlertPolicies,\n  ManagedDatabaseSecurityEvents,\n  ManagedDatabaseSensitivityLabels,\n  ManagedDatabaseRecommendedSensitivityLabels,\n  ManagedDatabaseTables,\n  ManagedDatabaseTransparentDataEncryption,\n  ManagedDatabaseVulnerabilityAssessmentRuleBaselines,\n  ManagedDatabaseVulnerabilityAssessments,\n  ManagedDatabaseVulnerabilityAssessmentScans,\n  ManagedInstanceAdministrators,\n  ManagedInstanceAzureADOnlyAuthentications,\n  ManagedInstanceEncryptionProtectors,\n  ManagedInstanceKeys,\n  ManagedInstanceLongTermRetentionPolicies,\n  ManagedInstanceOperations,\n  ManagedInstancePrivateEndpointConnections,\n  ManagedInstancePrivateLinkResources,\n  ManagedInstanceTdeCertificates,\n  ManagedInstanceVulnerabilityAssessments,\n  ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies,\n  ManagedServerSecurityAlertPolicies,\n  Operations,\n  OperationsHealthOperations,\n  PrivateEndpointConnections,\n  PrivateLinkResources,\n  RecoverableManagedDatabases,\n  RestorePoints,\n  SensitivityLabels,\n  RecommendedSensitivityLabels,\n  ServerAdvisors,\n  ServerAutomaticTuningOperations,\n  ServerAzureADAdministrators,\n  ServerAzureADOnlyAuthentications,\n  ServerDevOpsAuditSettings,\n  ServerDnsAliases,\n  ServerKeys,\n  ServerOperations,\n  ServerSecurityAlertPolicies,\n  ServerTrustGroups,\n  ServerVulnerabilityAssessments,\n  SqlAgent,\n  SubscriptionUsages,\n  SyncAgents,\n  SyncGroups,\n  SyncMembers,\n  TdeCertificates,\n  TimeZones,\n  VirtualClusters,\n  VirtualNetworkRules,\n  WorkloadClassifiers,\n  WorkloadGroups,\n  TransparentDataEncryptions,\n  BackupShortTermRetentionPolicies,\n  DatabaseExtensionsOperations,\n  DatabaseOperations,\n  DatabaseUsages,\n  LedgerDigestUploadsOperations,\n  OutboundFirewallRules,\n  Servers,\n  Usages,\n  LongTermRetentionBackups,\n  LongTermRetentionManagedInstanceBackups,\n  ManagedInstances,\n  RestorableDroppedDatabases,\n  RestorableDroppedManagedDatabases,\n  ServerConnectionPolicies\n} from \"./operationsInterfaces\";\nimport { SqlManagementClientOptionalParams } from \"./models\";\n\nexport class SqlManagementClient extends coreClient.ServiceClient {\n  $host: string;\n  subscriptionId: string;\n\n  /**\n   * Initializes a new instance of the SqlManagementClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param subscriptionId The subscription ID that identifies an Azure subscription.\n   * @param options The parameter options\n   */\n  constructor(\n    credentials: coreAuth.TokenCredential,\n    subscriptionId: string,\n    options?: SqlManagementClientOptionalParams\n  ) {\n    if (credentials === undefined) {\n      throw new Error(\"'credentials' cannot be null\");\n    }\n    if (subscriptionId === undefined) {\n      throw new Error(\"'subscriptionId' cannot be null\");\n    }\n\n    // Initializing default values for options\n    if (!options) {\n      options = {};\n    }\n    const defaults: SqlManagementClientOptionalParams = {\n      requestContentType: \"application/json; charset=utf-8\",\n      credential: credentials\n    };\n\n    const packageDetails = `azsdk-js-arm-sql/9.1.0`;\n    const userAgentPrefix =\n      options.userAgentOptions && options.userAgentOptions.userAgentPrefix\n        ? `${options.userAgentOptions.userAgentPrefix} ${packageDetails}`\n        : `${packageDetails}`;\n\n    const optionsWithDefaults = {\n      ...defaults,\n      ...options,\n      userAgentOptions: {\n        userAgentPrefix\n      },\n      endpoint:\n        options.endpoint ?? options.baseUri ?? \"https://management.azure.com\"\n    };\n    super(optionsWithDefaults);\n\n    let bearerTokenAuthenticationPolicyFound: boolean = false;\n    if (options?.pipeline && options.pipeline.getOrderedPolicies().length > 0) {\n      const pipelinePolicies: coreRestPipeline.PipelinePolicy[] = options.pipeline.getOrderedPolicies();\n      bearerTokenAuthenticationPolicyFound = pipelinePolicies.some(\n        (pipelinePolicy) =>\n          pipelinePolicy.name ===\n          coreRestPipeline.bearerTokenAuthenticationPolicyName\n      );\n    }\n    if (\n      !options ||\n      !options.pipeline ||\n      options.pipeline.getOrderedPolicies().length == 0 ||\n      !bearerTokenAuthenticationPolicyFound\n    ) {\n      this.pipeline.removePolicy({\n        name: coreRestPipeline.bearerTokenAuthenticationPolicyName\n      });\n      this.pipeline.addPolicy(\n        coreRestPipeline.bearerTokenAuthenticationPolicy({\n          credential: credentials,\n          scopes:\n            optionsWithDefaults.credentialScopes ??\n            `${optionsWithDefaults.endpoint}/.default`,\n          challengeCallbacks: {\n            authorizeRequestOnChallenge:\n              coreClient.authorizeRequestOnClaimChallenge\n          }\n        })\n      );\n    }\n    // Parameter assignments\n    this.subscriptionId = subscriptionId;\n\n    // Assigning values to Constant parameters\n    this.$host = options.$host || \"https://management.azure.com\";\n    this.recoverableDatabases = new RecoverableDatabasesImpl(this);\n    this.dataMaskingPolicies = new DataMaskingPoliciesImpl(this);\n    this.dataMaskingRules = new DataMaskingRulesImpl(this);\n    this.geoBackupPolicies = new GeoBackupPoliciesImpl(this);\n    this.databases = new DatabasesImpl(this);\n    this.elasticPools = new ElasticPoolsImpl(this);\n    this.replicationLinks = new ReplicationLinksImpl(this);\n    this.serverCommunicationLinks = new ServerCommunicationLinksImpl(this);\n    this.serviceObjectives = new ServiceObjectivesImpl(this);\n    this.elasticPoolActivities = new ElasticPoolActivitiesImpl(this);\n    this.elasticPoolDatabaseActivities = new ElasticPoolDatabaseActivitiesImpl(\n      this\n    );\n    this.serverUsages = new ServerUsagesImpl(this);\n    this.extendedDatabaseBlobAuditingPolicies = new ExtendedDatabaseBlobAuditingPoliciesImpl(\n      this\n    );\n    this.extendedServerBlobAuditingPolicies = new ExtendedServerBlobAuditingPoliciesImpl(\n      this\n    );\n    this.serverBlobAuditingPolicies = new ServerBlobAuditingPoliciesImpl(this);\n    this.databaseBlobAuditingPolicies = new DatabaseBlobAuditingPoliciesImpl(\n      this\n    );\n    this.databaseAdvisors = new DatabaseAdvisorsImpl(this);\n    this.databaseAutomaticTuningOperations = new DatabaseAutomaticTuningOperationsImpl(\n      this\n    );\n    this.databaseColumns = new DatabaseColumnsImpl(this);\n    this.databaseRecommendedActions = new DatabaseRecommendedActionsImpl(this);\n    this.databaseSchemas = new DatabaseSchemasImpl(this);\n    this.databaseSecurityAlertPolicies = new DatabaseSecurityAlertPoliciesImpl(\n      this\n    );\n    this.databaseTables = new DatabaseTablesImpl(this);\n    this.databaseVulnerabilityAssessmentRuleBaselines = new DatabaseVulnerabilityAssessmentRuleBaselinesImpl(\n      this\n    );\n    this.databaseVulnerabilityAssessments = new DatabaseVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.databaseVulnerabilityAssessmentScans = new DatabaseVulnerabilityAssessmentScansImpl(\n      this\n    );\n    this.dataWarehouseUserActivitiesOperations = new DataWarehouseUserActivitiesOperationsImpl(\n      this\n    );\n    this.deletedServers = new DeletedServersImpl(this);\n    this.elasticPoolOperations = new ElasticPoolOperationsImpl(this);\n    this.encryptionProtectors = new EncryptionProtectorsImpl(this);\n    this.failoverGroups = new FailoverGroupsImpl(this);\n    this.firewallRules = new FirewallRulesImpl(this);\n    this.instanceFailoverGroups = new InstanceFailoverGroupsImpl(this);\n    this.instancePools = new InstancePoolsImpl(this);\n    this.jobAgents = new JobAgentsImpl(this);\n    this.jobCredentials = new JobCredentialsImpl(this);\n    this.jobExecutions = new JobExecutionsImpl(this);\n    this.jobs = new JobsImpl(this);\n    this.jobStepExecutions = new JobStepExecutionsImpl(this);\n    this.jobSteps = new JobStepsImpl(this);\n    this.jobTargetExecutions = new JobTargetExecutionsImpl(this);\n    this.jobTargetGroups = new JobTargetGroupsImpl(this);\n    this.jobVersions = new JobVersionsImpl(this);\n    this.capabilities = new CapabilitiesImpl(this);\n    this.longTermRetentionPolicies = new LongTermRetentionPoliciesImpl(this);\n    this.maintenanceWindowOptionsOperations = new MaintenanceWindowOptionsOperationsImpl(\n      this\n    );\n    this.maintenanceWindowsOperations = new MaintenanceWindowsOperationsImpl(\n      this\n    );\n    this.managedBackupShortTermRetentionPolicies = new ManagedBackupShortTermRetentionPoliciesImpl(\n      this\n    );\n    this.managedDatabaseColumns = new ManagedDatabaseColumnsImpl(this);\n    this.managedDatabaseQueries = new ManagedDatabaseQueriesImpl(this);\n    this.managedDatabaseRestoreDetails = new ManagedDatabaseRestoreDetailsImpl(\n      this\n    );\n    this.managedDatabases = new ManagedDatabasesImpl(this);\n    this.managedDatabaseSchemas = new ManagedDatabaseSchemasImpl(this);\n    this.managedDatabaseSecurityAlertPolicies = new ManagedDatabaseSecurityAlertPoliciesImpl(\n      this\n    );\n    this.managedDatabaseSecurityEvents = new ManagedDatabaseSecurityEventsImpl(\n      this\n    );\n    this.managedDatabaseSensitivityLabels = new ManagedDatabaseSensitivityLabelsImpl(\n      this\n    );\n    this.managedDatabaseRecommendedSensitivityLabels = new ManagedDatabaseRecommendedSensitivityLabelsImpl(\n      this\n    );\n    this.managedDatabaseTables = new ManagedDatabaseTablesImpl(this);\n    this.managedDatabaseTransparentDataEncryption = new ManagedDatabaseTransparentDataEncryptionImpl(\n      this\n    );\n    this.managedDatabaseVulnerabilityAssessmentRuleBaselines = new ManagedDatabaseVulnerabilityAssessmentRuleBaselinesImpl(\n      this\n    );\n    this.managedDatabaseVulnerabilityAssessments = new ManagedDatabaseVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.managedDatabaseVulnerabilityAssessmentScans = new ManagedDatabaseVulnerabilityAssessmentScansImpl(\n      this\n    );\n    this.managedInstanceAdministrators = new ManagedInstanceAdministratorsImpl(\n      this\n    );\n    this.managedInstanceAzureADOnlyAuthentications = new ManagedInstanceAzureADOnlyAuthenticationsImpl(\n      this\n    );\n    this.managedInstanceEncryptionProtectors = new ManagedInstanceEncryptionProtectorsImpl(\n      this\n    );\n    this.managedInstanceKeys = new ManagedInstanceKeysImpl(this);\n    this.managedInstanceLongTermRetentionPolicies = new ManagedInstanceLongTermRetentionPoliciesImpl(\n      this\n    );\n    this.managedInstanceOperations = new ManagedInstanceOperationsImpl(this);\n    this.managedInstancePrivateEndpointConnections = new ManagedInstancePrivateEndpointConnectionsImpl(\n      this\n    );\n    this.managedInstancePrivateLinkResources = new ManagedInstancePrivateLinkResourcesImpl(\n      this\n    );\n    this.managedInstanceTdeCertificates = new ManagedInstanceTdeCertificatesImpl(\n      this\n    );\n    this.managedInstanceVulnerabilityAssessments = new ManagedInstanceVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies = new ManagedRestorableDroppedDatabaseBackupShortTermRetentionPoliciesImpl(\n      this\n    );\n    this.managedServerSecurityAlertPolicies = new ManagedServerSecurityAlertPoliciesImpl(\n      this\n    );\n    this.operations = new OperationsImpl(this);\n    this.operationsHealthOperations = new OperationsHealthOperationsImpl(this);\n    this.privateEndpointConnections = new PrivateEndpointConnectionsImpl(this);\n    this.privateLinkResources = new PrivateLinkResourcesImpl(this);\n    this.recoverableManagedDatabases = new RecoverableManagedDatabasesImpl(\n      this\n    );\n    this.restorePoints = new RestorePointsImpl(this);\n    this.sensitivityLabels = new SensitivityLabelsImpl(this);\n    this.recommendedSensitivityLabels = new RecommendedSensitivityLabelsImpl(\n      this\n    );\n    this.serverAdvisors = new ServerAdvisorsImpl(this);\n    this.serverAutomaticTuningOperations = new ServerAutomaticTuningOperationsImpl(\n      this\n    );\n    this.serverAzureADAdministrators = new ServerAzureADAdministratorsImpl(\n      this\n    );\n    this.serverAzureADOnlyAuthentications = new ServerAzureADOnlyAuthenticationsImpl(\n      this\n    );\n    this.serverDevOpsAuditSettings = new ServerDevOpsAuditSettingsImpl(this);\n    this.serverDnsAliases = new ServerDnsAliasesImpl(this);\n    this.serverKeys = new ServerKeysImpl(this);\n    this.serverOperations = new ServerOperationsImpl(this);\n    this.serverSecurityAlertPolicies = new ServerSecurityAlertPoliciesImpl(\n      this\n    );\n    this.serverTrustGroups = new ServerTrustGroupsImpl(this);\n    this.serverVulnerabilityAssessments = new ServerVulnerabilityAssessmentsImpl(\n      this\n    );\n    this.sqlAgent = new SqlAgentImpl(this);\n    this.subscriptionUsages = new SubscriptionUsagesImpl(this);\n    this.syncAgents = new SyncAgentsImpl(this);\n    this.syncGroups = new SyncGroupsImpl(this);\n    this.syncMembers = new SyncMembersImpl(this);\n    this.tdeCertificates = new TdeCertificatesImpl(this);\n    this.timeZones = new TimeZonesImpl(this);\n    this.virtualClusters = new VirtualClustersImpl(this);\n    this.virtualNetworkRules = new VirtualNetworkRulesImpl(this);\n    this.workloadClassifiers = new WorkloadClassifiersImpl(this);\n    this.workloadGroups = new WorkloadGroupsImpl(this);\n    this.transparentDataEncryptions = new TransparentDataEncryptionsImpl(this);\n    this.backupShortTermRetentionPolicies = new BackupShortTermRetentionPoliciesImpl(\n      this\n    );\n    this.databaseExtensionsOperations = new DatabaseExtensionsOperationsImpl(\n      this\n    );\n    this.databaseOperations = new DatabaseOperationsImpl(this);\n    this.databaseUsages = new DatabaseUsagesImpl(this);\n    this.ledgerDigestUploadsOperations = new LedgerDigestUploadsOperationsImpl(\n      this\n    );\n    this.outboundFirewallRules = new OutboundFirewallRulesImpl(this);\n    this.servers = new ServersImpl(this);\n    this.usages = new UsagesImpl(this);\n    this.longTermRetentionBackups = new LongTermRetentionBackupsImpl(this);\n    this.longTermRetentionManagedInstanceBackups = new LongTermRetentionManagedInstanceBackupsImpl(\n      this\n    );\n    this.managedInstances = new ManagedInstancesImpl(this);\n    this.restorableDroppedDatabases = new RestorableDroppedDatabasesImpl(this);\n    this.restorableDroppedManagedDatabases = new RestorableDroppedManagedDatabasesImpl(\n      this\n    );\n    this.serverConnectionPolicies = new ServerConnectionPoliciesImpl(this);\n  }\n\n  recoverableDatabases: RecoverableDatabases;\n  dataMaskingPolicies: DataMaskingPolicies;\n  dataMaskingRules: DataMaskingRules;\n  geoBackupPolicies: GeoBackupPolicies;\n  databases: Databases;\n  elasticPools: ElasticPools;\n  replicationLinks: ReplicationLinks;\n  serverCommunicationLinks: ServerCommunicationLinks;\n  serviceObjectives: ServiceObjectives;\n  elasticPoolActivities: ElasticPoolActivities;\n  elasticPoolDatabaseActivities: ElasticPoolDatabaseActivities;\n  serverUsages: ServerUsages;\n  extendedDatabaseBlobAuditingPolicies: ExtendedDatabaseBlobAuditingPolicies;\n  extendedServerBlobAuditingPolicies: ExtendedServerBlobAuditingPolicies;\n  serverBlobAuditingPolicies: ServerBlobAuditingPolicies;\n  databaseBlobAuditingPolicies: DatabaseBlobAuditingPolicies;\n  databaseAdvisors: DatabaseAdvisors;\n  databaseAutomaticTuningOperations: DatabaseAutomaticTuningOperations;\n  databaseColumns: DatabaseColumns;\n  databaseRecommendedActions: DatabaseRecommendedActions;\n  databaseSchemas: DatabaseSchemas;\n  databaseSecurityAlertPolicies: DatabaseSecurityAlertPolicies;\n  databaseTables: DatabaseTables;\n  databaseVulnerabilityAssessmentRuleBaselines: DatabaseVulnerabilityAssessmentRuleBaselines;\n  databaseVulnerabilityAssessments: DatabaseVulnerabilityAssessments;\n  databaseVulnerabilityAssessmentScans: DatabaseVulnerabilityAssessmentScans;\n  dataWarehouseUserActivitiesOperations: DataWarehouseUserActivitiesOperations;\n  deletedServers: DeletedServers;\n  elasticPoolOperations: ElasticPoolOperations;\n  encryptionProtectors: EncryptionProtectors;\n  failoverGroups: FailoverGroups;\n  firewallRules: FirewallRules;\n  instanceFailoverGroups: InstanceFailoverGroups;\n  instancePools: InstancePools;\n  jobAgents: JobAgents;\n  jobCredentials: JobCredentials;\n  jobExecutions: JobExecutions;\n  jobs: Jobs;\n  jobStepExecutions: JobStepExecutions;\n  jobSteps: JobSteps;\n  jobTargetExecutions: JobTargetExecutions;\n  jobTargetGroups: JobTargetGroups;\n  jobVersions: JobVersions;\n  capabilities: Capabilities;\n  longTermRetentionPolicies: LongTermRetentionPolicies;\n  maintenanceWindowOptionsOperations: MaintenanceWindowOptionsOperations;\n  maintenanceWindowsOperations: MaintenanceWindowsOperations;\n  managedBackupShortTermRetentionPolicies: ManagedBackupShortTermRetentionPolicies;\n  managedDatabaseColumns: ManagedDatabaseColumns;\n  managedDatabaseQueries: ManagedDatabaseQueries;\n  managedDatabaseRestoreDetails: ManagedDatabaseRestoreDetails;\n  managedDatabases: ManagedDatabases;\n  managedDatabaseSchemas: ManagedDatabaseSchemas;\n  managedDatabaseSecurityAlertPolicies: ManagedDatabaseSecurityAlertPolicies;\n  managedDatabaseSecurityEvents: ManagedDatabaseSecurityEvents;\n  managedDatabaseSensitivityLabels: ManagedDatabaseSensitivityLabels;\n  managedDatabaseRecommendedSensitivityLabels: ManagedDatabaseRecommendedSensitivityLabels;\n  managedDatabaseTables: ManagedDatabaseTables;\n  managedDatabaseTransparentDataEncryption: ManagedDatabaseTransparentDataEncryption;\n  managedDatabaseVulnerabilityAssessmentRuleBaselines: ManagedDatabaseVulnerabilityAssessmentRuleBaselines;\n  managedDatabaseVulnerabilityAssessments: ManagedDatabaseVulnerabilityAssessments;\n  managedDatabaseVulnerabilityAssessmentScans: ManagedDatabaseVulnerabilityAssessmentScans;\n  managedInstanceAdministrators: ManagedInstanceAdministrators;\n  managedInstanceAzureADOnlyAuthentications: ManagedInstanceAzureADOnlyAuthentications;\n  managedInstanceEncryptionProtectors: ManagedInstanceEncryptionProtectors;\n  managedInstanceKeys: ManagedInstanceKeys;\n  managedInstanceLongTermRetentionPolicies: ManagedInstanceLongTermRetentionPolicies;\n  managedInstanceOperations: ManagedInstanceOperations;\n  managedInstancePrivateEndpointConnections: ManagedInstancePrivateEndpointConnections;\n  managedInstancePrivateLinkResources: ManagedInstancePrivateLinkResources;\n  managedInstanceTdeCertificates: ManagedInstanceTdeCertificates;\n  managedInstanceVulnerabilityAssessments: ManagedInstanceVulnerabilityAssessments;\n  managedRestorableDroppedDatabaseBackupShortTermRetentionPolicies: ManagedRestorableDroppedDatabaseBackupShortTermRetentionPolicies;\n  managedServerSecurityAlertPolicies: ManagedServerSecurityAlertPolicies;\n  operations: Operations;\n  operationsHealthOperations: OperationsHealthOperations;\n  privateEndpointConnections: PrivateEndpointConnections;\n  privateLinkResources: PrivateLinkResources;\n  recoverableManagedDatabases: RecoverableManagedDatabases;\n  restorePoints: RestorePoints;\n  sensitivityLabels: SensitivityLabels;\n  recommendedSensitivityLabels: RecommendedSensitivityLabels;\n  serverAdvisors: ServerAdvisors;\n  serverAutomaticTuningOperations: ServerAutomaticTuningOperations;\n  serverAzureADAdministrators: ServerAzureADAdministrators;\n  serverAzureADOnlyAuthentications: ServerAzureADOnlyAuthentications;\n  serverDevOpsAuditSettings: ServerDevOpsAuditSettings;\n  serverDnsAliases: ServerDnsAliases;\n  serverKeys: ServerKeys;\n  serverOperations: ServerOperations;\n  serverSecurityAlertPolicies: ServerSecurityAlertPolicies;\n  serverTrustGroups: ServerTrustGroups;\n  serverVulnerabilityAssessments: ServerVulnerabilityAssessments;\n  sqlAgent: SqlAgent;\n  subscriptionUsages: SubscriptionUsages;\n  syncAgents: SyncAgents;\n  syncGroups: SyncGroups;\n  syncMembers: SyncMembers;\n  tdeCertificates: TdeCertificates;\n  timeZones: TimeZones;\n  virtualClusters: VirtualClusters;\n  virtualNetworkRules: VirtualNetworkRules;\n  workloadClassifiers: WorkloadClassifiers;\n  workloadGroups: WorkloadGroups;\n  transparentDataEncryptions: TransparentDataEncryptions;\n  backupShortTermRetentionPolicies: BackupShortTermRetentionPolicies;\n  databaseExtensionsOperations: DatabaseExtensionsOperations;\n  databaseOperations: DatabaseOperations;\n  databaseUsages: DatabaseUsages;\n  ledgerDigestUploadsOperations: LedgerDigestUploadsOperations;\n  outboundFirewallRules: OutboundFirewallRules;\n  servers: Servers;\n  usages: Usages;\n  longTermRetentionBackups: LongTermRetentionBackups;\n  longTermRetentionManagedInstanceBackups: LongTermRetentionManagedInstanceBackups;\n  managedInstances: ManagedInstances;\n  restorableDroppedDatabases: RestorableDroppedDatabases;\n  restorableDroppedManagedDatabases: RestorableDroppedManagedDatabases;\n  serverConnectionPolicies: ServerConnectionPolicies;\n}\n"],"names":["KnownGeoBackupPolicyName","KnownUnitType","KnownPrimaryAggregationType","KnownUnitDefinitionType","KnownRecommendedActionCurrentState","KnownColumnDataType","KnownTableTemporalType","KnownSecurityAlertPolicyName","KnownCreatedByType","KnownVulnerabilityAssessmentName","KnownVulnerabilityAssessmentScanTriggerType","KnownVulnerabilityAssessmentScanState","KnownDataWarehouseUserActivityName","KnownElasticPoolState","KnownElasticPoolLicenseType","KnownServerKeyType","KnownEncryptionProtectorName","KnownReadWriteEndpointFailoverPolicy","KnownReadOnlyEndpointFailoverPolicy","KnownFailoverGroupReplicationRole","KnownInstanceFailoverGroupReplicationRole","KnownInstancePoolLicenseType","KnownJobAgentState","KnownJobExecutionLifecycle","KnownProvisioningState","KnownJobTargetType","KnownJobStepActionType","KnownJobStepActionSource","KnownJobStepOutputType","KnownCapabilityGroup","KnownMaxSizeUnit","KnownLogSizeUnit","KnownPerformanceLevelUnit","KnownPauseDelayTimeUnit","KnownStorageCapabilityStorageAccountType","KnownLongTermRetentionPolicyName","KnownDayOfWeek","KnownManagedShortTermRetentionPolicyName","KnownQueryTimeGrainType","KnownQueryMetricUnitType","KnownRestoreDetailsName","KnownManagedDatabaseStatus","KnownCatalogCollationType","KnownManagedDatabaseCreateMode","KnownTransparentDataEncryptionName","KnownManagedInstanceAdministratorType","KnownAdministratorName","KnownAuthenticationName","KnownManagedInstanceLongTermRetentionPolicyName","KnownManagementOperationState","KnownUpsertManagedServerOperationStepStatus","KnownOperationOrigin","KnownPrivateLinkServiceConnectionStateStatus","KnownPrivateLinkServiceConnectionStateActionsRequire","KnownPrivateEndpointProvisioningState","KnownAdministratorType","KnownServerTrustGroupPropertiesTrustScopesItem","KnownSqlAgentConfigurationPropertiesState","KnownSyncAgentState","KnownSyncMemberDbType","KnownEnum60","KnownSyncGroupLogType","KnownSyncConflictResolutionPolicy","KnownSyncGroupState","KnownSyncDirection","KnownSyncMemberState","KnownDnsRefreshConfigurationPropertiesStatus","KnownVirtualNetworkRuleState","KnownShortTermRetentionPolicyName","KnownDiffBackupIntervalInHours","KnownOperationMode","KnownStorageKeyType","KnownLedgerDigestUploadsName","KnownReplicationState","KnownReplicationLinkType","KnownIdentityType","KnownServerNetworkAccessFlag","KnownServerWorkspaceFeature","KnownPrincipalType","KnownDatabaseIdentityType","KnownCreateMode","KnownSampleName","KnownDatabaseStatus","KnownDatabaseLicenseType","KnownDatabaseReadScale","KnownSecondaryType","KnownBackupStorageRedundancy","KnownReplicaType","KnownDatabaseState","KnownManagedInstancePropertiesProvisioningState","KnownManagedServerCreateMode","KnownManagedInstanceLicenseType","KnownManagedInstanceProxyOverride","KnownServicePrincipalType","KnownAggregationFunctionType","KnownMetricType","KnownConnectionPolicyName","KnownServerConnectionType","KnownServiceObjectiveName","DataMaskingPolicyMapper","DataMaskingRuleMapper","GeoBackupPolicyMapper","DatabaseMapper","DatabaseUpdateMapper","ResourceMoveDefinitionMapper","ImportExistingDatabaseDefinitionMapper","ExportDatabaseDefinitionMapper","ElasticPoolMapper","ElasticPoolUpdateMapper","UnlinkParametersMapper","ServerCommunicationLinkMapper","ExtendedDatabaseBlobAuditingPolicyMapper","ExtendedServerBlobAuditingPolicyMapper","ServerBlobAuditingPolicyMapper","DatabaseBlobAuditingPolicyMapper","AdvisorMapper","DatabaseAutomaticTuningMapper","RecommendedActionMapper","DatabaseSecurityAlertPolicyMapper","DatabaseVulnerabilityAssessmentRuleBaselineMapper","DatabaseVulnerabilityAssessmentMapper","EncryptionProtectorMapper","FailoverGroupMapper","FailoverGroupUpdateMapper","FirewallRuleMapper","FirewallRuleListMapper","InstanceFailoverGroupMapper","InstancePoolMapper","InstancePoolUpdateMapper","JobAgentMapper","JobAgentUpdateMapper","JobCredentialMapper","JobMapper","JobStepMapper","JobTargetGroupMapper","LongTermRetentionPolicyMapper","MaintenanceWindowsMapper","ManagedBackupShortTermRetentionPolicyMapper","ManagedDatabaseMapper","ManagedDatabaseUpdateMapper","CompleteDatabaseRestoreDefinitionMapper","ManagedDatabaseSecurityAlertPolicyMapper","SensitivityLabelMapper","SensitivityLabelUpdateListMapper","RecommendedSensitivityLabelUpdateListMapper","ManagedTransparentDataEncryptionMapper","ManagedInstanceAdministratorMapper","ManagedInstanceAzureADOnlyAuthenticationMapper","ManagedInstanceEncryptionProtectorMapper","ManagedInstanceKeyMapper","ManagedInstanceLongTermRetentionPolicyMapper","ManagedInstancePrivateEndpointConnectionMapper","TdeCertificateMapper","ManagedInstanceVulnerabilityAssessmentMapper","ManagedServerSecurityAlertPolicyMapper","PrivateEndpointConnectionMapper","CreateDatabaseRestorePointDefinitionMapper","ServerAutomaticTuningMapper","ServerAzureADAdministratorMapper","ServerAzureADOnlyAuthenticationMapper","ServerDevOpsAuditingSettingsMapper","ServerDnsAliasAcquisitionMapper","ServerKeyMapper","ServerSecurityAlertPolicyMapper","ServerTrustGroupMapper","ServerVulnerabilityAssessmentMapper","SqlAgentConfigurationMapper","SyncAgentMapper","SyncGroupMapper","SyncMemberMapper","VirtualClusterUpdateMapper","VirtualNetworkRuleMapper","WorkloadClassifierMapper","WorkloadGroupMapper","LogicalDatabaseTransparentDataEncryptionMapper","BackupShortTermRetentionPolicyMapper","DatabaseExtensionsMapper","LedgerDigestUploadsMapper","OutboundFirewallRuleMapper","ServerMapper","ServerUpdateMapper","ImportNewDatabaseDefinitionMapper","CheckNameAvailabilityRequestMapper","CopyLongTermRetentionBackupParametersMapper","UpdateLongTermRetentionBackupParametersMapper","ManagedInstanceMapper","ManagedInstanceUpdateMapper","ServerConnectionPolicyMapper","__await","__asyncValues","__asyncDelegator","getOperationSpec","listByServerOperationSpec","serializer","coreClient","Mappers.RecoverableDatabase","Parameters.apiVersion","Parameters.$host","Parameters.subscriptionId","Parameters.resourceGroupName","Parameters.serverName","Parameters.databaseName","Parameters.accept","Mappers.RecoverableDatabaseListResult","createOrUpdateOperationSpec","Mappers.DataMaskingPolicy","Parameters.parameters","Parameters.dataMaskingPolicyName","Parameters.contentType","listByDatabaseOperationSpec","Mappers.DataMaskingRule","Parameters.parameters1","Parameters.dataMaskingRuleName","Mappers.DataMaskingRuleListResult","Mappers.GeoBackupPolicy","Parameters.parameters2","Parameters.geoBackupPolicyName","Mappers.GeoBackupPolicyListResult","__rest","listMetricsOperationSpec","listMetricDefinitionsOperationSpec","__awaiter","LroEngine","deleteOperationSpec","updateOperationSpec","listByElasticPoolOperationSpec","failoverOperationSpec","exportOperationSpec","listByServerNextOperationSpec","listByElasticPoolNextOperationSpec","Mappers.MetricListResult","Parameters.filter","Mappers.MetricDefinitionListResult","Mappers.DatabaseListResult","Parameters.skipToken","Parameters.apiVersion1","Mappers.Database","Parameters.parameters3","Parameters.parameters4","Parameters.elasticPoolName","Parameters.replicaType","Parameters.parameters5","Mappers.ImportExportOperationResult","Parameters.parameters6","Parameters.parameters7","Parameters.nextLink","Mappers.ElasticPoolListResult","Parameters.skip","Parameters.apiVersion2","Mappers.ElasticPool","Parameters.parameters8","Parameters.parameters9","listByDatabaseNextOperationSpec","Parameters.linkId","Parameters.parameters10","Mappers.ReplicationLinkListResult","Parameters.apiVersion3","Mappers.ReplicationLink","Parameters.communicationLinkName","Mappers.ServerCommunicationLink","Parameters.parameters11","Mappers.ServerCommunicationLinkListResult","Mappers.ServiceObjective","Parameters.serviceObjectiveName","Mappers.ServiceObjectiveListResult","Mappers.ElasticPoolActivityListResult","Mappers.ElasticPoolDatabaseActivityListResult","Mappers.ServerUsageListResult","Mappers.ExtendedDatabaseBlobAuditingPolicy","Parameters.blobAuditingPolicyName","Parameters.parameters12","Mappers.ExtendedDatabaseBlobAuditingPolicyListResult","Mappers.ExtendedServerBlobAuditingPolicy","Parameters.parameters13","Mappers.ExtendedServerBlobAuditingPolicyListResult","Mappers.ServerBlobAuditingPolicy","Parameters.parameters14","Mappers.ServerBlobAuditingPolicyListResult","Mappers.DatabaseBlobAuditingPolicy","Parameters.parameters15","Mappers.DatabaseBlobAuditingPolicyListResult","Parameters.expand","Mappers.Advisor","Parameters.advisorName","Parameters.parameters16","Mappers.DatabaseAutomaticTuning","Parameters.parameters17","listByTableOperationSpec","listByTableNextOperationSpec","Mappers.DatabaseColumnListResult","Parameters.schema","Parameters.table","Parameters.column","Parameters.orderBy","Parameters.skiptoken","Parameters.filter1","Parameters.schemaName","Parameters.tableName","Mappers.DatabaseColumn","Parameters.columnName","Mappers.RecommendedAction","Parameters.recommendedActionName","Parameters.parameters18","Mappers.DatabaseSchemaListResult","Mappers.DatabaseSchema","Mappers.DatabaseSecurityAlertPolicy","Parameters.securityAlertPolicyName","Parameters.parameters19","Mappers.DatabaseSecurityAlertListResult","listBySchemaOperationSpec","listBySchemaNextOperationSpec","Mappers.DatabaseTableListResult","Mappers.DatabaseTable","Mappers.DatabaseVulnerabilityAssessmentRuleBaseline","Parameters.vulnerabilityAssessmentName","Parameters.ruleId","Parameters.baselineName","Parameters.parameters20","Mappers.DatabaseVulnerabilityAssessment","Parameters.parameters21","Mappers.DatabaseVulnerabilityAssessmentListResult","initiateScanOperationSpec","Parameters.scanId","Mappers.VulnerabilityAssessmentScanRecordListResult","Mappers.VulnerabilityAssessmentScanRecord","Mappers.DatabaseVulnerabilityAssessmentScansExport","Mappers.DataWarehouseUserActivities","Parameters.dataWarehouseUserActivityName","Mappers.DataWarehouseUserActivitiesListResult","listOperationSpec","listByLocationOperationSpec","listNextOperationSpec","listByLocationNextOperationSpec","Mappers.DeletedServerListResult","Mappers.DeletedServer","Parameters.locationName","Parameters.deletedServerName","cancelOperationSpec","Parameters.operationId","Mappers.ElasticPoolOperationListResult","revalidateOperationSpec","Mappers.EncryptionProtectorListResult","Mappers.EncryptionProtector","Parameters.encryptionProtectorName","Parameters.parameters22","forceFailoverAllowDataLossOperationSpec","Mappers.FailoverGroup","Parameters.failoverGroupName","Parameters.parameters23","Parameters.parameters24","Mappers.FailoverGroupListResult","Mappers.FirewallRule","Parameters.firewallRuleName","Parameters.parameters25","Mappers.FirewallRuleListResult","Parameters.parameters26","Mappers.InstanceFailoverGroup","Parameters.parameters27","Mappers.InstanceFailoverGroupListResult","listByResourceGroupOperationSpec","listByResourceGroupNextOperationSpec","Mappers.InstancePool","Parameters.instancePoolName","Parameters.parameters28","Parameters.parameters29","Mappers.InstancePoolListResult","Mappers.JobAgentListResult","Mappers.JobAgent","Parameters.jobAgentName","Parameters.parameters30","Parameters.parameters31","listByAgentOperationSpec","listByAgentNextOperationSpec","Mappers.JobCredentialListResult","Mappers.JobCredential","Parameters.credentialName","Parameters.parameters32","createOperationSpec","listByJobOperationSpec","listByJobNextOperationSpec","Mappers.JobExecutionListResult","Parameters.createTimeMin","Parameters.createTimeMax","Parameters.endTimeMin","Parameters.endTimeMax","Parameters.isActive","Parameters.top","Parameters.jobName","Parameters.jobExecutionId","Mappers.JobExecution","Mappers.JobListResult","Mappers.Job","Parameters.parameters33","listByJobExecutionOperationSpec","listByJobExecutionNextOperationSpec","Parameters.stepName","Mappers.JobStepListResult","Parameters.jobVersion","Mappers.JobStep","Parameters.parameters34","Parameters.targetId","Mappers.JobTargetGroupListResult","Mappers.JobTargetGroup","Parameters.targetGroupName","Parameters.parameters35","Mappers.JobVersionListResult","Mappers.JobVersion","Mappers.LocationCapabilities","Parameters.include","Mappers.LongTermRetentionPolicy","Parameters.policyName","Parameters.parameters36","Mappers.LongTermRetentionPolicyListResult","Mappers.MaintenanceWindowOptions","Parameters.maintenanceWindowOptionsName","Mappers.MaintenanceWindows","Parameters.maintenanceWindowName","Parameters.parameters37","Mappers.ManagedBackupShortTermRetentionPolicy","Parameters.managedInstanceName","Parameters.policyName1","Parameters.parameters38","Mappers.ManagedBackupShortTermRetentionPolicyListResult","Mappers.ManagedInstanceQuery","Parameters.queryId","Mappers.ManagedInstanceQueryStatistics","Parameters.startTime","Parameters.endTime","Parameters.interval","Mappers.ManagedDatabaseRestoreDetailsResult","Parameters.restoreDetailsName","listByInstanceOperationSpec","listByInstanceNextOperationSpec","Mappers.ManagedDatabaseListResult","Mappers.ManagedDatabase","Parameters.parameters39","Parameters.parameters40","Parameters.parameters41","Mappers.ManagedDatabaseSecurityAlertPolicy","Parameters.parameters42","Mappers.ManagedDatabaseSecurityAlertPolicyListResult","Mappers.SecurityEventCollection","disableRecommendationOperationSpec","enableRecommendationOperationSpec","listCurrentByDatabaseOperationSpec","listRecommendedByDatabaseOperationSpec","listCurrentByDatabaseNextOperationSpec","listRecommendedByDatabaseNextOperationSpec","Mappers.SensitivityLabel","Parameters.sensitivityLabelSource","Parameters.parameters43","Parameters.sensitivityLabelSource1","Parameters.sensitivityLabelSource2","Mappers.SensitivityLabelListResult","Parameters.count","Parameters.parameters44","Parameters.includeDisabledRecommendations","Parameters.parameters45","Mappers.ManagedTransparentDataEncryption","Parameters.tdeName","Parameters.parameters46","Mappers.ManagedTransparentDataEncryptionListResult","Mappers.ManagedInstanceAdministratorListResult","Mappers.ManagedInstanceAdministrator","Parameters.administratorName","Parameters.parameters47","Mappers.ManagedInstanceAzureADOnlyAuthentication","Parameters.authenticationName","Parameters.parameters48","Mappers.ManagedInstanceAzureADOnlyAuthListResult","Mappers.ManagedInstanceEncryptionProtectorListResult","Mappers.ManagedInstanceEncryptionProtector","Parameters.parameters49","Mappers.ManagedInstanceKeyListResult","Mappers.ManagedInstanceKey","Parameters.keyName","Parameters.parameters50","Mappers.ManagedInstanceLongTermRetentionPolicy","Parameters.policyName2","Parameters.parameters51","Mappers.ManagedInstanceLongTermRetentionPolicyListResult","listByManagedInstanceOperationSpec","listByManagedInstanceNextOperationSpec","Mappers.ManagedInstanceOperationListResult","Mappers.ManagedInstanceOperation","Mappers.ManagedInstancePrivateEndpointConnection","Parameters.privateEndpointConnectionName","Parameters.parameters52","Mappers.ManagedInstancePrivateEndpointConnectionListResult","Mappers.ManagedInstancePrivateLinkListResult","Mappers.ManagedInstancePrivateLink","Parameters.groupName","Parameters.parameters53","Mappers.ManagedInstanceVulnerabilityAssessment","Parameters.parameters54","Mappers.ManagedInstanceVulnerabilityAssessmentListResult","Parameters.restorableDroppedDatabaseId","Mappers.ManagedServerSecurityAlertPolicy","Parameters.parameters55","Mappers.ManagedServerSecurityAlertPolicyListResult","Mappers.OperationListResult","Mappers.OperationsHealthListResult","Mappers.PrivateEndpointConnection","Parameters.parameters56","Mappers.PrivateEndpointConnectionListResult","Mappers.PrivateLinkResourceListResult","Mappers.PrivateLinkResource","Mappers.RecoverableManagedDatabaseListResult","Mappers.RecoverableManagedDatabase","Parameters.recoverableDatabaseName","Mappers.RestorePointListResult","Mappers.RestorePoint","Parameters.parameters57","Parameters.restorePointName","Mappers.ServerAutomaticTuning","Parameters.parameters58","Mappers.ServerAzureADAdministrator","Parameters.parameters59","Mappers.AdministratorListResult","Mappers.ServerAzureADOnlyAuthentication","Parameters.parameters60","Mappers.AzureADOnlyAuthListResult","Mappers.ServerDevOpsAuditingSettings","Parameters.devOpsAuditingSettingsName","Parameters.parameters61","Mappers.ServerDevOpsAuditSettingsListResult","Mappers.ServerDnsAlias","Parameters.dnsAliasName","Mappers.ServerDnsAliasListResult","Parameters.parameters62","Mappers.ServerKeyListResult","Mappers.ServerKey","Parameters.parameters63","Mappers.ServerOperationListResult","Mappers.ServerSecurityAlertPolicy","Parameters.parameters64","Mappers.LogicalServerSecurityAlertPolicyListResult","Mappers.ServerTrustGroup","Parameters.serverTrustGroupName","Parameters.parameters65","Mappers.ServerTrustGroupListResult","Mappers.ServerVulnerabilityAssessment","Parameters.parameters66","Mappers.ServerVulnerabilityAssessmentListResult","Mappers.SqlAgentConfiguration","Parameters.parameters67","Mappers.SubscriptionUsageListResult","Mappers.SubscriptionUsage","Parameters.usageName","Mappers.SyncAgent","Parameters.syncAgentName","Parameters.parameters68","Mappers.SyncAgentListResult","Mappers.SyncAgentKeyProperties","Mappers.SyncAgentLinkedDatabaseListResult","Mappers.SyncDatabaseIdListResult","Parameters.syncGroupName","Mappers.SyncFullSchemaPropertiesListResult","Mappers.SyncGroupLogListResult","Parameters.startTime1","Parameters.endTime1","Parameters.typeParam","Parameters.continuationToken","Mappers.SyncGroup","Parameters.parameters69","Mappers.SyncGroupListResult","Mappers.SyncMember","Parameters.syncMemberName","Parameters.parameters70","Mappers.SyncMemberListResult","Mappers.TimeZoneListResult","Mappers.TimeZone","Parameters.timeZoneId","Mappers.UpdateManagedInstanceDnsServersOperation","Parameters.virtualClusterName","Mappers.VirtualClusterListResult","Mappers.VirtualCluster","Parameters.parameters71","Mappers.VirtualNetworkRule","Parameters.virtualNetworkRuleName","Parameters.parameters72","Mappers.VirtualNetworkRuleListResult","Mappers.WorkloadClassifier","Parameters.workloadGroupName","Parameters.workloadClassifierName","Parameters.parameters73","Mappers.WorkloadClassifierListResult","Mappers.WorkloadGroup","Parameters.parameters74","Mappers.WorkloadGroupListResult","Mappers.LogicalDatabaseTransparentDataEncryption","Parameters.parameters75","Mappers.LogicalDatabaseTransparentDataEncryptionListResult","Mappers.BackupShortTermRetentionPolicy","Parameters.policyName3","Parameters.parameters76","Mappers.BackupShortTermRetentionPolicyListResult","Parameters.extensionName","Mappers.ImportExportExtensionsOperationResult","Parameters.parameters77","Mappers.ImportExportExtensionsOperationListResult","Mappers.DatabaseOperationListResult","Mappers.DatabaseUsageListResult","Mappers.LedgerDigestUploads","Parameters.ledgerDigestUploads","Parameters.parameters78","Mappers.LedgerDigestUploadsListResult","Mappers.OutboundFirewallRule","Parameters.outboundRuleFqdn","Parameters.parameters79","Mappers.OutboundFirewallRuleListResult","Mappers.ServerListResult","Mappers.Server","Parameters.parameters80","Parameters.parameters81","Parameters.parameters82","Mappers.CheckNameAvailabilityResponse","Parameters.parameters83","listByInstancePoolOperationSpec","listByInstancePoolNextOperationSpec","Mappers.UsageListResult","Parameters.expandChildren","getByResourceGroupOperationSpec","deleteByResourceGroupOperationSpec","listByResourceGroupDatabaseOperationSpec","listByResourceGroupLocationOperationSpec","listByResourceGroupDatabaseNextOperationSpec","listByResourceGroupLocationNextOperationSpec","Mappers.LongTermRetentionBackupOperationResult","Parameters.parameters84","Parameters.longTermRetentionServerName","Parameters.longTermRetentionDatabaseName","Parameters.backupName","Parameters.parameters85","Mappers.LongTermRetentionBackup","Mappers.LongTermRetentionBackupListResult","Parameters.onlyLatestPerDatabase","Parameters.databaseState","Mappers.ManagedInstanceLongTermRetentionBackup","Mappers.ManagedInstanceLongTermRetentionBackupListResult","Mappers.ManagedInstanceListResult","Mappers.ManagedInstance","Parameters.parameters86","Parameters.parameters87","Mappers.TopQueriesListResult","Parameters.numberOfQueries","Parameters.databases","Parameters.aggregationFunction","Parameters.observationMetric","Mappers.RestorableDroppedDatabaseListResult","Mappers.RestorableDroppedDatabase","Mappers.RestorableDroppedManagedDatabaseListResult","Mappers.RestorableDroppedManagedDatabase","Mappers.ServerConnectionPolicy","Parameters.connectionPolicyName","Parameters.parameters88","Mappers.ServerConnectionPolicyListResult","coreRestPipeline"],"mappings":"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"}