import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { SubscriptionContract, UserSubscriptionListOptionalParams, UserSubscriptionGetOptionalParams, UserSubscriptionGetResponse } from "../models";
/** Interface representing a UserSubscription. */
export interface UserSubscription {
    /**
     * Lists the collection of subscriptions of the specified user.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param userId User identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, serviceName: string, userId: string, options?: UserSubscriptionListOptionalParams): PagedAsyncIterableIterator<SubscriptionContract>;
    /**
     * Gets the specified Subscription entity associated with a particular user.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param userId User identifier. Must be unique in the current API Management service instance.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serviceName: string, userId: string, sid: string, options?: UserSubscriptionGetOptionalParams): Promise<UserSubscriptionGetResponse>;
}
//# sourceMappingURL=userSubscription.d.ts.map