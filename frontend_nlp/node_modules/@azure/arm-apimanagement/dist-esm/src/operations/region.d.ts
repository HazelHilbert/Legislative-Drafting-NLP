import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Region } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { RegionContract, RegionListByServiceOptionalParams } from "../models";
/** Class containing Region operations. */
export declare class RegionImpl implements Region {
    private readonly client;
    /**
     * Initialize a new instance of the class Region class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists all azure regions in which the service exists.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    listByService(resourceGroupName: string, serviceName: string, options?: RegionListByServiceOptionalParams): PagedAsyncIterableIterator<RegionContract>;
    private listByServicePagingPage;
    private listByServicePagingAll;
    /**
     * Lists all azure regions in which the service exists.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    private _listByService;
    /**
     * ListByServiceNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param nextLink The nextLink from the previous successful call to the ListByService method.
     * @param options The options parameters.
     */
    private _listByServiceNext;
}
//# sourceMappingURL=region.d.ts.map