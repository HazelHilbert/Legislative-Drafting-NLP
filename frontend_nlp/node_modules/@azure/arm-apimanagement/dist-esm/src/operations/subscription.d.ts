import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Subscription } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { SubscriptionContract, SubscriptionListOptionalParams, SubscriptionGetEntityTagOptionalParams, SubscriptionGetEntityTagResponse, SubscriptionGetOptionalParams, SubscriptionGetResponse, SubscriptionCreateParameters, SubscriptionCreateOrUpdateOptionalParams, SubscriptionCreateOrUpdateResponse, SubscriptionUpdateParameters, SubscriptionUpdateOptionalParams, SubscriptionUpdateResponse, SubscriptionDeleteOptionalParams, SubscriptionRegeneratePrimaryKeyOptionalParams, SubscriptionRegenerateSecondaryKeyOptionalParams, SubscriptionListSecretsOptionalParams, SubscriptionListSecretsResponse } from "../models";
/** Class containing Subscription operations. */
export declare class SubscriptionImpl implements Subscription {
    private readonly client;
    /**
     * Initialize a new instance of the class Subscription class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists all subscriptions of the API Management service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    list(resourceGroupName: string, serviceName: string, options?: SubscriptionListOptionalParams): PagedAsyncIterableIterator<SubscriptionContract>;
    private listPagingPage;
    private listPagingAll;
    /**
     * Lists all subscriptions of the API Management service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    private _list;
    /**
     * Gets the entity state (Etag) version of the apimanagement subscription specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    getEntityTag(resourceGroupName: string, serviceName: string, sid: string, options?: SubscriptionGetEntityTagOptionalParams): Promise<SubscriptionGetEntityTagResponse>;
    /**
     * Gets the specified Subscription entity.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serviceName: string, sid: string, options?: SubscriptionGetOptionalParams): Promise<SubscriptionGetResponse>;
    /**
     * Creates or updates the subscription of specified user to the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param parameters Create parameters.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, sid: string, parameters: SubscriptionCreateParameters, options?: SubscriptionCreateOrUpdateOptionalParams): Promise<SubscriptionCreateOrUpdateResponse>;
    /**
     * Updates the details of a subscription specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     *                response of the GET request or it should be * for unconditional update.
     * @param parameters Update parameters.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, serviceName: string, sid: string, ifMatch: string, parameters: SubscriptionUpdateParameters, options?: SubscriptionUpdateOptionalParams): Promise<SubscriptionUpdateResponse>;
    /**
     * Deletes the specified subscription.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     *                response of the GET request or it should be * for unconditional update.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serviceName: string, sid: string, ifMatch: string, options?: SubscriptionDeleteOptionalParams): Promise<void>;
    /**
     * Regenerates primary key of existing subscription of the API Management service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    regeneratePrimaryKey(resourceGroupName: string, serviceName: string, sid: string, options?: SubscriptionRegeneratePrimaryKeyOptionalParams): Promise<void>;
    /**
     * Regenerates secondary key of existing subscription of the API Management service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    regenerateSecondaryKey(resourceGroupName: string, serviceName: string, sid: string, options?: SubscriptionRegenerateSecondaryKeyOptionalParams): Promise<void>;
    /**
     * Gets the specified Subscription keys.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param sid Subscription entity Identifier. The entity represents the association between a user and
     *            a product in API Management.
     * @param options The options parameters.
     */
    listSecrets(resourceGroupName: string, serviceName: string, sid: string, options?: SubscriptionListSecretsOptionalParams): Promise<SubscriptionListSecretsResponse>;
    /**
     * ListNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param nextLink The nextLink from the previous successful call to the List method.
     * @param options The options parameters.
     */
    private _listNext;
}
//# sourceMappingURL=subscription.d.ts.map