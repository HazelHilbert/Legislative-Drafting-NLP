import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ApiProduct } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { ProductContract, ApiProductListByApisOptionalParams } from "../models";
/** Class containing ApiProduct operations. */
export declare class ApiProductImpl implements ApiProduct {
    private readonly client;
    /**
     * Initialize a new instance of the class ApiProduct class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists all Products, which the API is part of.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    listByApis(resourceGroupName: string, serviceName: string, apiId: string, options?: ApiProductListByApisOptionalParams): PagedAsyncIterableIterator<ProductContract>;
    private listByApisPagingPage;
    private listByApisPagingAll;
    /**
     * Lists all Products, which the API is part of.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    private _listByApis;
    /**
     * ListByApisNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param apiId API identifier. Must be unique in the current API Management service instance.
     * @param nextLink The nextLink from the previous successful call to the ListByApis method.
     * @param options The options parameters.
     */
    private _listByApisNext;
}
//# sourceMappingURL=apiProduct.d.ts.map