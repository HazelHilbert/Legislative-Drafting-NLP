import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ProductGroup } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { GroupContract, ProductGroupListByProductOptionalParams, ProductGroupCheckEntityExistsOptionalParams, ProductGroupCheckEntityExistsResponse, ProductGroupCreateOrUpdateOptionalParams, ProductGroupCreateOrUpdateResponse, ProductGroupDeleteOptionalParams } from "../models";
/** Class containing ProductGroup operations. */
export declare class ProductGroupImpl implements ProductGroup {
    private readonly client;
    /**
     * Initialize a new instance of the class ProductGroup class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists the collection of developer groups associated with the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    listByProduct(resourceGroupName: string, serviceName: string, productId: string, options?: ProductGroupListByProductOptionalParams): PagedAsyncIterableIterator<GroupContract>;
    private listByProductPagingPage;
    private listByProductPagingAll;
    /**
     * Lists the collection of developer groups associated with the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    private _listByProduct;
    /**
     * Checks that Group entity specified by identifier is associated with the Product entity.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param groupId Group identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    checkEntityExists(resourceGroupName: string, serviceName: string, productId: string, groupId: string, options?: ProductGroupCheckEntityExistsOptionalParams): Promise<ProductGroupCheckEntityExistsResponse>;
    /**
     * Adds the association between the specified developer group with the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param groupId Group identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, productId: string, groupId: string, options?: ProductGroupCreateOrUpdateOptionalParams): Promise<ProductGroupCreateOrUpdateResponse>;
    /**
     * Deletes the association between the specified group and product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param groupId Group identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serviceName: string, productId: string, groupId: string, options?: ProductGroupDeleteOptionalParams): Promise<void>;
    /**
     * ListByProductNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param nextLink The nextLink from the previous successful call to the ListByProduct method.
     * @param options The options parameters.
     */
    private _listByProductNext;
}
//# sourceMappingURL=productGroup.d.ts.map