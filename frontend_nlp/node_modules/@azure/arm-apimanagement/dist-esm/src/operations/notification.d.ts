import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { Notification } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { NotificationContract, NotificationListByServiceOptionalParams, NotificationName, NotificationGetOptionalParams, NotificationGetResponse, NotificationCreateOrUpdateOptionalParams, NotificationCreateOrUpdateResponse } from "../models";
/** Class containing Notification operations. */
export declare class NotificationImpl implements Notification {
    private readonly client;
    /**
     * Initialize a new instance of the class Notification class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists a collection of properties defined within a service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    listByService(resourceGroupName: string, serviceName: string, options?: NotificationListByServiceOptionalParams): PagedAsyncIterableIterator<NotificationContract>;
    private listByServicePagingPage;
    private listByServicePagingAll;
    /**
     * Lists a collection of properties defined within a service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    private _listByService;
    /**
     * Gets the details of the Notification specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serviceName: string, notificationName: NotificationName, options?: NotificationGetOptionalParams): Promise<NotificationGetResponse>;
    /**
     * Create or Update API Management publisher notification.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param notificationName Notification Name Identifier.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, notificationName: NotificationName, options?: NotificationCreateOrUpdateOptionalParams): Promise<NotificationCreateOrUpdateResponse>;
    /**
     * ListByServiceNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param nextLink The nextLink from the previous successful call to the ListByService method.
     * @param options The options parameters.
     */
    private _listByServiceNext;
}
//# sourceMappingURL=notification.d.ts.map