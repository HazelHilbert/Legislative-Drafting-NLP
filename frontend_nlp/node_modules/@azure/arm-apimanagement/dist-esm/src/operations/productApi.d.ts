import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ProductApi } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { ApiContract, ProductApiListByProductOptionalParams, ProductApiCheckEntityExistsOptionalParams, ProductApiCheckEntityExistsResponse, ProductApiCreateOrUpdateOptionalParams, ProductApiCreateOrUpdateResponse, ProductApiDeleteOptionalParams } from "../models";
/** Class containing ProductApi operations. */
export declare class ProductApiImpl implements ProductApi {
    private readonly client;
    /**
     * Initialize a new instance of the class ProductApi class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists a collection of the APIs associated with a product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    listByProduct(resourceGroupName: string, serviceName: string, productId: string, options?: ProductApiListByProductOptionalParams): PagedAsyncIterableIterator<ApiContract>;
    private listByProductPagingPage;
    private listByProductPagingAll;
    /**
     * Lists a collection of the APIs associated with a product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param options The options parameters.
     */
    private _listByProduct;
    /**
     * Checks that API entity specified by identifier is associated with the Product entity.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service instance.
     *              Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The options parameters.
     */
    checkEntityExists(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: ProductApiCheckEntityExistsOptionalParams): Promise<ProductApiCheckEntityExistsResponse>;
    /**
     * Adds an API to the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service instance.
     *              Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: ProductApiCreateOrUpdateOptionalParams): Promise<ProductApiCreateOrUpdateResponse>;
    /**
     * Deletes the specified API from the specified product.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param apiId API revision identifier. Must be unique in the current API Management service instance.
     *              Non-current revision has ;rev=n as a suffix where n is the revision number.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serviceName: string, productId: string, apiId: string, options?: ProductApiDeleteOptionalParams): Promise<void>;
    /**
     * ListByProductNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param productId Product identifier. Must be unique in the current API Management service instance.
     * @param nextLink The nextLink from the previous successful call to the ListByProduct method.
     * @param options The options parameters.
     */
    private _listByProductNext;
}
//# sourceMappingURL=productApi.d.ts.map