import { SignInSettings } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { SignInSettingsGetEntityTagOptionalParams, SignInSettingsGetEntityTagResponse, SignInSettingsGetOptionalParams, SignInSettingsGetResponse, PortalSigninSettings, SignInSettingsUpdateOptionalParams, SignInSettingsCreateOrUpdateOptionalParams, SignInSettingsCreateOrUpdateResponse } from "../models";
/** Class containing SignInSettings operations. */
export declare class SignInSettingsImpl implements SignInSettings {
    private readonly client;
    /**
     * Initialize a new instance of the class SignInSettings class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Gets the entity state (Etag) version of the SignInSettings.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    getEntityTag(resourceGroupName: string, serviceName: string, options?: SignInSettingsGetEntityTagOptionalParams): Promise<SignInSettingsGetEntityTagResponse>;
    /**
     * Get Sign In Settings for the Portal
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serviceName: string, options?: SignInSettingsGetOptionalParams): Promise<SignInSettingsGetResponse>;
    /**
     * Update Sign-In settings.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     *                response of the GET request or it should be * for unconditional update.
     * @param parameters Update Sign-In settings.
     * @param options The options parameters.
     */
    update(resourceGroupName: string, serviceName: string, ifMatch: string, parameters: PortalSigninSettings, options?: SignInSettingsUpdateOptionalParams): Promise<void>;
    /**
     * Create or Update Sign-In settings.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param parameters Create or update parameters.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, parameters: PortalSigninSettings, options?: SignInSettingsCreateOrUpdateOptionalParams): Promise<SignInSettingsCreateOrUpdateResponse>;
}
//# sourceMappingURL=signInSettings.d.ts.map