/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import * as coreClient from "@azure/core-client";
import * as Mappers from "../models/mappers";
import * as Parameters from "../models/parameters";
/** Class containing QuotaByPeriodKeys operations. */
export class QuotaByPeriodKeysImpl {
    /**
     * Initialize a new instance of the class QuotaByPeriodKeys class.
     * @param client Reference to the service client
     */
    constructor(client) {
        this.client = client;
    }
    /**
     * Gets the value of the quota counter associated with the counter-key in the policy for the specific
     * period in service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
     *                        counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in
     *                        the policy, then it’s accessible by "boo" counter key. But if it’s defined as
     *                        counter-key="@("b"+"a")" then it will be accessible by "ba" key
     * @param quotaPeriodKey Quota period key identifier.
     * @param options The options parameters.
     */
    get(resourceGroupName, serviceName, quotaCounterKey, quotaPeriodKey, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            serviceName,
            quotaCounterKey,
            quotaPeriodKey,
            options
        }, getOperationSpec);
    }
    /**
     * Updates an existing quota counter value in the specified service instance.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param quotaCounterKey Quota counter key identifier.This is the result of expression defined in
     *                        counter-key attribute of the quota-by-key policy.For Example, if you specify counter-key="boo" in
     *                        the policy, then it’s accessible by "boo" counter key. But if it’s defined as
     *                        counter-key="@("b"+"a")" then it will be accessible by "ba" key
     * @param quotaPeriodKey Quota period key identifier.
     * @param parameters The value of the Quota counter to be applied on the specified period.
     * @param options The options parameters.
     */
    update(resourceGroupName, serviceName, quotaCounterKey, quotaPeriodKey, parameters, options) {
        return this.client.sendOperationRequest({
            resourceGroupName,
            serviceName,
            quotaCounterKey,
            quotaPeriodKey,
            parameters,
            options
        }, updateOperationSpec);
    }
}
// Operation Specifications
const serializer = coreClient.createSerializer(Mappers, /* isXml */ false);
const getOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}",
    httpMethod: "GET",
    responses: {
        200: {
            bodyMapper: Mappers.QuotaCounterContract
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId,
        Parameters.quotaCounterKey,
        Parameters.quotaPeriodKey
    ],
    headerParameters: [Parameters.accept],
    serializer
};
const updateOperationSpec = {
    path: "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/quotas/{quotaCounterKey}/periods/{quotaPeriodKey}",
    httpMethod: "PATCH",
    responses: {
        200: {
            bodyMapper: Mappers.QuotaCounterContract
        },
        default: {
            bodyMapper: Mappers.ErrorResponse
        }
    },
    requestBody: Parameters.parameters52,
    queryParameters: [Parameters.apiVersion],
    urlParameters: [
        Parameters.$host,
        Parameters.resourceGroupName,
        Parameters.serviceName,
        Parameters.subscriptionId,
        Parameters.quotaCounterKey,
        Parameters.quotaPeriodKey
    ],
    headerParameters: [Parameters.accept, Parameters.contentType],
    mediaType: "json",
    serializer
};
//# sourceMappingURL=quotaByPeriodKeys.js.map