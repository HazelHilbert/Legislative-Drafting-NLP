/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ApiManagementClient } from "@azure/arm-apimanagement";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Creates a new Diagnostic for an API or updates an existing one.
 *
 * @summary Creates a new Diagnostic for an API or updates an existing one.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementCreateApiDiagnostic.json
 */
function apiManagementCreateApiDiagnostic() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const apiId = "57d1f7558aa04f15146d9d8a";
        const diagnosticId = "applicationinsights";
        const parameters = {
            alwaysLog: "allErrors",
            backend: {
                response: { body: { bytes: 512 }, headers: ["Content-type"] },
                request: { body: { bytes: 512 }, headers: ["Content-type"] }
            },
            frontend: {
                response: { body: { bytes: 512 }, headers: ["Content-type"] },
                request: { body: { bytes: 512 }, headers: ["Content-type"] }
            },
            loggerId: "/loggers/applicationinsights",
            sampling: { percentage: 50, samplingType: "fixed" }
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiDiagnostic.createOrUpdate(resourceGroupName, serviceName, apiId, diagnosticId, parameters);
        console.log(result);
    });
}
apiManagementCreateApiDiagnostic().catch(console.error);
//# sourceMappingURL=apiDiagnosticCreateOrUpdateSample.js.map