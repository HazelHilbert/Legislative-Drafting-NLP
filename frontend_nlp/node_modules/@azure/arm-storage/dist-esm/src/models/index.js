/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
/** Known values of {@link SkuName} that the service accepts. */
export var KnownSkuName;
(function (KnownSkuName) {
    KnownSkuName["StandardLRS"] = "Standard_LRS";
    KnownSkuName["StandardGRS"] = "Standard_GRS";
    KnownSkuName["StandardRagrs"] = "Standard_RAGRS";
    KnownSkuName["StandardZRS"] = "Standard_ZRS";
    KnownSkuName["PremiumLRS"] = "Premium_LRS";
    KnownSkuName["PremiumZRS"] = "Premium_ZRS";
    KnownSkuName["StandardGzrs"] = "Standard_GZRS";
    KnownSkuName["StandardRagzrs"] = "Standard_RAGZRS";
})(KnownSkuName || (KnownSkuName = {}));
/** Known values of {@link Kind} that the service accepts. */
export var KnownKind;
(function (KnownKind) {
    KnownKind["Storage"] = "Storage";
    KnownKind["StorageV2"] = "StorageV2";
    KnownKind["BlobStorage"] = "BlobStorage";
    KnownKind["FileStorage"] = "FileStorage";
    KnownKind["BlockBlobStorage"] = "BlockBlobStorage";
})(KnownKind || (KnownKind = {}));
/** Known values of {@link ReasonCode} that the service accepts. */
export var KnownReasonCode;
(function (KnownReasonCode) {
    KnownReasonCode["QuotaId"] = "QuotaId";
    KnownReasonCode["NotAvailableForSubscription"] = "NotAvailableForSubscription";
})(KnownReasonCode || (KnownReasonCode = {}));
/** Known values of {@link ExtendedLocationTypes} that the service accepts. */
export var KnownExtendedLocationTypes;
(function (KnownExtendedLocationTypes) {
    KnownExtendedLocationTypes["EdgeZone"] = "EdgeZone";
})(KnownExtendedLocationTypes || (KnownExtendedLocationTypes = {}));
/** Known values of {@link IdentityType} that the service accepts. */
export var KnownIdentityType;
(function (KnownIdentityType) {
    KnownIdentityType["None"] = "None";
    KnownIdentityType["SystemAssigned"] = "SystemAssigned";
    KnownIdentityType["UserAssigned"] = "UserAssigned";
    KnownIdentityType["SystemAssignedUserAssigned"] = "SystemAssigned,UserAssigned";
})(KnownIdentityType || (KnownIdentityType = {}));
/** Known values of {@link AllowedCopyScope} that the service accepts. */
export var KnownAllowedCopyScope;
(function (KnownAllowedCopyScope) {
    KnownAllowedCopyScope["PrivateLink"] = "PrivateLink";
    KnownAllowedCopyScope["AAD"] = "AAD";
})(KnownAllowedCopyScope || (KnownAllowedCopyScope = {}));
/** Known values of {@link PublicNetworkAccess} that the service accepts. */
export var KnownPublicNetworkAccess;
(function (KnownPublicNetworkAccess) {
    KnownPublicNetworkAccess["Enabled"] = "Enabled";
    KnownPublicNetworkAccess["Disabled"] = "Disabled";
})(KnownPublicNetworkAccess || (KnownPublicNetworkAccess = {}));
/** Known values of {@link ExpirationAction} that the service accepts. */
export var KnownExpirationAction;
(function (KnownExpirationAction) {
    KnownExpirationAction["Log"] = "Log";
})(KnownExpirationAction || (KnownExpirationAction = {}));
/** Known values of {@link KeyType} that the service accepts. */
export var KnownKeyType;
(function (KnownKeyType) {
    KnownKeyType["Service"] = "Service";
    KnownKeyType["Account"] = "Account";
})(KnownKeyType || (KnownKeyType = {}));
/** Known values of {@link KeySource} that the service accepts. */
export var KnownKeySource;
(function (KnownKeySource) {
    KnownKeySource["MicrosoftStorage"] = "Microsoft.Storage";
    KnownKeySource["MicrosoftKeyvault"] = "Microsoft.Keyvault";
})(KnownKeySource || (KnownKeySource = {}));
/** Known values of {@link Bypass} that the service accepts. */
export var KnownBypass;
(function (KnownBypass) {
    KnownBypass["None"] = "None";
    KnownBypass["Logging"] = "Logging";
    KnownBypass["Metrics"] = "Metrics";
    KnownBypass["AzureServices"] = "AzureServices";
})(KnownBypass || (KnownBypass = {}));
/** Known values of {@link State} that the service accepts. */
export var KnownState;
(function (KnownState) {
    KnownState["Provisioning"] = "Provisioning";
    KnownState["Deprovisioning"] = "Deprovisioning";
    KnownState["Succeeded"] = "Succeeded";
    KnownState["Failed"] = "Failed";
    KnownState["NetworkSourceDeleted"] = "NetworkSourceDeleted";
})(KnownState || (KnownState = {}));
/** Known values of {@link DirectoryServiceOptions} that the service accepts. */
export var KnownDirectoryServiceOptions;
(function (KnownDirectoryServiceOptions) {
    KnownDirectoryServiceOptions["None"] = "None";
    KnownDirectoryServiceOptions["Aadds"] = "AADDS";
    KnownDirectoryServiceOptions["AD"] = "AD";
})(KnownDirectoryServiceOptions || (KnownDirectoryServiceOptions = {}));
/** Known values of {@link ActiveDirectoryPropertiesAccountType} that the service accepts. */
export var KnownActiveDirectoryPropertiesAccountType;
(function (KnownActiveDirectoryPropertiesAccountType) {
    KnownActiveDirectoryPropertiesAccountType["User"] = "User";
    KnownActiveDirectoryPropertiesAccountType["Computer"] = "Computer";
})(KnownActiveDirectoryPropertiesAccountType || (KnownActiveDirectoryPropertiesAccountType = {}));
/** Known values of {@link DefaultSharePermission} that the service accepts. */
export var KnownDefaultSharePermission;
(function (KnownDefaultSharePermission) {
    KnownDefaultSharePermission["None"] = "None";
    KnownDefaultSharePermission["StorageFileDataSmbShareReader"] = "StorageFileDataSmbShareReader";
    KnownDefaultSharePermission["StorageFileDataSmbShareContributor"] = "StorageFileDataSmbShareContributor";
    KnownDefaultSharePermission["StorageFileDataSmbShareElevatedContributor"] = "StorageFileDataSmbShareElevatedContributor";
})(KnownDefaultSharePermission || (KnownDefaultSharePermission = {}));
/** Known values of {@link LargeFileSharesState} that the service accepts. */
export var KnownLargeFileSharesState;
(function (KnownLargeFileSharesState) {
    KnownLargeFileSharesState["Disabled"] = "Disabled";
    KnownLargeFileSharesState["Enabled"] = "Enabled";
})(KnownLargeFileSharesState || (KnownLargeFileSharesState = {}));
/** Known values of {@link RoutingChoice} that the service accepts. */
export var KnownRoutingChoice;
(function (KnownRoutingChoice) {
    KnownRoutingChoice["MicrosoftRouting"] = "MicrosoftRouting";
    KnownRoutingChoice["InternetRouting"] = "InternetRouting";
})(KnownRoutingChoice || (KnownRoutingChoice = {}));
/** Known values of {@link MinimumTlsVersion} that the service accepts. */
export var KnownMinimumTlsVersion;
(function (KnownMinimumTlsVersion) {
    KnownMinimumTlsVersion["TLS10"] = "TLS1_0";
    KnownMinimumTlsVersion["TLS11"] = "TLS1_1";
    KnownMinimumTlsVersion["TLS12"] = "TLS1_2";
})(KnownMinimumTlsVersion || (KnownMinimumTlsVersion = {}));
/** Known values of {@link AccountImmutabilityPolicyState} that the service accepts. */
export var KnownAccountImmutabilityPolicyState;
(function (KnownAccountImmutabilityPolicyState) {
    KnownAccountImmutabilityPolicyState["Unlocked"] = "Unlocked";
    KnownAccountImmutabilityPolicyState["Locked"] = "Locked";
    KnownAccountImmutabilityPolicyState["Disabled"] = "Disabled";
})(KnownAccountImmutabilityPolicyState || (KnownAccountImmutabilityPolicyState = {}));
/** Known values of {@link DnsEndpointType} that the service accepts. */
export var KnownDnsEndpointType;
(function (KnownDnsEndpointType) {
    KnownDnsEndpointType["Standard"] = "Standard";
    KnownDnsEndpointType["AzureDnsZone"] = "AzureDnsZone";
})(KnownDnsEndpointType || (KnownDnsEndpointType = {}));
/** Known values of {@link GeoReplicationStatus} that the service accepts. */
export var KnownGeoReplicationStatus;
(function (KnownGeoReplicationStatus) {
    KnownGeoReplicationStatus["Live"] = "Live";
    KnownGeoReplicationStatus["Bootstrap"] = "Bootstrap";
    KnownGeoReplicationStatus["Unavailable"] = "Unavailable";
})(KnownGeoReplicationStatus || (KnownGeoReplicationStatus = {}));
/** Known values of {@link PrivateEndpointServiceConnectionStatus} that the service accepts. */
export var KnownPrivateEndpointServiceConnectionStatus;
(function (KnownPrivateEndpointServiceConnectionStatus) {
    KnownPrivateEndpointServiceConnectionStatus["Pending"] = "Pending";
    KnownPrivateEndpointServiceConnectionStatus["Approved"] = "Approved";
    KnownPrivateEndpointServiceConnectionStatus["Rejected"] = "Rejected";
})(KnownPrivateEndpointServiceConnectionStatus || (KnownPrivateEndpointServiceConnectionStatus = {}));
/** Known values of {@link PrivateEndpointConnectionProvisioningState} that the service accepts. */
export var KnownPrivateEndpointConnectionProvisioningState;
(function (KnownPrivateEndpointConnectionProvisioningState) {
    KnownPrivateEndpointConnectionProvisioningState["Succeeded"] = "Succeeded";
    KnownPrivateEndpointConnectionProvisioningState["Creating"] = "Creating";
    KnownPrivateEndpointConnectionProvisioningState["Deleting"] = "Deleting";
    KnownPrivateEndpointConnectionProvisioningState["Failed"] = "Failed";
})(KnownPrivateEndpointConnectionProvisioningState || (KnownPrivateEndpointConnectionProvisioningState = {}));
/** Known values of {@link BlobRestoreProgressStatus} that the service accepts. */
export var KnownBlobRestoreProgressStatus;
(function (KnownBlobRestoreProgressStatus) {
    KnownBlobRestoreProgressStatus["InProgress"] = "InProgress";
    KnownBlobRestoreProgressStatus["Complete"] = "Complete";
    KnownBlobRestoreProgressStatus["Failed"] = "Failed";
})(KnownBlobRestoreProgressStatus || (KnownBlobRestoreProgressStatus = {}));
/** Known values of {@link SkuConversionStatus} that the service accepts. */
export var KnownSkuConversionStatus;
(function (KnownSkuConversionStatus) {
    KnownSkuConversionStatus["InProgress"] = "InProgress";
    KnownSkuConversionStatus["Succeeded"] = "Succeeded";
    KnownSkuConversionStatus["Failed"] = "Failed";
})(KnownSkuConversionStatus || (KnownSkuConversionStatus = {}));
/** Known values of {@link Services} that the service accepts. */
export var KnownServices;
(function (KnownServices) {
    KnownServices["B"] = "b";
    KnownServices["Q"] = "q";
    KnownServices["T"] = "t";
    KnownServices["F"] = "f";
})(KnownServices || (KnownServices = {}));
/** Known values of {@link SignedResourceTypes} that the service accepts. */
export var KnownSignedResourceTypes;
(function (KnownSignedResourceTypes) {
    KnownSignedResourceTypes["S"] = "s";
    KnownSignedResourceTypes["C"] = "c";
    KnownSignedResourceTypes["O"] = "o";
})(KnownSignedResourceTypes || (KnownSignedResourceTypes = {}));
/** Known values of {@link Permissions} that the service accepts. */
export var KnownPermissions;
(function (KnownPermissions) {
    KnownPermissions["R"] = "r";
    KnownPermissions["D"] = "d";
    KnownPermissions["W"] = "w";
    KnownPermissions["L"] = "l";
    KnownPermissions["A"] = "a";
    KnownPermissions["C"] = "c";
    KnownPermissions["U"] = "u";
    KnownPermissions["P"] = "p";
})(KnownPermissions || (KnownPermissions = {}));
/** Known values of {@link SignedResource} that the service accepts. */
export var KnownSignedResource;
(function (KnownSignedResource) {
    KnownSignedResource["B"] = "b";
    KnownSignedResource["C"] = "c";
    KnownSignedResource["F"] = "f";
    KnownSignedResource["S"] = "s";
})(KnownSignedResource || (KnownSignedResource = {}));
/** Known values of {@link ManagementPolicyName} that the service accepts. */
export var KnownManagementPolicyName;
(function (KnownManagementPolicyName) {
    KnownManagementPolicyName["Default"] = "default";
})(KnownManagementPolicyName || (KnownManagementPolicyName = {}));
/** Known values of {@link RuleType} that the service accepts. */
export var KnownRuleType;
(function (KnownRuleType) {
    KnownRuleType["Lifecycle"] = "Lifecycle";
})(KnownRuleType || (KnownRuleType = {}));
/** Known values of {@link BlobInventoryPolicyName} that the service accepts. */
export var KnownBlobInventoryPolicyName;
(function (KnownBlobInventoryPolicyName) {
    KnownBlobInventoryPolicyName["Default"] = "default";
})(KnownBlobInventoryPolicyName || (KnownBlobInventoryPolicyName = {}));
/** Known values of {@link InventoryRuleType} that the service accepts. */
export var KnownInventoryRuleType;
(function (KnownInventoryRuleType) {
    KnownInventoryRuleType["Inventory"] = "Inventory";
})(KnownInventoryRuleType || (KnownInventoryRuleType = {}));
/** Known values of {@link Format} that the service accepts. */
export var KnownFormat;
(function (KnownFormat) {
    KnownFormat["Csv"] = "Csv";
    KnownFormat["Parquet"] = "Parquet";
})(KnownFormat || (KnownFormat = {}));
/** Known values of {@link Schedule} that the service accepts. */
export var KnownSchedule;
(function (KnownSchedule) {
    KnownSchedule["Daily"] = "Daily";
    KnownSchedule["Weekly"] = "Weekly";
})(KnownSchedule || (KnownSchedule = {}));
/** Known values of {@link ObjectType} that the service accepts. */
export var KnownObjectType;
(function (KnownObjectType) {
    KnownObjectType["Blob"] = "Blob";
    KnownObjectType["Container"] = "Container";
})(KnownObjectType || (KnownObjectType = {}));
/** Known values of {@link CreatedByType} that the service accepts. */
export var KnownCreatedByType;
(function (KnownCreatedByType) {
    KnownCreatedByType["User"] = "User";
    KnownCreatedByType["Application"] = "Application";
    KnownCreatedByType["ManagedIdentity"] = "ManagedIdentity";
    KnownCreatedByType["Key"] = "Key";
})(KnownCreatedByType || (KnownCreatedByType = {}));
/** Known values of {@link EncryptionScopeSource} that the service accepts. */
export var KnownEncryptionScopeSource;
(function (KnownEncryptionScopeSource) {
    KnownEncryptionScopeSource["MicrosoftStorage"] = "Microsoft.Storage";
    KnownEncryptionScopeSource["MicrosoftKeyVault"] = "Microsoft.KeyVault";
})(KnownEncryptionScopeSource || (KnownEncryptionScopeSource = {}));
/** Known values of {@link EncryptionScopeState} that the service accepts. */
export var KnownEncryptionScopeState;
(function (KnownEncryptionScopeState) {
    KnownEncryptionScopeState["Enabled"] = "Enabled";
    KnownEncryptionScopeState["Disabled"] = "Disabled";
})(KnownEncryptionScopeState || (KnownEncryptionScopeState = {}));
/** Known values of {@link CorsRuleAllowedMethodsItem} that the service accepts. */
export var KnownCorsRuleAllowedMethodsItem;
(function (KnownCorsRuleAllowedMethodsItem) {
    KnownCorsRuleAllowedMethodsItem["Delete"] = "DELETE";
    KnownCorsRuleAllowedMethodsItem["GET"] = "GET";
    KnownCorsRuleAllowedMethodsItem["Head"] = "HEAD";
    KnownCorsRuleAllowedMethodsItem["Merge"] = "MERGE";
    KnownCorsRuleAllowedMethodsItem["Post"] = "POST";
    KnownCorsRuleAllowedMethodsItem["Options"] = "OPTIONS";
    KnownCorsRuleAllowedMethodsItem["PUT"] = "PUT";
    KnownCorsRuleAllowedMethodsItem["Patch"] = "PATCH";
})(KnownCorsRuleAllowedMethodsItem || (KnownCorsRuleAllowedMethodsItem = {}));
/** Known values of {@link Name} that the service accepts. */
export var KnownName;
(function (KnownName) {
    KnownName["AccessTimeTracking"] = "AccessTimeTracking";
})(KnownName || (KnownName = {}));
/** Known values of {@link ListContainersInclude} that the service accepts. */
export var KnownListContainersInclude;
(function (KnownListContainersInclude) {
    KnownListContainersInclude["Deleted"] = "deleted";
})(KnownListContainersInclude || (KnownListContainersInclude = {}));
/** Known values of {@link LeaseStatus} that the service accepts. */
export var KnownLeaseStatus;
(function (KnownLeaseStatus) {
    KnownLeaseStatus["Locked"] = "Locked";
    KnownLeaseStatus["Unlocked"] = "Unlocked";
})(KnownLeaseStatus || (KnownLeaseStatus = {}));
/** Known values of {@link LeaseState} that the service accepts. */
export var KnownLeaseState;
(function (KnownLeaseState) {
    KnownLeaseState["Available"] = "Available";
    KnownLeaseState["Leased"] = "Leased";
    KnownLeaseState["Expired"] = "Expired";
    KnownLeaseState["Breaking"] = "Breaking";
    KnownLeaseState["Broken"] = "Broken";
})(KnownLeaseState || (KnownLeaseState = {}));
/** Known values of {@link LeaseDuration} that the service accepts. */
export var KnownLeaseDuration;
(function (KnownLeaseDuration) {
    KnownLeaseDuration["Infinite"] = "Infinite";
    KnownLeaseDuration["Fixed"] = "Fixed";
})(KnownLeaseDuration || (KnownLeaseDuration = {}));
/** Known values of {@link ImmutabilityPolicyState} that the service accepts. */
export var KnownImmutabilityPolicyState;
(function (KnownImmutabilityPolicyState) {
    KnownImmutabilityPolicyState["Locked"] = "Locked";
    KnownImmutabilityPolicyState["Unlocked"] = "Unlocked";
})(KnownImmutabilityPolicyState || (KnownImmutabilityPolicyState = {}));
/** Known values of {@link ImmutabilityPolicyUpdateType} that the service accepts. */
export var KnownImmutabilityPolicyUpdateType;
(function (KnownImmutabilityPolicyUpdateType) {
    KnownImmutabilityPolicyUpdateType["Put"] = "put";
    KnownImmutabilityPolicyUpdateType["Lock"] = "lock";
    KnownImmutabilityPolicyUpdateType["Extend"] = "extend";
})(KnownImmutabilityPolicyUpdateType || (KnownImmutabilityPolicyUpdateType = {}));
/** Known values of {@link MigrationState} that the service accepts. */
export var KnownMigrationState;
(function (KnownMigrationState) {
    KnownMigrationState["InProgress"] = "InProgress";
    KnownMigrationState["Completed"] = "Completed";
})(KnownMigrationState || (KnownMigrationState = {}));
/** Known values of {@link LeaseContainerRequestAction} that the service accepts. */
export var KnownLeaseContainerRequestAction;
(function (KnownLeaseContainerRequestAction) {
    KnownLeaseContainerRequestAction["Acquire"] = "Acquire";
    KnownLeaseContainerRequestAction["Renew"] = "Renew";
    KnownLeaseContainerRequestAction["Change"] = "Change";
    KnownLeaseContainerRequestAction["Release"] = "Release";
    KnownLeaseContainerRequestAction["Break"] = "Break";
})(KnownLeaseContainerRequestAction || (KnownLeaseContainerRequestAction = {}));
/** Known values of {@link EnabledProtocols} that the service accepts. */
export var KnownEnabledProtocols;
(function (KnownEnabledProtocols) {
    KnownEnabledProtocols["SMB"] = "SMB";
    KnownEnabledProtocols["NFS"] = "NFS";
})(KnownEnabledProtocols || (KnownEnabledProtocols = {}));
/** Known values of {@link RootSquashType} that the service accepts. */
export var KnownRootSquashType;
(function (KnownRootSquashType) {
    KnownRootSquashType["NoRootSquash"] = "NoRootSquash";
    KnownRootSquashType["RootSquash"] = "RootSquash";
    KnownRootSquashType["AllSquash"] = "AllSquash";
})(KnownRootSquashType || (KnownRootSquashType = {}));
/** Known values of {@link ShareAccessTier} that the service accepts. */
export var KnownShareAccessTier;
(function (KnownShareAccessTier) {
    KnownShareAccessTier["TransactionOptimized"] = "TransactionOptimized";
    KnownShareAccessTier["Hot"] = "Hot";
    KnownShareAccessTier["Cool"] = "Cool";
    KnownShareAccessTier["Premium"] = "Premium";
})(KnownShareAccessTier || (KnownShareAccessTier = {}));
/** Known values of {@link LeaseShareAction} that the service accepts. */
export var KnownLeaseShareAction;
(function (KnownLeaseShareAction) {
    KnownLeaseShareAction["Acquire"] = "Acquire";
    KnownLeaseShareAction["Renew"] = "Renew";
    KnownLeaseShareAction["Change"] = "Change";
    KnownLeaseShareAction["Release"] = "Release";
    KnownLeaseShareAction["Break"] = "Break";
})(KnownLeaseShareAction || (KnownLeaseShareAction = {}));
//# sourceMappingURL=index.js.map