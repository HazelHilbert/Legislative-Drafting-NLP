#!/usr/bin/env node
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license.
Object.defineProperty(exports, "__esModule", { value: true });
const commander = require("commander");
const office_addin_usage_data_1 = require("office-addin-usage-data");
const commands = require("./commands");
/* global process */
commander.name("office-addin-project");
commander.version(process.env.npm_package_version || "(version not available)");
// if the command is not known, display an error
commander.on("command:*", function () {
    (0, office_addin_usage_data_1.logErrorMessage)(`The command syntax is not valid.\n`);
    process.exitCode = 1;
    commander.help();
});
commander
    .command("convert")
    .option("-m, --manifest <manifest-path>", "Specify the location of the manifest file.  Default is './manifest.xml'")
    .option("-b, --backup <backup-path>", "Specify the location of the backup folder for the project.  Default is './backup.zip'")
    .option("-p, --project <project-path>", "Specify the location of the root directory of the project.  Default is the directory of the manifest file.")
    .option("--confirm", "Confirmes the conversion")
    .action(commands.convert);
if (process.argv.length > 2) {
    commander.parse(process.argv);
}
else {
    commander.help();
}
//# sourceMappingURL=cli.js.map