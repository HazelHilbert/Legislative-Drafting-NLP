export declare class Utilities {
    static isNullOrUndefined(value: any): boolean;
    static writeFile(path: string, contents: string, errorText: string, successText: string): Promise<void>;
    static writeFileSync(path: string, contents: string, successText: string): Promise<void>;
    static ensureFolder(folderPath: string): void;
    static _inputXmlFilePath: string;
    static setInputXmlFilePath(inputXmlFilePath: string): void;
    static _showDebugInfo: boolean;
    static setShowDebugInfo(showDebugInfo: boolean): void;
    static _verboseLogging: boolean;
    static setVerbosity(verbose: boolean): void;
    static getVerbosity(): boolean;
    static _downloadImages: boolean;
    static setDownloadImages(downloadImages: boolean): void;
    static _writeImageUrls: boolean;
    static setWriteImageUrls(writeImageUrls: boolean): void;
    static log(message?: any, ...optionalParams: any[]): void;
    static logWarning(message?: any, ...optionalParams: any[]): void;
    static logError(message?: any, ...optionalParams: any[]): void;
    static logDebug(message?: any, ...optionalParams: any[]): void;
    static assert(condition: boolean, message?: any, ...optionalParams: any[]): void;
    static createLocaleFileName(locale: string): string;
    static truncateString(value: string, maxLength: number): string;
    static getLimitedString(value: string, maxLength: number, message: string): string;
    static setUpOSFAppTelemetry(): void;
    static promiseAll(promises: Promise<void>[], resolve: any, reject: any, message: string): Promise<void>;
}
//# sourceMappingURL=utilities.d.ts.map