export declare module Utils {
    function validateParams(params: any, expectedParams: any, ParameterCount?: any): any;
    function validateParameter(param: any, expectedParam: any, paramName: any): any;
    function validateParameterCount(params: any, expectedParams: any, validateParameterCount: any): any;
    function validateParameterType(param: any, expectedType: any, expectedInteger: any, expectedDomElement: any, mayBeNull: any, paramName: any): any;
    function getDomainForUrl(url: any): string;
    function OverrideMethods(): void;
}
export declare class DomParserProvider {
    _defaultNamespace: any;
    _namespaceMapping: any;
    _xmldoc: any;
    constructor(xml: any, xmlNamespaces: any);
    addNamespaceMapping(namespacePrefix: any, namespaceUri: any): boolean;
    getNamespaceMapping(): any;
    selectSingleNode(name: any, contextNode: any): any;
    selectNodes(name: any, contextNode: any): any[];
    selectNodesByXPath(xpath: any, contextNode: any): any;
    _selectNodes(name: any, contextNode: any): any[];
    _removeNodePrefix(nodeName: any): any;
    getDocumentElement(): any;
}
export declare class XmlProcessor {
    _provider: any;
    constructor(xml: any, xmlNamespaces: any);
    addNamespaceMapping(namespacePrefix: any, namespaceUri: any): any;
    getNamespaceMapping(): any;
    selectSingleNode(name: any, contextNode: any): any;
    selectNodes(name: any, contextNode: any): any;
    selectNodesByXPath(xpath: any, contextNode: any): any;
    getDocumentElement(): any;
    getNodeValue(node: any): any;
    getNodeText(node: any): any;
    setNodeText(node: any, text: any): boolean;
    getNodeXml(node: any): any;
    setNodeXml(node: any, xml: any): any;
    getNodeNamespaceURI(node: any): any;
    getNodePrefix(node: any): any;
    getNodeBaseName(node: any): any;
    getNodeType(node: any): any;
    appendChild(node: any, childXml: any): any;
    _getAttributeLocalName(attribute: any): any;
    readAttributes(node: any, attributesToRead: any, objectToFill: any): void;
    isValidXml(): boolean;
}
//# sourceMappingURL=osfUtils.d.ts.map