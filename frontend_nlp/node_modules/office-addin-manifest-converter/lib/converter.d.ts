import { OSF } from '../lib/osfmos';
import { LocaleBuilder } from './localeBuilder';
import * as MOS from './mosManifest';
import { MosManifest } from './mosManifest';
export declare enum RuntimeSource {
    DefaultSettingSourceLocations = "DefaultSettingsSourceLocations",
    ExecuteFunction = "ExecuteFunction",
    SharedRuntimes = "SharedRuntimes",
    ShowTaskpane = "ShowTaskpane",
    LaunchEvent = "LaunchEvent"
}
export declare enum InputRuntimeLifeTime {
    Short = 0,
    Long = 1
}
export declare enum ResourceType {
    AllLocaleImages = "AllLocaleImages",
    AllLocaleUrls = "AllLocaleUrls",
    AllLocaleLongStrings = "AllLocaleLongStrings",
    AllLocaleShortStrings = "AllLocaleShortStrings"
}
export declare enum CommandSurfaceType {
    None = "None",
    Ribbon = "Ribbon",
    ContextMenu = "ContextMenu"
}
export declare class RuntimeRecord {
    _resource: string;
    _localeResources: {};
    _lifetime: MOS.RuntimesLifetime;
    _isResId: boolean;
    _isCapabilitiesSorted: boolean;
    _requirements: MOS.RequirementsExtensionElement;
    _source: RuntimeSource;
    _manifestHostType: OSF.ManifestHostType;
    _versionOverrideCapabilities: MOS.Capabilities[];
    _versionOverridesNumber: OSF.VersionOverridesNumber;
    _scriptResId: string;
    constructor();
    sortCapabilities(): void;
    getKey(): string;
}
export declare class Converter {
    private _addedExecuteFunctions;
    private _mosManifest;
    private _xmlManifest;
    private _localeBuilder;
    private _iconBuilder;
    private _runtimeLookup;
    private _uniqueSuffix;
    private _uniqueRuntimeSuffix;
    private _uniqueActionSuffix;
    private _uniqueViewSuffix;
    constructor(inputXml: string, locale: string);
    getMosManifest(): MosManifest;
    getLocaleBuilder(): LocaleBuilder;
    convert(): void;
    downloadAndStoreIcons(folderPath: string): Promise<void>;
    private getNextUniqueSuffix;
    private getNextRuntimeSuffix;
    private getNextActionSuffix;
    private getNextViewSuffix;
    private _populateRoot;
    private _populateRootName;
    private _populateRootDescription;
    private _populateRootIcons;
    private _populateDeveloper;
    private _populateLocalizationInfo;
    private _populateWebApplicationInfos;
    private _populateWebApplicationInfoFromMailbox;
    private _populateWebApplicationInfoFromContentAndTaskpane;
    private _populateRootPermissions;
    private _populateRootDevicePermissions;
    private _populateAuthorization;
    private _populateExtension;
    private _populateAlternates;
    private _populateAutoRunEvents;
    private _populateContextMenus;
    private _populateGetStartedMessages;
    private _fillGetStartedMessagesFromVersionOverrides;
    private _populateKeyboards;
    private _populateFormSettings;
    private _populateExtensionRequirements;
    private static _getCapabilitiesFromLegacyRequirementSets;
    private _populateRibbonsAndContextMenus;
    private _addRuntimeActionLocalizedDisplayNames;
    private _addRibbonOrContextMenuForHostType;
    private _addRibbonOrContextMenuForManifestSection;
    private _populateRibbonAndContextMenuRequirements;
    private _addRequirementSubelementScopesFromHost;
    private static _mergeInVersionOverrideRequirements;
    private static _getMatchingCapability;
    private static _capabilitiesContainCapability;
    private _populateTab;
    private _populateGroups;
    private _populateGroup;
    private _populateGroupIcons;
    private _createUniqueId;
    private _createUniqueActionId;
    private _createUniqueViewId;
    private _populateGroupControls;
    private _populateMenuControl;
    private _populateMenuItem;
    private _populateControlProperties;
    private _populateControlLocalizedField;
    private _populateButtonControl;
    private _populateControlAction;
    private _controlTypeFromString;
    private _populateControlIcons;
    private _populateControlSupertip;
    private _addScopesFromHosts;
    private _populateRuntimes;
    private _createMosRuntimesFromRuntimeRecords;
    private _collectRuntimes;
    private _collectRuntimeRecordsFromExtensionPoints;
    private _collectRuntimesFromFunctionFiles;
    private _addRuntimeRecordForFunctionFileFormFactor;
    private static _legacyFormFactorToMOSFormFactor;
    private static _isRibbonCommandSurface;
    private static _isContextMenuCommandSurface;
    private static _getRibbonContextFromCommandSurface;
    private static _getFunctionFileResid;
    private static _getAddinCommandsExtensionPoints;
    private static _cloneRequirements;
    private static _cloneCapabilities;
    private _addRuntimeForFormFactor;
    private _collectRuntimeRecordsFromRuntimes;
    private _collectRuntimeRecordsFromActions;
    private _createRuntimeRecord;
    private _addRuntimeRecord;
    private _populateRootRequirements;
    private _populateLocaleSensitiveProperty;
    private _populateValidDomains;
    private _populateStaticTabs;
    private _populateComposeExtensions;
    private _populateGraphConnector;
    private _populateConfigurableTabs;
    private _populateBots;
    private _populateConnectors;
    private _populateActivities;
    private _populateMeetingExtensionDefinition;
    private _populateSubscriptionOffer;
    private _populateShowLoadingIndicator;
    private _populateIsFullScreen;
    private _populateConfigurableProperties;
    private _populateDefaultBlockUntilAdminAction;
    private _populatePublisherDocsUrl;
    private _populateDefaultInstallScope;
    private _populateDefaultGroupCapability;
    getOfficeAppManifest(): OSF.Manifest.OfficeAppManifest;
    getJSON(): string;
    private _getMailHostOverrides;
    private _doesHostHaveContentInManifest;
    private _getResourceAndWriteLocalizedValues;
    private _addConstantResourceForAllSeenLocales;
    private static _formatResourceStringWithVariableNumberParameters;
    private _addRuntimeExecuteAction;
    private static _getVersionOverrideHostTypeFromOsfManifestHostType;
    private static _getCapabilityVersionFromNumericVersion;
    private static _getNumericOverrideVersionFromString;
    private static _getRequirementsScopeFromManifestHostType;
    private static _mosSendModeFromXmlSendMode;
    private static _mosPermissionfromXmlPermission;
    private static _setVersionOverrideNumberAndCapabilitiesInContext;
    private static _clearVersionOverrideNumberAndCapabilitiesInContext;
    private static _legacyLaunchEventToMosEventType;
    static _generateExecuteActionKey(runtimeKey: string, actionId: string): string;
    static _generateRuntimeLookupKey(url: string, lifetime: MOS.RuntimesLifetime, capabilities: MOS.Capabilities[]): string;
    static _sortCapabilitiesAlphabatically(capabilities: MOS.Capabilities[]): void;
    static _getImplicitCapabilityBasedOnVersionOverrideForHost(hostType: string, versionOverridesIndex: string): MOS.Capabilities;
    static _isWXP(hostType: string): boolean;
    static _getMailHostVersionOVerrides(): string[];
}
//# sourceMappingURL=converter.d.ts.map