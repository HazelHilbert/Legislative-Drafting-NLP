{"version":3,"file":"osfUtils.js","sourceRoot":"","sources":["../src/osfUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { OSF, OfficeExt } from '../lib/osfmos';\r\nimport { DOMParser } from '@xmldom/xmldom';\r\n\r\n// Some part of the below code is copied from file %SRCROOT%\\osfjs\\shared_src\\jscript\\officeutil\\msajaxbase.ts and %SRCROOT%\\osfjs\\shared_src\\jscript\\XmlUtil.ts\r\n// This is to override the internal implementation to use the 'xmldom' npm package for XML parsing. It is not required to keep it sync with the osf files\r\n// But we might need to update it if there is new methods added to these files in order to parse XML.\r\n\r\n/// <summary>\r\n/// DomParser Provider\r\n/// </summary>\r\n/// <param name=\"xmldoc\">xml string</param>\r\n/// <param name=\"xmlNamespaces\">namespaces</param>\r\n/// <accessibility>private</accessibility>\r\nexport module Utils {\r\n    export function validateParams(params, expectedParams, ParameterCount?): any {\r\n        var e, expectedLength = expectedParams.length;\r\n        ParameterCount = ParameterCount || (typeof (ParameterCount) === \"undefined\");\r\n        e = validateParameterCount(params, expectedParams, ParameterCount);\r\n        if (e) {\r\n            return e;\r\n        }\r\n        for (var i = 0, l = params.length; i < l; i++) {\r\n            var expectedParam = expectedParams[Math.min(i, expectedLength - 1)], paramName = expectedParam.name;\r\n            if (expectedParam.parameterArray) {\r\n                paramName += \"[\" + (i - expectedLength + 1) + \"]\";\r\n            }\r\n            else if (!ParameterCount && (i >= expectedLength)) {\r\n                break;\r\n            }\r\n            e = validateParameter(params[i], expectedParam, paramName);\r\n            if (e) {\r\n                e.popStackFrame();\r\n                return e;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export function validateParameter(param, expectedParam, paramName): any {\r\n        var e, expectedType = expectedParam.type, expectedInteger = !!expectedParam.integer, expectedDomElement = !!expectedParam.domElement, mayBeNull = !!expectedParam.mayBeNull;\r\n        e = validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName);\r\n        if (e) {\r\n            e.popStackFrame();\r\n            return e;\r\n        }\r\n        var expectedElementType = expectedParam.elementType, elementMayBeNull = !!expectedParam.elementMayBeNull;\r\n        if (expectedType === Array && typeof (param) !== \"undefined\" && param !== null &&\r\n            (expectedElementType || !elementMayBeNull)) {\r\n            var expectedElementInteger = !!expectedParam.elementInteger, expectedElementDomElement = !!expectedParam.elementDomElement;\r\n            for (var i = 0; i < param.length; i++) {\r\n                var elem = param[i];\r\n                e = validateParameterType(elem, expectedElementType, expectedElementInteger, expectedElementDomElement, elementMayBeNull, paramName + \"[\" + i + \"]\");\r\n                if (e) {\r\n                    e.popStackFrame();\r\n                    return e;\r\n                }\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    export function validateParameterCount(params, expectedParams, validateParameterCount): any {\r\n        var i, error, expectedLen = expectedParams.length, actualLen = params.length;\r\n        if (actualLen < expectedLen) {\r\n            var minParams = expectedLen;\r\n            for (i = 0; i < expectedLen; i++) {\r\n                var param = expectedParams[i];\r\n                if (param.optional || param.parameterArray) {\r\n                    minParams--;\r\n                }\r\n            }\r\n            if (actualLen < minParams) {\r\n                error = true;\r\n            }\r\n        }\r\n        else if (validateParameterCount && (actualLen > expectedLen)) {\r\n            error = true;\r\n            for (i = 0; i < expectedLen; i++) {\r\n                if (expectedParams[i].parameterArray) {\r\n                    error = false;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if (error) {\r\n            var e = OfficeExt.MsAjaxError.parameterCount();\r\n            return e;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export function validateParameterType(param, expectedType, expectedInteger, expectedDomElement, mayBeNull, paramName) {\r\n        var e, i;\r\n        if (typeof (param) === \"undefined\") {\r\n            if (mayBeNull) {\r\n                return null;\r\n            }\r\n            else {\r\n                e = OfficeExt.MsAjaxError.argumentUndefined(paramName);\r\n                e.popStackFrame();\r\n                return e;\r\n            }\r\n        }\r\n        if (param === null) {\r\n            if (mayBeNull) {\r\n                return null;\r\n            }\r\n            else {\r\n                e = OfficeExt.MsAjaxError.argumentNull(paramName);\r\n                e.popStackFrame();\r\n                return e;\r\n            }\r\n        }\r\n        if (expectedType && !OfficeExt.MsAjaxTypeHelper.isInstanceOfType(expectedType, param)) {\r\n            e = OfficeExt.MsAjaxError.argumentType(paramName, typeof (param), expectedType);\r\n            e.popStackFrame();\r\n            return e;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    export function getDomainForUrl(url) {\r\n        if (!url) {\r\n            return null;\r\n        }\r\n        var urlObject = OSF.OUtil.parseUrl(url, /*enforceHttps*/ true);\r\n        return urlObject.protocol + \"//\" + urlObject.host;\r\n    }\r\n\r\n    // Use this method to override the Osf Methods\r\n    export function OverrideMethods() {\r\n        OSF.XmlProcessor = XmlProcessor;\r\n        OfficeExt.WACUtils.getDomainForUrl = Utils.getDomainForUrl;\r\n    }\r\n}\r\n\r\nexport class DomParserProvider {\r\n    _defaultNamespace: any;\r\n    _namespaceMapping: any;\r\n    _xmldoc: any;\r\n    constructor(xml, xmlNamespaces) {\r\n        try {\r\n            this._xmldoc = new DOMParser({}).parseFromString(xml, \"text/xml\");\r\n        }\r\n        catch (ex) {\r\n            console.trace(\"xml doc creating error:\" + ex);\r\n        }\r\n        // handle namespace\r\n        this._namespaceMapping = {};\r\n        this._defaultNamespace = null;\r\n        var namespaces = xmlNamespaces.split(' ');\r\n        var matches;\r\n        for (var i = 0; i < namespaces.length; ++i) {\r\n            matches = /xmlns=\"([^\"]*)\"/g.exec(namespaces[i]);\r\n            if (matches) {\r\n                this._defaultNamespace = matches[1];\r\n                continue;\r\n            }\r\n            matches = /xmlns:([^=]*)=\"([^\"]*)\"/g.exec(namespaces[i]);\r\n            if (matches) {\r\n                this._namespaceMapping[matches[1]] = matches[2];\r\n                continue;\r\n            }\r\n        }\r\n    }\r\n\r\n    addNamespaceMapping(namespacePrefix, namespaceUri) {\r\n        var ns = this._namespaceMapping[namespacePrefix];\r\n        if (ns) {\r\n            return false; // The namespace prefix is already defined\r\n        }\r\n        else {\r\n            this._namespaceMapping[namespacePrefix] = namespaceUri;\r\n            return true;\r\n        }\r\n    }\r\n    getNamespaceMapping(): any {\r\n        return this._namespaceMapping;\r\n    }\r\n    selectSingleNode(name, contextNode) {\r\n        var selectedNode = contextNode || this._xmldoc;\r\n        var nodes = this._selectNodes(name, selectedNode);\r\n        if (nodes.length === 0)\r\n            return null;\r\n        return nodes[0];\r\n    }\r\n    selectNodes(name, contextNode) {\r\n        var selectedNode = contextNode || this._xmldoc;\r\n        return this._selectNodes(name, selectedNode);\r\n    }\r\n    selectNodesByXPath(xpath, contextNode) {\r\n        // Todo(OfficeVSO:81193): Try to support selectNodesByXPath in DomParserProvider.\r\n        return null;\r\n    }\r\n    _selectNodes(name, contextNode) {\r\n        var nodes = [];\r\n        if (!name)\r\n            return nodes;\r\n        var nameInfo = name.split(\":\");\r\n        var ns, nodeName;\r\n        if (nameInfo.length === 1) {\r\n            ns = null;\r\n            nodeName = nameInfo[0];\r\n        }\r\n        else if (nameInfo.length === 2) {\r\n            ns = this._namespaceMapping[nameInfo[0]];\r\n            nodeName = nameInfo[1];\r\n        }\r\n        else {\r\n            throw OfficeExt.MsAjaxError.argument(\"name\");\r\n        }\r\n        if (!contextNode.hasChildNodes)\r\n            return nodes;\r\n        var childs = contextNode.childNodes;\r\n        for (var i = 0; i < childs.length; i++) {\r\n            if (nodeName === this._removeNodePrefix(childs[i].nodeName) && (ns === childs[i].namespaceURI)) {\r\n                nodes.push(childs[i]);\r\n            }\r\n        }\r\n        return nodes;\r\n    }\r\n    _removeNodePrefix(nodeName) {\r\n        if (!nodeName)\r\n            return null;\r\n\r\n        var nodeInfo = nodeName.split(':');\r\n        if (nodeInfo.length === 1) {\r\n            return nodeName;\r\n        }\r\n        else {\r\n            return nodeInfo[1];\r\n        }\r\n    }\r\n    getDocumentElement() {\r\n        return this._xmldoc.documentElement;\r\n    }\r\n}\r\n\r\n/// <summary>\r\n/// XmlProcessor, cross browser XML parsing.\r\n/// </summary>\r\n/// <param name=\"xml\">xml string</param>\r\n/// <param name=\"xmlNamespaces\">xml Namespaces string</param>\r\n/// <accessibility>public</accessibility>\r\nexport class XmlProcessor {\r\n    _provider: any;\r\n    constructor(xml, xmlNamespaces) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"xml\", type: String, mayBeNull: false },\r\n            { name: \"xmlNamespaces\", type: String, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        // IMPORTANT!! CODE CHANGE[begin]\r\n        this._provider = new DomParserProvider(xml, xmlNamespaces);\r\n        // IMPORTANT!! CODE CHANGE[end]\r\n    }\r\n\r\n    addNamespaceMapping(namespacePrefix, namespaceUri) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"namespacePrefix\", type: String, mayBeNull: false },\r\n            { name: \"namespaceUri\", type: String, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return this._provider.addNamespaceMapping(namespacePrefix, namespaceUri);\r\n    }\r\n\r\n    /// <summary>\r\n    /// Get the namespace mapping\r\n    /// </summary>\r\n    getNamespaceMapping(): any {\r\n        return this._provider?.getNamespaceMapping();\r\n    }\r\n\r\n    /// <summary>\r\n    /// select a single node\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"name\">XML node name</param>\r\n    /// <returns>XML DOM Node object.</returns>\r\n    selectSingleNode(name, contextNode) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"name\", type: String, mayBeNull: false },\r\n            { name: \"contextNode\", mayBeNull: true, optional: true }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return this._provider.selectSingleNode(name, contextNode);\r\n    }\r\n\r\n    /// <summary>\r\n    /// select all child nodes that match node name\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"name\">XML node name</param>\r\n    /// <returns>array of XML DOM Node objects.</returns>\r\n    selectNodes(name, contextNode) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"name\", type: String, mayBeNull: false },\r\n            { name: \"contextNode\", mayBeNull: true, optional: true }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return this._provider.selectNodes(name, contextNode);\r\n    }\r\n\r\n    /// <summary>\r\n    /// select nodes that match the xpath query\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"xpath\">xpath string</param>\r\n    /// <returns>array of XML DOM Node objects.</returns>\r\n    selectNodesByXPath(xpath, contextNode) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"xpath\", type: String, mayBeNull: false },\r\n            { name: \"contextNode\", mayBeNull: true, optional: true }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        contextNode = contextNode || this._provider.getDocumentElement();\r\n        return this._provider.selectNodesByXPath(xpath, contextNode);\r\n    }\r\n\r\n    /// <summary>\r\n    /// get root document element\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM root document element</param>\r\n    /// <returns>value of the node as string</returns>\r\n    getDocumentElement() {\r\n        return this._provider.getDocumentElement();\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node value\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>value of the node as string</returns>\r\n    getNodeValue(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var nodeValue;\r\n        if (node.text) { //IE\r\n            nodeValue = node.text;\r\n        }\r\n        else { //others\r\n            nodeValue = node.textContent;\r\n        }\r\n        return nodeValue;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node text\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>text of the node as string</returns>\r\n    getNodeText(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        if (this.getNodeType(node) == 9) { //Handle special case for document node.\r\n            //For document node on Chrome and Edge, the text and textContent of the node are both null.\r\n            //Return the text of the document element here.\r\n            return this.getNodeText(this.getDocumentElement());\r\n        }\r\n        var nodeText;\r\n        if (node.text) { //IE\r\n            nodeText = node.text;\r\n        }\r\n        else { //others\r\n            nodeText = node.textContent;\r\n        }\r\n        return nodeText;\r\n    }\r\n\r\n    /// <summary>\r\n    /// set node text\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <param name=\"text\">text be set to the node</param>\r\n    /// <returns>True if text is set succesfully</returns>\r\n    setNodeText(node, text) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false },\r\n            { name: \"text\", type: String, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        if (this.getNodeType(node) == 9) { //Handle special case for document node.\r\n            //For document node on Chrome and Edge, the text and textContent of the node are both null.\r\n            //As the text for document node cannot be set, return false here.\r\n            return false;\r\n        }\r\n        try {\r\n            if (node.text) { //IE\r\n                node.text = text;\r\n            }\r\n            else { //others\r\n                node.textContent = text;\r\n            }\r\n        }\r\n        catch (ex) {\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node xml\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>xml of the node as string</returns>\r\n    getNodeXml(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var nodeXml;\r\n        if (node.xml) { //IE\r\n            nodeXml = node.xml;\r\n        }\r\n        else { //Others\r\n            nodeXml = new XMLSerializer().serializeToString(node);\r\n            if (this.getNodeType(node) == 2) { // Handle special case for attribute node.\r\n                nodeXml = this.getNodeBaseName(node) + \"=\\\"\" + nodeXml + \"\\\"\";\r\n            }\r\n        }\r\n        return nodeXml;\r\n    }\r\n\r\n    /// <summary>\r\n    /// set node xml\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <param name=\"xml\">xml be set to the node</param>\r\n    /// <returns>new node after the xml set</returns>\r\n    setNodeXml(node, xml) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false },\r\n            { name: \"xml\", type: String, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var processor = new OSF.XmlProcessor(xml, \"\");\r\n        if (!processor.isValidXml()) {\r\n            return null;\r\n        }\r\n        var newNode = processor.getDocumentElement();\r\n        try {\r\n            node.parentNode.replaceChild(newNode, node);\r\n        }\r\n        catch (ex) {\r\n            return null;\r\n        }\r\n        return newNode;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node namespaceURI\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>namespaceURI of the node as string</returns>\r\n    getNodeNamespaceURI(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return node.namespaceURI;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node prefix\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>prefix of the node as string</returns>\r\n    getNodePrefix(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return node.prefix;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node baseName\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>baseName of the node as string</returns>\r\n    getNodeBaseName(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var nodeBaseName;\r\n        // localName: http://www.w3schools.com/xml/prop_node_localname.asp\r\n        // nodename: http://www.w3schools.com/xml/prop_node_nodename.asp\r\n        // baseName: https://msdn.microsoft.com/en-us/library/ms767570(v=vs.85).aspx\r\n        if (node.nodeType && (node.nodeType == 1 || node.nodeType == 2)) { // For element node and attribute node, use the baseName (IE) or localName (Others)\r\n            if (node.baseName) { //IE\r\n                nodeBaseName = node.baseName;\r\n            }\r\n            else { //others\r\n                nodeBaseName = node.localName;\r\n            }\r\n        }\r\n        else { // For other nodetype, use nodeName as the basename\r\n            nodeBaseName = node.nodeName;\r\n        }\r\n        return nodeBaseName;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node type\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <returns>type of the node as int</returns>\r\n    getNodeType(node) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        return node.nodeType;\r\n    }\r\n\r\n    /// <summary>\r\n    /// append child node with child xml\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <param name=\"childXml\">child xml be appended to the node</param>\r\n    /// <returns>new child node after the xml appended</returns>\r\n    appendChild(node, childXml) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false },\r\n            { name: \"childXml\", type: String, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var processor = new OSF.XmlProcessor(childXml, \"\");\r\n        if (!processor.isValidXml()) {\r\n            return null;\r\n        }\r\n        var childNode = processor.getDocumentElement();\r\n        node.appendChild(childNode);\r\n        return childNode;\r\n    }\r\n\r\n    /// <summary>\r\n    /// get node value\r\n    /// </summary>\r\n    /// <accessibility>private</accessibility>\r\n    /// <param name=\"attribute\">DOM attribute object</param>\r\n    /// <returns>value of the node as string</returns>\r\n    _getAttributeLocalName(attribute) {\r\n        var localName;\r\n        if (attribute.localName) { //non IE\r\n            localName = attribute.localName;\r\n        }\r\n        else { //IE\r\n            localName = attribute.baseName;\r\n        }\r\n        return localName;\r\n    }\r\n\r\n    /// <summary>\r\n    /// read attributes to fill the object\r\n    /// </summary>\r\n    /// <accessibility>public</accessibility>\r\n    /// <param name=\"node\">DOM element object</param>\r\n    /// <param name=\"attributesToRead\">attributes to read</param>\r\n    /// <param name=\"objectToFill\">object to fill with attribute values</param>\r\n    readAttributes(node, attributesToRead, objectToFill) {\r\n        var e = Utils.validateParams(arguments, [\r\n            { name: \"node\", type: Object, mayBeNull: false },\r\n            { name: \"attributesToRead\", type: Object, mayBeNull: false },\r\n            { name: \"objectToFill\", type: Object, mayBeNull: false }\r\n        ]);\r\n        if (e)\r\n            throw e;\r\n        var attribute;\r\n        var localName;\r\n        for (var i = 0; i < node.attributes.length; i++) {\r\n            attribute = node.attributes[i];\r\n            localName = this._getAttributeLocalName(attribute);\r\n            for (var p in attributesToRead) {\r\n                if (localName === p) {\r\n                    objectToFill[attributesToRead[p]] = attribute.value;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    /// <summary>\r\n    /// Identify whether the xml string passed to the processor is valid\r\n    /// </summary>\r\n    isValidXml() {\r\n        var documentElement = this.getDocumentElement();\r\n        if (documentElement == null) {\r\n            return false;\r\n        }\r\n        else if (this._provider._xmldoc.getElementsByTagName(\"parsererror\").length > 0) {\r\n            var parser = new DOMParser();\r\n            var errorParse = parser.parseFromString('<', 'text/xml');\r\n            var parseErrorNS = errorParse.getElementsByTagName(\"parsererror\")[0].namespaceURI;\r\n            return this._provider._xmldoc.getElementsByTagNameNS(parseErrorNS, 'parsererror').length <= 0;\r\n        }\r\n        return true;\r\n    }\r\n}"]}