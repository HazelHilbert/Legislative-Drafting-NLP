var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPropertyType = exports.PropertyType = void 0;
const propertiesJson = __importStar(require("./data/properties.json"));
var PropertyType;
(function (PropertyType) {
    PropertyType[PropertyType["navigational"] = 0] = "navigational";
    PropertyType[PropertyType["scalar"] = 1] = "scalar";
    PropertyType[PropertyType["ambiguous"] = 2] = "ambiguous";
    PropertyType[PropertyType["notProperty"] = 3] = "notProperty";
})(PropertyType = exports.PropertyType || (exports.PropertyType = {}));
const navigationProperties = new Set(propertiesJson.navigational);
const scalarProperties = new Set(propertiesJson.scalar);
const ambiguousProperties = new Set(propertiesJson.ambiguous);
function getPropertyType(propertyName) {
    if (navigationProperties.has(propertyName)) {
        return PropertyType.navigational;
    }
    else if (scalarProperties.has(propertyName)) {
        return PropertyType.scalar;
    }
    else if (ambiguousProperties.has(propertyName)) {
        return PropertyType.ambiguous;
    }
    else {
        return PropertyType.notProperty;
    }
}
exports.getPropertyType = getPropertyType;
//# sourceMappingURL=propertiesType.js.map