{"version":3,"file":"typedi.umd.js","sources":["../esm5/token.class.js","../esm5/error/service-not-found.error.js","../esm5/error/cannot-instantiate-value.error.js","../esm5/empty.const.js","../esm5/container-instance.class.js","../esm5/container.class.js","../esm5/error/cannot-inject-value.error.js","../esm5/utils/resolve-to-type-wrapper.util.js","../esm5/decorators/inject-many.decorator.js","../esm5/decorators/inject.decorator.js","../esm5/decorators/service.decorator.js","../esm5/index.js"],"sourcesContent":["/**\n * Used to create unique typed service identifier.\n * Useful when service has only interface, but don't have a class.\n */\nvar Token = /** @class */ (function () {\n    /**\n     * @param name Token name, optional and only used for debugging purposes.\n     */\n    function Token(name) {\n        this.name = name;\n    }\n    return Token;\n}());\nexport { Token };\n//# sourceMappingURL=token.class.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Token } from '../token.class';\n/**\n * Thrown when requested service was not found.\n */\nvar ServiceNotFoundError = /** @class */ (function (_super) {\n    __extends(ServiceNotFoundError, _super);\n    function ServiceNotFoundError(identifier) {\n        var _a, _b;\n        var _this = _super.call(this) || this;\n        _this.name = 'ServiceNotFoundError';\n        /** Normalized identifier name used in the error message. */\n        _this.normalizedIdentifier = '<UNKNOWN_IDENTIFIER>';\n        if (typeof identifier === 'string') {\n            _this.normalizedIdentifier = identifier;\n        }\n        else if (identifier instanceof Token) {\n            _this.normalizedIdentifier = \"Token<\" + (identifier.name || 'UNSET_NAME') + \">\";\n        }\n        else if (identifier && (identifier.name || ((_a = identifier.prototype) === null || _a === void 0 ? void 0 : _a.name))) {\n            _this.normalizedIdentifier =\n                \"MaybeConstructable<\" + identifier.name + \">\" ||\n                    \"MaybeConstructable<\" + ((_b = identifier.prototype) === null || _b === void 0 ? void 0 : _b.name) + \">\";\n        }\n        return _this;\n    }\n    Object.defineProperty(ServiceNotFoundError.prototype, \"message\", {\n        get: function () {\n            return (\"Service with \\\"\" + this.normalizedIdentifier + \"\\\" identifier was not found in the container. \" +\n                \"Register it before usage via explicitly calling the \\\"Container.set\\\" function or using the \\\"@Service()\\\" decorator.\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return ServiceNotFoundError;\n}(Error));\nexport { ServiceNotFoundError };\n//# sourceMappingURL=service-not-found.error.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Token } from '../token.class';\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nvar CannotInstantiateValueError = /** @class */ (function (_super) {\n    __extends(CannotInstantiateValueError, _super);\n    function CannotInstantiateValueError(identifier) {\n        var _a, _b;\n        var _this = _super.call(this) || this;\n        _this.name = 'CannotInstantiateValueError';\n        /** Normalized identifier name used in the error message. */\n        _this.normalizedIdentifier = '<UNKNOWN_IDENTIFIER>';\n        // TODO: Extract this to a helper function and share between this and NotFoundError.\n        if (typeof identifier === 'string') {\n            _this.normalizedIdentifier = identifier;\n        }\n        else if (identifier instanceof Token) {\n            _this.normalizedIdentifier = \"Token<\" + (identifier.name || 'UNSET_NAME') + \">\";\n        }\n        else if (identifier && (identifier.name || ((_a = identifier.prototype) === null || _a === void 0 ? void 0 : _a.name))) {\n            _this.normalizedIdentifier =\n                \"MaybeConstructable<\" + identifier.name + \">\" ||\n                    \"MaybeConstructable<\" + ((_b = identifier.prototype) === null || _b === void 0 ? void 0 : _b.name) + \">\";\n        }\n        return _this;\n    }\n    Object.defineProperty(CannotInstantiateValueError.prototype, \"message\", {\n        get: function () {\n            return (\"Cannot instantiate the requested value for the \\\"\" + this.normalizedIdentifier + \"\\\" identifier. \" +\n                \"The related metadata doesn't contain a factory or a type to instantiate.\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CannotInstantiateValueError;\n}(Error));\nexport { CannotInstantiateValueError };\n//# sourceMappingURL=cannot-instantiate-value.error.js.map","export var EMPTY_VALUE = Symbol('EMPTY_VALUE');\n//# sourceMappingURL=empty.const.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nimport { Container } from './container.class';\nimport { ServiceNotFoundError } from './error/service-not-found.error';\nimport { CannotInstantiateValueError } from './error/cannot-instantiate-value.error';\nimport { Token } from './token.class';\nimport { EMPTY_VALUE } from './empty.const';\n/**\n * TypeDI can have multiple containers.\n * One container is ContainerInstance.\n */\nvar ContainerInstance = /** @class */ (function () {\n    function ContainerInstance(id) {\n        /** All registered services in the container. */\n        this.services = [];\n        this.id = id;\n    }\n    ContainerInstance.prototype.has = function (identifier) {\n        return !!this.findService(identifier);\n    };\n    ContainerInstance.prototype.get = function (identifier) {\n        var globalContainer = Container.of(undefined);\n        var globalService = globalContainer.findService(identifier);\n        var scopedService = this.findService(identifier);\n        if (globalService && globalService.global === true)\n            return this.getServiceValue(globalService);\n        if (scopedService)\n            return this.getServiceValue(scopedService);\n        /** If it's the first time requested in the child container we load it from parent and set it. */\n        if (globalService && this !== globalContainer) {\n            var clonedService = __assign({}, globalService);\n            clonedService.value = EMPTY_VALUE;\n            /**\n             * We need to immediately set the empty value from the root container\n             * to prevent infinite lookup in cyclic dependencies.\n             */\n            this.set(clonedService);\n            var value = this.getServiceValue(clonedService);\n            this.set(__assign(__assign({}, clonedService), { value: value }));\n            return value;\n        }\n        if (globalService)\n            return this.getServiceValue(globalService);\n        throw new ServiceNotFoundError(identifier);\n    };\n    ContainerInstance.prototype.getMany = function (identifier) {\n        var _this = this;\n        return this.findAllServices(identifier).map(function (service) { return _this.getServiceValue(service); });\n    };\n    ContainerInstance.prototype.set = function (identifierOrServiceMetadata, value) {\n        var _this = this;\n        if (identifierOrServiceMetadata instanceof Array) {\n            identifierOrServiceMetadata.forEach(function (data) { return _this.set(data); });\n            return this;\n        }\n        if (typeof identifierOrServiceMetadata === 'string' || identifierOrServiceMetadata instanceof Token) {\n            return this.set({\n                id: identifierOrServiceMetadata,\n                type: null,\n                value: value,\n                factory: undefined,\n                global: false,\n                multiple: false,\n                eager: false,\n                transient: false,\n            });\n        }\n        if (typeof identifierOrServiceMetadata === 'function') {\n            return this.set({\n                id: identifierOrServiceMetadata,\n                // TODO: remove explicit casting\n                type: identifierOrServiceMetadata,\n                value: value,\n                factory: undefined,\n                global: false,\n                multiple: false,\n                eager: false,\n                transient: false,\n            });\n        }\n        var newService = __assign({ id: new Token('UNREACHABLE'), type: null, factory: undefined, value: EMPTY_VALUE, global: false, multiple: false, eager: false, transient: false }, identifierOrServiceMetadata);\n        var service = this.findService(newService.id);\n        if (service && service.multiple !== true) {\n            Object.assign(service, newService);\n        }\n        else {\n            this.services.push(newService);\n        }\n        if (newService.eager) {\n            this.get(newService.id);\n        }\n        return this;\n    };\n    /**\n     * Removes services with a given service identifiers.\n     */\n    ContainerInstance.prototype.remove = function (identifierOrIdentifierArray) {\n        var _this = this;\n        if (Array.isArray(identifierOrIdentifierArray)) {\n            identifierOrIdentifierArray.forEach(function (id) { return _this.remove(id); });\n        }\n        else {\n            this.services = this.services.filter(function (service) {\n                if (service.id === identifierOrIdentifierArray) {\n                    _this.destroyServiceInstance(service);\n                    return false;\n                }\n                return true;\n            });\n        }\n        return this;\n    };\n    /**\n     * Completely resets the container by removing all previously registered services from it.\n     */\n    ContainerInstance.prototype.reset = function (options) {\n        var _this = this;\n        if (options === void 0) { options = { strategy: 'resetValue' }; }\n        switch (options.strategy) {\n            case 'resetValue':\n                this.services.forEach(function (service) { return _this.destroyServiceInstance(service); });\n                break;\n            case 'resetServices':\n                this.services.forEach(function (service) { return _this.destroyServiceInstance(service); });\n                this.services = [];\n                break;\n            default:\n                throw new Error('Received invalid reset strategy.');\n        }\n        return this;\n    };\n    /**\n     * Returns all services registered with the given identifier.\n     */\n    ContainerInstance.prototype.findAllServices = function (identifier) {\n        return this.services.filter(function (service) { return service.id === identifier; });\n    };\n    /**\n     * Finds registered service in the with a given service identifier.\n     */\n    ContainerInstance.prototype.findService = function (identifier) {\n        return this.services.find(function (service) { return service.id === identifier; });\n    };\n    /**\n     * Gets the value belonging to `serviceMetadata.id`.\n     *\n     * - if `serviceMetadata.value` is already set it is immediately returned\n     * - otherwise the requested type is resolved to the value saved to `serviceMetadata.value` and returned\n     */\n    ContainerInstance.prototype.getServiceValue = function (serviceMetadata) {\n        var _a;\n        var value = EMPTY_VALUE;\n        /**\n         * If the service value has been set to anything prior to this call we return that value.\n         * NOTE: This part builds on the assumption that transient dependencies has no value set ever.\n         */\n        if (serviceMetadata.value !== EMPTY_VALUE) {\n            return serviceMetadata.value;\n        }\n        /** If both factory and type is missing, we cannot resolve the requested ID. */\n        if (!serviceMetadata.factory && !serviceMetadata.type) {\n            throw new CannotInstantiateValueError(serviceMetadata.id);\n        }\n        /**\n         * If a factory is defined it takes priority over creating an instance via `new`.\n         * The return value of the factory is not checked, we believe by design that the user knows what he/she is doing.\n         */\n        if (serviceMetadata.factory) {\n            /**\n             * If we received the factory in the [Constructable<Factory>, \"functionName\"] format, we need to create the\n             * factory first and then call the specified function on it.\n             */\n            if (serviceMetadata.factory instanceof Array) {\n                var factoryInstance = void 0;\n                try {\n                    /** Try to get the factory from TypeDI first, if failed, fall back to simply initiating the class. */\n                    factoryInstance = this.get(serviceMetadata.factory[0]);\n                }\n                catch (error) {\n                    if (error instanceof ServiceNotFoundError) {\n                        factoryInstance = new serviceMetadata.factory[0]();\n                    }\n                    else {\n                        throw error;\n                    }\n                }\n                value = factoryInstance[serviceMetadata.factory[1]](this, serviceMetadata.id);\n            }\n            else {\n                /** If only a simple function was provided we simply call it. */\n                value = serviceMetadata.factory(this, serviceMetadata.id);\n            }\n        }\n        /**\n         * If no factory was provided and only then, we create the instance from the type if it was set.\n         */\n        if (!serviceMetadata.factory && serviceMetadata.type) {\n            var constructableTargetType = serviceMetadata.type;\n            // setup constructor parameters for a newly initialized service\n            var paramTypes = ((_a = Reflect) === null || _a === void 0 ? void 0 : _a.getMetadata('design:paramtypes', constructableTargetType)) || [];\n            var params = this.initializeParams(constructableTargetType, paramTypes);\n            // \"extra feature\" - always pass container instance as the last argument to the service function\n            // this allows us to support javascript where we don't have decorators and emitted metadata about dependencies\n            // need to be injected, and user can use provided container to get instances he needs\n            params.push(this);\n            value = new (constructableTargetType.bind.apply(constructableTargetType, __spreadArrays([void 0], params)))();\n            // TODO: Calling this here, leads to infinite loop, because @Inject decorator registerds a handler\n            // TODO: which calls Container.get, which will check if the requested type has a value set and if not\n            // TODO: it will start the instantiation process over. So this is currently called outside of the if branch\n            // TODO: after the current value has been assigned to the serviceMetadata.\n            // this.applyPropertyHandlers(constructableTargetType, value as Constructable<unknown>);\n        }\n        /** If this is not a transient service, and we resolved something, then we set it as the value. */\n        if (!serviceMetadata.transient && value !== EMPTY_VALUE) {\n            serviceMetadata.value = value;\n        }\n        if (value === EMPTY_VALUE) {\n            /** This branch should never execute, but better to be safe than sorry. */\n            throw new CannotInstantiateValueError(serviceMetadata.id);\n        }\n        if (serviceMetadata.type) {\n            this.applyPropertyHandlers(serviceMetadata.type, value);\n        }\n        return value;\n    };\n    /**\n     * Initializes all parameter types for a given target service class.\n     */\n    ContainerInstance.prototype.initializeParams = function (target, paramTypes) {\n        var _this = this;\n        return paramTypes.map(function (paramType, index) {\n            var paramHandler = Container.handlers.find(function (handler) {\n                /**\n                 * @Inject()-ed values are stored as parameter handlers and they reference their target\n                 * when created. So when a class is extended the @Inject()-ed values are not inherited\n                 * because the handler still points to the old object only.\n                 *\n                 * As a quick fix a single level parent lookup is added via `Object.getPrototypeOf(target)`,\n                 * however this should be updated to a more robust solution.\n                 *\n                 * TODO: Add proper inheritance handling: either copy the handlers when a class is registered what\n                 * TODO: has it's parent already registered as dependency or make the lookup search up to the base Object.\n                 */\n                return ((handler.object === target || handler.object === Object.getPrototypeOf(target)) && handler.index === index);\n            });\n            if (paramHandler)\n                return paramHandler.value(_this);\n            if (paramType && paramType.name && !_this.isPrimitiveParamType(paramType.name)) {\n                return _this.get(paramType);\n            }\n            return undefined;\n        });\n    };\n    /**\n     * Checks if given parameter type is primitive type or not.\n     */\n    ContainerInstance.prototype.isPrimitiveParamType = function (paramTypeName) {\n        return ['string', 'boolean', 'number', 'object'].includes(paramTypeName.toLowerCase());\n    };\n    /**\n     * Applies all registered handlers on a given target class.\n     */\n    ContainerInstance.prototype.applyPropertyHandlers = function (target, instance) {\n        var _this = this;\n        Container.handlers.forEach(function (handler) {\n            if (typeof handler.index === 'number')\n                return;\n            if (handler.object.constructor !== target && !(target.prototype instanceof handler.object.constructor))\n                return;\n            if (handler.propertyName) {\n                instance[handler.propertyName] = handler.value(_this);\n            }\n        });\n    };\n    /**\n     * Checks if the given service metadata contains a destroyable service instance and destroys it in place. If the service\n     * contains a callable function named `destroy` it is called but not awaited and the return value is ignored..\n     *\n     * @param serviceMetadata the service metadata containing the instance to destroy\n     * @param force when true the service will be always destroyed even if it's cannot be re-created\n     */\n    ContainerInstance.prototype.destroyServiceInstance = function (serviceMetadata, force) {\n        if (force === void 0) { force = false; }\n        /** We reset value only if we can re-create it (aka type or factory exists). */\n        var shouldResetValue = force || !!serviceMetadata.type || !!serviceMetadata.factory;\n        if (shouldResetValue) {\n            /** If we wound a function named destroy we call it without any params. */\n            if (typeof (serviceMetadata === null || serviceMetadata === void 0 ? void 0 : serviceMetadata.value)['destroy'] === 'function') {\n                try {\n                    serviceMetadata.value.destroy();\n                }\n                catch (error) {\n                    /** We simply ignore the errors from the destroy function. */\n                }\n            }\n            serviceMetadata.value = EMPTY_VALUE;\n        }\n    };\n    return ContainerInstance;\n}());\nexport { ContainerInstance };\n//# sourceMappingURL=container-instance.class.js.map","import { ContainerInstance } from './container-instance.class';\n/**\n * Service container.\n */\nvar Container = /** @class */ (function () {\n    function Container() {\n    }\n    /**\n     * Gets a separate container instance for the given instance id.\n     */\n    Container.of = function (containerId) {\n        if (containerId === void 0) { containerId = 'default'; }\n        if (containerId === 'default')\n            return this.globalInstance;\n        var container = this.instances.find(function (instance) { return instance.id === containerId; });\n        if (!container) {\n            container = new ContainerInstance(containerId);\n            this.instances.push(container);\n            // TODO: Why we are not reseting here? Let's reset here. (I have added the commented code.)\n            // container.reset();\n        }\n        return container;\n    };\n    Container.has = function (identifier) {\n        return this.globalInstance.has(identifier);\n    };\n    Container.get = function (identifier) {\n        return this.globalInstance.get(identifier);\n    };\n    Container.getMany = function (id) {\n        return this.globalInstance.getMany(id);\n    };\n    Container.set = function (identifierOrServiceMetadata, value) {\n        this.globalInstance.set(identifierOrServiceMetadata, value);\n        return this;\n    };\n    /**\n     * Removes services with a given service identifiers.\n     */\n    Container.remove = function (identifierOrIdentifierArray) {\n        this.globalInstance.remove(identifierOrIdentifierArray);\n        return this;\n    };\n    /**\n     * Completely resets the container by removing all previously registered services and handlers from it.\n     */\n    Container.reset = function (containerId) {\n        if (containerId === void 0) { containerId = 'default'; }\n        if (containerId == 'default') {\n            this.globalInstance.reset();\n            this.instances.forEach(function (instance) { return instance.reset(); });\n        }\n        else {\n            var instance = this.instances.find(function (instance) { return instance.id === containerId; });\n            if (instance) {\n                instance.reset();\n                this.instances.splice(this.instances.indexOf(instance), 1);\n            }\n        }\n        return this;\n    };\n    /**\n     * Registers a new handler.\n     */\n    Container.registerHandler = function (handler) {\n        this.handlers.push(handler);\n        return this;\n    };\n    /**\n     * Helper method that imports given services.\n     */\n    /* eslint-disable-next-line @typescript-eslint/no-unused-vars */\n    Container.import = function (services) {\n        return this;\n    };\n    /**\n     * All registered handlers. The @Inject() decorator uses handlers internally to mark a property for injection.\n     **/\n    Container.handlers = [];\n    /**  Global container instance. */\n    Container.globalInstance = new ContainerInstance('default');\n    /** Other containers created using Container.of method. */\n    Container.instances = [];\n    return Container;\n}());\nexport { Container };\n//# sourceMappingURL=container.class.js.map","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nvar CannotInjectValueError = /** @class */ (function (_super) {\n    __extends(CannotInjectValueError, _super);\n    function CannotInjectValueError(target, propertyName) {\n        var _this = _super.call(this) || this;\n        _this.target = target;\n        _this.propertyName = propertyName;\n        _this.name = 'CannotInjectValueError';\n        return _this;\n    }\n    Object.defineProperty(CannotInjectValueError.prototype, \"message\", {\n        get: function () {\n            return (\"Cannot inject value into \\\"\" + this.target.constructor.name + \".\" + this.propertyName + \"\\\". \" +\n                \"Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return CannotInjectValueError;\n}(Error));\nexport { CannotInjectValueError };\n//# sourceMappingURL=cannot-inject-value.error.js.map","import { Token } from '../token.class';\n/**\n * Helper function used in inject decorators to resolve the received identifier to\n * an eager type when possible or to a lazy type when cyclic dependencies are possibly involved.\n *\n * @param typeOrIdentifier a service identifier or a function returning a type acting as service identifier or nothing\n * @param target the class definition of the target of the decorator\n * @param propertyName the name of the property in case of a PropertyDecorator\n * @param index the index of the parameter in the constructor in case of ParameterDecorator\n */\nexport function resolveToTypeWrapper(typeOrIdentifier, target, propertyName, index) {\n    /**\n     * ? We want to error out as soon as possible when looking up services to inject, however\n     * ? we cannot determine the type at decorator execution when cyclic dependencies are involved\n     * ? because calling the received `() => MyType` function right away would cause a JS error:\n     * ? \"Cannot access 'MyType' before initialization\", so we need to execute the function in the handler,\n     * ? when the classes are already created. To overcome this, we use a wrapper:\n     * ?  - the lazyType is executed in the handler so we never have a JS error\n     * ?  - the eagerType is checked when decorator is running and an error is raised if an unknown type is encountered\n     */\n    var typeWrapper;\n    /** If requested type is explicitly set via a string ID or token, we set it explicitly. */\n    if ((typeOrIdentifier && typeof typeOrIdentifier === 'string') || typeOrIdentifier instanceof Token) {\n        typeWrapper = { eagerType: typeOrIdentifier, lazyType: function () { return typeOrIdentifier; } };\n    }\n    /** If requested type is explicitly set via a () => MyClassType format, we set it explicitly. */\n    if (typeOrIdentifier && typeof typeOrIdentifier === 'function') {\n        /** We set eagerType to null, preventing the raising of the CannotInjectValueError in decorators.  */\n        typeWrapper = { eagerType: null, lazyType: function () { return typeOrIdentifier(); } };\n    }\n    /** If no explicit type is set and handler registered for a class property, we need to get the property type. */\n    if (!typeOrIdentifier && propertyName) {\n        var identifier_1 = Reflect.getMetadata('design:type', target, propertyName);\n        typeWrapper = { eagerType: identifier_1, lazyType: function () { return identifier_1; } };\n    }\n    /** If no explicit type is set and handler registered for a constructor parameter, we need to get the parameter types. */\n    if (!typeOrIdentifier && typeof index == 'number' && Number.isInteger(index)) {\n        var paramTypes = Reflect.getMetadata('design:paramtypes', target, propertyName);\n        /** It's not guaranteed, that we find any types for the constructor. */\n        var identifier_2 = paramTypes === null || paramTypes === void 0 ? void 0 : paramTypes[index];\n        typeWrapper = { eagerType: identifier_2, lazyType: function () { return identifier_2; } };\n    }\n    return typeWrapper;\n}\n//# sourceMappingURL=resolve-to-type-wrapper.util.js.map","import { Container } from '../container.class';\nimport { CannotInjectValueError } from '../error/cannot-inject-value.error';\nimport { resolveToTypeWrapper } from '../utils/resolve-to-type-wrapper.util';\nexport function InjectMany(typeOrIdentifier) {\n    return function (target, propertyName, index) {\n        var typeWrapper = resolveToTypeWrapper(typeOrIdentifier, target, propertyName, index);\n        /** If no type was inferred, or the general Object type was inferred we throw an error. */\n        if (typeWrapper === undefined || typeWrapper.eagerType === undefined || typeWrapper.eagerType === Object) {\n            throw new CannotInjectValueError(target, propertyName);\n        }\n        Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: function (containerInstance) {\n                var evaluatedLazyType = typeWrapper.lazyType();\n                /** If no type was inferred lazily, or the general Object type was inferred we throw an error. */\n                if (evaluatedLazyType === undefined || evaluatedLazyType === Object) {\n                    throw new CannotInjectValueError(target, propertyName);\n                }\n                return containerInstance.getMany(evaluatedLazyType);\n            },\n        });\n    };\n}\n//# sourceMappingURL=inject-many.decorator.js.map","import { Container } from '../container.class';\nimport { CannotInjectValueError } from '../error/cannot-inject-value.error';\nimport { resolveToTypeWrapper } from '../utils/resolve-to-type-wrapper.util';\nexport function Inject(typeOrIdentifier) {\n    return function (target, propertyName, index) {\n        var typeWrapper = resolveToTypeWrapper(typeOrIdentifier, target, propertyName, index);\n        /** If no type was inferred, or the general Object type was inferred we throw an error. */\n        if (typeWrapper === undefined || typeWrapper.eagerType === undefined || typeWrapper.eagerType === Object) {\n            throw new CannotInjectValueError(target, propertyName);\n        }\n        Container.registerHandler({\n            object: target,\n            propertyName: propertyName,\n            index: index,\n            value: function (containerInstance) {\n                var evaluatedLazyType = typeWrapper.lazyType();\n                /** If no type was inferred lazily, or the general Object type was inferred we throw an error. */\n                if (evaluatedLazyType === undefined || evaluatedLazyType === Object) {\n                    throw new CannotInjectValueError(target, propertyName);\n                }\n                return containerInstance.get(evaluatedLazyType);\n            },\n        });\n    };\n}\n//# sourceMappingURL=inject.decorator.js.map","import { Container } from '../container.class';\nimport { Token } from '../token.class';\nimport { EMPTY_VALUE } from '../empty.const';\nexport function Service(optionsOrServiceIdentifier) {\n    return function (targetConstructor) {\n        var serviceMetadata = {\n            id: targetConstructor,\n            // TODO: Let's investigate why we receive Function type instead of a constructable.\n            type: targetConstructor,\n            factory: undefined,\n            multiple: false,\n            global: false,\n            eager: false,\n            transient: false,\n            value: EMPTY_VALUE,\n        };\n        if (optionsOrServiceIdentifier instanceof Token || typeof optionsOrServiceIdentifier === 'string') {\n            /** We received a Token or string ID. */\n            serviceMetadata.id = optionsOrServiceIdentifier;\n        }\n        else if (optionsOrServiceIdentifier) {\n            /** We received a ServiceOptions object. */\n            serviceMetadata.id = optionsOrServiceIdentifier.id || targetConstructor;\n            serviceMetadata.factory = optionsOrServiceIdentifier.factory || undefined;\n            serviceMetadata.multiple = optionsOrServiceIdentifier.multiple || false;\n            serviceMetadata.global = optionsOrServiceIdentifier.global || false;\n            serviceMetadata.eager = optionsOrServiceIdentifier.eager || false;\n            serviceMetadata.transient = optionsOrServiceIdentifier.transient || false;\n        }\n        Container.set(serviceMetadata);\n    };\n}\n//# sourceMappingURL=service.decorator.js.map","/**\n * We have a hard dependency on reflect-metadata package.\n * Without the dependency lookup wont work. So we should warn the users\n * when it's not loaded.\n */\n// if(!Reflect || !(Reflect as any).getMetadata) {\n//   throw new Error('Reflect.getMetadata is not a function. Please import the \"reflect-metadata\" package at the first line of your application.');\n// }\nimport { Container } from './container.class';\nexport * from './decorators/inject-many.decorator';\nexport * from './decorators/inject.decorator';\nexport * from './decorators/service.decorator';\nexport * from './error/cannot-inject-value.error';\nexport * from './error/cannot-instantiate-value.error';\nexport * from './error/service-not-found.error';\nexport { ContainerInstance } from './container-instance.class';\nexport { Container } from './container.class';\nexport { Token } from './token.class';\nexport default Container;\n//# sourceMappingURL=index.js.map"],"names":["this","__extends"],"mappings":"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"}