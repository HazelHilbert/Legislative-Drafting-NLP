{"version":3,"file":"cannot-inject-value.error.js","sourceRoot":"","sources":["../../../src/error/cannot-inject-value.error.ts"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;;GAEG;AACH;IAA4C,0CAAK;IAU/C,gCAAoB,MAA8B,EAAU,YAAoB;QAAhF,YACE,iBAAO,SACR;QAFmB,YAAM,GAAN,MAAM,CAAwB;QAAU,kBAAY,GAAZ,YAAY,CAAQ;QATzE,UAAI,GAAG,wBAAwB,CAAC;;IAWvC,CAAC;IATD,sBAAI,2CAAO;aAAX;YACE,OAAO,CACL,gCAA6B,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,SAAI,IAAI,CAAC,YAAY,SAAK;gBACnF,8HAA8H,CAC/H,CAAC;QACJ,CAAC;;;OAAA;IAKH,6BAAC;AAAD,CAAC,AAbD,CAA4C,KAAK,GAahD","sourcesContent":["import { Constructable } from '../types/constructable.type';\n\n/**\n * Thrown when DI cannot inject value into property decorated by @Inject decorator.\n */\nexport class CannotInjectValueError extends Error {\n  public name = 'CannotInjectValueError';\n\n  get message(): string {\n    return (\n      `Cannot inject value into \"${this.target.constructor.name}.${this.propertyName}\". ` +\n      `Please make sure you setup reflect-metadata properly and you don't use interfaces without service tokens as injection value.`\n    );\n  }\n\n  constructor(private target: Constructable<unknown>, private propertyName: string) {\n    super();\n  }\n}\n"]}