{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AACH,kDAAkD;AAClD,mJAAmJ;AACnJ,IAAI;AAEJ,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAE9C,cAAc,oCAAoC,CAAC;AACnD,cAAc,+BAA+B,CAAC;AAC9C,cAAc,gCAAgC,CAAC;AAE/C,cAAc,mCAAmC,CAAC;AAClD,cAAc,wCAAwC,CAAC;AACvD,cAAc,iCAAiC,CAAC;AAQhD,OAAO,EAAE,iBAAiB,EAAE,MAAM,4BAA4B,CAAC;AAC/D,OAAO,EAAE,SAAS,EAAE,MAAM,mBAAmB,CAAC;AAC9C,OAAO,EAAE,KAAK,EAAE,MAAM,eAAe,CAAC;AAEtC,eAAe,SAAS,CAAC","sourcesContent":["/**\n * We have a hard dependency on reflect-metadata package.\n * Without the dependency lookup wont work. So we should warn the users\n * when it's not loaded.\n */\n// if(!Reflect || !(Reflect as any).getMetadata) {\n//   throw new Error('Reflect.getMetadata is not a function. Please import the \"reflect-metadata\" package at the first line of your application.');\n// }\n\nimport { Container } from './container.class';\n\nexport * from './decorators/inject-many.decorator';\nexport * from './decorators/inject.decorator';\nexport * from './decorators/service.decorator';\n\nexport * from './error/cannot-inject-value.error';\nexport * from './error/cannot-instantiate-value.error';\nexport * from './error/service-not-found.error';\n\nexport { Handler } from './interfaces/handler.interface';\nexport { ServiceMetadata } from './interfaces/service-metadata.interface';\nexport { ServiceOptions } from './interfaces/service-options.interface';\nexport { Constructable } from './types/constructable.type';\nexport { ServiceIdentifier } from './types/service-identifier.type';\n\nexport { ContainerInstance } from './container-instance.class';\nexport { Container } from './container.class';\nexport { Token } from './token.class';\n\nexport default Container;\n"]}