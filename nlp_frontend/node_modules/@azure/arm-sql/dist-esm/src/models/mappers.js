/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
export const Resource = {
    type: {
        name: "Composite",
        className: "Resource",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecoverableDatabaseListResult = {
    type: {
        name: "Composite",
        className: "RecoverableDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecoverableDatabase"
                        }
                    }
                }
            }
        }
    }
};
export const DataMaskingRuleListResult = {
    type: {
        name: "Composite",
        className: "DataMaskingRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataMaskingRule"
                        }
                    }
                }
            }
        }
    }
};
export const GeoBackupPolicyListResult = {
    type: {
        name: "Composite",
        className: "GeoBackupPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "GeoBackupPolicy"
                        }
                    }
                }
            }
        }
    }
};
export const MetricListResult = {
    type: {
        name: "Composite",
        className: "MetricListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Metric"
                        }
                    }
                }
            }
        }
    }
};
export const Metric = {
    type: {
        name: "Composite",
        className: "Metric",
        modelProperties: {
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            },
            metricValues: {
                serializedName: "metricValues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricValue"
                        }
                    }
                }
            }
        }
    }
};
export const MetricName = {
    type: {
        name: "Composite",
        className: "MetricName",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MetricValue = {
    type: {
        name: "Composite",
        className: "MetricValue",
        modelProperties: {
            count: {
                serializedName: "count",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            average: {
                serializedName: "average",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maximum: {
                serializedName: "maximum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            minimum: {
                serializedName: "minimum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            total: {
                serializedName: "total",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const MetricDefinitionListResult = {
    type: {
        name: "Composite",
        className: "MetricDefinitionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricDefinition"
                        }
                    }
                }
            }
        }
    }
};
export const MetricDefinition = {
    type: {
        name: "Composite",
        className: "MetricDefinition",
        modelProperties: {
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "MetricName"
                }
            },
            primaryAggregationType: {
                serializedName: "primaryAggregationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resourceUri: {
                serializedName: "resourceUri",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            metricAvailabilities: {
                serializedName: "metricAvailabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MetricAvailability"
                        }
                    }
                }
            }
        }
    }
};
export const MetricAvailability = {
    type: {
        name: "Composite",
        className: "MetricAvailability",
        modelProperties: {
            retention: {
                serializedName: "retention",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UnlinkParameters = {
    type: {
        name: "Composite",
        className: "UnlinkParameters",
        modelProperties: {
            forcedTermination: {
                serializedName: "forcedTermination",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ServerCommunicationLinkListResult = {
    type: {
        name: "Composite",
        className: "ServerCommunicationLinkListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerCommunicationLink"
                        }
                    }
                }
            }
        }
    }
};
export const ServiceObjectiveListResult = {
    type: {
        name: "Composite",
        className: "ServiceObjectiveListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServiceObjective"
                        }
                    }
                }
            }
        }
    }
};
export const ElasticPoolActivityListResult = {
    type: {
        name: "Composite",
        className: "ElasticPoolActivityListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolActivity"
                        }
                    }
                }
            }
        }
    }
};
export const ElasticPoolDatabaseActivityListResult = {
    type: {
        name: "Composite",
        className: "ElasticPoolDatabaseActivityListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolDatabaseActivity"
                        }
                    }
                }
            }
        }
    }
};
export const ServerUsageListResult = {
    type: {
        name: "Composite",
        className: "ServerUsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerUsage"
                        }
                    }
                }
            }
        }
    }
};
export const ServerUsage = {
    type: {
        name: "Composite",
        className: "ServerUsage",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resourceName: {
                serializedName: "resourceName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            nextResetTime: {
                serializedName: "nextResetTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const ExtendedDatabaseBlobAuditingPolicyListResult = {
    type: {
        name: "Composite",
        className: "ExtendedDatabaseBlobAuditingPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtendedDatabaseBlobAuditingPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ExtendedServerBlobAuditingPolicyListResult = {
    type: {
        name: "Composite",
        className: "ExtendedServerBlobAuditingPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ExtendedServerBlobAuditingPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerBlobAuditingPolicyListResult = {
    type: {
        name: "Composite",
        className: "ServerBlobAuditingPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerBlobAuditingPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseBlobAuditingPolicyListResult = {
    type: {
        name: "Composite",
        className: "DatabaseBlobAuditingPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseBlobAuditingPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecommendedActionStateInfo = {
    type: {
        name: "Composite",
        className: "RecommendedActionStateInfo",
        modelProperties: {
            currentValue: {
                serializedName: "currentValue",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionInitiatedBy: {
                serializedName: "actionInitiatedBy",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["User", "System"]
                }
            },
            lastModified: {
                serializedName: "lastModified",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const RecommendedActionImplementationInfo = {
    type: {
        name: "Composite",
        className: "RecommendedActionImplementationInfo",
        modelProperties: {
            method: {
                serializedName: "method",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["TSql", "AzurePowerShell"]
                }
            },
            script: {
                serializedName: "script",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RecommendedActionErrorInfo = {
    type: {
        name: "Composite",
        className: "RecommendedActionErrorInfo",
        modelProperties: {
            errorCode: {
                serializedName: "errorCode",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            isRetryable: {
                serializedName: "isRetryable",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Yes", "No"]
                }
            }
        }
    }
};
export const RecommendedActionImpactRecord = {
    type: {
        name: "Composite",
        className: "RecommendedActionImpactRecord",
        modelProperties: {
            dimensionName: {
                serializedName: "dimensionName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            absoluteValue: {
                serializedName: "absoluteValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            changeValueAbsolute: {
                serializedName: "changeValueAbsolute",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            changeValueRelative: {
                serializedName: "changeValueRelative",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const RecommendedActionMetricInfo = {
    type: {
        name: "Composite",
        className: "RecommendedActionMetricInfo",
        modelProperties: {
            metricName: {
                serializedName: "metricName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            timeGrain: {
                serializedName: "timeGrain",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const AutomaticTuningOptions = {
    type: {
        name: "Composite",
        className: "AutomaticTuningOptions",
        modelProperties: {
            desiredState: {
                serializedName: "desiredState",
                type: {
                    name: "Enum",
                    allowedValues: ["Off", "On", "Default"]
                }
            },
            actualState: {
                serializedName: "actualState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Off", "On"]
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            reasonDesc: {
                serializedName: "reasonDesc",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Default",
                        "Disabled",
                        "AutoConfigured",
                        "InheritedFromServer",
                        "QueryStoreOff",
                        "QueryStoreReadOnly",
                        "NotSupported"
                    ]
                }
            }
        }
    }
};
export const DatabaseColumnListResult = {
    type: {
        name: "Composite",
        className: "DatabaseColumnListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseColumn"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseSchemaListResult = {
    type: {
        name: "Composite",
        className: "DatabaseSchemaListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseSchema"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SystemData = {
    type: {
        name: "Composite",
        className: "SystemData",
        modelProperties: {
            createdBy: {
                serializedName: "createdBy",
                type: {
                    name: "String"
                }
            },
            createdByType: {
                serializedName: "createdByType",
                type: {
                    name: "String"
                }
            },
            createdAt: {
                serializedName: "createdAt",
                type: {
                    name: "DateTime"
                }
            },
            lastModifiedBy: {
                serializedName: "lastModifiedBy",
                type: {
                    name: "String"
                }
            },
            lastModifiedByType: {
                serializedName: "lastModifiedByType",
                type: {
                    name: "String"
                }
            },
            lastModifiedAt: {
                serializedName: "lastModifiedAt",
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const DatabaseSecurityAlertListResult = {
    type: {
        name: "Composite",
        className: "DatabaseSecurityAlertListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseSecurityAlertPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseTableListResult = {
    type: {
        name: "Composite",
        className: "DatabaseTableListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseTable"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseVulnerabilityAssessmentRuleBaselineItem = {
    type: {
        name: "Composite",
        className: "DatabaseVulnerabilityAssessmentRuleBaselineItem",
        modelProperties: {
            result: {
                serializedName: "result",
                required: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const VulnerabilityAssessmentRecurringScansProperties = {
    type: {
        name: "Composite",
        className: "VulnerabilityAssessmentRecurringScansProperties",
        modelProperties: {
            isEnabled: {
                serializedName: "isEnabled",
                type: {
                    name: "Boolean"
                }
            },
            emailSubscriptionAdmins: {
                defaultValue: true,
                serializedName: "emailSubscriptionAdmins",
                type: {
                    name: "Boolean"
                }
            },
            emails: {
                serializedName: "emails",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const DatabaseVulnerabilityAssessmentListResult = {
    type: {
        name: "Composite",
        className: "DatabaseVulnerabilityAssessmentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseVulnerabilityAssessment"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VulnerabilityAssessmentScanRecordListResult = {
    type: {
        name: "Composite",
        className: "VulnerabilityAssessmentScanRecordListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VulnerabilityAssessmentScanRecord"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VulnerabilityAssessmentScanError = {
    type: {
        name: "Composite",
        className: "VulnerabilityAssessmentScanError",
        modelProperties: {
            code: {
                serializedName: "code",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DataWarehouseUserActivitiesListResult = {
    type: {
        name: "Composite",
        className: "DataWarehouseUserActivitiesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DataWarehouseUserActivities"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DeletedServerListResult = {
    type: {
        name: "Composite",
        className: "DeletedServerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DeletedServer"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolOperationListResult = {
    type: {
        name: "Composite",
        className: "ElasticPoolOperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolOperation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolListResult = {
    type: {
        name: "Composite",
        className: "ElasticPoolListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPool"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Sku = {
    type: {
        name: "Composite",
        className: "Sku",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            size: {
                serializedName: "size",
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            capacity: {
                serializedName: "capacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ElasticPoolPerDatabaseSettings = {
    type: {
        name: "Composite",
        className: "ElasticPoolPerDatabaseSettings",
        modelProperties: {
            minCapacity: {
                serializedName: "minCapacity",
                type: {
                    name: "Number"
                }
            },
            maxCapacity: {
                serializedName: "maxCapacity",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ElasticPoolUpdate = {
    type: {
        name: "Composite",
        className: "ElasticPoolUpdate",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            maxSizeBytes: {
                serializedName: "properties.maxSizeBytes",
                type: {
                    name: "Number"
                }
            },
            perDatabaseSettings: {
                serializedName: "properties.perDatabaseSettings",
                type: {
                    name: "Composite",
                    className: "ElasticPoolPerDatabaseSettings"
                }
            },
            zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            },
            licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            },
            maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EncryptionProtectorListResult = {
    type: {
        name: "Composite",
        className: "EncryptionProtectorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EncryptionProtector"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FailoverGroupReadWriteEndpoint = {
    type: {
        name: "Composite",
        className: "FailoverGroupReadWriteEndpoint",
        modelProperties: {
            failoverPolicy: {
                serializedName: "failoverPolicy",
                required: true,
                type: {
                    name: "String"
                }
            },
            failoverWithDataLossGracePeriodMinutes: {
                serializedName: "failoverWithDataLossGracePeriodMinutes",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const FailoverGroupReadOnlyEndpoint = {
    type: {
        name: "Composite",
        className: "FailoverGroupReadOnlyEndpoint",
        modelProperties: {
            failoverPolicy: {
                serializedName: "failoverPolicy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PartnerInfo = {
    type: {
        name: "Composite",
        className: "PartnerInfo",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            },
            location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            replicationRole: {
                serializedName: "replicationRole",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FailoverGroupUpdate = {
    type: {
        name: "Composite",
        className: "FailoverGroupUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            readWriteEndpoint: {
                serializedName: "properties.readWriteEndpoint",
                type: {
                    name: "Composite",
                    className: "FailoverGroupReadWriteEndpoint"
                }
            },
            readOnlyEndpoint: {
                serializedName: "properties.readOnlyEndpoint",
                type: {
                    name: "Composite",
                    className: "FailoverGroupReadOnlyEndpoint"
                }
            },
            databases: {
                serializedName: "properties.databases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const FailoverGroupListResult = {
    type: {
        name: "Composite",
        className: "FailoverGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FailoverGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceWithWritableName = {
    type: {
        name: "Composite",
        className: "ResourceWithWritableName",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FirewallRuleListResult = {
    type: {
        name: "Composite",
        className: "FirewallRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FirewallRule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const FirewallRuleList = {
    type: {
        name: "Composite",
        className: "FirewallRuleList",
        modelProperties: {
            values: {
                serializedName: "values",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "FirewallRule"
                        }
                    }
                }
            }
        }
    }
};
export const InstanceFailoverGroupReadWriteEndpoint = {
    type: {
        name: "Composite",
        className: "InstanceFailoverGroupReadWriteEndpoint",
        modelProperties: {
            failoverPolicy: {
                serializedName: "failoverPolicy",
                required: true,
                type: {
                    name: "String"
                }
            },
            failoverWithDataLossGracePeriodMinutes: {
                serializedName: "failoverWithDataLossGracePeriodMinutes",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const InstanceFailoverGroupReadOnlyEndpoint = {
    type: {
        name: "Composite",
        className: "InstanceFailoverGroupReadOnlyEndpoint",
        modelProperties: {
            failoverPolicy: {
                serializedName: "failoverPolicy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PartnerRegionInfo = {
    type: {
        name: "Composite",
        className: "PartnerRegionInfo",
        modelProperties: {
            location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            },
            replicationRole: {
                serializedName: "replicationRole",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePairInfo = {
    type: {
        name: "Composite",
        className: "ManagedInstancePairInfo",
        modelProperties: {
            primaryManagedInstanceId: {
                serializedName: "primaryManagedInstanceId",
                type: {
                    name: "String"
                }
            },
            partnerManagedInstanceId: {
                serializedName: "partnerManagedInstanceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InstanceFailoverGroupListResult = {
    type: {
        name: "Composite",
        className: "InstanceFailoverGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstanceFailoverGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InstancePoolUpdate = {
    type: {
        name: "Composite",
        className: "InstancePoolUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const InstancePoolListResult = {
    type: {
        name: "Composite",
        className: "InstancePoolListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstancePool"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobAgentListResult = {
    type: {
        name: "Composite",
        className: "JobAgentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobAgent"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobAgentUpdate = {
    type: {
        name: "Composite",
        className: "JobAgentUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }
        }
    }
};
export const JobCredentialListResult = {
    type: {
        name: "Composite",
        className: "JobCredentialListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobCredential"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobExecutionListResult = {
    type: {
        name: "Composite",
        className: "JobExecutionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobExecution"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobExecutionTarget = {
    type: {
        name: "Composite",
        className: "JobExecutionTarget",
        modelProperties: {
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            serverName: {
                serializedName: "serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobListResult = {
    type: {
        name: "Composite",
        className: "JobListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Job"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobSchedule = {
    type: {
        name: "Composite",
        className: "JobSchedule",
        modelProperties: {
            startTime: {
                defaultValue: "0001-01-01T00:00:00+00:00",
                serializedName: "startTime",
                type: {
                    name: "DateTime"
                }
            },
            endTime: {
                defaultValue: "9999-12-31T11:59:59+00:00",
                serializedName: "endTime",
                type: {
                    name: "DateTime"
                }
            },
            type: {
                defaultValue: "Once",
                serializedName: "type",
                type: {
                    name: "Enum",
                    allowedValues: ["Once", "Recurring"]
                }
            },
            enabled: {
                serializedName: "enabled",
                type: {
                    name: "Boolean"
                }
            },
            interval: {
                serializedName: "interval",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobStepListResult = {
    type: {
        name: "Composite",
        className: "JobStepListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobStep"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobStepAction = {
    type: {
        name: "Composite",
        className: "JobStepAction",
        modelProperties: {
            type: {
                defaultValue: "TSql",
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            source: {
                defaultValue: "Inline",
                serializedName: "source",
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobStepOutput = {
    type: {
        name: "Composite",
        className: "JobStepOutput",
        modelProperties: {
            type: {
                defaultValue: "SqlDatabase",
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            subscriptionId: {
                serializedName: "subscriptionId",
                type: {
                    name: "Uuid"
                }
            },
            resourceGroupName: {
                serializedName: "resourceGroupName",
                type: {
                    name: "String"
                }
            },
            serverName: {
                serializedName: "serverName",
                required: true,
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                required: true,
                type: {
                    name: "String"
                }
            },
            schemaName: {
                defaultValue: "dbo",
                serializedName: "schemaName",
                type: {
                    name: "String"
                }
            },
            tableName: {
                serializedName: "tableName",
                required: true,
                type: {
                    name: "String"
                }
            },
            credential: {
                serializedName: "credential",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobStepExecutionOptions = {
    type: {
        name: "Composite",
        className: "JobStepExecutionOptions",
        modelProperties: {
            timeoutSeconds: {
                defaultValue: 43200,
                serializedName: "timeoutSeconds",
                type: {
                    name: "Number"
                }
            },
            retryAttempts: {
                defaultValue: 10,
                serializedName: "retryAttempts",
                type: {
                    name: "Number"
                }
            },
            initialRetryIntervalSeconds: {
                defaultValue: 1,
                serializedName: "initialRetryIntervalSeconds",
                type: {
                    name: "Number"
                }
            },
            maximumRetryIntervalSeconds: {
                defaultValue: 120,
                serializedName: "maximumRetryIntervalSeconds",
                type: {
                    name: "Number"
                }
            },
            retryIntervalBackoffMultiplier: {
                defaultValue: 2,
                serializedName: "retryIntervalBackoffMultiplier",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const JobTargetGroupListResult = {
    type: {
        name: "Composite",
        className: "JobTargetGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobTargetGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobTarget = {
    type: {
        name: "Composite",
        className: "JobTarget",
        modelProperties: {
            membershipType: {
                defaultValue: "Include",
                serializedName: "membershipType",
                type: {
                    name: "Enum",
                    allowedValues: ["Include", "Exclude"]
                }
            },
            type: {
                serializedName: "type",
                required: true,
                type: {
                    name: "String"
                }
            },
            serverName: {
                serializedName: "serverName",
                type: {
                    name: "String"
                }
            },
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            elasticPoolName: {
                serializedName: "elasticPoolName",
                type: {
                    name: "String"
                }
            },
            shardMapName: {
                serializedName: "shardMapName",
                type: {
                    name: "String"
                }
            },
            refreshCredential: {
                serializedName: "refreshCredential",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const JobVersionListResult = {
    type: {
        name: "Composite",
        className: "JobVersionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobVersion"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LocationCapabilities = {
    type: {
        name: "Composite",
        className: "LocationCapabilities",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedServerVersions: {
                serializedName: "supportedServerVersions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerVersionCapability"
                        }
                    }
                }
            },
            supportedManagedInstanceVersions: {
                serializedName: "supportedManagedInstanceVersions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceVersionCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerVersionCapability = {
    type: {
        name: "Composite",
        className: "ServerVersionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedEditions: {
                serializedName: "supportedEditions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "EditionCapability"
                        }
                    }
                }
            },
            supportedElasticPoolEditions: {
                serializedName: "supportedElasticPoolEditions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolEditionCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const EditionCapability = {
    type: {
        name: "Composite",
        className: "EditionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedServiceLevelObjectives: {
                serializedName: "supportedServiceLevelObjectives",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServiceObjectiveCapability"
                        }
                    }
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            readScale: {
                serializedName: "readScale",
                type: {
                    name: "Composite",
                    className: "ReadScaleCapability"
                }
            },
            supportedStorageCapabilities: {
                serializedName: "supportedStorageCapabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServiceObjectiveCapability = {
    type: {
        name: "Composite",
        className: "ServiceObjectiveCapability",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedMaxSizes: {
                serializedName: "supportedMaxSizes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaxSizeRangeCapability"
                        }
                    }
                }
            },
            performanceLevel: {
                serializedName: "performanceLevel",
                type: {
                    name: "Composite",
                    className: "PerformanceLevelCapability"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            supportedLicenseTypes: {
                serializedName: "supportedLicenseTypes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LicenseTypeCapability"
                        }
                    }
                }
            },
            includedMaxSize: {
                serializedName: "includedMaxSize",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            supportedAutoPauseDelay: {
                serializedName: "supportedAutoPauseDelay",
                type: {
                    name: "Composite",
                    className: "AutoPauseDelayTimeRange"
                }
            },
            supportedMinCapacities: {
                serializedName: "supportedMinCapacities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MinCapacityCapability"
                        }
                    }
                }
            },
            computeModel: {
                serializedName: "computeModel",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedMaintenanceConfigurations: {
                serializedName: "supportedMaintenanceConfigurations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaintenanceConfigurationCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MaxSizeRangeCapability = {
    type: {
        name: "Composite",
        className: "MaxSizeRangeCapability",
        modelProperties: {
            minValue: {
                serializedName: "minValue",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            maxValue: {
                serializedName: "maxValue",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            scaleSize: {
                serializedName: "scaleSize",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            logSize: {
                serializedName: "logSize",
                type: {
                    name: "Composite",
                    className: "LogSizeCapability"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MaxSizeCapability = {
    type: {
        name: "Composite",
        className: "MaxSizeCapability",
        modelProperties: {
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LogSizeCapability = {
    type: {
        name: "Composite",
        className: "LogSizeCapability",
        modelProperties: {
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PerformanceLevelCapability = {
    type: {
        name: "Composite",
        className: "PerformanceLevelCapability",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LicenseTypeCapability = {
    type: {
        name: "Composite",
        className: "LicenseTypeCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AutoPauseDelayTimeRange = {
    type: {
        name: "Composite",
        className: "AutoPauseDelayTimeRange",
        modelProperties: {
            minValue: {
                serializedName: "minValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            maxValue: {
                serializedName: "maxValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            stepSize: {
                serializedName: "stepSize",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            default: {
                serializedName: "default",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            doNotPauseValue: {
                serializedName: "doNotPauseValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const MinCapacityCapability = {
    type: {
        name: "Composite",
        className: "MinCapacityCapability",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MaintenanceConfigurationCapability = {
    type: {
        name: "Composite",
        className: "MaintenanceConfigurationCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ReadScaleCapability = {
    type: {
        name: "Composite",
        className: "ReadScaleCapability",
        modelProperties: {
            maxNumberOfReplicas: {
                serializedName: "maxNumberOfReplicas",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const StorageCapability = {
    type: {
        name: "Composite",
        className: "StorageCapability",
        modelProperties: {
            storageAccountType: {
                serializedName: "storageAccountType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolEditionCapability = {
    type: {
        name: "Composite",
        className: "ElasticPoolEditionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedElasticPoolPerformanceLevels: {
                serializedName: "supportedElasticPoolPerformanceLevels",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolPerformanceLevelCapability"
                        }
                    }
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolPerformanceLevelCapability = {
    type: {
        name: "Composite",
        className: "ElasticPoolPerformanceLevelCapability",
        modelProperties: {
            performanceLevel: {
                serializedName: "performanceLevel",
                type: {
                    name: "Composite",
                    className: "PerformanceLevelCapability"
                }
            },
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            supportedLicenseTypes: {
                serializedName: "supportedLicenseTypes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LicenseTypeCapability"
                        }
                    }
                }
            },
            maxDatabaseCount: {
                serializedName: "maxDatabaseCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            includedMaxSize: {
                serializedName: "includedMaxSize",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            supportedMaxSizes: {
                serializedName: "supportedMaxSizes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaxSizeRangeCapability"
                        }
                    }
                }
            },
            supportedPerDatabaseMaxSizes: {
                serializedName: "supportedPerDatabaseMaxSizes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaxSizeRangeCapability"
                        }
                    }
                }
            },
            supportedPerDatabaseMaxPerformanceLevels: {
                serializedName: "supportedPerDatabaseMaxPerformanceLevels",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability"
                        }
                    }
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            supportedMaintenanceConfigurations: {
                serializedName: "supportedMaintenanceConfigurations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaintenanceConfigurationCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolPerDatabaseMaxPerformanceLevelCapability = {
    type: {
        name: "Composite",
        className: "ElasticPoolPerDatabaseMaxPerformanceLevelCapability",
        modelProperties: {
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedPerDatabaseMinPerformanceLevels: {
                serializedName: "supportedPerDatabaseMinPerformanceLevels",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ElasticPoolPerDatabaseMinPerformanceLevelCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ElasticPoolPerDatabaseMinPerformanceLevelCapability = {
    type: {
        name: "Composite",
        className: "ElasticPoolPerDatabaseMinPerformanceLevelCapability",
        modelProperties: {
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceVersionCapability = {
    type: {
        name: "Composite",
        className: "ManagedInstanceVersionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedEditions: {
                serializedName: "supportedEditions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceEditionCapability"
                        }
                    }
                }
            },
            supportedInstancePoolEditions: {
                serializedName: "supportedInstancePoolEditions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstancePoolEditionCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceEditionCapability = {
    type: {
        name: "Composite",
        className: "ManagedInstanceEditionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedFamilies: {
                serializedName: "supportedFamilies",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceFamilyCapability"
                        }
                    }
                }
            },
            supportedStorageCapabilities: {
                serializedName: "supportedStorageCapabilities",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "StorageCapability"
                        }
                    }
                }
            },
            zoneRedundant: {
                serializedName: "zoneRedundant",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceFamilyCapability = {
    type: {
        name: "Composite",
        className: "ManagedInstanceFamilyCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            sku: {
                serializedName: "sku",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedLicenseTypes: {
                serializedName: "supportedLicenseTypes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LicenseTypeCapability"
                        }
                    }
                }
            },
            supportedVcoresValues: {
                serializedName: "supportedVcoresValues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceVcoresCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceVcoresCapability = {
    type: {
        name: "Composite",
        className: "ManagedInstanceVcoresCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            includedMaxSize: {
                serializedName: "includedMaxSize",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            supportedStorageSizes: {
                serializedName: "supportedStorageSizes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaxSizeRangeCapability"
                        }
                    }
                }
            },
            instancePoolSupported: {
                serializedName: "instancePoolSupported",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            standaloneSupported: {
                serializedName: "standaloneSupported",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            supportedMaintenanceConfigurations: {
                serializedName: "supportedMaintenanceConfigurations",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceMaintenanceConfigurationCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceMaintenanceConfigurationCapability = {
    type: {
        name: "Composite",
        className: "ManagedInstanceMaintenanceConfigurationCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InstancePoolEditionCapability = {
    type: {
        name: "Composite",
        className: "InstancePoolEditionCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedFamilies: {
                serializedName: "supportedFamilies",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstancePoolFamilyCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InstancePoolFamilyCapability = {
    type: {
        name: "Composite",
        className: "InstancePoolFamilyCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            supportedLicenseTypes: {
                serializedName: "supportedLicenseTypes",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LicenseTypeCapability"
                        }
                    }
                }
            },
            supportedVcoresValues: {
                serializedName: "supportedVcoresValues",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "InstancePoolVcoresCapability"
                        }
                    }
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const InstancePoolVcoresCapability = {
    type: {
        name: "Composite",
        className: "InstancePoolVcoresCapability",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            storageLimit: {
                serializedName: "storageLimit",
                type: {
                    name: "Composite",
                    className: "MaxSizeCapability"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Visible", "Available", "Default", "Disabled"]
                }
            },
            reason: {
                serializedName: "reason",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LongTermRetentionPolicyListResult = {
    type: {
        name: "Composite",
        className: "LongTermRetentionPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LongTermRetentionPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const MaintenanceWindowTimeRange = {
    type: {
        name: "Composite",
        className: "MaintenanceWindowTimeRange",
        modelProperties: {
            dayOfWeek: {
                serializedName: "dayOfWeek",
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                type: {
                    name: "String"
                }
            },
            duration: {
                serializedName: "duration",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedBackupShortTermRetentionPolicyListResult = {
    type: {
        name: "Composite",
        className: "ManagedBackupShortTermRetentionPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedBackupShortTermRetentionPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceQueryStatistics = {
    type: {
        name: "Composite",
        className: "ManagedInstanceQueryStatistics",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryStatistics"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const QueryStatisticsProperties = {
    type: {
        name: "Composite",
        className: "QueryStatisticsProperties",
        modelProperties: {
            databaseName: {
                serializedName: "databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queryId: {
                serializedName: "queryId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            intervals: {
                serializedName: "intervals",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryMetricInterval"
                        }
                    }
                }
            }
        }
    }
};
export const QueryMetricInterval = {
    type: {
        name: "Composite",
        className: "QueryMetricInterval",
        modelProperties: {
            intervalStartTime: {
                serializedName: "intervalStartTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            intervalType: {
                serializedName: "intervalType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            executionCount: {
                serializedName: "executionCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            metrics: {
                serializedName: "metrics",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryMetricProperties"
                        }
                    }
                }
            }
        }
    }
};
export const QueryMetricProperties = {
    type: {
        name: "Composite",
        className: "QueryMetricProperties",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            displayName: {
                serializedName: "displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            min: {
                serializedName: "min",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            max: {
                serializedName: "max",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            avg: {
                serializedName: "avg",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            sum: {
                serializedName: "sum",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            stdev: {
                serializedName: "stdev",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ManagedDatabaseListResult = {
    type: {
        name: "Composite",
        className: "ManagedDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedDatabase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedDatabaseUpdate = {
    type: {
        name: "Composite",
        className: "ManagedDatabaseUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            earliestRestorePoint: {
                serializedName: "properties.earliestRestorePoint",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            },
            defaultSecondaryLocation: {
                serializedName: "properties.defaultSecondaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            catalogCollation: {
                serializedName: "properties.catalogCollation",
                type: {
                    name: "String"
                }
            },
            createMode: {
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            },
            storageContainerUri: {
                serializedName: "properties.storageContainerUri",
                type: {
                    name: "String"
                }
            },
            sourceDatabaseId: {
                serializedName: "properties.sourceDatabaseId",
                type: {
                    name: "String"
                }
            },
            restorableDroppedDatabaseId: {
                serializedName: "properties.restorableDroppedDatabaseId",
                type: {
                    name: "String"
                }
            },
            storageContainerSasToken: {
                serializedName: "properties.storageContainerSasToken",
                type: {
                    name: "String"
                }
            },
            failoverGroupId: {
                serializedName: "properties.failoverGroupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            recoverableDatabaseId: {
                serializedName: "properties.recoverableDatabaseId",
                type: {
                    name: "String"
                }
            },
            longTermRetentionBackupResourceId: {
                serializedName: "properties.longTermRetentionBackupResourceId",
                type: {
                    name: "String"
                }
            },
            autoCompleteRestore: {
                serializedName: "properties.autoCompleteRestore",
                type: {
                    name: "Boolean"
                }
            },
            lastBackupName: {
                serializedName: "properties.lastBackupName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CompleteDatabaseRestoreDefinition = {
    type: {
        name: "Composite",
        className: "CompleteDatabaseRestoreDefinition",
        modelProperties: {
            lastBackupName: {
                serializedName: "lastBackupName",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedDatabaseSecurityAlertPolicyListResult = {
    type: {
        name: "Composite",
        className: "ManagedDatabaseSecurityAlertPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedDatabaseSecurityAlertPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecurityEventCollection = {
    type: {
        name: "Composite",
        className: "SecurityEventCollection",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SecurityEvent"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SecurityEventSqlInjectionAdditionalProperties = {
    type: {
        name: "Composite",
        className: "SecurityEventSqlInjectionAdditionalProperties",
        modelProperties: {
            threatId: {
                serializedName: "threatId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            statement: {
                serializedName: "statement",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            statementHighlightOffset: {
                serializedName: "statementHighlightOffset",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            statementHighlightLength: {
                serializedName: "statementHighlightLength",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            errorCode: {
                serializedName: "errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            errorSeverity: {
                serializedName: "errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            errorMessage: {
                serializedName: "errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SensitivityLabelListResult = {
    type: {
        name: "Composite",
        className: "SensitivityLabelListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SensitivityLabel"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SensitivityLabelUpdateList = {
    type: {
        name: "Composite",
        className: "SensitivityLabelUpdateList",
        modelProperties: {
            operations: {
                serializedName: "operations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SensitivityLabelUpdate"
                        }
                    }
                }
            }
        }
    }
};
export const RecommendedSensitivityLabelUpdateList = {
    type: {
        name: "Composite",
        className: "RecommendedSensitivityLabelUpdateList",
        modelProperties: {
            operations: {
                serializedName: "operations",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendedSensitivityLabelUpdate"
                        }
                    }
                }
            }
        }
    }
};
export const ManagedTransparentDataEncryptionListResult = {
    type: {
        name: "Composite",
        className: "ManagedTransparentDataEncryptionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedTransparentDataEncryption"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceAdministratorListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceAdministratorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceAdministrator"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceAzureADOnlyAuthListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceAzureADOnlyAuthListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceAzureADOnlyAuthentication"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceEncryptionProtectorListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceEncryptionProtectorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceEncryptionProtector"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceKeyListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceKeyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceKey"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceLongTermRetentionPolicyListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceLongTermRetentionPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceLongTermRetentionPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceOperationListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceOperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceOperation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceOperationParametersPair = {
    type: {
        name: "Composite",
        className: "ManagedInstanceOperationParametersPair",
        modelProperties: {
            currentParameters: {
                serializedName: "currentParameters",
                type: {
                    name: "Composite",
                    className: "UpsertManagedServerOperationParameters"
                }
            },
            requestedParameters: {
                serializedName: "requestedParameters",
                type: {
                    name: "Composite",
                    className: "UpsertManagedServerOperationParameters"
                }
            }
        }
    }
};
export const UpsertManagedServerOperationParameters = {
    type: {
        name: "Composite",
        className: "UpsertManagedServerOperationParameters",
        modelProperties: {
            family: {
                serializedName: "family",
                type: {
                    name: "String"
                }
            },
            tier: {
                serializedName: "tier",
                type: {
                    name: "String"
                }
            },
            vCores: {
                serializedName: "vCores",
                type: {
                    name: "Number"
                }
            },
            storageSizeInGB: {
                serializedName: "storageSizeInGB",
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const ManagedInstanceOperationSteps = {
    type: {
        name: "Composite",
        className: "ManagedInstanceOperationSteps",
        modelProperties: {
            totalSteps: {
                serializedName: "totalSteps",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            currentStep: {
                serializedName: "currentStep",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            stepsList: {
                serializedName: "stepsList",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "UpsertManagedServerOperationStep"
                        }
                    }
                }
            }
        }
    }
};
export const UpsertManagedServerOperationStep = {
    type: {
        name: "Composite",
        className: "UpsertManagedServerOperationStep",
        modelProperties: {
            order: {
                serializedName: "order",
                type: {
                    name: "Number"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateEndpointConnectionProperties = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateEndpointConnectionProperties",
        modelProperties: {
            privateEndpoint: {
                serializedName: "privateEndpoint",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateEndpointProperty"
                }
            },
            privateLinkServiceConnectionState: {
                serializedName: "privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateLinkServiceConnectionStateProperty"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateEndpointProperty = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateEndpointProperty",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateLinkServiceConnectionStateProperty = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateLinkServiceConnectionStateProperty",
        modelProperties: {
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstancePrivateEndpointConnection"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateLinkListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateLinkListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstancePrivateLink"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePrivateLinkProperties = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateLinkProperties",
        modelProperties: {
            groupId: {
                serializedName: "groupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requiredMembers: {
                serializedName: "requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const ManagedInstanceVulnerabilityAssessmentListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceVulnerabilityAssessmentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceVulnerabilityAssessment"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedServerSecurityAlertPolicyListResult = {
    type: {
        name: "Composite",
        className: "ManagedServerSecurityAlertPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedServerSecurityAlertPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationListResult = {
    type: {
        name: "Composite",
        className: "OperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Operation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Operation = {
    type: {
        name: "Composite",
        className: "Operation",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            display: {
                serializedName: "display",
                type: {
                    name: "Composite",
                    className: "OperationDisplay"
                }
            },
            origin: {
                serializedName: "origin",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Dictionary", value: { type: { name: "any" } } }
                    }
                }
            }
        }
    }
};
export const OperationDisplay = {
    type: {
        name: "Composite",
        className: "OperationDisplay",
        modelProperties: {
            provider: {
                serializedName: "provider",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            resource: {
                serializedName: "resource",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            operation: {
                serializedName: "operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OperationsHealthListResult = {
    type: {
        name: "Composite",
        className: "OperationsHealthListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OperationsHealth"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionProperties = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionProperties",
        modelProperties: {
            privateEndpoint: {
                serializedName: "privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointProperty"
                }
            },
            privateLinkServiceConnectionState: {
                serializedName: "privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionStateProperty"
                }
            },
            provisioningState: {
                serializedName: "provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointProperty = {
    type: {
        name: "Composite",
        className: "PrivateEndpointProperty",
        modelProperties: {
            id: {
                serializedName: "id",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkServiceConnectionStateProperty = {
    type: {
        name: "Composite",
        className: "PrivateLinkServiceConnectionStateProperty",
        modelProperties: {
            status: {
                serializedName: "status",
                required: true,
                type: {
                    name: "String"
                }
            },
            description: {
                serializedName: "description",
                required: true,
                type: {
                    name: "String"
                }
            },
            actionsRequired: {
                serializedName: "actionsRequired",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionListResult = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnection"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResourceListResult = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateLinkResource"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateLinkResourceProperties = {
    type: {
        name: "Composite",
        className: "PrivateLinkResourceProperties",
        modelProperties: {
            groupId: {
                serializedName: "groupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requiredMembers: {
                serializedName: "requiredMembers",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            requiredZoneNames: {
                serializedName: "requiredZoneNames",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }
        }
    }
};
export const RecoverableManagedDatabaseListResult = {
    type: {
        name: "Composite",
        className: "RecoverableManagedDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecoverableManagedDatabase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorePointListResult = {
    type: {
        name: "Composite",
        className: "RestorePointListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorePoint"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CreateDatabaseRestorePointDefinition = {
    type: {
        name: "Composite",
        className: "CreateDatabaseRestorePointDefinition",
        modelProperties: {
            restorePointLabel: {
                serializedName: "restorePointLabel",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AutomaticTuningServerOptions = {
    type: {
        name: "Composite",
        className: "AutomaticTuningServerOptions",
        modelProperties: {
            desiredState: {
                serializedName: "desiredState",
                type: {
                    name: "Enum",
                    allowedValues: ["Off", "On", "Default"]
                }
            },
            actualState: {
                serializedName: "actualState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Off", "On"]
                }
            },
            reasonCode: {
                serializedName: "reasonCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            reasonDesc: {
                serializedName: "reasonDesc",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Default", "Disabled", "AutoConfigured"]
                }
            }
        }
    }
};
export const AdministratorListResult = {
    type: {
        name: "Composite",
        className: "AdministratorListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerAzureADAdministrator"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const AzureADOnlyAuthListResult = {
    type: {
        name: "Composite",
        className: "AzureADOnlyAuthListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerAzureADOnlyAuthentication"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerDevOpsAuditSettingsListResult = {
    type: {
        name: "Composite",
        className: "ServerDevOpsAuditSettingsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerDevOpsAuditingSettings"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerDnsAliasListResult = {
    type: {
        name: "Composite",
        className: "ServerDnsAliasListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerDnsAlias"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerDnsAliasAcquisition = {
    type: {
        name: "Composite",
        className: "ServerDnsAliasAcquisition",
        modelProperties: {
            oldServerDnsAliasId: {
                serializedName: "oldServerDnsAliasId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerKeyListResult = {
    type: {
        name: "Composite",
        className: "ServerKeyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerKey"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerOperationListResult = {
    type: {
        name: "Composite",
        className: "ServerOperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerOperation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LogicalServerSecurityAlertPolicyListResult = {
    type: {
        name: "Composite",
        className: "LogicalServerSecurityAlertPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerSecurityAlertPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerInfo = {
    type: {
        name: "Composite",
        className: "ServerInfo",
        modelProperties: {
            serverId: {
                serializedName: "serverId",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerTrustGroupListResult = {
    type: {
        name: "Composite",
        className: "ServerTrustGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerTrustGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerVulnerabilityAssessmentListResult = {
    type: {
        name: "Composite",
        className: "ServerVulnerabilityAssessmentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerVulnerabilityAssessment"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SubscriptionUsageListResult = {
    type: {
        name: "Composite",
        className: "SubscriptionUsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SubscriptionUsage"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncAgentListResult = {
    type: {
        name: "Composite",
        className: "SyncAgentListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncAgent"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncAgentKeyProperties = {
    type: {
        name: "Composite",
        className: "SyncAgentKeyProperties",
        modelProperties: {
            syncAgentKey: {
                serializedName: "syncAgentKey",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncAgentLinkedDatabaseListResult = {
    type: {
        name: "Composite",
        className: "SyncAgentLinkedDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncAgentLinkedDatabase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncDatabaseIdListResult = {
    type: {
        name: "Composite",
        className: "SyncDatabaseIdListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncDatabaseIdProperties"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncDatabaseIdProperties = {
    type: {
        name: "Composite",
        className: "SyncDatabaseIdProperties",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncFullSchemaPropertiesListResult = {
    type: {
        name: "Composite",
        className: "SyncFullSchemaPropertiesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncFullSchemaProperties"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncFullSchemaProperties = {
    type: {
        name: "Composite",
        className: "SyncFullSchemaProperties",
        modelProperties: {
            tables: {
                serializedName: "tables",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncFullSchemaTable"
                        }
                    }
                }
            },
            lastUpdateTime: {
                serializedName: "lastUpdateTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }
        }
    }
};
export const SyncFullSchemaTable = {
    type: {
        name: "Composite",
        className: "SyncFullSchemaTable",
        modelProperties: {
            columns: {
                serializedName: "columns",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncFullSchemaTableColumn"
                        }
                    }
                }
            },
            errorId: {
                serializedName: "errorId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            hasError: {
                serializedName: "hasError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            quotedName: {
                serializedName: "quotedName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncFullSchemaTableColumn = {
    type: {
        name: "Composite",
        className: "SyncFullSchemaTableColumn",
        modelProperties: {
            dataSize: {
                serializedName: "dataSize",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dataType: {
                serializedName: "dataType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            errorId: {
                serializedName: "errorId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            hasError: {
                serializedName: "hasError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            isPrimaryKey: {
                serializedName: "isPrimaryKey",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            quotedName: {
                serializedName: "quotedName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupLogListResult = {
    type: {
        name: "Composite",
        className: "SyncGroupLogListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncGroupLogProperties"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupLogProperties = {
    type: {
        name: "Composite",
        className: "SyncGroupLogProperties",
        modelProperties: {
            timestamp: {
                serializedName: "timestamp",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            source: {
                serializedName: "source",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            details: {
                serializedName: "details",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tracingId: {
                serializedName: "tracingId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            operationStatus: {
                serializedName: "operationStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupSchema = {
    type: {
        name: "Composite",
        className: "SyncGroupSchema",
        modelProperties: {
            tables: {
                serializedName: "tables",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncGroupSchemaTable"
                        }
                    }
                }
            },
            masterSyncMemberName: {
                serializedName: "masterSyncMemberName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupSchemaTable = {
    type: {
        name: "Composite",
        className: "SyncGroupSchemaTable",
        modelProperties: {
            columns: {
                serializedName: "columns",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncGroupSchemaTableColumn"
                        }
                    }
                }
            },
            quotedName: {
                serializedName: "quotedName",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupSchemaTableColumn = {
    type: {
        name: "Composite",
        className: "SyncGroupSchemaTableColumn",
        modelProperties: {
            quotedName: {
                serializedName: "quotedName",
                type: {
                    name: "String"
                }
            },
            dataSize: {
                serializedName: "dataSize",
                type: {
                    name: "String"
                }
            },
            dataType: {
                serializedName: "dataType",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncGroupListResult = {
    type: {
        name: "Composite",
        className: "SyncGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SyncMemberListResult = {
    type: {
        name: "Composite",
        className: "SyncMemberListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "SyncMember"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TimeZoneListResult = {
    type: {
        name: "Composite",
        className: "TimeZoneListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TimeZone"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualClusterListResult = {
    type: {
        name: "Composite",
        className: "VirtualClusterListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualCluster"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualClusterUpdate = {
    type: {
        name: "Composite",
        className: "VirtualClusterUpdate",
        modelProperties: {
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            subnetId: {
                serializedName: "properties.subnetId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            family: {
                serializedName: "properties.family",
                type: {
                    name: "String"
                }
            },
            childResources: {
                serializedName: "properties.childResources",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            },
            maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const VirtualNetworkRuleListResult = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VirtualNetworkRule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WorkloadClassifierListResult = {
    type: {
        name: "Composite",
        className: "WorkloadClassifierListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkloadClassifier"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const WorkloadGroupListResult = {
    type: {
        name: "Composite",
        className: "WorkloadGroupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "WorkloadGroup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LogicalDatabaseTransparentDataEncryptionListResult = {
    type: {
        name: "Composite",
        className: "LogicalDatabaseTransparentDataEncryptionListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LogicalDatabaseTransparentDataEncryption"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const BackupShortTermRetentionPolicyListResult = {
    type: {
        name: "Composite",
        className: "BackupShortTermRetentionPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "BackupShortTermRetentionPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ImportExportExtensionsOperationListResult = {
    type: {
        name: "Composite",
        className: "ImportExportExtensionsOperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ImportExportExtensionsOperationResult"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseOperationListResult = {
    type: {
        name: "Composite",
        className: "DatabaseOperationListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseOperation"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseUsageListResult = {
    type: {
        name: "Composite",
        className: "DatabaseUsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseUsage"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LedgerDigestUploadsListResult = {
    type: {
        name: "Composite",
        className: "LedgerDigestUploadsListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LedgerDigestUploads"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const OutboundFirewallRuleListResult = {
    type: {
        name: "Composite",
        className: "OutboundFirewallRuleListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "OutboundFirewallRule"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ReplicationLinkListResult = {
    type: {
        name: "Composite",
        className: "ReplicationLinkListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ReplicationLink"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerListResult = {
    type: {
        name: "Composite",
        className: "ServerListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Server"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ResourceIdentity = {
    type: {
        name: "Composite",
        className: "ResourceIdentity",
        modelProperties: {
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "UserIdentity" } }
                }
            },
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const UserIdentity = {
    type: {
        name: "Composite",
        className: "UserIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const ServerPrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "ServerPrivateEndpointConnection",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointConnectionProperties"
                }
            }
        }
    }
};
export const ServerExternalAdministrator = {
    type: {
        name: "Composite",
        className: "ServerExternalAdministrator",
        modelProperties: {
            administratorType: {
                serializedName: "administratorType",
                type: {
                    name: "String"
                }
            },
            principalType: {
                serializedName: "principalType",
                type: {
                    name: "String"
                }
            },
            login: {
                serializedName: "login",
                type: {
                    name: "String"
                }
            },
            sid: {
                serializedName: "sid",
                type: {
                    name: "Uuid"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "Uuid"
                }
            },
            azureADOnlyAuthentication: {
                serializedName: "azureADOnlyAuthentication",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ServerUpdate = {
    type: {
        name: "Composite",
        className: "ServerUpdate",
        modelProperties: {
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            administratorLogin: {
                serializedName: "properties.administratorLogin",
                type: {
                    name: "String"
                }
            },
            administratorLoginPassword: {
                serializedName: "properties.administratorLoginPassword",
                type: {
                    name: "String"
                }
            },
            version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerPrivateEndpointConnection"
                        }
                    }
                }
            },
            minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            },
            publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            },
            workspaceFeature: {
                serializedName: "properties.workspaceFeature",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            primaryUserAssignedIdentityId: {
                serializedName: "properties.primaryUserAssignedIdentityId",
                type: {
                    name: "String"
                }
            },
            federatedClientId: {
                serializedName: "properties.federatedClientId",
                type: {
                    name: "Uuid"
                }
            },
            keyId: {
                serializedName: "properties.keyId",
                type: {
                    name: "String"
                }
            },
            administrators: {
                serializedName: "properties.administrators",
                type: {
                    name: "Composite",
                    className: "ServerExternalAdministrator"
                }
            },
            restrictOutboundNetworkAccess: {
                serializedName: "properties.restrictOutboundNetworkAccess",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ImportNewDatabaseDefinition = {
    type: {
        name: "Composite",
        className: "ImportNewDatabaseDefinition",
        modelProperties: {
            databaseName: {
                serializedName: "databaseName",
                type: {
                    name: "String"
                }
            },
            edition: {
                serializedName: "edition",
                type: {
                    name: "String"
                }
            },
            serviceObjectiveName: {
                serializedName: "serviceObjectiveName",
                type: {
                    name: "String"
                }
            },
            maxSizeBytes: {
                serializedName: "maxSizeBytes",
                type: {
                    name: "String"
                }
            },
            storageKeyType: {
                serializedName: "storageKeyType",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageKey: {
                serializedName: "storageKey",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageUri: {
                serializedName: "storageUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLogin: {
                serializedName: "administratorLogin",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLoginPassword: {
                serializedName: "administratorLoginPassword",
                required: true,
                type: {
                    name: "String"
                }
            },
            authenticationType: {
                serializedName: "authenticationType",
                type: {
                    name: "String"
                }
            },
            networkIsolation: {
                serializedName: "networkIsolation",
                type: {
                    name: "Composite",
                    className: "NetworkIsolationSettings"
                }
            }
        }
    }
};
export const NetworkIsolationSettings = {
    type: {
        name: "Composite",
        className: "NetworkIsolationSettings",
        modelProperties: {
            storageAccountResourceId: {
                serializedName: "storageAccountResourceId",
                type: {
                    name: "String"
                }
            },
            sqlServerResourceId: {
                serializedName: "sqlServerResourceId",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const PrivateEndpointConnectionRequestStatus = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnectionRequestStatus",
        modelProperties: {
            privateLinkServiceId: {
                serializedName: "privateLinkServiceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            privateEndpointConnectionName: {
                serializedName: "privateEndpointConnectionName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CheckNameAvailabilityRequest = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityRequest",
        modelProperties: {
            name: {
                serializedName: "name",
                required: true,
                type: {
                    name: "String"
                }
            },
            type: {
                defaultValue: "Microsoft.Sql/servers",
                isConstant: true,
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const CheckNameAvailabilityResponse = {
    type: {
        name: "Composite",
        className: "CheckNameAvailabilityResponse",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            available: {
                serializedName: "available",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            reason: {
                serializedName: "reason",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Invalid", "AlreadyExists"]
                }
            },
            message: {
                serializedName: "message",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UsageListResult = {
    type: {
        name: "Composite",
        className: "UsageListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Usage"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const Usage = {
    type: {
        name: "Composite",
        className: "Usage",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            name: {
                serializedName: "name",
                type: {
                    name: "Composite",
                    className: "Name"
                }
            },
            type: {
                serializedName: "type",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            currentValue: {
                serializedName: "currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            limit: {
                serializedName: "limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            requestedLimit: {
                serializedName: "requestedLimit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const Name = {
    type: {
        name: "Composite",
        className: "Name",
        modelProperties: {
            value: {
                serializedName: "value",
                type: {
                    name: "String"
                }
            },
            localizedValue: {
                serializedName: "localizedValue",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseListResult = {
    type: {
        name: "Composite",
        className: "DatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "Database"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const DatabaseIdentity = {
    type: {
        name: "Composite",
        className: "DatabaseIdentity",
        modelProperties: {
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            userAssignedIdentities: {
                serializedName: "userAssignedIdentities",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "DatabaseUserIdentity" }
                    }
                }
            },
            delegatedResources: {
                serializedName: "delegatedResources",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "Composite", className: "Delegation" } }
                }
            }
        }
    }
};
export const DatabaseUserIdentity = {
    type: {
        name: "Composite",
        className: "DatabaseUserIdentity",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const Delegation = {
    type: {
        name: "Composite",
        className: "Delegation",
        modelProperties: {
            resourceId: {
                serializedName: "resourceId",
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const DatabaseUpdate = {
    type: {
        name: "Composite",
        className: "DatabaseUpdate",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "DatabaseIdentity"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            createMode: {
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            },
            collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            },
            maxSizeBytes: {
                serializedName: "properties.maxSizeBytes",
                type: {
                    name: "Number"
                }
            },
            sampleName: {
                serializedName: "properties.sampleName",
                type: {
                    name: "String"
                }
            },
            elasticPoolId: {
                serializedName: "properties.elasticPoolId",
                type: {
                    name: "String"
                }
            },
            sourceDatabaseId: {
                serializedName: "properties.sourceDatabaseId",
                type: {
                    name: "String"
                }
            },
            status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            databaseId: {
                serializedName: "properties.databaseId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            currentServiceObjectiveName: {
                serializedName: "properties.currentServiceObjectiveName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requestedServiceObjectiveName: {
                serializedName: "properties.requestedServiceObjectiveName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            defaultSecondaryLocation: {
                serializedName: "properties.defaultSecondaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            failoverGroupId: {
                serializedName: "properties.failoverGroupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            },
            sourceDatabaseDeletionDate: {
                serializedName: "properties.sourceDatabaseDeletionDate",
                type: {
                    name: "DateTime"
                }
            },
            recoveryServicesRecoveryPointId: {
                serializedName: "properties.recoveryServicesRecoveryPointId",
                type: {
                    name: "String"
                }
            },
            longTermRetentionBackupResourceId: {
                serializedName: "properties.longTermRetentionBackupResourceId",
                type: {
                    name: "String"
                }
            },
            recoverableDatabaseId: {
                serializedName: "properties.recoverableDatabaseId",
                type: {
                    name: "String"
                }
            },
            restorableDroppedDatabaseId: {
                serializedName: "properties.restorableDroppedDatabaseId",
                type: {
                    name: "String"
                }
            },
            catalogCollation: {
                serializedName: "properties.catalogCollation",
                type: {
                    name: "String"
                }
            },
            zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            },
            licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            },
            maxLogSizeBytes: {
                serializedName: "properties.maxLogSizeBytes",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            readScale: {
                serializedName: "properties.readScale",
                type: {
                    name: "String"
                }
            },
            highAvailabilityReplicaCount: {
                serializedName: "properties.highAvailabilityReplicaCount",
                type: {
                    name: "Number"
                }
            },
            secondaryType: {
                serializedName: "properties.secondaryType",
                type: {
                    name: "String"
                }
            },
            currentSku: {
                serializedName: "properties.currentSku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            autoPauseDelay: {
                serializedName: "properties.autoPauseDelay",
                type: {
                    name: "Number"
                }
            },
            currentBackupStorageRedundancy: {
                serializedName: "properties.currentBackupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            },
            minCapacity: {
                serializedName: "properties.minCapacity",
                type: {
                    name: "Number"
                }
            },
            pausedDate: {
                serializedName: "properties.pausedDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            resumedDate: {
                serializedName: "properties.resumedDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            },
            maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            },
            isLedgerOn: {
                serializedName: "properties.isLedgerOn",
                type: {
                    name: "Boolean"
                }
            },
            isInfraEncryptionEnabled: {
                serializedName: "properties.isInfraEncryptionEnabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            },
            federatedClientId: {
                serializedName: "properties.federatedClientId",
                type: {
                    name: "Uuid"
                }
            },
            primaryDelegatedIdentityClientId: {
                serializedName: "properties.primaryDelegatedIdentityClientId",
                type: {
                    name: "Uuid"
                }
            }
        }
    }
};
export const ResourceMoveDefinition = {
    type: {
        name: "Composite",
        className: "ResourceMoveDefinition",
        modelProperties: {
            id: {
                serializedName: "id",
                required: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ImportExistingDatabaseDefinition = {
    type: {
        name: "Composite",
        className: "ImportExistingDatabaseDefinition",
        modelProperties: {
            storageKeyType: {
                serializedName: "storageKeyType",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageKey: {
                serializedName: "storageKey",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageUri: {
                serializedName: "storageUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLogin: {
                serializedName: "administratorLogin",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLoginPassword: {
                serializedName: "administratorLoginPassword",
                required: true,
                type: {
                    name: "String"
                }
            },
            authenticationType: {
                serializedName: "authenticationType",
                type: {
                    name: "String"
                }
            },
            networkIsolation: {
                serializedName: "networkIsolation",
                type: {
                    name: "Composite",
                    className: "NetworkIsolationSettings"
                }
            }
        }
    }
};
export const ExportDatabaseDefinition = {
    type: {
        name: "Composite",
        className: "ExportDatabaseDefinition",
        modelProperties: {
            storageKeyType: {
                serializedName: "storageKeyType",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageKey: {
                serializedName: "storageKey",
                required: true,
                type: {
                    name: "String"
                }
            },
            storageUri: {
                serializedName: "storageUri",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLogin: {
                serializedName: "administratorLogin",
                required: true,
                type: {
                    name: "String"
                }
            },
            administratorLoginPassword: {
                serializedName: "administratorLoginPassword",
                required: true,
                type: {
                    name: "String"
                }
            },
            authenticationType: {
                serializedName: "authenticationType",
                type: {
                    name: "String"
                }
            },
            networkIsolation: {
                serializedName: "networkIsolation",
                type: {
                    name: "Composite",
                    className: "NetworkIsolationSettings"
                }
            }
        }
    }
};
export const CopyLongTermRetentionBackupParameters = {
    type: {
        name: "Composite",
        className: "CopyLongTermRetentionBackupParameters",
        modelProperties: {
            targetSubscriptionId: {
                serializedName: "properties.targetSubscriptionId",
                type: {
                    name: "String"
                }
            },
            targetResourceGroup: {
                serializedName: "properties.targetResourceGroup",
                type: {
                    name: "String"
                }
            },
            targetServerResourceId: {
                serializedName: "properties.targetServerResourceId",
                type: {
                    name: "String"
                }
            },
            targetServerFullyQualifiedDomainName: {
                serializedName: "properties.targetServerFullyQualifiedDomainName",
                type: {
                    name: "String"
                }
            },
            targetDatabaseName: {
                serializedName: "properties.targetDatabaseName",
                type: {
                    name: "String"
                }
            },
            targetBackupStorageRedundancy: {
                serializedName: "properties.targetBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const UpdateLongTermRetentionBackupParameters = {
    type: {
        name: "Composite",
        className: "UpdateLongTermRetentionBackupParameters",
        modelProperties: {
            requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const LongTermRetentionBackupListResult = {
    type: {
        name: "Composite",
        className: "LongTermRetentionBackupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "LongTermRetentionBackup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceLongTermRetentionBackupListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceLongTermRetentionBackupListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstanceLongTermRetentionBackup"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceListResult = {
    type: {
        name: "Composite",
        className: "ManagedInstanceListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstance"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstancePecProperty = {
    type: {
        name: "Composite",
        className: "ManagedInstancePecProperty",
        modelProperties: {
            id: {
                serializedName: "id",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateEndpointConnectionProperties"
                }
            }
        }
    }
};
export const ManagedInstanceExternalAdministrator = {
    type: {
        name: "Composite",
        className: "ManagedInstanceExternalAdministrator",
        modelProperties: {
            administratorType: {
                serializedName: "administratorType",
                type: {
                    name: "String"
                }
            },
            principalType: {
                serializedName: "principalType",
                type: {
                    name: "String"
                }
            },
            login: {
                serializedName: "login",
                type: {
                    name: "String"
                }
            },
            sid: {
                serializedName: "sid",
                type: {
                    name: "Uuid"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                type: {
                    name: "Uuid"
                }
            },
            azureADOnlyAuthentication: {
                serializedName: "azureADOnlyAuthentication",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ServicePrincipal = {
    type: {
        name: "Composite",
        className: "ServicePrincipal",
        modelProperties: {
            principalId: {
                serializedName: "principalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            clientId: {
                serializedName: "clientId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            tenantId: {
                serializedName: "tenantId",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            type: {
                serializedName: "type",
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ManagedInstanceUpdate = {
    type: {
        name: "Composite",
        className: "ManagedInstanceUpdate",
        modelProperties: {
            sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            },
            identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            },
            tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            },
            provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            managedInstanceCreateMode: {
                serializedName: "properties.managedInstanceCreateMode",
                type: {
                    name: "String"
                }
            },
            fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            administratorLogin: {
                serializedName: "properties.administratorLogin",
                type: {
                    name: "String"
                }
            },
            administratorLoginPassword: {
                serializedName: "properties.administratorLoginPassword",
                type: {
                    name: "String"
                }
            },
            subnetId: {
                serializedName: "properties.subnetId",
                type: {
                    name: "String"
                }
            },
            state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            },
            vCores: {
                serializedName: "properties.vCores",
                type: {
                    name: "Number"
                }
            },
            storageSizeInGB: {
                serializedName: "properties.storageSizeInGB",
                type: {
                    name: "Number"
                }
            },
            collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            },
            dnsZone: {
                serializedName: "properties.dnsZone",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            dnsZonePartner: {
                serializedName: "properties.dnsZonePartner",
                type: {
                    name: "String"
                }
            },
            publicDataEndpointEnabled: {
                serializedName: "properties.publicDataEndpointEnabled",
                type: {
                    name: "Boolean"
                }
            },
            sourceManagedInstanceId: {
                serializedName: "properties.sourceManagedInstanceId",
                type: {
                    name: "String"
                }
            },
            restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            },
            proxyOverride: {
                serializedName: "properties.proxyOverride",
                type: {
                    name: "String"
                }
            },
            timezoneId: {
                serializedName: "properties.timezoneId",
                type: {
                    name: "String"
                }
            },
            instancePoolId: {
                serializedName: "properties.instancePoolId",
                type: {
                    name: "String"
                }
            },
            maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            },
            privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstancePecProperty"
                        }
                    }
                }
            },
            minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            },
            currentBackupStorageRedundancy: {
                serializedName: "properties.currentBackupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            },
            zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            },
            primaryUserAssignedIdentityId: {
                serializedName: "properties.primaryUserAssignedIdentityId",
                type: {
                    name: "String"
                }
            },
            keyId: {
                serializedName: "properties.keyId",
                type: {
                    name: "String"
                }
            },
            administrators: {
                serializedName: "properties.administrators",
                type: {
                    name: "Composite",
                    className: "ManagedInstanceExternalAdministrator"
                }
            },
            servicePrincipal: {
                serializedName: "properties.servicePrincipal",
                type: {
                    name: "Composite",
                    className: "ServicePrincipal"
                }
            }
        }
    }
};
export const TopQueriesListResult = {
    type: {
        name: "Composite",
        className: "TopQueriesListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "TopQueries"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const TopQueries = {
    type: {
        name: "Composite",
        className: "TopQueries",
        modelProperties: {
            numberOfQueries: {
                serializedName: "numberOfQueries",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            aggregationFunction: {
                serializedName: "aggregationFunction",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            observationMetric: {
                serializedName: "observationMetric",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            intervalType: {
                serializedName: "intervalType",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            startTime: {
                serializedName: "startTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            endTime: {
                serializedName: "endTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            queries: {
                serializedName: "queries",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryStatisticsProperties"
                        }
                    }
                }
            }
        }
    }
};
export const RestorableDroppedDatabaseListResult = {
    type: {
        name: "Composite",
        className: "RestorableDroppedDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableDroppedDatabase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const RestorableDroppedManagedDatabaseListResult = {
    type: {
        name: "Composite",
        className: "RestorableDroppedManagedDatabaseListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RestorableDroppedManagedDatabase"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const ServerConnectionPolicyListResult = {
    type: {
        name: "Composite",
        className: "ServerConnectionPolicyListResult",
        modelProperties: {
            value: {
                serializedName: "value",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerConnectionPolicy"
                        }
                    }
                }
            },
            nextLink: {
                serializedName: "nextLink",
                readOnly: true,
                type: {
                    name: "String"
                }
            }
        }
    }
};
export const SloUsageMetric = {
    type: {
        name: "Composite",
        className: "SloUsageMetric",
        modelProperties: {
            serviceLevelObjective: {
                serializedName: "serviceLevelObjective",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            serviceLevelObjectiveId: {
                serializedName: "serviceLevelObjectiveId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            },
            inRangeTimeRatio: {
                serializedName: "inRangeTimeRatio",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const OperationImpact = {
    type: {
        name: "Composite",
        className: "OperationImpact",
        modelProperties: {
            name: {
                serializedName: "name",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            unit: {
                serializedName: "unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            },
            changeValueAbsolute: {
                serializedName: "changeValueAbsolute",
                readOnly: true,
                type: {
                    name: "Number"
                }
            },
            changeValueRelative: {
                serializedName: "changeValueRelative",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }
        }
    }
};
export const SecurityEventsFilterParameters = {
    type: {
        name: "Composite",
        className: "SecurityEventsFilterParameters",
        modelProperties: {
            eventTime: {
                serializedName: "eventTime",
                type: {
                    name: "DateTime"
                }
            },
            showServerRecords: {
                serializedName: "showServerRecords",
                type: {
                    name: "Boolean"
                }
            }
        }
    }
};
export const ProxyResource = {
    type: {
        name: "Composite",
        className: "ProxyResource",
        modelProperties: Object.assign({}, Resource.type.modelProperties)
    }
};
export const TrackedResource = {
    type: {
        name: "Composite",
        className: "TrackedResource",
        modelProperties: Object.assign(Object.assign({}, Resource.type.modelProperties), { location: {
                serializedName: "location",
                required: true,
                type: {
                    name: "String"
                }
            }, tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            } })
    }
};
export const ProxyResourceWithWritableName = {
    type: {
        name: "Composite",
        className: "ProxyResourceWithWritableName",
        modelProperties: Object.assign({}, ResourceWithWritableName.type.modelProperties)
    }
};
export const RecoverableDatabase = {
    type: {
        name: "Composite",
        className: "RecoverableDatabase",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { edition: {
                serializedName: "properties.edition",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serviceLevelObjective: {
                serializedName: "properties.serviceLevelObjective",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, elasticPoolName: {
                serializedName: "properties.elasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastAvailableBackupDate: {
                serializedName: "properties.lastAvailableBackupDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const DataMaskingPolicy = {
    type: {
        name: "Composite",
        className: "DataMaskingPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dataMaskingState: {
                serializedName: "properties.dataMaskingState",
                type: {
                    name: "Enum",
                    allowedValues: ["Disabled", "Enabled"]
                }
            }, exemptPrincipals: {
                serializedName: "properties.exemptPrincipals",
                type: {
                    name: "String"
                }
            }, applicationPrincipals: {
                serializedName: "properties.applicationPrincipals",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, maskingLevel: {
                serializedName: "properties.maskingLevel",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const DataMaskingRule = {
    type: {
        name: "Composite",
        className: "DataMaskingRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, idPropertiesId: {
                serializedName: "properties.id",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, aliasName: {
                serializedName: "properties.aliasName",
                type: {
                    name: "String"
                }
            }, ruleState: {
                serializedName: "properties.ruleState",
                type: {
                    name: "Enum",
                    allowedValues: ["Disabled", "Enabled"]
                }
            }, schemaName: {
                serializedName: "properties.schemaName",
                type: {
                    name: "String"
                }
            }, tableName: {
                serializedName: "properties.tableName",
                type: {
                    name: "String"
                }
            }, columnName: {
                serializedName: "properties.columnName",
                type: {
                    name: "String"
                }
            }, maskingFunction: {
                serializedName: "properties.maskingFunction",
                type: {
                    name: "Enum",
                    allowedValues: ["Default", "CCN", "Email", "Number", "SSN", "Text"]
                }
            }, numberFrom: {
                serializedName: "properties.numberFrom",
                type: {
                    name: "String"
                }
            }, numberTo: {
                serializedName: "properties.numberTo",
                type: {
                    name: "String"
                }
            }, prefixSize: {
                serializedName: "properties.prefixSize",
                type: {
                    name: "String"
                }
            }, suffixSize: {
                serializedName: "properties.suffixSize",
                type: {
                    name: "String"
                }
            }, replacementString: {
                serializedName: "properties.replacementString",
                type: {
                    name: "String"
                }
            } })
    }
};
export const GeoBackupPolicy = {
    type: {
        name: "Composite",
        className: "GeoBackupPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                required: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Disabled", "Enabled"]
                }
            }, storageType: {
                serializedName: "properties.storageType",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerCommunicationLink = {
    type: {
        name: "Composite",
        className: "ServerCommunicationLink",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partnerServer: {
                serializedName: "properties.partnerServer",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServiceObjective = {
    type: {
        name: "Composite",
        className: "ServiceObjective",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { serviceObjectiveName: {
                serializedName: "properties.serviceObjectiveName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isDefault: {
                serializedName: "properties.isDefault",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, isSystem: {
                serializedName: "properties.isSystem",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, enabled: {
                serializedName: "properties.enabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ElasticPoolActivity = {
    type: {
        name: "Composite",
        className: "ElasticPoolActivity",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorMessage: {
                serializedName: "properties.errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationId: {
                serializedName: "properties.operationId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDatabaseDtuMax: {
                serializedName: "properties.requestedDatabaseDtuMax",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDatabaseDtuMin: {
                serializedName: "properties.requestedDatabaseDtuMin",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDtu: {
                serializedName: "properties.requestedDtu",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedElasticPoolName: {
                serializedName: "properties.requestedElasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedStorageLimitInGB: {
                serializedName: "properties.requestedStorageLimitInGB",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, elasticPoolName: {
                serializedName: "properties.elasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedStorageLimitInMB: {
                serializedName: "properties.requestedStorageLimitInMB",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDatabaseDtuGuarantee: {
                serializedName: "properties.requestedDatabaseDtuGuarantee",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDatabaseDtuCap: {
                serializedName: "properties.requestedDatabaseDtuCap",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedDtuGuarantee: {
                serializedName: "properties.requestedDtuGuarantee",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const ElasticPoolDatabaseActivity = {
    type: {
        name: "Composite",
        className: "ElasticPoolDatabaseActivity",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorMessage: {
                serializedName: "properties.errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationId: {
                serializedName: "properties.operationId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, requestedElasticPoolName: {
                serializedName: "properties.requestedElasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, currentElasticPoolName: {
                serializedName: "properties.currentElasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, currentServiceObjective: {
                serializedName: "properties.currentServiceObjective",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedServiceObjective: {
                serializedName: "properties.requestedServiceObjective",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ExtendedDatabaseBlobAuditingPolicy = {
    type: {
        name: "Composite",
        className: "ExtendedDatabaseBlobAuditingPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { predicateExpression: {
                serializedName: "properties.predicateExpression",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, auditActionsAndGroups: {
                serializedName: "properties.auditActionsAndGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isStorageSecondaryKeyInUse: {
                serializedName: "properties.isStorageSecondaryKeyInUse",
                type: {
                    name: "Boolean"
                }
            }, isAzureMonitorTargetEnabled: {
                serializedName: "properties.isAzureMonitorTargetEnabled",
                type: {
                    name: "Boolean"
                }
            }, queueDelayMs: {
                serializedName: "properties.queueDelayMs",
                type: {
                    name: "Number"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, storageAccountSubscriptionId: {
                serializedName: "properties.storageAccountSubscriptionId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const ExtendedServerBlobAuditingPolicy = {
    type: {
        name: "Composite",
        className: "ExtendedServerBlobAuditingPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { isDevopsAuditEnabled: {
                serializedName: "properties.isDevopsAuditEnabled",
                type: {
                    name: "Boolean"
                }
            }, predicateExpression: {
                serializedName: "properties.predicateExpression",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, auditActionsAndGroups: {
                serializedName: "properties.auditActionsAndGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isStorageSecondaryKeyInUse: {
                serializedName: "properties.isStorageSecondaryKeyInUse",
                type: {
                    name: "Boolean"
                }
            }, isAzureMonitorTargetEnabled: {
                serializedName: "properties.isAzureMonitorTargetEnabled",
                type: {
                    name: "Boolean"
                }
            }, queueDelayMs: {
                serializedName: "properties.queueDelayMs",
                type: {
                    name: "Number"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, storageAccountSubscriptionId: {
                serializedName: "properties.storageAccountSubscriptionId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const ServerBlobAuditingPolicy = {
    type: {
        name: "Composite",
        className: "ServerBlobAuditingPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { isDevopsAuditEnabled: {
                serializedName: "properties.isDevopsAuditEnabled",
                type: {
                    name: "Boolean"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, auditActionsAndGroups: {
                serializedName: "properties.auditActionsAndGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isStorageSecondaryKeyInUse: {
                serializedName: "properties.isStorageSecondaryKeyInUse",
                type: {
                    name: "Boolean"
                }
            }, isAzureMonitorTargetEnabled: {
                serializedName: "properties.isAzureMonitorTargetEnabled",
                type: {
                    name: "Boolean"
                }
            }, queueDelayMs: {
                serializedName: "properties.queueDelayMs",
                type: {
                    name: "Number"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, storageAccountSubscriptionId: {
                serializedName: "properties.storageAccountSubscriptionId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const DatabaseBlobAuditingPolicy = {
    type: {
        name: "Composite",
        className: "DatabaseBlobAuditingPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, auditActionsAndGroups: {
                serializedName: "properties.auditActionsAndGroups",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, isStorageSecondaryKeyInUse: {
                serializedName: "properties.isStorageSecondaryKeyInUse",
                type: {
                    name: "Boolean"
                }
            }, isAzureMonitorTargetEnabled: {
                serializedName: "properties.isAzureMonitorTargetEnabled",
                type: {
                    name: "Boolean"
                }
            }, queueDelayMs: {
                serializedName: "properties.queueDelayMs",
                type: {
                    name: "Number"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, storageAccountSubscriptionId: {
                serializedName: "properties.storageAccountSubscriptionId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const RecommendedAction = {
    type: {
        name: "Composite",
        className: "RecommendedAction",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, recommendationReason: {
                serializedName: "properties.recommendationReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, validSince: {
                serializedName: "properties.validSince",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, lastRefresh: {
                serializedName: "properties.lastRefresh",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Composite",
                    className: "RecommendedActionStateInfo"
                }
            }, isExecutableAction: {
                serializedName: "properties.isExecutableAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, isRevertableAction: {
                serializedName: "properties.isRevertableAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, isArchivedAction: {
                serializedName: "properties.isArchivedAction",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, executeActionStartTime: {
                serializedName: "properties.executeActionStartTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, executeActionDuration: {
                serializedName: "properties.executeActionDuration",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, revertActionStartTime: {
                serializedName: "properties.revertActionStartTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, revertActionDuration: {
                serializedName: "properties.revertActionDuration",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, executeActionInitiatedBy: {
                serializedName: "properties.executeActionInitiatedBy",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["User", "System"]
                }
            }, executeActionInitiatedTime: {
                serializedName: "properties.executeActionInitiatedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, revertActionInitiatedBy: {
                serializedName: "properties.revertActionInitiatedBy",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["User", "System"]
                }
            }, revertActionInitiatedTime: {
                serializedName: "properties.revertActionInitiatedTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, score: {
                serializedName: "properties.score",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, implementationDetails: {
                serializedName: "properties.implementationDetails",
                type: {
                    name: "Composite",
                    className: "RecommendedActionImplementationInfo"
                }
            }, errorDetails: {
                serializedName: "properties.errorDetails",
                type: {
                    name: "Composite",
                    className: "RecommendedActionErrorInfo"
                }
            }, estimatedImpact: {
                serializedName: "properties.estimatedImpact",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendedActionImpactRecord"
                        }
                    }
                }
            }, observedImpact: {
                serializedName: "properties.observedImpact",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendedActionImpactRecord"
                        }
                    }
                }
            }, timeSeries: {
                serializedName: "properties.timeSeries",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendedActionMetricInfo"
                        }
                    }
                }
            }, linkedObjects: {
                serializedName: "properties.linkedObjects",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, details: {
                serializedName: "properties.details",
                readOnly: true,
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Dictionary", value: { type: { name: "any" } } }
                    }
                }
            } })
    }
};
export const Advisor = {
    type: {
        name: "Composite",
        className: "Advisor",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, advisorStatus: {
                serializedName: "properties.advisorStatus",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "GA",
                        "PublicPreview",
                        "LimitedPublicPreview",
                        "PrivatePreview"
                    ]
                }
            }, autoExecuteStatus: {
                serializedName: "properties.autoExecuteStatus",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled", "Default"]
                }
            }, autoExecuteStatusInheritedFrom: {
                serializedName: "properties.autoExecuteStatusInheritedFrom",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Default",
                        "Subscription",
                        "Server",
                        "ElasticPool",
                        "Database"
                    ]
                }
            }, recommendationsStatus: {
                serializedName: "properties.recommendationsStatus",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastChecked: {
                serializedName: "properties.lastChecked",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, recommendedActions: {
                serializedName: "properties.recommendedActions",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "RecommendedAction"
                        }
                    }
                }
            } })
    }
};
export const DatabaseAutomaticTuning = {
    type: {
        name: "Composite",
        className: "DatabaseAutomaticTuning",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { desiredState: {
                serializedName: "properties.desiredState",
                type: {
                    name: "Enum",
                    allowedValues: ["Inherit", "Custom", "Auto", "Unspecified"]
                }
            }, actualState: {
                serializedName: "properties.actualState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Inherit", "Custom", "Auto", "Unspecified"]
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Dictionary",
                    value: {
                        type: { name: "Composite", className: "AutomaticTuningOptions" }
                    }
                }
            } })
    }
};
export const DatabaseColumn = {
    type: {
        name: "Composite",
        className: "DatabaseColumn",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { columnType: {
                serializedName: "properties.columnType",
                type: {
                    name: "String"
                }
            }, temporalType: {
                serializedName: "properties.temporalType",
                type: {
                    name: "String"
                }
            }, memoryOptimized: {
                serializedName: "properties.memoryOptimized",
                type: {
                    name: "Boolean"
                }
            }, isComputed: {
                serializedName: "properties.isComputed",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const DatabaseSchema = {
    type: {
        name: "Composite",
        className: "DatabaseSchema",
        modelProperties: Object.assign({}, ProxyResource.type.modelProperties)
    }
};
export const DatabaseSecurityAlertPolicy = {
    type: {
        name: "Composite",
        className: "DatabaseSecurityAlertPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, disabledAlerts: {
                serializedName: "properties.disabledAlerts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAddresses: {
                serializedName: "properties.emailAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAccountAdmins: {
                serializedName: "properties.emailAccountAdmins",
                type: {
                    name: "Boolean"
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const DatabaseTable = {
    type: {
        name: "Composite",
        className: "DatabaseTable",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { temporalType: {
                serializedName: "properties.temporalType",
                type: {
                    name: "String"
                }
            }, memoryOptimized: {
                serializedName: "properties.memoryOptimized",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const DatabaseVulnerabilityAssessmentRuleBaseline = {
    type: {
        name: "Composite",
        className: "DatabaseVulnerabilityAssessmentRuleBaseline",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { baselineResults: {
                serializedName: "properties.baselineResults",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "DatabaseVulnerabilityAssessmentRuleBaselineItem"
                        }
                    }
                }
            } })
    }
};
export const DatabaseVulnerabilityAssessment = {
    type: {
        name: "Composite",
        className: "DatabaseVulnerabilityAssessment",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { storageContainerPath: {
                serializedName: "properties.storageContainerPath",
                type: {
                    name: "String"
                }
            }, storageContainerSasKey: {
                serializedName: "properties.storageContainerSasKey",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, recurringScans: {
                serializedName: "properties.recurringScans",
                type: {
                    name: "Composite",
                    className: "VulnerabilityAssessmentRecurringScansProperties"
                }
            } })
    }
};
export const VulnerabilityAssessmentScanRecord = {
    type: {
        name: "Composite",
        className: "VulnerabilityAssessmentScanRecord",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { scanId: {
                serializedName: "properties.scanId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, triggerType: {
                serializedName: "properties.triggerType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, errors: {
                serializedName: "properties.errors",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "VulnerabilityAssessmentScanError"
                        }
                    }
                }
            }, storageContainerPath: {
                serializedName: "properties.storageContainerPath",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, numberOfFailedSecurityChecks: {
                serializedName: "properties.numberOfFailedSecurityChecks",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const DatabaseVulnerabilityAssessmentScansExport = {
    type: {
        name: "Composite",
        className: "DatabaseVulnerabilityAssessmentScansExport",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { exportedReportLocation: {
                serializedName: "properties.exportedReportLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const DataWarehouseUserActivities = {
    type: {
        name: "Composite",
        className: "DataWarehouseUserActivities",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { activeQueriesCount: {
                serializedName: "properties.activeQueriesCount",
                readOnly: true,
                type: {
                    name: "Number"
                }
            } })
    }
};
export const DeletedServer = {
    type: {
        name: "Composite",
        className: "DeletedServer",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, deletionTime: {
                serializedName: "properties.deletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, originalId: {
                serializedName: "properties.originalId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ElasticPoolOperation = {
    type: {
        name: "Composite",
        className: "ElasticPoolOperation",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { elasticPoolName: {
                serializedName: "properties.elasticPoolName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationFriendlyName: {
                serializedName: "properties.operationFriendlyName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorDescription: {
                serializedName: "properties.errorDescription",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, isUserError: {
                serializedName: "properties.isUserError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, estimatedCompletionTime: {
                serializedName: "properties.estimatedCompletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isCancellable: {
                serializedName: "properties.isCancellable",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const EncryptionProtector = {
    type: {
        name: "Composite",
        className: "EncryptionProtector",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, subregion: {
                serializedName: "properties.subregion",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverKeyName: {
                serializedName: "properties.serverKeyName",
                type: {
                    name: "String"
                }
            }, serverKeyType: {
                serializedName: "properties.serverKeyType",
                type: {
                    name: "String"
                }
            }, uri: {
                serializedName: "properties.uri",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, thumbprint: {
                serializedName: "properties.thumbprint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, autoRotationEnabled: {
                serializedName: "properties.autoRotationEnabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const FailoverGroup = {
    type: {
        name: "Composite",
        className: "FailoverGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, readWriteEndpoint: {
                serializedName: "properties.readWriteEndpoint",
                type: {
                    name: "Composite",
                    className: "FailoverGroupReadWriteEndpoint"
                }
            }, readOnlyEndpoint: {
                serializedName: "properties.readOnlyEndpoint",
                type: {
                    name: "Composite",
                    className: "FailoverGroupReadOnlyEndpoint"
                }
            }, replicationRole: {
                serializedName: "properties.replicationRole",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, replicationState: {
                serializedName: "properties.replicationState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partnerServers: {
                serializedName: "properties.partnerServers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PartnerInfo"
                        }
                    }
                }
            }, databases: {
                serializedName: "properties.databases",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const InstanceFailoverGroup = {
    type: {
        name: "Composite",
        className: "InstanceFailoverGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { readWriteEndpoint: {
                serializedName: "properties.readWriteEndpoint",
                type: {
                    name: "Composite",
                    className: "InstanceFailoverGroupReadWriteEndpoint"
                }
            }, readOnlyEndpoint: {
                serializedName: "properties.readOnlyEndpoint",
                type: {
                    name: "Composite",
                    className: "InstanceFailoverGroupReadOnlyEndpoint"
                }
            }, replicationRole: {
                serializedName: "properties.replicationRole",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, replicationState: {
                serializedName: "properties.replicationState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partnerRegions: {
                serializedName: "properties.partnerRegions",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PartnerRegionInfo"
                        }
                    }
                }
            }, managedInstancePairs: {
                serializedName: "properties.managedInstancePairs",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstancePairInfo"
                        }
                    }
                }
            } })
    }
};
export const JobCredential = {
    type: {
        name: "Composite",
        className: "JobCredential",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { username: {
                serializedName: "properties.username",
                type: {
                    name: "String"
                }
            }, password: {
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            } })
    }
};
export const JobExecution = {
    type: {
        name: "Composite",
        className: "JobExecution",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { jobVersion: {
                serializedName: "properties.jobVersion",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, stepName: {
                serializedName: "properties.stepName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, stepId: {
                serializedName: "properties.stepId",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, jobExecutionId: {
                serializedName: "properties.jobExecutionId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, lifecycle: {
                serializedName: "properties.lifecycle",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, createTime: {
                serializedName: "properties.createTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, currentAttempts: {
                serializedName: "properties.currentAttempts",
                type: {
                    name: "Number"
                }
            }, currentAttemptStartTime: {
                serializedName: "properties.currentAttemptStartTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, lastMessage: {
                serializedName: "properties.lastMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, target: {
                serializedName: "properties.target",
                type: {
                    name: "Composite",
                    className: "JobExecutionTarget"
                }
            } })
    }
};
export const Job = {
    type: {
        name: "Composite",
        className: "Job",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { description: {
                defaultValue: "",
                serializedName: "properties.description",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, schedule: {
                serializedName: "properties.schedule",
                type: {
                    name: "Composite",
                    className: "JobSchedule"
                }
            } })
    }
};
export const JobStep = {
    type: {
        name: "Composite",
        className: "JobStep",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { stepId: {
                serializedName: "properties.stepId",
                type: {
                    name: "Number"
                }
            }, targetGroup: {
                serializedName: "properties.targetGroup",
                type: {
                    name: "String"
                }
            }, credential: {
                serializedName: "properties.credential",
                type: {
                    name: "String"
                }
            }, action: {
                serializedName: "properties.action",
                type: {
                    name: "Composite",
                    className: "JobStepAction"
                }
            }, output: {
                serializedName: "properties.output",
                type: {
                    name: "Composite",
                    className: "JobStepOutput"
                }
            }, executionOptions: {
                serializedName: "properties.executionOptions",
                type: {
                    name: "Composite",
                    className: "JobStepExecutionOptions"
                }
            } })
    }
};
export const JobTargetGroup = {
    type: {
        name: "Composite",
        className: "JobTargetGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { members: {
                serializedName: "properties.members",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "JobTarget"
                        }
                    }
                }
            } })
    }
};
export const JobVersion = {
    type: {
        name: "Composite",
        className: "JobVersion",
        modelProperties: Object.assign({}, ProxyResource.type.modelProperties)
    }
};
export const LongTermRetentionPolicy = {
    type: {
        name: "Composite",
        className: "LongTermRetentionPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { weeklyRetention: {
                serializedName: "properties.weeklyRetention",
                type: {
                    name: "String"
                }
            }, monthlyRetention: {
                serializedName: "properties.monthlyRetention",
                type: {
                    name: "String"
                }
            }, yearlyRetention: {
                serializedName: "properties.yearlyRetention",
                type: {
                    name: "String"
                }
            }, weekOfYear: {
                serializedName: "properties.weekOfYear",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const MaintenanceWindowOptions = {
    type: {
        name: "Composite",
        className: "MaintenanceWindowOptions",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { isEnabled: {
                serializedName: "properties.isEnabled",
                type: {
                    name: "Boolean"
                }
            }, maintenanceWindowCycles: {
                serializedName: "properties.maintenanceWindowCycles",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaintenanceWindowTimeRange"
                        }
                    }
                }
            }, minDurationInMinutes: {
                serializedName: "properties.minDurationInMinutes",
                type: {
                    name: "Number"
                }
            }, defaultDurationInMinutes: {
                serializedName: "properties.defaultDurationInMinutes",
                type: {
                    name: "Number"
                }
            }, minCycles: {
                serializedName: "properties.minCycles",
                type: {
                    name: "Number"
                }
            }, timeGranularityInMinutes: {
                serializedName: "properties.timeGranularityInMinutes",
                type: {
                    name: "Number"
                }
            }, allowMultipleMaintenanceWindowsPerCycle: {
                serializedName: "properties.allowMultipleMaintenanceWindowsPerCycle",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const MaintenanceWindows = {
    type: {
        name: "Composite",
        className: "MaintenanceWindows",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { timeRanges: {
                serializedName: "properties.timeRanges",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "MaintenanceWindowTimeRange"
                        }
                    }
                }
            } })
    }
};
export const ManagedBackupShortTermRetentionPolicy = {
    type: {
        name: "Composite",
        className: "ManagedBackupShortTermRetentionPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const ManagedInstanceQuery = {
    type: {
        name: "Composite",
        className: "ManagedInstanceQuery",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { queryText: {
                serializedName: "properties.queryText",
                type: {
                    name: "String"
                }
            } })
    }
};
export const QueryStatistics = {
    type: {
        name: "Composite",
        className: "QueryStatistics",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, queryId: {
                serializedName: "properties.queryId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, intervals: {
                serializedName: "properties.intervals",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "QueryMetricInterval"
                        }
                    }
                }
            } })
    }
};
export const ManagedDatabaseRestoreDetailsResult = {
    type: {
        name: "Composite",
        className: "ManagedDatabaseRestoreDetailsResult",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, currentRestoringFileName: {
                serializedName: "properties.currentRestoringFileName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastRestoredFileName: {
                serializedName: "properties.lastRestoredFileName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastRestoredFileTime: {
                serializedName: "properties.lastRestoredFileTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, percentCompleted: {
                serializedName: "properties.percentCompleted",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, unrestorableFiles: {
                serializedName: "properties.unrestorableFiles",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, numberOfFilesDetected: {
                serializedName: "properties.numberOfFilesDetected",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, lastUploadedFileName: {
                serializedName: "properties.lastUploadedFileName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastUploadedFileTime: {
                serializedName: "properties.lastUploadedFileTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, blockReason: {
                serializedName: "properties.blockReason",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedDatabaseSecurityAlertPolicy = {
    type: {
        name: "Composite",
        className: "ManagedDatabaseSecurityAlertPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["New", "Enabled", "Disabled"]
                }
            }, disabledAlerts: {
                serializedName: "properties.disabledAlerts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAddresses: {
                serializedName: "properties.emailAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAccountAdmins: {
                serializedName: "properties.emailAccountAdmins",
                type: {
                    name: "Boolean"
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const SecurityEvent = {
    type: {
        name: "Composite",
        className: "SecurityEvent",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { eventTime: {
                serializedName: "properties.eventTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, securityEventType: {
                serializedName: "properties.securityEventType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Undefined",
                        "SqlInjectionVulnerability",
                        "SqlInjectionExploit"
                    ]
                }
            }, subscription: {
                serializedName: "properties.subscription",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, server: {
                serializedName: "properties.server",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, database: {
                serializedName: "properties.database",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, clientIp: {
                serializedName: "properties.clientIp",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, applicationName: {
                serializedName: "properties.applicationName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, principalName: {
                serializedName: "properties.principalName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, securityEventSqlInjectionAdditionalProperties: {
                serializedName: "properties.securityEventSqlInjectionAdditionalProperties",
                type: {
                    name: "Composite",
                    className: "SecurityEventSqlInjectionAdditionalProperties"
                }
            } })
    }
};
export const SensitivityLabel = {
    type: {
        name: "Composite",
        className: "SensitivityLabel",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { managedBy: {
                serializedName: "managedBy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, schemaName: {
                serializedName: "properties.schemaName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, tableName: {
                serializedName: "properties.tableName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, columnName: {
                serializedName: "properties.columnName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, labelName: {
                serializedName: "properties.labelName",
                type: {
                    name: "String"
                }
            }, labelId: {
                serializedName: "properties.labelId",
                type: {
                    name: "String"
                }
            }, informationType: {
                serializedName: "properties.informationType",
                type: {
                    name: "String"
                }
            }, informationTypeId: {
                serializedName: "properties.informationTypeId",
                type: {
                    name: "String"
                }
            }, isDisabled: {
                serializedName: "properties.isDisabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, rank: {
                serializedName: "properties.rank",
                type: {
                    name: "Enum",
                    allowedValues: ["None", "Low", "Medium", "High", "Critical"]
                }
            } })
    }
};
export const SensitivityLabelUpdate = {
    type: {
        name: "Composite",
        className: "SensitivityLabelUpdate",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { op: {
                serializedName: "properties.op",
                type: {
                    name: "Enum",
                    allowedValues: ["set", "remove"]
                }
            }, schema: {
                serializedName: "properties.schema",
                type: {
                    name: "String"
                }
            }, table: {
                serializedName: "properties.table",
                type: {
                    name: "String"
                }
            }, column: {
                serializedName: "properties.column",
                type: {
                    name: "String"
                }
            }, sensitivityLabel: {
                serializedName: "properties.sensitivityLabel",
                type: {
                    name: "Composite",
                    className: "SensitivityLabel"
                }
            } })
    }
};
export const RecommendedSensitivityLabelUpdate = {
    type: {
        name: "Composite",
        className: "RecommendedSensitivityLabelUpdate",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { op: {
                serializedName: "properties.op",
                type: {
                    name: "Enum",
                    allowedValues: ["enable", "disable"]
                }
            }, schema: {
                serializedName: "properties.schema",
                type: {
                    name: "String"
                }
            }, table: {
                serializedName: "properties.table",
                type: {
                    name: "String"
                }
            }, column: {
                serializedName: "properties.column",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedTransparentDataEncryption = {
    type: {
        name: "Composite",
        className: "ManagedTransparentDataEncryption",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            } })
    }
};
export const ManagedInstanceAdministrator = {
    type: {
        name: "Composite",
        className: "ManagedInstanceAdministrator",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { administratorType: {
                serializedName: "properties.administratorType",
                type: {
                    name: "String"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "String"
                }
            }, sid: {
                serializedName: "properties.sid",
                type: {
                    name: "Uuid"
                }
            }, tenantId: {
                serializedName: "properties.tenantId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const ManagedInstanceAzureADOnlyAuthentication = {
    type: {
        name: "Composite",
        className: "ManagedInstanceAzureADOnlyAuthentication",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { azureADOnlyAuthentication: {
                serializedName: "properties.azureADOnlyAuthentication",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ManagedInstanceEncryptionProtector = {
    type: {
        name: "Composite",
        className: "ManagedInstanceEncryptionProtector",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverKeyName: {
                serializedName: "properties.serverKeyName",
                type: {
                    name: "String"
                }
            }, serverKeyType: {
                serializedName: "properties.serverKeyType",
                type: {
                    name: "String"
                }
            }, uri: {
                serializedName: "properties.uri",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, thumbprint: {
                serializedName: "properties.thumbprint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, autoRotationEnabled: {
                serializedName: "properties.autoRotationEnabled",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ManagedInstanceKey = {
    type: {
        name: "Composite",
        className: "ManagedInstanceKey",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverKeyType: {
                serializedName: "properties.serverKeyType",
                type: {
                    name: "String"
                }
            }, uri: {
                serializedName: "properties.uri",
                type: {
                    name: "String"
                }
            }, thumbprint: {
                serializedName: "properties.thumbprint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, autoRotationEnabled: {
                serializedName: "properties.autoRotationEnabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ManagedInstanceLongTermRetentionPolicy = {
    type: {
        name: "Composite",
        className: "ManagedInstanceLongTermRetentionPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { weeklyRetention: {
                serializedName: "properties.weeklyRetention",
                type: {
                    name: "String"
                }
            }, monthlyRetention: {
                serializedName: "properties.monthlyRetention",
                type: {
                    name: "String"
                }
            }, yearlyRetention: {
                serializedName: "properties.yearlyRetention",
                type: {
                    name: "String"
                }
            }, weekOfYear: {
                serializedName: "properties.weekOfYear",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const ManagedInstanceOperation = {
    type: {
        name: "Composite",
        className: "ManagedInstanceOperation",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { managedInstanceName: {
                serializedName: "properties.managedInstanceName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationFriendlyName: {
                serializedName: "properties.operationFriendlyName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorDescription: {
                serializedName: "properties.errorDescription",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, isUserError: {
                serializedName: "properties.isUserError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, estimatedCompletionTime: {
                serializedName: "properties.estimatedCompletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isCancellable: {
                serializedName: "properties.isCancellable",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, operationParameters: {
                serializedName: "properties.operationParameters",
                type: {
                    name: "Composite",
                    className: "ManagedInstanceOperationParametersPair"
                }
            }, operationSteps: {
                serializedName: "properties.operationSteps",
                type: {
                    name: "Composite",
                    className: "ManagedInstanceOperationSteps"
                }
            } })
    }
};
export const ManagedInstancePrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateEndpointProperty"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateLinkServiceConnectionStateProperty"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedInstancePrivateLink = {
    type: {
        name: "Composite",
        className: "ManagedInstancePrivateLink",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "ManagedInstancePrivateLinkProperties"
                }
            } })
    }
};
export const TdeCertificate = {
    type: {
        name: "Composite",
        className: "TdeCertificate",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { privateBlob: {
                serializedName: "properties.privateBlob",
                type: {
                    name: "String"
                }
            }, certPassword: {
                serializedName: "properties.certPassword",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedInstanceVulnerabilityAssessment = {
    type: {
        name: "Composite",
        className: "ManagedInstanceVulnerabilityAssessment",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { storageContainerPath: {
                serializedName: "properties.storageContainerPath",
                type: {
                    name: "String"
                }
            }, storageContainerSasKey: {
                serializedName: "properties.storageContainerSasKey",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, recurringScans: {
                serializedName: "properties.recurringScans",
                type: {
                    name: "Composite",
                    className: "VulnerabilityAssessmentRecurringScansProperties"
                }
            } })
    }
};
export const ManagedServerSecurityAlertPolicy = {
    type: {
        name: "Composite",
        className: "ManagedServerSecurityAlertPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, disabledAlerts: {
                serializedName: "properties.disabledAlerts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAddresses: {
                serializedName: "properties.emailAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAccountAdmins: {
                serializedName: "properties.emailAccountAdmins",
                type: {
                    name: "Boolean"
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const OperationsHealth = {
    type: {
        name: "Composite",
        className: "OperationsHealth",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { namePropertiesName: {
                serializedName: "properties.name",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, health: {
                serializedName: "properties.health",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PrivateEndpointConnection = {
    type: {
        name: "Composite",
        className: "PrivateEndpointConnection",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { privateEndpoint: {
                serializedName: "properties.privateEndpoint",
                type: {
                    name: "Composite",
                    className: "PrivateEndpointProperty"
                }
            }, privateLinkServiceConnectionState: {
                serializedName: "properties.privateLinkServiceConnectionState",
                type: {
                    name: "Composite",
                    className: "PrivateLinkServiceConnectionStateProperty"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const PrivateLinkResource = {
    type: {
        name: "Composite",
        className: "PrivateLinkResource",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { properties: {
                serializedName: "properties",
                type: {
                    name: "Composite",
                    className: "PrivateLinkResourceProperties"
                }
            } })
    }
};
export const RecoverableManagedDatabase = {
    type: {
        name: "Composite",
        className: "RecoverableManagedDatabase",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { lastAvailableBackupDate: {
                serializedName: "properties.lastAvailableBackupDate",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const RestorePoint = {
    type: {
        name: "Composite",
        className: "RestorePoint",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, restorePointType: {
                serializedName: "properties.restorePointType",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["CONTINUOUS", "DISCRETE"]
                }
            }, earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, restorePointCreationDate: {
                serializedName: "properties.restorePointCreationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, restorePointLabel: {
                serializedName: "properties.restorePointLabel",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerAutomaticTuning = {
    type: {
        name: "Composite",
        className: "ServerAutomaticTuning",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { desiredState: {
                serializedName: "properties.desiredState",
                type: {
                    name: "Enum",
                    allowedValues: ["Custom", "Auto", "Unspecified"]
                }
            }, actualState: {
                serializedName: "properties.actualState",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Custom", "Auto", "Unspecified"]
                }
            }, options: {
                serializedName: "properties.options",
                type: {
                    name: "Dictionary",
                    value: {
                        type: {
                            name: "Composite",
                            className: "AutomaticTuningServerOptions"
                        }
                    }
                }
            } })
    }
};
export const ServerAzureADAdministrator = {
    type: {
        name: "Composite",
        className: "ServerAzureADAdministrator",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { administratorType: {
                serializedName: "properties.administratorType",
                type: {
                    name: "String"
                }
            }, login: {
                serializedName: "properties.login",
                type: {
                    name: "String"
                }
            }, sid: {
                serializedName: "properties.sid",
                type: {
                    name: "Uuid"
                }
            }, tenantId: {
                serializedName: "properties.tenantId",
                type: {
                    name: "Uuid"
                }
            }, azureADOnlyAuthentication: {
                serializedName: "properties.azureADOnlyAuthentication",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ServerAzureADOnlyAuthentication = {
    type: {
        name: "Composite",
        className: "ServerAzureADOnlyAuthentication",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { azureADOnlyAuthentication: {
                serializedName: "properties.azureADOnlyAuthentication",
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ServerDevOpsAuditingSettings = {
    type: {
        name: "Composite",
        className: "ServerDevOpsAuditingSettings",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, isAzureMonitorTargetEnabled: {
                serializedName: "properties.isAzureMonitorTargetEnabled",
                type: {
                    name: "Boolean"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, storageAccountSubscriptionId: {
                serializedName: "properties.storageAccountSubscriptionId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const ServerDnsAlias = {
    type: {
        name: "Composite",
        className: "ServerDnsAlias",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { azureDnsRecord: {
                serializedName: "properties.azureDnsRecord",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerKey = {
    type: {
        name: "Composite",
        className: "ServerKey",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, subregion: {
                serializedName: "properties.subregion",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverKeyType: {
                serializedName: "properties.serverKeyType",
                type: {
                    name: "String"
                }
            }, uri: {
                serializedName: "properties.uri",
                type: {
                    name: "String"
                }
            }, thumbprint: {
                serializedName: "properties.thumbprint",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, autoRotationEnabled: {
                serializedName: "properties.autoRotationEnabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ServerOperation = {
    type: {
        name: "Composite",
        className: "ServerOperation",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationFriendlyName: {
                serializedName: "properties.operationFriendlyName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorDescription: {
                serializedName: "properties.errorDescription",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, isUserError: {
                serializedName: "properties.isUserError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, estimatedCompletionTime: {
                serializedName: "properties.estimatedCompletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isCancellable: {
                serializedName: "properties.isCancellable",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const ServerSecurityAlertPolicy = {
    type: {
        name: "Composite",
        className: "ServerSecurityAlertPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { systemData: {
                serializedName: "systemData",
                type: {
                    name: "Composite",
                    className: "SystemData"
                }
            }, state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            }, disabledAlerts: {
                serializedName: "properties.disabledAlerts",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAddresses: {
                serializedName: "properties.emailAddresses",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, emailAccountAdmins: {
                serializedName: "properties.emailAccountAdmins",
                type: {
                    name: "Boolean"
                }
            }, storageEndpoint: {
                serializedName: "properties.storageEndpoint",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, creationTime: {
                serializedName: "properties.creationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const ServerTrustGroup = {
    type: {
        name: "Composite",
        className: "ServerTrustGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { groupMembers: {
                serializedName: "properties.groupMembers",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerInfo"
                        }
                    }
                }
            }, trustScopes: {
                serializedName: "properties.trustScopes",
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            } })
    }
};
export const ServerVulnerabilityAssessment = {
    type: {
        name: "Composite",
        className: "ServerVulnerabilityAssessment",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { storageContainerPath: {
                serializedName: "properties.storageContainerPath",
                type: {
                    name: "String"
                }
            }, storageContainerSasKey: {
                serializedName: "properties.storageContainerSasKey",
                type: {
                    name: "String"
                }
            }, storageAccountAccessKey: {
                serializedName: "properties.storageAccountAccessKey",
                type: {
                    name: "String"
                }
            }, recurringScans: {
                serializedName: "properties.recurringScans",
                type: {
                    name: "Composite",
                    className: "VulnerabilityAssessmentRecurringScansProperties"
                }
            } })
    }
};
export const SqlAgentConfiguration = {
    type: {
        name: "Composite",
        className: "SqlAgentConfiguration",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "String"
                }
            } })
    }
};
export const SubscriptionUsage = {
    type: {
        name: "Composite",
        className: "SubscriptionUsage",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { displayName: {
                serializedName: "properties.displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, currentValue: {
                serializedName: "properties.currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, limit: {
                serializedName: "properties.limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, unit: {
                serializedName: "properties.unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SyncAgent = {
    type: {
        name: "Composite",
        className: "SyncAgent",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { namePropertiesName: {
                serializedName: "properties.name",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, syncDatabaseId: {
                serializedName: "properties.syncDatabaseId",
                type: {
                    name: "String"
                }
            }, lastAliveTime: {
                serializedName: "properties.lastAliveTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isUpToDate: {
                serializedName: "properties.isUpToDate",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, expiryTime: {
                serializedName: "properties.expiryTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, version: {
                serializedName: "properties.version",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SyncAgentLinkedDatabase = {
    type: {
        name: "Composite",
        className: "SyncAgentLinkedDatabase",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { databaseType: {
                serializedName: "properties.databaseType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseId: {
                serializedName: "properties.databaseId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, userName: {
                serializedName: "properties.userName",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SyncGroup = {
    type: {
        name: "Composite",
        className: "SyncGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, interval: {
                serializedName: "properties.interval",
                type: {
                    name: "Number"
                }
            }, lastSyncTime: {
                serializedName: "properties.lastSyncTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, conflictResolutionPolicy: {
                serializedName: "properties.conflictResolutionPolicy",
                type: {
                    name: "String"
                }
            }, syncDatabaseId: {
                serializedName: "properties.syncDatabaseId",
                type: {
                    name: "String"
                }
            }, hubDatabaseUserName: {
                serializedName: "properties.hubDatabaseUserName",
                type: {
                    name: "String"
                }
            }, hubDatabasePassword: {
                serializedName: "properties.hubDatabasePassword",
                type: {
                    name: "String"
                }
            }, syncState: {
                serializedName: "properties.syncState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, schema: {
                serializedName: "properties.schema",
                type: {
                    name: "Composite",
                    className: "SyncGroupSchema"
                }
            }, enableConflictLogging: {
                serializedName: "properties.enableConflictLogging",
                type: {
                    name: "Boolean"
                }
            }, conflictLoggingRetentionInDays: {
                serializedName: "properties.conflictLoggingRetentionInDays",
                type: {
                    name: "Number"
                }
            }, usePrivateLinkConnection: {
                serializedName: "properties.usePrivateLinkConnection",
                type: {
                    name: "Boolean"
                }
            }, privateEndpointName: {
                serializedName: "properties.privateEndpointName",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const SyncMember = {
    type: {
        name: "Composite",
        className: "SyncMember",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { databaseType: {
                serializedName: "properties.databaseType",
                type: {
                    name: "String"
                }
            }, syncAgentId: {
                serializedName: "properties.syncAgentId",
                type: {
                    name: "String"
                }
            }, sqlServerDatabaseId: {
                serializedName: "properties.sqlServerDatabaseId",
                type: {
                    name: "Uuid"
                }
            }, syncMemberAzureDatabaseResourceId: {
                serializedName: "properties.syncMemberAzureDatabaseResourceId",
                type: {
                    name: "String"
                }
            }, usePrivateLinkConnection: {
                serializedName: "properties.usePrivateLinkConnection",
                type: {
                    name: "Boolean"
                }
            }, privateEndpointName: {
                serializedName: "properties.privateEndpointName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                type: {
                    name: "String"
                }
            }, userName: {
                serializedName: "properties.userName",
                type: {
                    name: "String"
                }
            }, password: {
                serializedName: "properties.password",
                type: {
                    name: "String"
                }
            }, syncDirection: {
                serializedName: "properties.syncDirection",
                type: {
                    name: "String"
                }
            }, syncState: {
                serializedName: "properties.syncState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const TimeZone = {
    type: {
        name: "Composite",
        className: "TimeZone",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { timeZoneId: {
                serializedName: "properties.timeZoneId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, displayName: {
                serializedName: "properties.displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const UpdateManagedInstanceDnsServersOperation = {
    type: {
        name: "Composite",
        className: "UpdateManagedInstanceDnsServersOperation",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const VirtualNetworkRule = {
    type: {
        name: "Composite",
        className: "VirtualNetworkRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { virtualNetworkSubnetId: {
                serializedName: "properties.virtualNetworkSubnetId",
                type: {
                    name: "String"
                }
            }, ignoreMissingVnetServiceEndpoint: {
                serializedName: "properties.ignoreMissingVnetServiceEndpoint",
                type: {
                    name: "Boolean"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const WorkloadClassifier = {
    type: {
        name: "Composite",
        className: "WorkloadClassifier",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { memberName: {
                serializedName: "properties.memberName",
                type: {
                    name: "String"
                }
            }, label: {
                serializedName: "properties.label",
                type: {
                    name: "String"
                }
            }, context: {
                serializedName: "properties.context",
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                type: {
                    name: "String"
                }
            }, endTime: {
                serializedName: "properties.endTime",
                type: {
                    name: "String"
                }
            }, importance: {
                serializedName: "properties.importance",
                type: {
                    name: "String"
                }
            } })
    }
};
export const WorkloadGroup = {
    type: {
        name: "Composite",
        className: "WorkloadGroup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { minResourcePercent: {
                serializedName: "properties.minResourcePercent",
                type: {
                    name: "Number"
                }
            }, maxResourcePercent: {
                serializedName: "properties.maxResourcePercent",
                type: {
                    name: "Number"
                }
            }, minResourcePercentPerRequest: {
                serializedName: "properties.minResourcePercentPerRequest",
                type: {
                    name: "Number"
                }
            }, maxResourcePercentPerRequest: {
                serializedName: "properties.maxResourcePercentPerRequest",
                type: {
                    name: "Number"
                }
            }, importance: {
                serializedName: "properties.importance",
                type: {
                    name: "String"
                }
            }, queryExecutionTimeout: {
                serializedName: "properties.queryExecutionTimeout",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const LogicalDatabaseTransparentDataEncryption = {
    type: {
        name: "Composite",
        className: "LogicalDatabaseTransparentDataEncryption",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { state: {
                serializedName: "properties.state",
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            } })
    }
};
export const BackupShortTermRetentionPolicy = {
    type: {
        name: "Composite",
        className: "BackupShortTermRetentionPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { retentionDays: {
                serializedName: "properties.retentionDays",
                type: {
                    name: "Number"
                }
            }, diffBackupIntervalInHours: {
                serializedName: "properties.diffBackupIntervalInHours",
                type: {
                    name: "Number"
                }
            } })
    }
};
export const DatabaseExtensions = {
    type: {
        name: "Composite",
        className: "DatabaseExtensions",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { operationMode: {
                serializedName: "properties.operationMode",
                type: {
                    name: "String"
                }
            }, storageKeyType: {
                serializedName: "properties.storageKeyType",
                type: {
                    name: "String"
                }
            }, storageKey: {
                serializedName: "properties.storageKey",
                type: {
                    name: "String"
                }
            }, storageUri: {
                serializedName: "properties.storageUri",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ImportExportExtensionsOperationResult = {
    type: {
        name: "Composite",
        className: "ImportExportExtensionsOperationResult",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { requestId: {
                serializedName: "properties.requestId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, requestType: {
                serializedName: "properties.requestType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorMessage: {
                serializedName: "properties.errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const DatabaseOperation = {
    type: {
        name: "Composite",
        className: "DatabaseOperation",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operation: {
                serializedName: "properties.operation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, operationFriendlyName: {
                serializedName: "properties.operationFriendlyName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorCode: {
                serializedName: "properties.errorCode",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, errorDescription: {
                serializedName: "properties.errorDescription",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorSeverity: {
                serializedName: "properties.errorSeverity",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, isUserError: {
                serializedName: "properties.isUserError",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, estimatedCompletionTime: {
                serializedName: "properties.estimatedCompletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, description: {
                serializedName: "properties.description",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isCancellable: {
                serializedName: "properties.isCancellable",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            } })
    }
};
export const DatabaseUsage = {
    type: {
        name: "Composite",
        className: "DatabaseUsage",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { displayName: {
                serializedName: "properties.displayName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, currentValue: {
                serializedName: "properties.currentValue",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, limit: {
                serializedName: "properties.limit",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, unit: {
                serializedName: "properties.unit",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const LedgerDigestUploads = {
    type: {
        name: "Composite",
        className: "LedgerDigestUploads",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { digestStorageEndpoint: {
                serializedName: "properties.digestStorageEndpoint",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: ["Enabled", "Disabled"]
                }
            } })
    }
};
export const OutboundFirewallRule = {
    type: {
        name: "Composite",
        className: "OutboundFirewallRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ReplicationLink = {
    type: {
        name: "Composite",
        className: "ReplicationLink",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { partnerServer: {
                serializedName: "properties.partnerServer",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partnerDatabase: {
                serializedName: "properties.partnerDatabase",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, partnerLocation: {
                serializedName: "properties.partnerLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, role: {
                serializedName: "properties.role",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary",
                        "NonReadableSecondary",
                        "Source",
                        "Copy"
                    ]
                }
            }, partnerRole: {
                serializedName: "properties.partnerRole",
                readOnly: true,
                type: {
                    name: "Enum",
                    allowedValues: [
                        "Primary",
                        "Secondary",
                        "NonReadableSecondary",
                        "Source",
                        "Copy"
                    ]
                }
            }, replicationMode: {
                serializedName: "properties.replicationMode",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, startTime: {
                serializedName: "properties.startTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, percentComplete: {
                serializedName: "properties.percentComplete",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, replicationState: {
                serializedName: "properties.replicationState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, isTerminationAllowed: {
                serializedName: "properties.isTerminationAllowed",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, linkType: {
                serializedName: "properties.linkType",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ImportExportOperationResult = {
    type: {
        name: "Composite",
        className: "ImportExportOperationResult",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { requestId: {
                serializedName: "properties.requestId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, requestType: {
                serializedName: "properties.requestType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, queuedTime: {
                serializedName: "properties.queuedTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, lastModifiedTime: {
                serializedName: "properties.lastModifiedTime",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, blobUri: {
                serializedName: "properties.blobUri",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, errorMessage: {
                serializedName: "properties.errorMessage",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "PrivateEndpointConnectionRequestStatus"
                        }
                    }
                }
            } })
    }
};
export const LongTermRetentionBackupOperationResult = {
    type: {
        name: "Composite",
        className: "LongTermRetentionBackupOperationResult",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { requestId: {
                serializedName: "properties.requestId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, operationType: {
                serializedName: "properties.operationType",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, fromBackupResourceId: {
                serializedName: "properties.fromBackupResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, toBackupResourceId: {
                serializedName: "properties.toBackupResourceId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, targetBackupStorageRedundancy: {
                serializedName: "properties.targetBackupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, message: {
                serializedName: "properties.message",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const LongTermRetentionBackup = {
    type: {
        name: "Composite",
        className: "LongTermRetentionBackup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { serverName: {
                serializedName: "properties.serverName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, serverCreateTime: {
                serializedName: "properties.serverCreateTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseDeletionTime: {
                serializedName: "properties.databaseDeletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupTime: {
                serializedName: "properties.backupTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupExpirationTime: {
                serializedName: "properties.backupExpirationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupStorageRedundancy: {
                serializedName: "properties.backupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedInstanceLongTermRetentionBackup = {
    type: {
        name: "Composite",
        className: "ManagedInstanceLongTermRetentionBackup",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { managedInstanceName: {
                serializedName: "properties.managedInstanceName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, managedInstanceCreateTime: {
                serializedName: "properties.managedInstanceCreateTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseDeletionTime: {
                serializedName: "properties.databaseDeletionTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupTime: {
                serializedName: "properties.backupTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupExpirationTime: {
                serializedName: "properties.backupExpirationTime",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupStorageRedundancy: {
                serializedName: "properties.backupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const RestorableDroppedDatabase = {
    type: {
        name: "Composite",
        className: "RestorableDroppedDatabase",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, location: {
                serializedName: "location",
                type: {
                    name: "String"
                }
            }, tags: {
                serializedName: "tags",
                type: {
                    name: "Dictionary",
                    value: { type: { name: "String" } }
                }
            }, databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, maxSizeBytes: {
                serializedName: "properties.maxSizeBytes",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, deletionDate: {
                serializedName: "properties.deletionDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, backupStorageRedundancy: {
                serializedName: "properties.backupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ServerConnectionPolicy = {
    type: {
        name: "Composite",
        className: "ServerConnectionPolicy",
        modelProperties: Object.assign(Object.assign({}, ProxyResource.type.modelProperties), { location: {
                serializedName: "location",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, connectionType: {
                serializedName: "properties.connectionType",
                type: {
                    name: "String"
                }
            } })
    }
};
export const ElasticPool = {
    type: {
        name: "Composite",
        className: "ElasticPool",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, maxSizeBytes: {
                serializedName: "properties.maxSizeBytes",
                type: {
                    name: "Number"
                }
            }, perDatabaseSettings: {
                serializedName: "properties.perDatabaseSettings",
                type: {
                    name: "Composite",
                    className: "ElasticPoolPerDatabaseSettings"
                }
            }, zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            } })
    }
};
export const InstancePool = {
    type: {
        name: "Composite",
        className: "InstancePool",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, subnetId: {
                serializedName: "properties.subnetId",
                type: {
                    name: "String"
                }
            }, vCores: {
                serializedName: "properties.vCores",
                type: {
                    name: "Number"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            } })
    }
};
export const JobAgent = {
    type: {
        name: "Composite",
        className: "JobAgent",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, databaseId: {
                serializedName: "properties.databaseId",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            } })
    }
};
export const ManagedDatabase = {
    type: {
        name: "Composite",
        className: "ManagedDatabase",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, earliestRestorePoint: {
                serializedName: "properties.earliestRestorePoint",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            }, defaultSecondaryLocation: {
                serializedName: "properties.defaultSecondaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, catalogCollation: {
                serializedName: "properties.catalogCollation",
                type: {
                    name: "String"
                }
            }, createMode: {
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            }, storageContainerUri: {
                serializedName: "properties.storageContainerUri",
                type: {
                    name: "String"
                }
            }, sourceDatabaseId: {
                serializedName: "properties.sourceDatabaseId",
                type: {
                    name: "String"
                }
            }, restorableDroppedDatabaseId: {
                serializedName: "properties.restorableDroppedDatabaseId",
                type: {
                    name: "String"
                }
            }, storageContainerSasToken: {
                serializedName: "properties.storageContainerSasToken",
                type: {
                    name: "String"
                }
            }, failoverGroupId: {
                serializedName: "properties.failoverGroupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, recoverableDatabaseId: {
                serializedName: "properties.recoverableDatabaseId",
                type: {
                    name: "String"
                }
            }, longTermRetentionBackupResourceId: {
                serializedName: "properties.longTermRetentionBackupResourceId",
                type: {
                    name: "String"
                }
            }, autoCompleteRestore: {
                serializedName: "properties.autoCompleteRestore",
                type: {
                    name: "Boolean"
                }
            }, lastBackupName: {
                serializedName: "properties.lastBackupName",
                type: {
                    name: "String"
                }
            } })
    }
};
export const VirtualCluster = {
    type: {
        name: "Composite",
        className: "VirtualCluster",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { subnetId: {
                serializedName: "properties.subnetId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, family: {
                serializedName: "properties.family",
                type: {
                    name: "String"
                }
            }, childResources: {
                serializedName: "properties.childResources",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "String"
                        }
                    }
                }
            }, maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            } })
    }
};
export const Server = {
    type: {
        name: "Composite",
        className: "Server",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, administratorLogin: {
                serializedName: "properties.administratorLogin",
                type: {
                    name: "String"
                }
            }, administratorLoginPassword: {
                serializedName: "properties.administratorLoginPassword",
                type: {
                    name: "String"
                }
            }, version: {
                serializedName: "properties.version",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ServerPrivateEndpointConnection"
                        }
                    }
                }
            }, minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            }, publicNetworkAccess: {
                serializedName: "properties.publicNetworkAccess",
                type: {
                    name: "String"
                }
            }, workspaceFeature: {
                serializedName: "properties.workspaceFeature",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, primaryUserAssignedIdentityId: {
                serializedName: "properties.primaryUserAssignedIdentityId",
                type: {
                    name: "String"
                }
            }, federatedClientId: {
                serializedName: "properties.federatedClientId",
                type: {
                    name: "Uuid"
                }
            }, keyId: {
                serializedName: "properties.keyId",
                type: {
                    name: "String"
                }
            }, administrators: {
                serializedName: "properties.administrators",
                type: {
                    name: "Composite",
                    className: "ServerExternalAdministrator"
                }
            }, restrictOutboundNetworkAccess: {
                serializedName: "properties.restrictOutboundNetworkAccess",
                type: {
                    name: "String"
                }
            } })
    }
};
export const Database = {
    type: {
        name: "Composite",
        className: "Database",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, kind: {
                serializedName: "kind",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, managedBy: {
                serializedName: "managedBy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "DatabaseIdentity"
                }
            }, createMode: {
                serializedName: "properties.createMode",
                type: {
                    name: "String"
                }
            }, collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            }, maxSizeBytes: {
                serializedName: "properties.maxSizeBytes",
                type: {
                    name: "Number"
                }
            }, sampleName: {
                serializedName: "properties.sampleName",
                type: {
                    name: "String"
                }
            }, elasticPoolId: {
                serializedName: "properties.elasticPoolId",
                type: {
                    name: "String"
                }
            }, sourceDatabaseId: {
                serializedName: "properties.sourceDatabaseId",
                type: {
                    name: "String"
                }
            }, status: {
                serializedName: "properties.status",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, databaseId: {
                serializedName: "properties.databaseId",
                readOnly: true,
                type: {
                    name: "Uuid"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, currentServiceObjectiveName: {
                serializedName: "properties.currentServiceObjectiveName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedServiceObjectiveName: {
                serializedName: "properties.requestedServiceObjectiveName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, defaultSecondaryLocation: {
                serializedName: "properties.defaultSecondaryLocation",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, failoverGroupId: {
                serializedName: "properties.failoverGroupId",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            }, sourceDatabaseDeletionDate: {
                serializedName: "properties.sourceDatabaseDeletionDate",
                type: {
                    name: "DateTime"
                }
            }, recoveryServicesRecoveryPointId: {
                serializedName: "properties.recoveryServicesRecoveryPointId",
                type: {
                    name: "String"
                }
            }, longTermRetentionBackupResourceId: {
                serializedName: "properties.longTermRetentionBackupResourceId",
                type: {
                    name: "String"
                }
            }, recoverableDatabaseId: {
                serializedName: "properties.recoverableDatabaseId",
                type: {
                    name: "String"
                }
            }, restorableDroppedDatabaseId: {
                serializedName: "properties.restorableDroppedDatabaseId",
                type: {
                    name: "String"
                }
            }, catalogCollation: {
                serializedName: "properties.catalogCollation",
                type: {
                    name: "String"
                }
            }, zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, maxLogSizeBytes: {
                serializedName: "properties.maxLogSizeBytes",
                readOnly: true,
                type: {
                    name: "Number"
                }
            }, earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, readScale: {
                serializedName: "properties.readScale",
                type: {
                    name: "String"
                }
            }, highAvailabilityReplicaCount: {
                serializedName: "properties.highAvailabilityReplicaCount",
                type: {
                    name: "Number"
                }
            }, secondaryType: {
                serializedName: "properties.secondaryType",
                type: {
                    name: "String"
                }
            }, currentSku: {
                serializedName: "properties.currentSku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, autoPauseDelay: {
                serializedName: "properties.autoPauseDelay",
                type: {
                    name: "Number"
                }
            }, currentBackupStorageRedundancy: {
                serializedName: "properties.currentBackupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            }, minCapacity: {
                serializedName: "properties.minCapacity",
                type: {
                    name: "Number"
                }
            }, pausedDate: {
                serializedName: "properties.pausedDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, resumedDate: {
                serializedName: "properties.resumedDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            }, isLedgerOn: {
                serializedName: "properties.isLedgerOn",
                type: {
                    name: "Boolean"
                }
            }, isInfraEncryptionEnabled: {
                serializedName: "properties.isInfraEncryptionEnabled",
                readOnly: true,
                type: {
                    name: "Boolean"
                }
            }, federatedClientId: {
                serializedName: "properties.federatedClientId",
                type: {
                    name: "Uuid"
                }
            }, primaryDelegatedIdentityClientId: {
                serializedName: "properties.primaryDelegatedIdentityClientId",
                type: {
                    name: "Uuid"
                }
            } })
    }
};
export const ManagedInstance = {
    type: {
        name: "Composite",
        className: "ManagedInstance",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { identity: {
                serializedName: "identity",
                type: {
                    name: "Composite",
                    className: "ResourceIdentity"
                }
            }, sku: {
                serializedName: "sku",
                type: {
                    name: "Composite",
                    className: "Sku"
                }
            }, provisioningState: {
                serializedName: "properties.provisioningState",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, managedInstanceCreateMode: {
                serializedName: "properties.managedInstanceCreateMode",
                type: {
                    name: "String"
                }
            }, fullyQualifiedDomainName: {
                serializedName: "properties.fullyQualifiedDomainName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, administratorLogin: {
                serializedName: "properties.administratorLogin",
                type: {
                    name: "String"
                }
            }, administratorLoginPassword: {
                serializedName: "properties.administratorLoginPassword",
                type: {
                    name: "String"
                }
            }, subnetId: {
                serializedName: "properties.subnetId",
                type: {
                    name: "String"
                }
            }, state: {
                serializedName: "properties.state",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, licenseType: {
                serializedName: "properties.licenseType",
                type: {
                    name: "String"
                }
            }, vCores: {
                serializedName: "properties.vCores",
                type: {
                    name: "Number"
                }
            }, storageSizeInGB: {
                serializedName: "properties.storageSizeInGB",
                type: {
                    name: "Number"
                }
            }, collation: {
                serializedName: "properties.collation",
                type: {
                    name: "String"
                }
            }, dnsZone: {
                serializedName: "properties.dnsZone",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, dnsZonePartner: {
                serializedName: "properties.dnsZonePartner",
                type: {
                    name: "String"
                }
            }, publicDataEndpointEnabled: {
                serializedName: "properties.publicDataEndpointEnabled",
                type: {
                    name: "Boolean"
                }
            }, sourceManagedInstanceId: {
                serializedName: "properties.sourceManagedInstanceId",
                type: {
                    name: "String"
                }
            }, restorePointInTime: {
                serializedName: "properties.restorePointInTime",
                type: {
                    name: "DateTime"
                }
            }, proxyOverride: {
                serializedName: "properties.proxyOverride",
                type: {
                    name: "String"
                }
            }, timezoneId: {
                serializedName: "properties.timezoneId",
                type: {
                    name: "String"
                }
            }, instancePoolId: {
                serializedName: "properties.instancePoolId",
                type: {
                    name: "String"
                }
            }, maintenanceConfigurationId: {
                serializedName: "properties.maintenanceConfigurationId",
                type: {
                    name: "String"
                }
            }, privateEndpointConnections: {
                serializedName: "properties.privateEndpointConnections",
                readOnly: true,
                type: {
                    name: "Sequence",
                    element: {
                        type: {
                            name: "Composite",
                            className: "ManagedInstancePecProperty"
                        }
                    }
                }
            }, minimalTlsVersion: {
                serializedName: "properties.minimalTlsVersion",
                type: {
                    name: "String"
                }
            }, currentBackupStorageRedundancy: {
                serializedName: "properties.currentBackupStorageRedundancy",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, requestedBackupStorageRedundancy: {
                serializedName: "properties.requestedBackupStorageRedundancy",
                type: {
                    name: "String"
                }
            }, zoneRedundant: {
                serializedName: "properties.zoneRedundant",
                type: {
                    name: "Boolean"
                }
            }, primaryUserAssignedIdentityId: {
                serializedName: "properties.primaryUserAssignedIdentityId",
                type: {
                    name: "String"
                }
            }, keyId: {
                serializedName: "properties.keyId",
                type: {
                    name: "String"
                }
            }, administrators: {
                serializedName: "properties.administrators",
                type: {
                    name: "Composite",
                    className: "ManagedInstanceExternalAdministrator"
                }
            }, servicePrincipal: {
                serializedName: "properties.servicePrincipal",
                type: {
                    name: "Composite",
                    className: "ServicePrincipal"
                }
            } })
    }
};
export const RestorableDroppedManagedDatabase = {
    type: {
        name: "Composite",
        className: "RestorableDroppedManagedDatabase",
        modelProperties: Object.assign(Object.assign({}, TrackedResource.type.modelProperties), { databaseName: {
                serializedName: "properties.databaseName",
                readOnly: true,
                type: {
                    name: "String"
                }
            }, creationDate: {
                serializedName: "properties.creationDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, deletionDate: {
                serializedName: "properties.deletionDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            }, earliestRestoreDate: {
                serializedName: "properties.earliestRestoreDate",
                readOnly: true,
                type: {
                    name: "DateTime"
                }
            } })
    }
};
export const FirewallRule = {
    type: {
        name: "Composite",
        className: "FirewallRule",
        modelProperties: Object.assign(Object.assign({}, ProxyResourceWithWritableName.type.modelProperties), { startIpAddress: {
                serializedName: "properties.startIpAddress",
                type: {
                    name: "String"
                }
            }, endIpAddress: {
                serializedName: "properties.endIpAddress",
                type: {
                    name: "String"
                }
            } })
    }
};
//# sourceMappingURL=mappers.js.map