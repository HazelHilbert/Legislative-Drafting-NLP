import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { DatabaseUsages } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { DatabaseUsage, DatabaseUsagesListByDatabaseOptionalParams } from "../models";
/** Class containing DatabaseUsages operations. */
export declare class DatabaseUsagesImpl implements DatabaseUsages {
    private readonly client;
    /**
     * Initialize a new instance of the class DatabaseUsages class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Gets database usages.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param options The options parameters.
     */
    listByDatabase(resourceGroupName: string, serverName: string, databaseName: string, options?: DatabaseUsagesListByDatabaseOptionalParams): PagedAsyncIterableIterator<DatabaseUsage>;
    private listByDatabasePagingPage;
    private listByDatabasePagingAll;
    /**
     * Gets database usages.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param options The options parameters.
     */
    private _listByDatabase;
    /**
     * ListByDatabaseNext
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param databaseName The name of the database.
     * @param nextLink The nextLink from the previous successful call to the ListByDatabase method.
     * @param options The options parameters.
     */
    private _listByDatabaseNext;
}
//# sourceMappingURL=databaseUsages.d.ts.map