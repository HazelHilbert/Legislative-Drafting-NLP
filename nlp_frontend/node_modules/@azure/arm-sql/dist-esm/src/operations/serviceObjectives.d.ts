import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ServiceObjectives } from "../operationsInterfaces";
import { SqlManagementClient } from "../sqlManagementClient";
import { ServiceObjective, ServiceObjectivesListByServerOptionalParams, ServiceObjectivesGetOptionalParams, ServiceObjectivesGetResponse } from "../models";
/** Class containing ServiceObjectives operations. */
export declare class ServiceObjectivesImpl implements ServiceObjectives {
    private readonly client;
    /**
     * Initialize a new instance of the class ServiceObjectives class.
     * @param client Reference to the service client
     */
    constructor(client: SqlManagementClient);
    /**
     * Returns database service objectives.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param options The options parameters.
     */
    listByServer(resourceGroupName: string, serverName: string, options?: ServiceObjectivesListByServerOptionalParams): PagedAsyncIterableIterator<ServiceObjective>;
    private listByServerPagingPage;
    private listByServerPagingAll;
    /**
     * Gets a database service objective.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param serviceObjectiveName The name of the service objective to retrieve.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serverName: string, serviceObjectiveName: string, options?: ServiceObjectivesGetOptionalParams): Promise<ServiceObjectivesGetResponse>;
    /**
     * Returns database service objectives.
     * @param resourceGroupName The name of the resource group that contains the resource. You can obtain
     *                          this value from the Azure Resource Manager API or the portal.
     * @param serverName The name of the server.
     * @param options The options parameters.
     */
    private _listByServer;
}
//# sourceMappingURL=serviceObjectives.d.ts.map