/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Fails over from the current primary managed instance to this managed instance. This operation might result in data loss.
 *
 * @summary Fails over from the current primary managed instance to this managed instance. This operation might result in data loss.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2020-11-01-preview/examples/InstanceFailoverGroupForceFailoverAllowDataLoss.json
 */
function forcedFailoverOfAFailoverGroupAllowingDataLoss() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default";
        const locationName = "Japan West";
        const failoverGroupName = "failover-group-test-3";
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.instanceFailoverGroups.beginForceFailoverAllowDataLossAndWait(resourceGroupName, locationName, failoverGroupName);
        console.log(result);
    });
}
forcedFailoverOfAFailoverGroupAllowingDataLoss().catch(console.error);
//# sourceMappingURL=instanceFailoverGroupsForceFailoverAllowDataLossSample.js.map