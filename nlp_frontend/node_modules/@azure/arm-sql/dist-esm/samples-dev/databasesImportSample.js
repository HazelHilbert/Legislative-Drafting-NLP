/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { SqlManagementClient } from "@azure/arm-sql";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Imports a bacpac into a new database.
 *
 * @summary Imports a bacpac into a new database.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ImportDatabaseWithNetworkIsolation.json
 */
function importsToAnExistingEmptyDatabaseUsingPrivateLinkToCommunicateWithSqlServerAndStorageAccount() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const serverName = "testsvr";
        const databaseName = "testdb";
        const parameters = {
            administratorLogin: "login",
            administratorLoginPassword: "password",
            authenticationType: "Sql",
            networkIsolation: {
                sqlServerResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Sql/servers/testsvr",
                storageAccountResourceId: "/subscriptions/00000000-1111-2222-3333-444444444444/resourceGroups/Default-SQL-SouthEastAsia/providers/Microsoft.Storage/storageAccounts/test-privatelink"
            },
            storageKey: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==",
            storageKeyType: "StorageAccessKey",
            storageUri: "https://test.blob.core.windows.net/test.bacpac"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.databases.beginImportAndWait(resourceGroupName, serverName, databaseName, parameters);
        console.log(result);
    });
}
importsToAnExistingEmptyDatabaseUsingPrivateLinkToCommunicateWithSqlServerAndStorageAccount().catch(console.error);
/**
 * This sample demonstrates how to Imports a bacpac into a new database.
 *
 * @summary Imports a bacpac into a new database.
 * x-ms-original-file: specification/sql/resource-manager/Microsoft.Sql/preview/2021-05-01-preview/examples/ImportDatabase.json
 */
function importsToAnExistingEmptyDatabase() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "00000000-1111-2222-3333-444444444444";
        const resourceGroupName = "Default-SQL-SouthEastAsia";
        const serverName = "testsvr";
        const databaseName = "testdb";
        const parameters = {
            administratorLogin: "login",
            administratorLoginPassword: "password",
            authenticationType: "Sql",
            storageKey: "xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==",
            storageKeyType: "StorageAccessKey",
            storageUri: "https://test.blob.core.windows.net/test.bacpac"
        };
        const credential = new DefaultAzureCredential();
        const client = new SqlManagementClient(credential, subscriptionId);
        const result = yield client.databases.beginImportAndWait(resourceGroupName, serverName, databaseName, parameters);
        console.log(result);
    });
}
importsToAnExistingEmptyDatabase().catch(console.error);
//# sourceMappingURL=databasesImportSample.js.map