/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { WebSiteManagementClient } from "@azure/arm-appservice";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Description for Approves or rejects a private endpoint connection
 *
 * @summary Description for Approves or rejects a private endpoint connection
 * x-ms-original-file: specification/web/resource-manager/Microsoft.Web/stable/2022-03-01/examples/AppServiceEnvironments_ApproveOrRejectPrivateEndpointConnection.json
 */
function approvesOrRejectsAPrivateEndpointConnection() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const resourceGroupName = "test-rg";
        const name = "test-ase";
        const privateEndpointConnectionName = "fa38656c-034e-43d8-adce-fe06ce039c98";
        const privateEndpointWrapper = {
            privateLinkServiceConnectionState: {
                description: "Approved by johndoe@company.com",
                status: "Approved"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new WebSiteManagementClient(credential, subscriptionId);
        const result = yield client.appServiceEnvironments.beginApproveOrRejectPrivateEndpointConnectionAndWait(resourceGroupName, name, privateEndpointConnectionName, privateEndpointWrapper);
        console.log(result);
    });
}
approvesOrRejectsAPrivateEndpointConnection().catch(console.error);
//# sourceMappingURL=appServiceEnvironmentsApproveOrRejectPrivateEndpointConnectionSample.js.map