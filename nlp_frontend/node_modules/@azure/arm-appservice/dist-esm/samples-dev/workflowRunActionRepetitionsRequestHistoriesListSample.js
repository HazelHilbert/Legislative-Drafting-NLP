/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __asyncValues, __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { WebSiteManagementClient } from "@azure/arm-appservice";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to List a workflow run repetition request history.
 *
 * @summary List a workflow run repetition request history.
 * x-ms-original-file: specification/web/resource-manager/Microsoft.Web/stable/2022-03-01/examples/WorkflowRunActionRepetitionsRequestHistories_List.json
 */
function listRepetitionRequestHistory() {
    var e_1, _a;
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "34adfa4f-cedf-4dc0-ba29-b6d1a69ab345";
        const resourceGroupName = "test-resource-group";
        const name = "test-name";
        const workflowName = "test-workflow";
        const runName = "08586776228332053161046300351";
        const actionName = "HTTP_Webhook";
        const repetitionName = "000001";
        const credential = new DefaultAzureCredential();
        const client = new WebSiteManagementClient(credential, subscriptionId);
        const resArray = new Array();
        try {
            for (var _b = __asyncValues(client.workflowRunActionRepetitionsRequestHistories.list(resourceGroupName, name, workflowName, runName, actionName, repetitionName)), _c; _c = yield _b.next(), !_c.done;) {
                let item = _c.value;
                resArray.push(item);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        console.log(resArray);
    });
}
listRepetitionRequestHistory().catch(console.error);
//# sourceMappingURL=workflowRunActionRepetitionsRequestHistoriesListSample.js.map