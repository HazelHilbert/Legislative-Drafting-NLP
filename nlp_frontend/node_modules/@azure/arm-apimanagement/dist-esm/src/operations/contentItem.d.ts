import { PagedAsyncIterableIterator } from "@azure/core-paging";
import { ContentItem } from "../operationsInterfaces";
import { ApiManagementClient } from "../apiManagementClient";
import { ContentItemContract, ContentItemListByServiceOptionalParams, ContentItemGetEntityTagOptionalParams, ContentItemGetEntityTagResponse, ContentItemGetOptionalParams, ContentItemGetResponse, ContentItemCreateOrUpdateOptionalParams, ContentItemCreateOrUpdateResponse, ContentItemDeleteOptionalParams } from "../models";
/** Class containing ContentItem operations. */
export declare class ContentItemImpl implements ContentItem {
    private readonly client;
    /**
     * Initialize a new instance of the class ContentItem class.
     * @param client Reference to the service client
     */
    constructor(client: ApiManagementClient);
    /**
     * Lists developer portal's content items specified by the provided content type.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param options The options parameters.
     */
    listByService(resourceGroupName: string, serviceName: string, contentTypeId: string, options?: ContentItemListByServiceOptionalParams): PagedAsyncIterableIterator<ContentItemContract>;
    private listByServicePagingPage;
    private listByServicePagingAll;
    /**
     * Lists developer portal's content items specified by the provided content type.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param options The options parameters.
     */
    private _listByService;
    /**
     * Returns the entity state (ETag) version of the developer portal's content item specified by its
     * identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param contentItemId Content item identifier.
     * @param options The options parameters.
     */
    getEntityTag(resourceGroupName: string, serviceName: string, contentTypeId: string, contentItemId: string, options?: ContentItemGetEntityTagOptionalParams): Promise<ContentItemGetEntityTagResponse>;
    /**
     * Returns the developer portal's content item specified by its identifier.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param contentItemId Content item identifier.
     * @param options The options parameters.
     */
    get(resourceGroupName: string, serviceName: string, contentTypeId: string, contentItemId: string, options?: ContentItemGetOptionalParams): Promise<ContentItemGetResponse>;
    /**
     * Creates a new developer portal's content item specified by the provided content type.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param contentItemId Content item identifier.
     * @param options The options parameters.
     */
    createOrUpdate(resourceGroupName: string, serviceName: string, contentTypeId: string, contentItemId: string, options?: ContentItemCreateOrUpdateOptionalParams): Promise<ContentItemCreateOrUpdateResponse>;
    /**
     * Removes the specified developer portal's content item.
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param contentItemId Content item identifier.
     * @param ifMatch ETag of the Entity. ETag should match the current entity state from the header
     *                response of the GET request or it should be * for unconditional update.
     * @param options The options parameters.
     */
    delete(resourceGroupName: string, serviceName: string, contentTypeId: string, contentItemId: string, ifMatch: string, options?: ContentItemDeleteOptionalParams): Promise<void>;
    /**
     * ListByServiceNext
     * @param resourceGroupName The name of the resource group.
     * @param serviceName The name of the API Management service.
     * @param contentTypeId Content type identifier.
     * @param nextLink The nextLink from the previous successful call to the ListByService method.
     * @param options The options parameters.
     */
    private _listByServiceNext;
}
//# sourceMappingURL=contentItem.d.ts.map