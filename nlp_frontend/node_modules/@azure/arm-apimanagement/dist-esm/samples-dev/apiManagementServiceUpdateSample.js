/*
 * Copyright (c) Microsoft Corporation.
 * Licensed under the MIT License.
 *
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */
import { __awaiter } from "tslib";
// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License.
import { ApiManagementClient } from "@azure/arm-apimanagement";
import { DefaultAzureCredential } from "@azure/identity";
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateServiceDisableTls10.json
 */
function apiManagementUpdateServiceDisableTls10() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const parameters = {
            customProperties: {
                microsoftWindowsAzureApiManagementGatewaySecurityProtocolsTls10: "false"
            }
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
apiManagementUpdateServiceDisableTls10().catch(console.error);
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateServicePublisherDetails.json
 */
function apiManagementUpdateServicePublisherDetails() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const parameters = {
            publisherEmail: "foobar@live.com",
            publisherName: "Contoso Vnext"
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
apiManagementUpdateServicePublisherDetails().catch(console.error);
/**
 * This sample demonstrates how to Updates an existing API Management service.
 *
 * @summary Updates an existing API Management service.
 * x-ms-original-file: specification/apimanagement/resource-manager/Microsoft.ApiManagement/stable/2021-08-01/examples/ApiManagementUpdateServiceToNewVnetAndAZs.json
 */
function apiManagementUpdateServiceToNewVnetAndAvailabilityZones() {
    return __awaiter(this, void 0, void 0, function* () {
        const subscriptionId = "subid";
        const resourceGroupName = "rg1";
        const serviceName = "apimService1";
        const parameters = {
            publicIpAddressId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/publicIPAddresses/apimService1ip",
            sku: { name: "Premium", capacity: 2 },
            virtualNetworkConfiguration: {
                subnetResourceId: "/subscriptions/subid/resourceGroups/rg1/providers/Microsoft.Network/virtualNetworks/apimService1v2/subnets/default"
            },
            virtualNetworkType: "External",
            zones: ["1", "2"]
        };
        const credential = new DefaultAzureCredential();
        const client = new ApiManagementClient(credential, subscriptionId);
        const result = yield client.apiManagementService.beginUpdateAndWait(resourceGroupName, serviceName, parameters);
        console.log(result);
    });
}
apiManagementUpdateServiceToNewVnetAndAvailabilityZones().catch(console.error);
//# sourceMappingURL=apiManagementServiceUpdateSample.js.map